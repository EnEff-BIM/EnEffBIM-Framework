/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_DIRECTORS
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#if defined(_DEBUG) && defined(SWIG_PYTHON_INTERPRETER_NO_DEBUG)
/* Use debug wrappers with the Python release dll */
# undef _DEBUG
# include <Python.h>
# define _DEBUG
#else
# include <Python.h>
#endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyInt_FromSize_t(x) PyLong_FromSize_t(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define PyString_AS_STRING(x) PyUnicode_AS_STRING(x)
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03000000
  char *cstr;
  char *newstr;
  Py_ssize_t len;
  str = PyUnicode_AsUTF8String(str);
  PyBytes_AsStringAndSize(str, &cstr, &len);
  newstr = (char *) malloc(len+1);
  memcpy(newstr, cstr, len+1);
  Py_XDECREF(str);
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#else
#  define SWIG_Python_str_DelForPy3(x) 
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif

/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif

/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif

/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
typedef inquiry lenfunc;
typedef intargfunc ssizeargfunc;
typedef intintargfunc ssizessizeargfunc;
typedef intobjargproc ssizeobjargproc;
typedef intintobjargproc ssizessizeobjargproc;
typedef getreadbufferproc readbufferproc;
typedef getwritebufferproc writebufferproc;
typedef getsegcountproc segcountproc;
typedef getcharbufferproc charbufferproc;
static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))
{
  long result = 0;
  PyObject *i = PyNumber_Int(x);
  if (i) {
    result = PyInt_AsLong(i);
    Py_DECREF(i);
  }
  return result;
}
#endif

#if PY_VERSION_HEX < 0x02050000
#define PyInt_FromSize_t(x) PyInt_FromLong((long)x)
#endif

#if PY_VERSION_HEX < 0x02040000
#define Py_VISIT(op)				\
  do { 						\
    if (op) {					\
      int vret = visit((op), arg);		\
      if (vret)					\
        return vret;				\
    }						\
  } while (0)
#endif

#if PY_VERSION_HEX < 0x02030000
typedef struct {
  PyTypeObject type;
  PyNumberMethods as_number;
  PyMappingMethods as_mapping;
  PySequenceMethods as_sequence;
  PyBufferProcs as_buffer;
  PyObject *name, *slots;
} PyHeapTypeObject;
#endif

#if PY_VERSION_HEX < 0x02030000
typedef destructor freefunc;
#endif

#if ((PY_MAJOR_VERSION == 2 && PY_MINOR_VERSION > 6) || \
     (PY_MAJOR_VERSION == 3 && PY_MINOR_VERSION > 0) || \
     (PY_MAJOR_VERSION > 3))
# define SWIGPY_USE_CAPSULE
# define SWIGPY_CAPSULE_NAME ((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION ".type_pointer_capsule" SWIG_TYPE_TABLE_NAME)
#endif

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    char *tmp;
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);

    PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;


/* -----------------------------------------------------------------------------
 * Wrapper of PyInstanceMethod_New() used in Python 3
 * It is exported to the generated module, used for -fastproxy
 * ----------------------------------------------------------------------------- */
#if PY_VERSION_HEX >= 0x03000000
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func)
{
  return PyInstanceMethod_New(func);
}
#else
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))
{
  return NULL;
}
#endif

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      int i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data) {
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;


#ifdef SWIGPYTHON_BUILTIN

SWIGRUNTIME PyObject *
SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;

  if (!sobj->dict)
    sobj->dict = PyDict_New();

  Py_INCREF(sobj->dict);
  return sobj->dict;
}

#endif

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
SwigPyObject_repr(SwigPyObject *v)
#else
SwigPyObject_repr(SwigPyObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", (name ? name : "unknown"), (void *)v);
  if (v->next) {
# ifdef METH_NOARGS
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
# else
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next, args);
# endif
# if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
# else
    PyString_ConcatAndDel(&repr,nrep);
# endif
  }
  return repr;  
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporary object to carry the destroy operation */
	PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!SwigPyObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
SwigPyObject_next(PyObject* v)
#else
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_disown(PyObject *v)
#else
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_acquire(PyObject *v)
#else
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#elif (PY_VERSION_HEX < 0x02050000)
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#else
  if (!PyArg_UnpackTuple(args, "own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      SwigPyObject *sobj = (SwigPyObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v);
	} else {
	  SwigPyObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v,args);
	} else {
	  SwigPyObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_NOARGS,  (char *)"acquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_VARARGS,  (char *)"acquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
SwigPyObject_getattr(SwigPyObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#elif PY_VERSION_HEX >= 0x02050000 /* 2.5.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#elif PY_VERSION_HEX >= 0x02020000 /* 2.2.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */
#elif PY_VERSION_HEX >= 0x02000000 /* 2.0.0 */
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyObject",               /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
      0,				    /* tp_print */
#if PY_VERSION_HEX < 0x02020000
      (getattrfunc)SwigPyObject_getattr,    /* tp_getattr */
#else
      (getattrfunc)0,                       /* tp_getattr */
#endif
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
    0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      0,				    /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpyobject_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpyobject_type) < 0)
      return NULL;
#endif
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME int
SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyPacked",               /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
      (printfunc)SwigPyPacked_print,        /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpypacked_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpypacked_type) < 0)
      return NULL;
#endif
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
    return SWIG_Python_str_FromChar("this");
}

static PyObject *swig_this = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (swig_this == NULL)
    swig_this = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;
  int implicit_conv = (flags & SWIG_POINTER_IMPLICIT_CONV) != 0;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None && !implicit_conv) {
    if (ptr)
      *ptr = 0;
    return SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (own)
      *own = *own | sobj->own;
    if (flags & SWIG_POINTER_DISOWN) {
      sobj->own = 0;
    }
    res = SWIG_OK;
  } else {
    if (implicit_conv) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
    }
    if (!SWIG_IsOK(res) && obj == Py_None) {
      if (ptr)
        *ptr = 0;
      if (PyErr_Occurred())
        PyErr_Clear();
      res = SWIG_OK;
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc) 
      return SWIG_ERROR;
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (tc) {
        int newmemory = 0;
        *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
        assert(!newmemory); /* newmemory handling not yet implemented */
      } else {
        return SWIG_ERROR;
      }
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    inst = ((PyTypeObject*) data->newargs)->tp_new((PyTypeObject*) data->newargs, Py_None, Py_None);
    if (inst) {
      PyObject_SetAttr(inst, SWIG_This(), swig_this);
      Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
    }
#else
    PyObject *dict = PyDict_New();
    if (dict) {
      PyDict_SetItem(dict, SWIG_This(), swig_this);
      inst = PyInstance_NewRaw(data->newargs, dict);
      Py_DECREF(dict);
    }
#endif
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst = 0;
  PyObject *dict = PyDict_New();
  if (dict) {
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
  }
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args, "swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
#ifdef SWIGPYTHON_BUILTIN
        newobj->dict = 0;
#endif
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
#ifdef SWIGPYTHON_BUILTIN
      newobj->dict = 0;
#endif
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (robj && clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    Py_DECREF(robj);
    robj = inst;
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
# ifdef SWIGPY_USE_CAPSULE
    type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
# else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
# endif
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
#ifdef SWIGPY_USE_CAPSULE
SWIG_Python_DestroyModule(PyObject *obj)
#else
SWIG_Python_DestroyModule(void *vptr)
#endif
{
#ifdef SWIGPY_USE_CAPSULE
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
#else
  swig_module_info *swig_module = (swig_module_info *) vptr;
#endif
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  swig_this = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
#ifdef SWIGPY_USE_CAPSULE
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer_capsule" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#else
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#endif
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
#ifdef SWIGPY_USE_CAPSULE
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
#else
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
#endif
  } else {
    swig_module_info *swig_module = SWIG_GetModule(0);
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
#ifdef SWIGPY_USE_CAPSULE
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
#else
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
#endif
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      char *tmp;
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, tmp = SWIG_Python_str_AsChar(old_str));
      } else {
	PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : "";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}

#ifdef SWIGPYTHON_BUILTIN
SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res = -1;

# ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
# else
  if (!PyString_Check(name))
# endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) < 0)
      goto done;
  }

  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}
#endif


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 

/* -----------------------------------------------------------------------------
 * director_common.swg
 *
 * This file contains support for director classes which is common between
 * languages.
 * ----------------------------------------------------------------------------- */

/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be useful for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif
/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes so that Python proxy
 * methods can be called from C++.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_DIRECTOR_PYTHON_HEADER_
#define SWIG_DIRECTOR_PYTHON_HEADER_

#include <string>
#include <iostream>
#include <exception>
#include <vector>
#include <map>


/*
  Use -DSWIG_PYTHON_DIRECTOR_NO_VTABLE if you don't want to generate a 'virtual
  table', and avoid multiple GetAttr calls to retrieve the python
  methods.
*/

#ifndef SWIG_PYTHON_DIRECTOR_NO_VTABLE
#ifndef SWIG_PYTHON_DIRECTOR_VTABLE
#define SWIG_PYTHON_DIRECTOR_VTABLE
#endif
#endif



/*
  Use -DSWIG_DIRECTOR_NO_UEH if you prefer to avoid the use of the
  Undefined Exception Handler provided by swig.
*/
#ifndef SWIG_DIRECTOR_NO_UEH
#ifndef SWIG_DIRECTOR_UEH
#define SWIG_DIRECTOR_UEH
#endif
#endif


/*
  Use -DSWIG_DIRECTOR_NORTTI if you prefer to avoid the use of the
  native C++ RTTI and dynamic_cast<>. But be aware that directors
  could stop working when using this option.
*/
#ifdef SWIG_DIRECTOR_NORTTI
/*
   When we don't use the native C++ RTTI, we implement a minimal one
   only for Directors.
*/
# ifndef SWIG_DIRECTOR_RTDIR
# define SWIG_DIRECTOR_RTDIR

namespace Swig {
  class Director;
  SWIGINTERN std::map<void *, Director *>& get_rtdir_map() {
    static std::map<void *, Director *> rtdir_map;
    return rtdir_map;
  }

  SWIGINTERNINLINE void set_rtdir(void *vptr, Director *rtdir) {
    get_rtdir_map()[vptr] = rtdir;
  }

  SWIGINTERNINLINE Director *get_rtdir(void *vptr) {
    std::map<void *, Director *>::const_iterator pos = get_rtdir_map().find(vptr);
    Director *rtdir = (pos != get_rtdir_map().end()) ? pos->second : 0;
    return rtdir;
  }
}
# endif /* SWIG_DIRECTOR_RTDIR */

# define SWIG_DIRECTOR_CAST(ARG) Swig::get_rtdir(static_cast<void *>(ARG))
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2) Swig::set_rtdir(static_cast<void *>(ARG1), ARG2)

#else

# define SWIG_DIRECTOR_CAST(ARG) dynamic_cast<Swig::Director *>(ARG)
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2)

#endif /* SWIG_DIRECTOR_NORTTI */

extern "C" {
  struct swig_type_info;
}

namespace Swig {

  /* memory handler */
  struct GCItem {
    virtual ~GCItem() {}

    virtual int get_own() const {
      return 0;
    }
  };

  struct GCItem_var {
    GCItem_var(GCItem *item = 0) : _item(item) {
    }

    GCItem_var& operator=(GCItem *item) {
      GCItem *tmp = _item;
      _item = item;
      delete tmp;
      return *this;
    }

    ~GCItem_var() {
      delete _item;
    }

    GCItem * operator->() const {
      return _item;
    }

  private:
    GCItem *_item;
  };

  struct GCItem_Object : GCItem {
    GCItem_Object(int own) : _own(own) {
    }

    virtual ~GCItem_Object() {
    }

    int get_own() const {
      return _own;
    }

  private:
    int _own;
  };

  template <typename Type>
  struct GCItem_T : GCItem {
    GCItem_T(Type *ptr) : _ptr(ptr) {
    }

    virtual ~GCItem_T() {
      delete _ptr;
    }

  private:
    Type *_ptr;
  };

  template <typename Type>
  struct GCArray_T : GCItem {
    GCArray_T(Type *ptr) : _ptr(ptr) {
    }

    virtual ~GCArray_T() {
      delete[] _ptr;
    }

  private:
    Type *_ptr;
  };

  /* base class for director exceptions */
  class DirectorException : public std::exception {
  protected:
    std::string swig_msg;
  public:
    DirectorException(PyObject *error, const char *hdr ="", const char *msg ="") : swig_msg(hdr) {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      if (msg[0]) {
        swig_msg += " ";
        swig_msg += msg;
      }
      if (!PyErr_Occurred()) {
        PyErr_SetString(error, what());
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
    }

    virtual ~DirectorException() throw() {
    }

    /* Deprecated, use what() instead */
    const char *getMessage() const {
      return what();
    }

    const char *what() const throw() {
      return swig_msg.c_str();
    }

    static void raise(PyObject *error, const char *msg) {
      throw DirectorException(error, msg);
    }

    static void raise(const char *msg) {
      raise(PyExc_RuntimeError, msg);
    }
  };

  /* unknown exception handler  */
  class UnknownExceptionHandler {
#ifdef SWIG_DIRECTOR_UEH
    static void handler() {
      try {
        throw;
      } catch (DirectorException& e) {
        std::cerr << "SWIG Director exception caught:" << std::endl
                  << e.what() << std::endl;
      } catch (std::exception& e) {
        std::cerr << "std::exception caught: "<< e.what() << std::endl;
      } catch (...) {
        std::cerr << "Unknown exception caught." << std::endl;
      }

      std::cerr << std::endl
                << "Python interpreter traceback:" << std::endl;
      PyErr_Print();
      std::cerr << std::endl;

      std::cerr << "This exception was caught by the SWIG unexpected exception handler." << std::endl
                << "Try using %feature(\"director:except\") to avoid reaching this point." << std::endl
                << std::endl
                << "Exception is being re-thrown, program will likely abort/terminate." << std::endl;
      throw;
    }

  public:

    std::unexpected_handler old;
    UnknownExceptionHandler(std::unexpected_handler nh = handler) {
      old = std::set_unexpected(nh);
    }

    ~UnknownExceptionHandler() {
      std::set_unexpected(old);
    }
#endif
  };

  /* type mismatch in the return value from a python method call */
  class DirectorTypeMismatchException : public DirectorException {
  public:
    DirectorTypeMismatchException(PyObject *error, const char *msg="")
      : DirectorException(error, "SWIG director type mismatch", msg) {
    }

    DirectorTypeMismatchException(const char *msg="")
      : DirectorException(PyExc_TypeError, "SWIG director type mismatch", msg) {
    }

    static void raise(PyObject *error, const char *msg) {
      throw DirectorTypeMismatchException(error, msg);
    }

    static void raise(const char *msg) {
      throw DirectorTypeMismatchException(msg);
    }
  };

  /* any python exception that occurs during a director method call */
  class DirectorMethodException : public DirectorException {
  public:
    DirectorMethodException(const char *msg = "")
      : DirectorException(PyExc_RuntimeError, "SWIG director method error.", msg) {
    }

    static void raise(const char *msg) {
      throw DirectorMethodException(msg);
    }
  };

  /* attempt to call a pure virtual method via a director method */
  class DirectorPureVirtualException : public DirectorException {
  public:
    DirectorPureVirtualException(const char *msg = "")
      : DirectorException(PyExc_RuntimeError, "SWIG director pure virtual method called", msg) {
    }

    static void raise(const char *msg) {
      throw DirectorPureVirtualException(msg);
    }
  };


#if defined(SWIG_PYTHON_THREADS)
/*  __THREAD__ is the old macro to activate some thread support */
# if !defined(__THREAD__)
#   define __THREAD__ 1
# endif
#endif

#ifdef __THREAD__
# include "pythread.h"
  class Guard {
    PyThread_type_lock &mutex_;

  public:
    Guard(PyThread_type_lock & mutex) : mutex_(mutex) {
      PyThread_acquire_lock(mutex_, WAIT_LOCK);
    }

    ~Guard() {
      PyThread_release_lock(mutex_);
    }
  };
# define SWIG_GUARD(mutex) Guard _guard(mutex)
#else
# define SWIG_GUARD(mutex)
#endif

  /* director base class */
  class Director {
  private:
    /* pointer to the wrapped python object */
    PyObject *swig_self;
    /* flag indicating whether the object is owned by python or c++ */
    mutable bool swig_disown_flag;

    /* decrement the reference count of the wrapped python object */
    void swig_decref() const {
      if (swig_disown_flag) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_DECREF(swig_self);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }

  public:
    /* wrap a python object. */
    Director(PyObject *self) : swig_self(self), swig_disown_flag(false) {
    }

    /* discard our reference at destruction */
    virtual ~Director() {
      swig_decref();
    }

    /* return a pointer to the wrapped python object */
    PyObject *swig_get_self() const {
      return swig_self;
    }

    /* acquire ownership of the wrapped python object (the sense of "disown" is from python) */
    void swig_disown() const {
      if (!swig_disown_flag) {
        swig_disown_flag=true;
        swig_incref();
      }
    }

    /* increase the reference count of the wrapped python object */
    void swig_incref() const {
      if (swig_disown_flag) {
        Py_INCREF(swig_self);
      }
    }

    /* methods to implement pseudo protected director members */
    virtual bool swig_get_inner(const char * /* swig_protected_method_name */) const {
      return true;
    }

    virtual void swig_set_inner(const char * /* swig_protected_method_name */, bool /* swig_val */) const {
    }

  /* ownership management */
  private:
    typedef std::map<void *, GCItem_var> swig_ownership_map;
    mutable swig_ownership_map swig_owner;
#ifdef __THREAD__
    static PyThread_type_lock swig_mutex_own;
#endif

  public:
    template <typename Type>
    void swig_acquire_ownership_array(Type *vptr) const {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCArray_T<Type>(vptr);
      }
    }

    template <typename Type>
    void swig_acquire_ownership(Type *vptr) const {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_T<Type>(vptr);
      }
    }

    void swig_acquire_ownership_obj(void *vptr, int own) const {
      if (vptr && own) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_Object(own);
      }
    }

    int swig_release_ownership(void *vptr) const {
      int own = 0;
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_ownership_map::iterator iter = swig_owner.find(vptr);
        if (iter != swig_owner.end()) {
          own = iter->second->get_own();
          swig_owner.erase(iter);
        }
      }
      return own;
    }

    template <typename Type>
    static PyObject *swig_pyobj_disown(PyObject *pyobj, PyObject *SWIGUNUSEDPARM(args)) {
      SwigPyObject *sobj = (SwigPyObject *)pyobj;
      sobj->own = 0;
      Director *d = SWIG_DIRECTOR_CAST(reinterpret_cast<Type *>(sobj->ptr));
      if (d)
        d->swig_disown();
      return PyWeakref_NewProxy(pyobj, NULL);
    }
  };

#ifdef __THREAD__
  PyThread_type_lock Director::swig_mutex_own = PyThread_allocate_lock();
#endif
}

#endif

/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_ApplicableOccurrence_optional swig_types[0]
#define SWIGTYPE_p_ApplicableOccurrence_traits swig_types[1]
#define SWIGTYPE_p_ApplicableOccurrence_type swig_types[2]
#define SWIGTYPE_p_AssignedToFlowElement_optional swig_types[3]
#define SWIGTYPE_p_AssignedToFlowElement_traits swig_types[4]
#define SWIGTYPE_p_AssignedToFlowElement_type swig_types[5]
#define SWIGTYPE_p_AssignedToGroups_optional swig_types[6]
#define SWIGTYPE_p_AssignedToGroups_traits swig_types[7]
#define SWIGTYPE_p_AssignedToGroups_type swig_types[8]
#define SWIGTYPE_p_ChangeFromTemplate_optional swig_types[9]
#define SWIGTYPE_p_ChangeFromTemplate_traits swig_types[10]
#define SWIGTYPE_p_ChangeFromTemplate_type swig_types[11]
#define SWIGTYPE_p_CompositionType_optional swig_types[12]
#define SWIGTYPE_p_CompositionType_traits swig_types[13]
#define SWIGTYPE_p_CompositionType_type swig_types[14]
#define SWIGTYPE_p_ContainingBuildings_optional swig_types[15]
#define SWIGTYPE_p_ContainingBuildings_traits swig_types[16]
#define SWIGTYPE_p_ContainingBuildings_type swig_types[17]
#define SWIGTYPE_p_ContainingSpatialStructure_optional swig_types[18]
#define SWIGTYPE_p_ContainingSpatialStructure_traits swig_types[19]
#define SWIGTYPE_p_ContainingSpatialStructure_type swig_types[20]
#define SWIGTYPE_p_ControlElementID_optional swig_types[21]
#define SWIGTYPE_p_ControlElementID_traits swig_types[22]
#define SWIGTYPE_p_ControlElementID_type swig_types[23]
#define SWIGTYPE_p_ControlledBy_optional swig_types[24]
#define SWIGTYPE_p_ControlledBy_traits swig_types[25]
#define SWIGTYPE_p_ControlledBy_type swig_types[26]
#define SWIGTYPE_p_DecimalPrecision_optional swig_types[27]
#define SWIGTYPE_p_DecimalPrecision_traits swig_types[28]
#define SWIGTYPE_p_DecimalPrecision_type swig_types[29]
#define SWIGTYPE_p_Decomposes_optional swig_types[30]
#define SWIGTYPE_p_Decomposes_traits swig_types[31]
#define SWIGTYPE_p_Decomposes_type swig_types[32]
#define SWIGTYPE_p_Description_optional swig_types[33]
#define SWIGTYPE_p_Description_traits swig_types[34]
#define SWIGTYPE_p_Description_type swig_types[35]
#define SWIGTYPE_p_DockedToPort_optional swig_types[36]
#define SWIGTYPE_p_DockedToPort_traits swig_types[37]
#define SWIGTYPE_p_DockedToPort_type swig_types[38]
#define SWIGTYPE_p_GeometricRepresentations_optional swig_types[39]
#define SWIGTYPE_p_GeometricRepresentations_traits swig_types[40]
#define SWIGTYPE_p_GeometricRepresentations_type swig_types[41]
#define SWIGTYPE_p_HasPropertySets_optional swig_types[42]
#define SWIGTYPE_p_HasPropertySets_traits swig_types[43]
#define SWIGTYPE_p_HasPropertySets_type swig_types[44]
#define SWIGTYPE_p_HasTemplateChanged_optional swig_types[45]
#define SWIGTYPE_p_HasTemplateChanged_traits swig_types[46]
#define SWIGTYPE_p_HasTemplateChanged_type swig_types[47]
#define SWIGTYPE_p_HostElement_optional swig_types[48]
#define SWIGTYPE_p_HostElement_traits swig_types[49]
#define SWIGTYPE_p_HostElement_type swig_types[50]
#define SWIGTYPE_p_IfcGlobalID_optional swig_types[51]
#define SWIGTYPE_p_IfcGlobalID_traits swig_types[52]
#define SWIGTYPE_p_IfcGlobalID_type swig_types[53]
#define SWIGTYPE_p_IfcName_optional swig_types[54]
#define SWIGTYPE_p_IfcName_traits swig_types[55]
#define SWIGTYPE_p_IfcName_type swig_types[56]
#define SWIGTYPE_p_IsAutoGenerated_optional swig_types[57]
#define SWIGTYPE_p_IsAutoGenerated_traits swig_types[58]
#define SWIGTYPE_p_IsAutoGenerated_type swig_types[59]
#define SWIGTYPE_p_IsTemplateObject_optional swig_types[60]
#define SWIGTYPE_p_IsTemplateObject_traits swig_types[61]
#define SWIGTYPE_p_IsTemplateObject_type swig_types[62]
#define SWIGTYPE_p_LocalPlacementCoordinates_optional swig_types[63]
#define SWIGTYPE_p_LocalPlacementCoordinates_traits swig_types[64]
#define SWIGTYPE_p_LocalPlacementCoordinates_type swig_types[65]
#define SWIGTYPE_p_LocalPlacementRotation_optional swig_types[66]
#define SWIGTYPE_p_LocalPlacementRotation_traits swig_types[67]
#define SWIGTYPE_p_LocalPlacementRotation_type swig_types[68]
#define SWIGTYPE_p_LocalPlacementX_optional swig_types[69]
#define SWIGTYPE_p_LocalPlacementX_traits swig_types[70]
#define SWIGTYPE_p_LocalPlacementX_type swig_types[71]
#define SWIGTYPE_p_LocalPlacementY_optional swig_types[72]
#define SWIGTYPE_p_LocalPlacementY_traits swig_types[73]
#define SWIGTYPE_p_LocalPlacementY_type swig_types[74]
#define SWIGTYPE_p_LocalPlacementZ_optional swig_types[75]
#define SWIGTYPE_p_LocalPlacementZ_traits swig_types[76]
#define SWIGTYPE_p_LocalPlacementZ_type swig_types[77]
#define SWIGTYPE_p_LongName_optional swig_types[78]
#define SWIGTYPE_p_LongName_traits swig_types[79]
#define SWIGTYPE_p_LongName_type swig_types[80]
#define SWIGTYPE_p_MemberUsedForDiagrams_optional swig_types[81]
#define SWIGTYPE_p_MemberUsedForDiagrams_traits swig_types[82]
#define SWIGTYPE_p_MemberUsedForDiagrams_type swig_types[83]
#define SWIGTYPE_p_Name_optional swig_types[84]
#define SWIGTYPE_p_Name_traits swig_types[85]
#define SWIGTYPE_p_Name_type swig_types[86]
#define SWIGTYPE_p_NevronSchematicLayout_optional swig_types[87]
#define SWIGTYPE_p_NevronSchematicLayout_traits swig_types[88]
#define SWIGTYPE_p_NevronSchematicLayout_type swig_types[89]
#define SWIGTYPE_p_ObjectCreationParams_optional swig_types[90]
#define SWIGTYPE_p_ObjectCreationParams_traits swig_types[91]
#define SWIGTYPE_p_ObjectCreationParams_type swig_types[92]
#define SWIGTYPE_p_ObjectIndex_optional swig_types[93]
#define SWIGTYPE_p_ObjectIndex_traits swig_types[94]
#define SWIGTYPE_p_ObjectIndex_type swig_types[95]
#define SWIGTYPE_p_ObjectName_optional swig_types[96]
#define SWIGTYPE_p_ObjectName_traits swig_types[97]
#define SWIGTYPE_p_ObjectName_type swig_types[98]
#define SWIGTYPE_p_ObjectOwnerHistory_optional swig_types[99]
#define SWIGTYPE_p_ObjectOwnerHistory_traits swig_types[100]
#define SWIGTYPE_p_ObjectOwnerHistory_type swig_types[101]
#define SWIGTYPE_p_ObjectType_optional swig_types[102]
#define SWIGTYPE_p_ObjectType_traits swig_types[103]
#define SWIGTYPE_p_ObjectType_type swig_types[104]
#define SWIGTYPE_p_ParentGroups_optional swig_types[105]
#define SWIGTYPE_p_ParentGroups_traits swig_types[106]
#define SWIGTYPE_p_ParentGroups_type swig_types[107]
#define SWIGTYPE_p_PlacementRelToContainingTypeDef_optional swig_types[108]
#define SWIGTYPE_p_PlacementRelToContainingTypeDef_traits swig_types[109]
#define SWIGTYPE_p_PlacementRelToContainingTypeDef_type swig_types[110]
#define SWIGTYPE_p_Placement_optional swig_types[111]
#define SWIGTYPE_p_Placement_traits swig_types[112]
#define SWIGTYPE_p_Placement_type swig_types[113]
#define SWIGTYPE_p_ProfileName_optional swig_types[114]
#define SWIGTYPE_p_ProfileName_traits swig_types[115]
#define SWIGTYPE_p_ProfileName_type swig_types[116]
#define SWIGTYPE_p_ProfileType_optional swig_types[117]
#define SWIGTYPE_p_ProfileType_traits swig_types[118]
#define SWIGTYPE_p_ProfileType_type swig_types[119]
#define SWIGTYPE_p_RefId_traits swig_types[120]
#define SWIGTYPE_p_RefId_type swig_types[121]
#define SWIGTYPE_p_RepresentationContext_optional swig_types[122]
#define SWIGTYPE_p_RepresentationContext_traits swig_types[123]
#define SWIGTYPE_p_RepresentationContext_type swig_types[124]
#define SWIGTYPE_p_RepresentationIdentifier_optional swig_types[125]
#define SWIGTYPE_p_RepresentationIdentifier_traits swig_types[126]
#define SWIGTYPE_p_RepresentationIdentifier_type swig_types[127]
#define SWIGTYPE_p_RepresentationItems_optional swig_types[128]
#define SWIGTYPE_p_RepresentationItems_traits swig_types[129]
#define SWIGTYPE_p_RepresentationItems_type swig_types[130]
#define SWIGTYPE_p_RepresentationType_optional swig_types[131]
#define SWIGTYPE_p_RepresentationType_traits swig_types[132]
#define SWIGTYPE_p_RepresentationType_type swig_types[133]
#define SWIGTYPE_p_SelectedPropertyGroups_optional swig_types[134]
#define SWIGTYPE_p_SelectedPropertyGroups_traits swig_types[135]
#define SWIGTYPE_p_SelectedPropertyGroups_type swig_types[136]
#define SWIGTYPE_p_SimAddress_Postal_Default_const_iterator swig_types[137]
#define SWIGTYPE_p_SimAddress_Postal_Default_iterator swig_types[138]
#define SWIGTYPE_p_SimAddress_Postal_Default_sequence swig_types[139]
#define SWIGTYPE_p_SimAddress_Postal_Default_traits swig_types[140]
#define SWIGTYPE_p_SimAddress_Postal_Default_type swig_types[141]
#define SWIGTYPE_p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_const_iterator swig_types[142]
#define SWIGTYPE_p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_iterator swig_types[143]
#define SWIGTYPE_p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence swig_types[144]
#define SWIGTYPE_p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_traits swig_types[145]
#define SWIGTYPE_p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_type swig_types[146]
#define SWIGTYPE_p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_const_iterator swig_types[147]
#define SWIGTYPE_p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_iterator swig_types[148]
#define SWIGTYPE_p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_sequence swig_types[149]
#define SWIGTYPE_p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_traits swig_types[150]
#define SWIGTYPE_p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_type swig_types[151]
#define SWIGTYPE_p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_const_iterator swig_types[152]
#define SWIGTYPE_p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_iterator swig_types[153]
#define SWIGTYPE_p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_sequence swig_types[154]
#define SWIGTYPE_p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_traits swig_types[155]
#define SWIGTYPE_p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_type swig_types[156]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_const_iterator swig_types[157]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_iterator swig_types[158]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_sequence swig_types[159]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_traits swig_types[160]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_type swig_types[161]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_const_iterator swig_types[162]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_iterator swig_types[163]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_sequence swig_types[164]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_traits swig_types[165]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_type swig_types[166]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_const_iterator swig_types[167]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_iterator swig_types[168]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_sequence swig_types[169]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_traits swig_types[170]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_type swig_types[171]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_const_iterator swig_types[172]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_iterator swig_types[173]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_sequence swig_types[174]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_traits swig_types[175]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_type swig_types[176]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_const_iterator swig_types[177]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_iterator swig_types[178]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_sequence swig_types[179]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_traits swig_types[180]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_type swig_types[181]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_const_iterator swig_types[182]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_iterator swig_types[183]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_sequence swig_types[184]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_traits swig_types[185]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_type swig_types[186]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_const_iterator swig_types[187]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_iterator swig_types[188]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_sequence swig_types[189]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_traits swig_types[190]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_type swig_types[191]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_const_iterator swig_types[192]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_iterator swig_types[193]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_sequence swig_types[194]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_traits swig_types[195]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_type swig_types[196]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_const_iterator swig_types[197]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_iterator swig_types[198]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_sequence swig_types[199]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_traits swig_types[200]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_type swig_types[201]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_const_iterator swig_types[202]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_iterator swig_types[203]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_sequence swig_types[204]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_traits swig_types[205]
#define SWIGTYPE_p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_type swig_types[206]
#define SWIGTYPE_p_SimAppObjNameDefault_SiteContext_AdjacentSite_const_iterator swig_types[207]
#define SWIGTYPE_p_SimAppObjNameDefault_SiteContext_AdjacentSite_iterator swig_types[208]
#define SWIGTYPE_p_SimAppObjNameDefault_SiteContext_AdjacentSite_sequence swig_types[209]
#define SWIGTYPE_p_SimAppObjNameDefault_SiteContext_AdjacentSite_traits swig_types[210]
#define SWIGTYPE_p_SimAppObjNameDefault_SiteContext_AdjacentSite_type swig_types[211]
#define SWIGTYPE_p_SimAppObjNameDefault_SiteContext_SolarObstruction_const_iterator swig_types[212]
#define SWIGTYPE_p_SimAppObjNameDefault_SiteContext_SolarObstruction_iterator swig_types[213]
#define SWIGTYPE_p_SimAppObjNameDefault_SiteContext_SolarObstruction_sequence swig_types[214]
#define SWIGTYPE_p_SimAppObjNameDefault_SiteContext_SolarObstruction_traits swig_types[215]
#define SWIGTYPE_p_SimAppObjNameDefault_SiteContext_SolarObstruction_type swig_types[216]
#define SWIGTYPE_p_SimAppObjNameDefault_Space_Space_const_iterator swig_types[217]
#define SWIGTYPE_p_SimAppObjNameDefault_Space_Space_iterator swig_types[218]
#define SWIGTYPE_p_SimAppObjNameDefault_Space_Space_sequence swig_types[219]
#define SWIGTYPE_p_SimAppObjNameDefault_Space_Space_traits swig_types[220]
#define SWIGTYPE_p_SimAppObjNameDefault_Space_Space_type swig_types[221]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialContainer_BuildingStory_const_iterator swig_types[222]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialContainer_BuildingStory_iterator swig_types[223]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialContainer_BuildingStory_sequence swig_types[224]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialContainer_BuildingStory_traits swig_types[225]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialContainer_BuildingStory_type swig_types[226]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialContainer_Building_const_iterator swig_types[227]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialContainer_Building_iterator swig_types[228]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialContainer_Building_sequence swig_types[229]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialContainer_Building_traits swig_types[230]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialContainer_Building_type swig_types[231]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialContainer_Project_const_iterator swig_types[232]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialContainer_Project_iterator swig_types[233]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialContainer_Project_sequence swig_types[234]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialContainer_Project_traits swig_types[235]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialContainer_Project_type swig_types[236]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialContainer_Site_const_iterator swig_types[237]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialContainer_Site_iterator swig_types[238]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialContainer_Site_sequence swig_types[239]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialContainer_Site_traits swig_types[240]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialContainer_Site_type swig_types[241]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_const_iterator swig_types[242]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_iterator swig_types[243]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_sequence swig_types[244]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_traits swig_types[245]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_type swig_types[246]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_const_iterator swig_types[247]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_iterator swig_types[248]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_sequence swig_types[249]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_traits swig_types[250]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_type swig_types[251]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialZone_ThermalZone_const_iterator swig_types[252]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialZone_ThermalZone_iterator swig_types[253]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialZone_ThermalZone_sequence swig_types[254]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialZone_ThermalZone_traits swig_types[255]
#define SWIGTYPE_p_SimAppObjNameDefault_SpatialZone_ThermalZone_type swig_types[256]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_const_iterator swig_types[257]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_iterator swig_types[258]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_sequence swig_types[259]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_traits swig_types[260]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_type swig_types[261]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_const_iterator swig_types[262]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_iterator swig_types[263]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_sequence swig_types[264]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_traits swig_types[265]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_type swig_types[266]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_const_iterator swig_types[267]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_iterator swig_types[268]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_sequence swig_types[269]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_traits swig_types[270]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_type swig_types[271]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_const_iterator swig_types[272]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_iterator swig_types[273]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_sequence swig_types[274]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_traits swig_types[275]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_type swig_types[276]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_const_iterator swig_types[277]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_iterator swig_types[278]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_sequence swig_types[279]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_traits swig_types[280]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_type swig_types[281]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_const_iterator swig_types[282]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_iterator swig_types[283]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_sequence swig_types[284]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_traits swig_types[285]
#define SWIGTYPE_p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_type swig_types[286]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_AutoSaveInterval_const_iterator swig_types[287]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_AutoSaveInterval_iterator swig_types[288]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_AutoSaveInterval_sequence swig_types[289]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_AutoSaveInterval_traits swig_types[290]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_AutoSaveInterval_type swig_types[291]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_AutoSave_const_iterator swig_types[292]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_AutoSave_iterator swig_types[293]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_AutoSave_sequence swig_types[294]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_AutoSave_traits swig_types[295]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_AutoSave_type swig_types[296]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_EPlusInstalPath_const_iterator swig_types[297]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_EPlusInstalPath_iterator swig_types[298]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_EPlusInstalPath_sequence swig_types[299]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_EPlusInstalPath_traits swig_types[300]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_EPlusInstalPath_type swig_types[301]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_EPlusInstalVersion_const_iterator swig_types[302]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_EPlusInstalVersion_iterator swig_types[303]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence swig_types[304]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_EPlusInstalVersion_traits swig_types[305]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_EPlusInstalVersion_type swig_types[306]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_const_iterator swig_types[307]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_iterator swig_types[308]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence swig_types[309]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_traits swig_types[310]
#define SWIGTYPE_p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_type swig_types[311]
#define SWIGTYPE_p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_const_iterator swig_types[312]
#define SWIGTYPE_p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_iterator swig_types[313]
#define SWIGTYPE_p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence swig_types[314]
#define SWIGTYPE_p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_traits swig_types[315]
#define SWIGTYPE_p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_type swig_types[316]
#define SWIGTYPE_p_SimArbitraryProfileDef_ArbitraryProfile_Closed_const_iterator swig_types[317]
#define SWIGTYPE_p_SimArbitraryProfileDef_ArbitraryProfile_Closed_iterator swig_types[318]
#define SWIGTYPE_p_SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence swig_types[319]
#define SWIGTYPE_p_SimArbitraryProfileDef_ArbitraryProfile_Closed_traits swig_types[320]
#define SWIGTYPE_p_SimArbitraryProfileDef_ArbitraryProfile_Closed_type swig_types[321]
#define SWIGTYPE_p_SimBldgSiteParams_BuildingSite_Default_const_iterator swig_types[322]
#define SWIGTYPE_p_SimBldgSiteParams_BuildingSite_Default_iterator swig_types[323]
#define SWIGTYPE_p_SimBldgSiteParams_BuildingSite_Default_sequence swig_types[324]
#define SWIGTYPE_p_SimBldgSiteParams_BuildingSite_Default_traits swig_types[325]
#define SWIGTYPE_p_SimBldgSiteParams_BuildingSite_Default_type swig_types[326]
#define SWIGTYPE_p_SimBldgStoryParams_BuildingStory_Default_const_iterator swig_types[327]
#define SWIGTYPE_p_SimBldgStoryParams_BuildingStory_Default_iterator swig_types[328]
#define SWIGTYPE_p_SimBldgStoryParams_BuildingStory_Default_sequence swig_types[329]
#define SWIGTYPE_p_SimBldgStoryParams_BuildingStory_Default_traits swig_types[330]
#define SWIGTYPE_p_SimBldgStoryParams_BuildingStory_Default_type swig_types[331]
#define SWIGTYPE_p_SimBuildingStory_BuildingStory_Default_const_iterator swig_types[332]
#define SWIGTYPE_p_SimBuildingStory_BuildingStory_Default_iterator swig_types[333]
#define SWIGTYPE_p_SimBuildingStory_BuildingStory_Default_sequence swig_types[334]
#define SWIGTYPE_p_SimBuildingStory_BuildingStory_Default_traits swig_types[335]
#define SWIGTYPE_p_SimBuildingStory_BuildingStory_Default_type swig_types[336]
#define SWIGTYPE_p_SimBuilding_Building_Default_const_iterator swig_types[337]
#define SWIGTYPE_p_SimBuilding_Building_Default_iterator swig_types[338]
#define SWIGTYPE_p_SimBuilding_Building_Default_sequence swig_types[339]
#define SWIGTYPE_p_SimBuilding_Building_Default_traits swig_types[340]
#define SWIGTYPE_p_SimBuilding_Building_Default_type swig_types[341]
#define SWIGTYPE_p_SimCartesianTransformOperator_3D_Uniform_const_iterator swig_types[342]
#define SWIGTYPE_p_SimCartesianTransformOperator_3D_Uniform_iterator swig_types[343]
#define SWIGTYPE_p_SimCartesianTransformOperator_3D_Uniform_sequence swig_types[344]
#define SWIGTYPE_p_SimCartesianTransformOperator_3D_Uniform_traits swig_types[345]
#define SWIGTYPE_p_SimCartesianTransformOperator_3D_Uniform_type swig_types[346]
#define SWIGTYPE_p_SimClassification_ClassificationReference_SpaceCategoryBoma_const_iterator swig_types[347]
#define SWIGTYPE_p_SimClassification_ClassificationReference_SpaceCategoryBoma_iterator swig_types[348]
#define SWIGTYPE_p_SimClassification_ClassificationReference_SpaceCategoryBoma_sequence swig_types[349]
#define SWIGTYPE_p_SimClassification_ClassificationReference_SpaceCategoryBoma_traits swig_types[350]
#define SWIGTYPE_p_SimClassification_ClassificationReference_SpaceCategoryBoma_type swig_types[351]
#define SWIGTYPE_p_SimClassification_ClassificationReference_SpaceCategoryOwner_const_iterator swig_types[352]
#define SWIGTYPE_p_SimClassification_ClassificationReference_SpaceCategoryOwner_iterator swig_types[353]
#define SWIGTYPE_p_SimClassification_ClassificationReference_SpaceCategoryOwner_sequence swig_types[354]
#define SWIGTYPE_p_SimClassification_ClassificationReference_SpaceCategoryOwner_traits swig_types[355]
#define SWIGTYPE_p_SimClassification_ClassificationReference_SpaceCategoryOwner_type swig_types[356]
#define SWIGTYPE_p_SimClassification_ClassificationReference_SpaceTypeOwner_const_iterator swig_types[357]
#define SWIGTYPE_p_SimClassification_ClassificationReference_SpaceTypeOwner_iterator swig_types[358]
#define SWIGTYPE_p_SimClassification_ClassificationReference_SpaceTypeOwner_sequence swig_types[359]
#define SWIGTYPE_p_SimClassification_ClassificationReference_SpaceTypeOwner_traits swig_types[360]
#define SWIGTYPE_p_SimClassification_ClassificationReference_SpaceTypeOwner_type swig_types[361]
#define SWIGTYPE_p_SimClassification_ClassificationSystem_Default_const_iterator swig_types[362]
#define SWIGTYPE_p_SimClassification_ClassificationSystem_Default_iterator swig_types[363]
#define SWIGTYPE_p_SimClassification_ClassificationSystem_Default_sequence swig_types[364]
#define SWIGTYPE_p_SimClassification_ClassificationSystem_Default_traits swig_types[365]
#define SWIGTYPE_p_SimClassification_ClassificationSystem_Default_type swig_types[366]
#define SWIGTYPE_p_SimClassification_ClassificationSystem_OmniClass_const_iterator swig_types[367]
#define SWIGTYPE_p_SimClassification_ClassificationSystem_OmniClass_iterator swig_types[368]
#define SWIGTYPE_p_SimClassification_ClassificationSystem_OmniClass_sequence swig_types[369]
#define SWIGTYPE_p_SimClassification_ClassificationSystem_OmniClass_traits swig_types[370]
#define SWIGTYPE_p_SimClassification_ClassificationSystem_OmniClass_type swig_types[371]
#define SWIGTYPE_p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_const_iterator swig_types[372]
#define SWIGTYPE_p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_iterator swig_types[373]
#define SWIGTYPE_p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence swig_types[374]
#define SWIGTYPE_p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_traits swig_types[375]
#define SWIGTYPE_p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_type swig_types[376]
#define SWIGTYPE_p_SimConnectedFaceSet_ConnectedFaceSet_Default_const_iterator swig_types[377]
#define SWIGTYPE_p_SimConnectedFaceSet_ConnectedFaceSet_Default_iterator swig_types[378]
#define SWIGTYPE_p_SimConnectedFaceSet_ConnectedFaceSet_Default_sequence swig_types[379]
#define SWIGTYPE_p_SimConnectedFaceSet_ConnectedFaceSet_Default_traits swig_types[380]
#define SWIGTYPE_p_SimConnectedFaceSet_ConnectedFaceSet_Default_type swig_types[381]
#define SWIGTYPE_p_SimConnection_HotWaterFlow_Default_const_iterator swig_types[382]
#define SWIGTYPE_p_SimConnection_HotWaterFlow_Default_iterator swig_types[383]
#define SWIGTYPE_p_SimConnection_HotWaterFlow_Default_sequence swig_types[384]
#define SWIGTYPE_p_SimConnection_HotWaterFlow_Default_traits swig_types[385]
#define SWIGTYPE_p_SimConnection_HotWaterFlow_Default_type swig_types[386]
#define SWIGTYPE_p_SimConnection_ZoneAirFlow_Default_const_iterator swig_types[387]
#define SWIGTYPE_p_SimConnection_ZoneAirFlow_Default_iterator swig_types[388]
#define SWIGTYPE_p_SimConnection_ZoneAirFlow_Default_sequence swig_types[389]
#define SWIGTYPE_p_SimConnection_ZoneAirFlow_Default_traits swig_types[390]
#define SWIGTYPE_p_SimConnection_ZoneAirFlow_Default_type swig_types[391]
#define SWIGTYPE_p_SimControlScheme_AvailabilityManagerScheme_Scheduled_const_iterator swig_types[392]
#define SWIGTYPE_p_SimControlScheme_AvailabilityManagerScheme_Scheduled_iterator swig_types[393]
#define SWIGTYPE_p_SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence swig_types[394]
#define SWIGTYPE_p_SimControlScheme_AvailabilityManagerScheme_Scheduled_traits swig_types[395]
#define SWIGTYPE_p_SimControlScheme_AvailabilityManagerScheme_Scheduled_type swig_types[396]
#define SWIGTYPE_p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_const_iterator swig_types[397]
#define SWIGTYPE_p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_iterator swig_types[398]
#define SWIGTYPE_p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence swig_types[399]
#define SWIGTYPE_p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_traits swig_types[400]
#define SWIGTYPE_p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_type swig_types[401]
#define SWIGTYPE_p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_const_iterator swig_types[402]
#define SWIGTYPE_p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_iterator swig_types[403]
#define SWIGTYPE_p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence swig_types[404]
#define SWIGTYPE_p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_traits swig_types[405]
#define SWIGTYPE_p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_type swig_types[406]
#define SWIGTYPE_p_SimControlScheme_SetpointScheme_SingleHeating_const_iterator swig_types[407]
#define SWIGTYPE_p_SimControlScheme_SetpointScheme_SingleHeating_iterator swig_types[408]
#define SWIGTYPE_p_SimControlScheme_SetpointScheme_SingleHeating_sequence swig_types[409]
#define SWIGTYPE_p_SimControlScheme_SetpointScheme_SingleHeating_traits swig_types[410]
#define SWIGTYPE_p_SimControlScheme_SetpointScheme_SingleHeating_type swig_types[411]
#define SWIGTYPE_p_SimController_SupplyWater_Temperature_const_iterator swig_types[412]
#define SWIGTYPE_p_SimController_SupplyWater_Temperature_iterator swig_types[413]
#define SWIGTYPE_p_SimController_SupplyWater_Temperature_sequence swig_types[414]
#define SWIGTYPE_p_SimController_SupplyWater_Temperature_traits swig_types[415]
#define SWIGTYPE_p_SimController_SupplyWater_Temperature_type swig_types[416]
#define SWIGTYPE_p_SimController_ZoneControlTemperature_Thermostat_const_iterator swig_types[417]
#define SWIGTYPE_p_SimController_ZoneControlTemperature_Thermostat_iterator swig_types[418]
#define SWIGTYPE_p_SimController_ZoneControlTemperature_Thermostat_sequence swig_types[419]
#define SWIGTYPE_p_SimController_ZoneControlTemperature_Thermostat_traits swig_types[420]
#define SWIGTYPE_p_SimController_ZoneControlTemperature_Thermostat_type swig_types[421]
#define SWIGTYPE_p_SimDerivedUnitType_DerivedUnit_Default_const_iterator swig_types[422]
#define SWIGTYPE_p_SimDerivedUnitType_DerivedUnit_Default_iterator swig_types[423]
#define SWIGTYPE_p_SimDerivedUnitType_DerivedUnit_Default_sequence swig_types[424]
#define SWIGTYPE_p_SimDerivedUnitType_DerivedUnit_Default_traits swig_types[425]
#define SWIGTYPE_p_SimDerivedUnitType_DerivedUnit_Default_type swig_types[426]
#define SWIGTYPE_p_SimDistributionPort_AirFlowPort_Air_In_const_iterator swig_types[427]
#define SWIGTYPE_p_SimDistributionPort_AirFlowPort_Air_In_iterator swig_types[428]
#define SWIGTYPE_p_SimDistributionPort_AirFlowPort_Air_In_sequence swig_types[429]
#define SWIGTYPE_p_SimDistributionPort_AirFlowPort_Air_In_traits swig_types[430]
#define SWIGTYPE_p_SimDistributionPort_AirFlowPort_Air_In_type swig_types[431]
#define SWIGTYPE_p_SimDistributionPort_AirFlowPort_Air_Out_const_iterator swig_types[432]
#define SWIGTYPE_p_SimDistributionPort_AirFlowPort_Air_Out_iterator swig_types[433]
#define SWIGTYPE_p_SimDistributionPort_AirFlowPort_Air_Out_sequence swig_types[434]
#define SWIGTYPE_p_SimDistributionPort_AirFlowPort_Air_Out_traits swig_types[435]
#define SWIGTYPE_p_SimDistributionPort_AirFlowPort_Air_Out_type swig_types[436]
#define SWIGTYPE_p_SimDistributionPort_HotWaterFlowPort_Water_In_const_iterator swig_types[437]
#define SWIGTYPE_p_SimDistributionPort_HotWaterFlowPort_Water_In_iterator swig_types[438]
#define SWIGTYPE_p_SimDistributionPort_HotWaterFlowPort_Water_In_sequence swig_types[439]
#define SWIGTYPE_p_SimDistributionPort_HotWaterFlowPort_Water_In_traits swig_types[440]
#define SWIGTYPE_p_SimDistributionPort_HotWaterFlowPort_Water_In_type swig_types[441]
#define SWIGTYPE_p_SimDistributionPort_HotWaterFlowPort_Water_Out_const_iterator swig_types[442]
#define SWIGTYPE_p_SimDistributionPort_HotWaterFlowPort_Water_Out_iterator swig_types[443]
#define SWIGTYPE_p_SimDistributionPort_HotWaterFlowPort_Water_Out_sequence swig_types[444]
#define SWIGTYPE_p_SimDistributionPort_HotWaterFlowPort_Water_Out_traits swig_types[445]
#define SWIGTYPE_p_SimDistributionPort_HotWaterFlowPort_Water_Out_type swig_types[446]
#define SWIGTYPE_p_SimFaceBound_FaceBound_Default_const_iterator swig_types[447]
#define SWIGTYPE_p_SimFaceBound_FaceBound_Default_iterator swig_types[448]
#define SWIGTYPE_p_SimFaceBound_FaceBound_Default_sequence swig_types[449]
#define SWIGTYPE_p_SimFaceBound_FaceBound_Default_traits swig_types[450]
#define SWIGTYPE_p_SimFaceBound_FaceBound_Default_type swig_types[451]
#define SWIGTYPE_p_SimFaceBound_FaceBound_FaceOuterBound_const_iterator swig_types[452]
#define SWIGTYPE_p_SimFaceBound_FaceBound_FaceOuterBound_iterator swig_types[453]
#define SWIGTYPE_p_SimFaceBound_FaceBound_FaceOuterBound_sequence swig_types[454]
#define SWIGTYPE_p_SimFaceBound_FaceBound_FaceOuterBound_traits swig_types[455]
#define SWIGTYPE_p_SimFaceBound_FaceBound_FaceOuterBound_type swig_types[456]
#define SWIGTYPE_p_SimFace_Face_Default_const_iterator swig_types[457]
#define SWIGTYPE_p_SimFace_Face_Default_iterator swig_types[458]
#define SWIGTYPE_p_SimFace_Face_Default_sequence swig_types[459]
#define SWIGTYPE_p_SimFace_Face_Default_traits swig_types[460]
#define SWIGTYPE_p_SimFace_Face_Default_type swig_types[461]
#define SWIGTYPE_p_SimFeatureElementSubtraction_Void_Opening_const_iterator swig_types[462]
#define SWIGTYPE_p_SimFeatureElementSubtraction_Void_Opening_iterator swig_types[463]
#define SWIGTYPE_p_SimFeatureElementSubtraction_Void_Opening_sequence swig_types[464]
#define SWIGTYPE_p_SimFeatureElementSubtraction_Void_Opening_traits swig_types[465]
#define SWIGTYPE_p_SimFeatureElementSubtraction_Void_Opening_type swig_types[466]
#define SWIGTYPE_p_SimFlowController_Valve_Default_const_iterator swig_types[467]
#define SWIGTYPE_p_SimFlowController_Valve_Default_iterator swig_types[468]
#define SWIGTYPE_p_SimFlowController_Valve_Default_sequence swig_types[469]
#define SWIGTYPE_p_SimFlowController_Valve_Default_traits swig_types[470]
#define SWIGTYPE_p_SimFlowController_Valve_Default_type swig_types[471]
#define SWIGTYPE_p_SimFlowController_Valve_TemperingValve_const_iterator swig_types[472]
#define SWIGTYPE_p_SimFlowController_Valve_TemperingValve_iterator swig_types[473]
#define SWIGTYPE_p_SimFlowController_Valve_TemperingValve_sequence swig_types[474]
#define SWIGTYPE_p_SimFlowController_Valve_TemperingValve_traits swig_types[475]
#define SWIGTYPE_p_SimFlowController_Valve_TemperingValve_type swig_types[476]
#define SWIGTYPE_p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_const_iterator swig_types[477]
#define SWIGTYPE_p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_iterator swig_types[478]
#define SWIGTYPE_p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_sequence swig_types[479]
#define SWIGTYPE_p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_traits swig_types[480]
#define SWIGTYPE_p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_type swig_types[481]
#define SWIGTYPE_p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_const_iterator swig_types[482]
#define SWIGTYPE_p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_iterator swig_types[483]
#define SWIGTYPE_p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_sequence swig_types[484]
#define SWIGTYPE_p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_traits swig_types[485]
#define SWIGTYPE_p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_type swig_types[486]
#define SWIGTYPE_p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_const_iterator swig_types[487]
#define SWIGTYPE_p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_iterator swig_types[488]
#define SWIGTYPE_p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence swig_types[489]
#define SWIGTYPE_p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_traits swig_types[490]
#define SWIGTYPE_p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_type swig_types[491]
#define SWIGTYPE_p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_const_iterator swig_types[492]
#define SWIGTYPE_p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_iterator swig_types[493]
#define SWIGTYPE_p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence swig_types[494]
#define SWIGTYPE_p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_traits swig_types[495]
#define SWIGTYPE_p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_type swig_types[496]
#define SWIGTYPE_p_SimFlowEnergyTransfer_ConvectiveHeater_Water_const_iterator swig_types[497]
#define SWIGTYPE_p_SimFlowEnergyTransfer_ConvectiveHeater_Water_iterator swig_types[498]
#define SWIGTYPE_p_SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence swig_types[499]
#define SWIGTYPE_p_SimFlowEnergyTransfer_ConvectiveHeater_Water_traits swig_types[500]
#define SWIGTYPE_p_SimFlowEnergyTransfer_ConvectiveHeater_Water_type swig_types[501]
#define SWIGTYPE_p_SimFlowFitting_Default_Default_const_iterator swig_types[502]
#define SWIGTYPE_p_SimFlowFitting_Default_Default_iterator swig_types[503]
#define SWIGTYPE_p_SimFlowFitting_Default_Default_sequence swig_types[504]
#define SWIGTYPE_p_SimFlowFitting_Default_Default_traits swig_types[505]
#define SWIGTYPE_p_SimFlowFitting_Default_Default_type swig_types[506]
#define SWIGTYPE_p_SimFlowFitting_Mixer_DemandProxyMixerWater_const_iterator swig_types[507]
#define SWIGTYPE_p_SimFlowFitting_Mixer_DemandProxyMixerWater_iterator swig_types[508]
#define SWIGTYPE_p_SimFlowFitting_Mixer_DemandProxyMixerWater_sequence swig_types[509]
#define SWIGTYPE_p_SimFlowFitting_Mixer_DemandProxyMixerWater_traits swig_types[510]
#define SWIGTYPE_p_SimFlowFitting_Mixer_DemandProxyMixerWater_type swig_types[511]
#define SWIGTYPE_p_SimFlowFitting_Splitter_DemandProxySplitterWater_const_iterator swig_types[512]
#define SWIGTYPE_p_SimFlowFitting_Splitter_DemandProxySplitterWater_iterator swig_types[513]
#define SWIGTYPE_p_SimFlowFitting_Splitter_DemandProxySplitterWater_sequence swig_types[514]
#define SWIGTYPE_p_SimFlowFitting_Splitter_DemandProxySplitterWater_traits swig_types[515]
#define SWIGTYPE_p_SimFlowFitting_Splitter_DemandProxySplitterWater_type swig_types[516]
#define SWIGTYPE_p_SimFlowMover_Pump_VariableSpeedReturn_const_iterator swig_types[517]
#define SWIGTYPE_p_SimFlowMover_Pump_VariableSpeedReturn_iterator swig_types[518]
#define SWIGTYPE_p_SimFlowMover_Pump_VariableSpeedReturn_sequence swig_types[519]
#define SWIGTYPE_p_SimFlowMover_Pump_VariableSpeedReturn_traits swig_types[520]
#define SWIGTYPE_p_SimFlowMover_Pump_VariableSpeedReturn_type swig_types[521]
#define SWIGTYPE_p_SimFlowPlant_Boiler_BoilerHotWater_const_iterator swig_types[522]
#define SWIGTYPE_p_SimFlowPlant_Boiler_BoilerHotWater_iterator swig_types[523]
#define SWIGTYPE_p_SimFlowPlant_Boiler_BoilerHotWater_sequence swig_types[524]
#define SWIGTYPE_p_SimFlowPlant_Boiler_BoilerHotWater_traits swig_types[525]
#define SWIGTYPE_p_SimFlowPlant_Boiler_BoilerHotWater_type swig_types[526]
#define SWIGTYPE_p_SimFlowSegment_Pipe_Indoor_const_iterator swig_types[527]
#define SWIGTYPE_p_SimFlowSegment_Pipe_Indoor_iterator swig_types[528]
#define SWIGTYPE_p_SimFlowSegment_Pipe_Indoor_sequence swig_types[529]
#define SWIGTYPE_p_SimFlowSegment_Pipe_Indoor_traits swig_types[530]
#define SWIGTYPE_p_SimFlowSegment_Pipe_Indoor_type swig_types[531]
#define SWIGTYPE_p_SimGeomBooleanResult_BooleanClippingResult_Default_const_iterator swig_types[532]
#define SWIGTYPE_p_SimGeomBooleanResult_BooleanClippingResult_Default_iterator swig_types[533]
#define SWIGTYPE_p_SimGeomBooleanResult_BooleanClippingResult_Default_sequence swig_types[534]
#define SWIGTYPE_p_SimGeomBooleanResult_BooleanClippingResult_Default_traits swig_types[535]
#define SWIGTYPE_p_SimGeomBooleanResult_BooleanClippingResult_Default_type swig_types[536]
#define SWIGTYPE_p_SimGeomCurve_Polyline_Default_const_iterator swig_types[537]
#define SWIGTYPE_p_SimGeomCurve_Polyline_Default_iterator swig_types[538]
#define SWIGTYPE_p_SimGeomCurve_Polyline_Default_sequence swig_types[539]
#define SWIGTYPE_p_SimGeomCurve_Polyline_Default_traits swig_types[540]
#define SWIGTYPE_p_SimGeomCurve_Polyline_Default_type swig_types[541]
#define SWIGTYPE_p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_const_iterator swig_types[542]
#define SWIGTYPE_p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_iterator swig_types[543]
#define SWIGTYPE_p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence swig_types[544]
#define SWIGTYPE_p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_traits swig_types[545]
#define SWIGTYPE_p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_type swig_types[546]
#define SWIGTYPE_p_SimGeomPoint_Point_CartesianPoint_const_iterator swig_types[547]
#define SWIGTYPE_p_SimGeomPoint_Point_CartesianPoint_iterator swig_types[548]
#define SWIGTYPE_p_SimGeomPoint_Point_CartesianPoint_sequence swig_types[549]
#define SWIGTYPE_p_SimGeomPoint_Point_CartesianPoint_traits swig_types[550]
#define SWIGTYPE_p_SimGeomPoint_Point_CartesianPoint_type swig_types[551]
#define SWIGTYPE_p_SimGeomSolidModel_FacetedBrep_Default_const_iterator swig_types[552]
#define SWIGTYPE_p_SimGeomSolidModel_FacetedBrep_Default_iterator swig_types[553]
#define SWIGTYPE_p_SimGeomSolidModel_FacetedBrep_Default_sequence swig_types[554]
#define SWIGTYPE_p_SimGeomSolidModel_FacetedBrep_Default_traits swig_types[555]
#define SWIGTYPE_p_SimGeomSolidModel_FacetedBrep_Default_type swig_types[556]
#define SWIGTYPE_p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_const_iterator swig_types[557]
#define SWIGTYPE_p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_iterator swig_types[558]
#define SWIGTYPE_p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence swig_types[559]
#define SWIGTYPE_p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_traits swig_types[560]
#define SWIGTYPE_p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_type swig_types[561]
#define SWIGTYPE_p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_const_iterator swig_types[562]
#define SWIGTYPE_p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_iterator swig_types[563]
#define SWIGTYPE_p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence swig_types[564]
#define SWIGTYPE_p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_traits swig_types[565]
#define SWIGTYPE_p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_type swig_types[566]
#define SWIGTYPE_p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_const_iterator swig_types[567]
#define SWIGTYPE_p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_iterator swig_types[568]
#define SWIGTYPE_p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence swig_types[569]
#define SWIGTYPE_p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_traits swig_types[570]
#define SWIGTYPE_p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_type swig_types[571]
#define SWIGTYPE_p_SimGeomSurface_ElementarySurface_Plane_const_iterator swig_types[572]
#define SWIGTYPE_p_SimGeomSurface_ElementarySurface_Plane_iterator swig_types[573]
#define SWIGTYPE_p_SimGeomSurface_ElementarySurface_Plane_sequence swig_types[574]
#define SWIGTYPE_p_SimGeomSurface_ElementarySurface_Plane_traits swig_types[575]
#define SWIGTYPE_p_SimGeomSurface_ElementarySurface_Plane_type swig_types[576]
#define SWIGTYPE_p_SimGeomVector_Vector_Default_const_iterator swig_types[577]
#define SWIGTYPE_p_SimGeomVector_Vector_Default_iterator swig_types[578]
#define SWIGTYPE_p_SimGeomVector_Vector_Default_sequence swig_types[579]
#define SWIGTYPE_p_SimGeomVector_Vector_Default_traits swig_types[580]
#define SWIGTYPE_p_SimGeomVector_Vector_Default_type swig_types[581]
#define SWIGTYPE_p_SimGeomVector_Vector_Direction_const_iterator swig_types[582]
#define SWIGTYPE_p_SimGeomVector_Vector_Direction_iterator swig_types[583]
#define SWIGTYPE_p_SimGeomVector_Vector_Direction_sequence swig_types[584]
#define SWIGTYPE_p_SimGeomVector_Vector_Direction_traits swig_types[585]
#define SWIGTYPE_p_SimGeomVector_Vector_Direction_type swig_types[586]
#define SWIGTYPE_p_SimGroup_BldgCompGroup_ZoneEquipment_const_iterator swig_types[587]
#define SWIGTYPE_p_SimGroup_BldgCompGroup_ZoneEquipment_iterator swig_types[588]
#define SWIGTYPE_p_SimGroup_BldgCompGroup_ZoneEquipment_sequence swig_types[589]
#define SWIGTYPE_p_SimGroup_BldgCompGroup_ZoneEquipment_traits swig_types[590]
#define SWIGTYPE_p_SimGroup_BldgCompGroup_ZoneEquipment_type swig_types[591]
#define SWIGTYPE_p_SimGroup_HvacDemandGroup_WaterSystem_const_iterator swig_types[592]
#define SWIGTYPE_p_SimGroup_HvacDemandGroup_WaterSystem_iterator swig_types[593]
#define SWIGTYPE_p_SimGroup_HvacDemandGroup_WaterSystem_sequence swig_types[594]
#define SWIGTYPE_p_SimGroup_HvacDemandGroup_WaterSystem_traits swig_types[595]
#define SWIGTYPE_p_SimGroup_HvacDemandGroup_WaterSystem_type swig_types[596]
#define SWIGTYPE_p_SimGroup_SpatialZoneGroup_ZoneGroup_const_iterator swig_types[597]
#define SWIGTYPE_p_SimGroup_SpatialZoneGroup_ZoneGroup_iterator swig_types[598]
#define SWIGTYPE_p_SimGroup_SpatialZoneGroup_ZoneGroup_sequence swig_types[599]
#define SWIGTYPE_p_SimGroup_SpatialZoneGroup_ZoneGroup_traits swig_types[600]
#define SWIGTYPE_p_SimGroup_SpatialZoneGroup_ZoneGroup_type swig_types[601]
#define SWIGTYPE_p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_const_iterator swig_types[602]
#define SWIGTYPE_p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_iterator swig_types[603]
#define SWIGTYPE_p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence swig_types[604]
#define SWIGTYPE_p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_traits swig_types[605]
#define SWIGTYPE_p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_type swig_types[606]
#define SWIGTYPE_p_SimInternalLoad_Equipment_Electric_const_iterator swig_types[607]
#define SWIGTYPE_p_SimInternalLoad_Equipment_Electric_iterator swig_types[608]
#define SWIGTYPE_p_SimInternalLoad_Equipment_Electric_sequence swig_types[609]
#define SWIGTYPE_p_SimInternalLoad_Equipment_Electric_traits swig_types[610]
#define SWIGTYPE_p_SimInternalLoad_Equipment_Electric_type swig_types[611]
#define SWIGTYPE_p_SimInternalLoad_Lights_Default_const_iterator swig_types[612]
#define SWIGTYPE_p_SimInternalLoad_Lights_Default_iterator swig_types[613]
#define SWIGTYPE_p_SimInternalLoad_Lights_Default_sequence swig_types[614]
#define SWIGTYPE_p_SimInternalLoad_Lights_Default_traits swig_types[615]
#define SWIGTYPE_p_SimInternalLoad_Lights_Default_type swig_types[616]
#define SWIGTYPE_p_SimInternalLoad_People_Default_const_iterator swig_types[617]
#define SWIGTYPE_p_SimInternalLoad_People_Default_iterator swig_types[618]
#define SWIGTYPE_p_SimInternalLoad_People_Default_sequence swig_types[619]
#define SWIGTYPE_p_SimInternalLoad_People_Default_traits swig_types[620]
#define SWIGTYPE_p_SimInternalLoad_People_Default_type swig_types[621]
#define SWIGTYPE_p_SimList_ConnectorList_SimConnections_const_iterator swig_types[622]
#define SWIGTYPE_p_SimList_ConnectorList_SimConnections_iterator swig_types[623]
#define SWIGTYPE_p_SimList_ConnectorList_SimConnections_sequence swig_types[624]
#define SWIGTYPE_p_SimList_ConnectorList_SimConnections_traits swig_types[625]
#define SWIGTYPE_p_SimList_ConnectorList_SimConnections_type swig_types[626]
#define SWIGTYPE_p_SimList_EquipmentList_ZoneHvac_const_iterator swig_types[627]
#define SWIGTYPE_p_SimList_EquipmentList_ZoneHvac_iterator swig_types[628]
#define SWIGTYPE_p_SimList_EquipmentList_ZoneHvac_sequence swig_types[629]
#define SWIGTYPE_p_SimList_EquipmentList_ZoneHvac_traits swig_types[630]
#define SWIGTYPE_p_SimList_EquipmentList_ZoneHvac_type swig_types[631]
#define SWIGTYPE_p_SimList_MaterialList_Default_const_iterator swig_types[632]
#define SWIGTYPE_p_SimList_MaterialList_Default_iterator swig_types[633]
#define SWIGTYPE_p_SimList_MaterialList_Default_sequence swig_types[634]
#define SWIGTYPE_p_SimList_MaterialList_Default_traits swig_types[635]
#define SWIGTYPE_p_SimList_MaterialList_Default_type swig_types[636]
#define SWIGTYPE_p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_const_iterator swig_types[637]
#define SWIGTYPE_p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_iterator swig_types[638]
#define SWIGTYPE_p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence swig_types[639]
#define SWIGTYPE_p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_traits swig_types[640]
#define SWIGTYPE_p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_type swig_types[641]
#define SWIGTYPE_p_SimList_SchemeList_DemandManagerScheme_const_iterator swig_types[642]
#define SWIGTYPE_p_SimList_SchemeList_DemandManagerScheme_iterator swig_types[643]
#define SWIGTYPE_p_SimList_SchemeList_DemandManagerScheme_sequence swig_types[644]
#define SWIGTYPE_p_SimList_SchemeList_DemandManagerScheme_traits swig_types[645]
#define SWIGTYPE_p_SimList_SchemeList_DemandManagerScheme_type swig_types[646]
#define SWIGTYPE_p_SimList_SchemeList_PlantOperatingScheme_const_iterator swig_types[647]
#define SWIGTYPE_p_SimList_SchemeList_PlantOperatingScheme_iterator swig_types[648]
#define SWIGTYPE_p_SimList_SchemeList_PlantOperatingScheme_sequence swig_types[649]
#define SWIGTYPE_p_SimList_SchemeList_PlantOperatingScheme_traits swig_types[650]
#define SWIGTYPE_p_SimList_SchemeList_PlantOperatingScheme_type swig_types[651]
#define SWIGTYPE_p_SimList_SchemeList_WaterTempControlScheme_const_iterator swig_types[652]
#define SWIGTYPE_p_SimList_SchemeList_WaterTempControlScheme_iterator swig_types[653]
#define SWIGTYPE_p_SimList_SchemeList_WaterTempControlScheme_sequence swig_types[654]
#define SWIGTYPE_p_SimList_SchemeList_WaterTempControlScheme_traits swig_types[655]
#define SWIGTYPE_p_SimList_SchemeList_WaterTempControlScheme_type swig_types[656]
#define SWIGTYPE_p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_const_iterator swig_types[657]
#define SWIGTYPE_p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_iterator swig_types[658]
#define SWIGTYPE_p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence swig_types[659]
#define SWIGTYPE_p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_traits swig_types[660]
#define SWIGTYPE_p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_type swig_types[661]
#define SWIGTYPE_p_SimLocalPlacement_LocalPlacement_RelativePlacement_const_iterator swig_types[662]
#define SWIGTYPE_p_SimLocalPlacement_LocalPlacement_RelativePlacement_iterator swig_types[663]
#define SWIGTYPE_p_SimLocalPlacement_LocalPlacement_RelativePlacement_sequence swig_types[664]
#define SWIGTYPE_p_SimLocalPlacement_LocalPlacement_RelativePlacement_traits swig_types[665]
#define SWIGTYPE_p_SimLocalPlacement_LocalPlacement_RelativePlacement_type swig_types[666]
#define SWIGTYPE_p_SimLocationAndWeather_DesignDay_Default_const_iterator swig_types[667]
#define SWIGTYPE_p_SimLocationAndWeather_DesignDay_Default_iterator swig_types[668]
#define SWIGTYPE_p_SimLocationAndWeather_DesignDay_Default_sequence swig_types[669]
#define SWIGTYPE_p_SimLocationAndWeather_DesignDay_Default_traits swig_types[670]
#define SWIGTYPE_p_SimLocationAndWeather_DesignDay_Default_type swig_types[671]
#define SWIGTYPE_p_SimLocationAndWeather_Location_Default_const_iterator swig_types[672]
#define SWIGTYPE_p_SimLocationAndWeather_Location_Default_iterator swig_types[673]
#define SWIGTYPE_p_SimLocationAndWeather_Location_Default_sequence swig_types[674]
#define SWIGTYPE_p_SimLocationAndWeather_Location_Default_traits swig_types[675]
#define SWIGTYPE_p_SimLocationAndWeather_Location_Default_type swig_types[676]
#define SWIGTYPE_p_SimLoop_Loop_PolyLoop_const_iterator swig_types[677]
#define SWIGTYPE_p_SimLoop_Loop_PolyLoop_iterator swig_types[678]
#define SWIGTYPE_p_SimLoop_Loop_PolyLoop_sequence swig_types[679]
#define SWIGTYPE_p_SimLoop_Loop_PolyLoop_traits swig_types[680]
#define SWIGTYPE_p_SimLoop_Loop_PolyLoop_type swig_types[681]
#define SWIGTYPE_p_SimMappedRepresentationItem_Default_Default_const_iterator swig_types[682]
#define SWIGTYPE_p_SimMappedRepresentationItem_Default_Default_iterator swig_types[683]
#define SWIGTYPE_p_SimMappedRepresentationItem_Default_Default_sequence swig_types[684]
#define SWIGTYPE_p_SimMappedRepresentationItem_Default_Default_traits swig_types[685]
#define SWIGTYPE_p_SimMappedRepresentationItem_Default_Default_type swig_types[686]
#define SWIGTYPE_p_SimMaterialLayerSet_Default_Default_const_iterator swig_types[687]
#define SWIGTYPE_p_SimMaterialLayerSet_Default_Default_iterator swig_types[688]
#define SWIGTYPE_p_SimMaterialLayerSet_Default_Default_sequence swig_types[689]
#define SWIGTYPE_p_SimMaterialLayerSet_Default_Default_traits swig_types[690]
#define SWIGTYPE_p_SimMaterialLayerSet_Default_Default_type swig_types[691]
#define SWIGTYPE_p_SimMaterialLayerSet_GlazingLayerSet_Window_const_iterator swig_types[692]
#define SWIGTYPE_p_SimMaterialLayerSet_GlazingLayerSet_Window_iterator swig_types[693]
#define SWIGTYPE_p_SimMaterialLayerSet_GlazingLayerSet_Window_sequence swig_types[694]
#define SWIGTYPE_p_SimMaterialLayerSet_GlazingLayerSet_Window_traits swig_types[695]
#define SWIGTYPE_p_SimMaterialLayerSet_GlazingLayerSet_Window_type swig_types[696]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_const_iterator swig_types[697]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_iterator swig_types[698]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence swig_types[699]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_traits swig_types[700]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_type swig_types[701]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Door_const_iterator swig_types[702]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Door_iterator swig_types[703]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Door_sequence swig_types[704]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Door_traits swig_types[705]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Door_type swig_types[706]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Floor_const_iterator swig_types[707]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Floor_iterator swig_types[708]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence swig_types[709]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Floor_traits swig_types[710]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Floor_type swig_types[711]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_const_iterator swig_types[712]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_iterator swig_types[713]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence swig_types[714]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_traits swig_types[715]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_type swig_types[716]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Roof_const_iterator swig_types[717]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Roof_iterator swig_types[718]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence swig_types[719]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Roof_traits swig_types[720]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Roof_type swig_types[721]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Wall_const_iterator swig_types[722]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Wall_iterator swig_types[723]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence swig_types[724]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Wall_traits swig_types[725]
#define SWIGTYPE_p_SimMaterialLayerSet_OpaqueLayerSet_Wall_type swig_types[726]
#define SWIGTYPE_p_SimMaterialLayer_GlazingMaterialLayer_Default_const_iterator swig_types[727]
#define SWIGTYPE_p_SimMaterialLayer_GlazingMaterialLayer_Default_iterator swig_types[728]
#define SWIGTYPE_p_SimMaterialLayer_GlazingMaterialLayer_Default_sequence swig_types[729]
#define SWIGTYPE_p_SimMaterialLayer_GlazingMaterialLayer_Default_traits swig_types[730]
#define SWIGTYPE_p_SimMaterialLayer_GlazingMaterialLayer_Default_type swig_types[731]
#define SWIGTYPE_p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_const_iterator swig_types[732]
#define SWIGTYPE_p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_iterator swig_types[733]
#define SWIGTYPE_p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_sequence swig_types[734]
#define SWIGTYPE_p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_traits swig_types[735]
#define SWIGTYPE_p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_type swig_types[736]
#define SWIGTYPE_p_SimMaterialLayer_OpaqueMaterialLayer_Default_const_iterator swig_types[737]
#define SWIGTYPE_p_SimMaterialLayer_OpaqueMaterialLayer_Default_iterator swig_types[738]
#define SWIGTYPE_p_SimMaterialLayer_OpaqueMaterialLayer_Default_sequence swig_types[739]
#define SWIGTYPE_p_SimMaterialLayer_OpaqueMaterialLayer_Default_traits swig_types[740]
#define SWIGTYPE_p_SimMaterialLayer_OpaqueMaterialLayer_Default_type swig_types[741]
#define SWIGTYPE_p_SimMaterial_Default_Default_const_iterator swig_types[742]
#define SWIGTYPE_p_SimMaterial_Default_Default_iterator swig_types[743]
#define SWIGTYPE_p_SimMaterial_Default_Default_sequence swig_types[744]
#define SWIGTYPE_p_SimMaterial_Default_Default_traits swig_types[745]
#define SWIGTYPE_p_SimMaterial_Default_Default_type swig_types[746]
#define SWIGTYPE_p_SimMaterial_GlazingMaterial_Gas_const_iterator swig_types[747]
#define SWIGTYPE_p_SimMaterial_GlazingMaterial_Gas_iterator swig_types[748]
#define SWIGTYPE_p_SimMaterial_GlazingMaterial_Gas_sequence swig_types[749]
#define SWIGTYPE_p_SimMaterial_GlazingMaterial_Gas_traits swig_types[750]
#define SWIGTYPE_p_SimMaterial_GlazingMaterial_Gas_type swig_types[751]
#define SWIGTYPE_p_SimMaterial_GlazingMaterial_Glazing_const_iterator swig_types[752]
#define SWIGTYPE_p_SimMaterial_GlazingMaterial_Glazing_iterator swig_types[753]
#define SWIGTYPE_p_SimMaterial_GlazingMaterial_Glazing_sequence swig_types[754]
#define SWIGTYPE_p_SimMaterial_GlazingMaterial_Glazing_traits swig_types[755]
#define SWIGTYPE_p_SimMaterial_GlazingMaterial_Glazing_type swig_types[756]
#define SWIGTYPE_p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_const_iterator swig_types[757]
#define SWIGTYPE_p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_iterator swig_types[758]
#define SWIGTYPE_p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence swig_types[759]
#define SWIGTYPE_p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_traits swig_types[760]
#define SWIGTYPE_p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_type swig_types[761]
#define SWIGTYPE_p_SimMaterial_OpaqueMaterial_AirGap_const_iterator swig_types[762]
#define SWIGTYPE_p_SimMaterial_OpaqueMaterial_AirGap_iterator swig_types[763]
#define SWIGTYPE_p_SimMaterial_OpaqueMaterial_AirGap_sequence swig_types[764]
#define SWIGTYPE_p_SimMaterial_OpaqueMaterial_AirGap_traits swig_types[765]
#define SWIGTYPE_p_SimMaterial_OpaqueMaterial_AirGap_type swig_types[766]
#define SWIGTYPE_p_SimMaterial_OpaqueMaterial_Default_const_iterator swig_types[767]
#define SWIGTYPE_p_SimMaterial_OpaqueMaterial_Default_iterator swig_types[768]
#define SWIGTYPE_p_SimMaterial_OpaqueMaterial_Default_sequence swig_types[769]
#define SWIGTYPE_p_SimMaterial_OpaqueMaterial_Default_traits swig_types[770]
#define SWIGTYPE_p_SimMaterial_OpaqueMaterial_Default_type swig_types[771]
#define SWIGTYPE_p_SimModelName_optional swig_types[772]
#define SWIGTYPE_p_SimModelName_traits swig_types[773]
#define SWIGTYPE_p_SimModelName_type swig_types[774]
#define SWIGTYPE_p_SimModelRepresentationContext_GeometricRepresentationContext_Default_const_iterator swig_types[775]
#define SWIGTYPE_p_SimModelRepresentationContext_GeometricRepresentationContext_Default_iterator swig_types[776]
#define SWIGTYPE_p_SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence swig_types[777]
#define SWIGTYPE_p_SimModelRepresentationContext_GeometricRepresentationContext_Default_traits swig_types[778]
#define SWIGTYPE_p_SimModelRepresentationContext_GeometricRepresentationContext_Default_type swig_types[779]
#define SWIGTYPE_p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_const_iterator swig_types[780]
#define SWIGTYPE_p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_iterator swig_types[781]
#define SWIGTYPE_p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence swig_types[782]
#define SWIGTYPE_p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_traits swig_types[783]
#define SWIGTYPE_p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_type swig_types[784]
#define SWIGTYPE_p_SimModelSchemaIDKey_optional swig_types[785]
#define SWIGTYPE_p_SimModelSchemaIDKey_traits swig_types[786]
#define SWIGTYPE_p_SimModelSchemaIDKey_type swig_types[787]
#define SWIGTYPE_p_SimModelSchemaVersion_optional swig_types[788]
#define SWIGTYPE_p_SimModelSchemaVersion_traits swig_types[789]
#define SWIGTYPE_p_SimModelSchemaVersion_type swig_types[790]
#define SWIGTYPE_p_SimModelSubtype_optional swig_types[791]
#define SWIGTYPE_p_SimModelSubtype_traits swig_types[792]
#define SWIGTYPE_p_SimModelSubtype_type swig_types[793]
#define SWIGTYPE_p_SimModelType_optional swig_types[794]
#define SWIGTYPE_p_SimModelType_traits swig_types[795]
#define SWIGTYPE_p_SimModelType_type swig_types[796]
#define SWIGTYPE_p_SimModelUnitDefaultsVersion_optional swig_types[797]
#define SWIGTYPE_p_SimModelUnitDefaultsVersion_traits swig_types[798]
#define SWIGTYPE_p_SimModelUnitDefaultsVersion_type swig_types[799]
#define SWIGTYPE_p_SimModelUnitsVersion_optional swig_types[800]
#define SWIGTYPE_p_SimModelUnitsVersion_traits swig_types[801]
#define SWIGTYPE_p_SimModelUnitsVersion_type swig_types[802]
#define SWIGTYPE_p_SimModelVersion_optional swig_types[803]
#define SWIGTYPE_p_SimModelVersion_traits swig_types[804]
#define SWIGTYPE_p_SimModelVersion_type swig_types[805]
#define SWIGTYPE_p_SimNode_AirFlowPort_Air_In_const_iterator swig_types[806]
#define SWIGTYPE_p_SimNode_AirFlowPort_Air_In_iterator swig_types[807]
#define SWIGTYPE_p_SimNode_AirFlowPort_Air_In_sequence swig_types[808]
#define SWIGTYPE_p_SimNode_AirFlowPort_Air_In_traits swig_types[809]
#define SWIGTYPE_p_SimNode_AirFlowPort_Air_In_type swig_types[810]
#define SWIGTYPE_p_SimNode_AirFlowPort_Air_Out_const_iterator swig_types[811]
#define SWIGTYPE_p_SimNode_AirFlowPort_Air_Out_iterator swig_types[812]
#define SWIGTYPE_p_SimNode_AirFlowPort_Air_Out_sequence swig_types[813]
#define SWIGTYPE_p_SimNode_AirFlowPort_Air_Out_traits swig_types[814]
#define SWIGTYPE_p_SimNode_AirFlowPort_Air_Out_type swig_types[815]
#define SWIGTYPE_p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_const_iterator swig_types[816]
#define SWIGTYPE_p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_iterator swig_types[817]
#define SWIGTYPE_p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence swig_types[818]
#define SWIGTYPE_p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_traits swig_types[819]
#define SWIGTYPE_p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_type swig_types[820]
#define SWIGTYPE_p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_const_iterator swig_types[821]
#define SWIGTYPE_p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_iterator swig_types[822]
#define SWIGTYPE_p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence swig_types[823]
#define SWIGTYPE_p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_traits swig_types[824]
#define SWIGTYPE_p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_type swig_types[825]
#define SWIGTYPE_p_SimNode_Docking_Default_const_iterator swig_types[826]
#define SWIGTYPE_p_SimNode_Docking_Default_iterator swig_types[827]
#define SWIGTYPE_p_SimNode_Docking_Default_sequence swig_types[828]
#define SWIGTYPE_p_SimNode_Docking_Default_traits swig_types[829]
#define SWIGTYPE_p_SimNode_Docking_Default_type swig_types[830]
#define SWIGTYPE_p_SimNode_HotWaterFlowPort_Water_In_const_iterator swig_types[831]
#define SWIGTYPE_p_SimNode_HotWaterFlowPort_Water_In_iterator swig_types[832]
#define SWIGTYPE_p_SimNode_HotWaterFlowPort_Water_In_sequence swig_types[833]
#define SWIGTYPE_p_SimNode_HotWaterFlowPort_Water_In_traits swig_types[834]
#define SWIGTYPE_p_SimNode_HotWaterFlowPort_Water_In_type swig_types[835]
#define SWIGTYPE_p_SimNode_HotWaterFlowPort_Water_Out_const_iterator swig_types[836]
#define SWIGTYPE_p_SimNode_HotWaterFlowPort_Water_Out_iterator swig_types[837]
#define SWIGTYPE_p_SimNode_HotWaterFlowPort_Water_Out_sequence swig_types[838]
#define SWIGTYPE_p_SimNode_HotWaterFlowPort_Water_Out_traits swig_types[839]
#define SWIGTYPE_p_SimNode_HotWaterFlowPort_Water_Out_type swig_types[840]
#define SWIGTYPE_p_SimOrganization_Organization_Default_const_iterator swig_types[841]
#define SWIGTYPE_p_SimOrganization_Organization_Default_iterator swig_types[842]
#define SWIGTYPE_p_SimOrganization_Organization_Default_sequence swig_types[843]
#define SWIGTYPE_p_SimOrganization_Organization_Default_traits swig_types[844]
#define SWIGTYPE_p_SimOrganization_Organization_Default_type swig_types[845]
#define SWIGTYPE_p_SimOwnerHistory_Default_Default_const_iterator swig_types[846]
#define SWIGTYPE_p_SimOwnerHistory_Default_Default_iterator swig_types[847]
#define SWIGTYPE_p_SimOwnerHistory_Default_Default_sequence swig_types[848]
#define SWIGTYPE_p_SimOwnerHistory_Default_Default_traits swig_types[849]
#define SWIGTYPE_p_SimOwnerHistory_Default_Default_type swig_types[850]
#define SWIGTYPE_p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_const_iterator swig_types[851]
#define SWIGTYPE_p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_iterator swig_types[852]
#define SWIGTYPE_p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence swig_types[853]
#define SWIGTYPE_p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_traits swig_types[854]
#define SWIGTYPE_p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_type swig_types[855]
#define SWIGTYPE_p_SimPersonAndOrganization_PersonAndOrganization_Default_const_iterator swig_types[856]
#define SWIGTYPE_p_SimPersonAndOrganization_PersonAndOrganization_Default_iterator swig_types[857]
#define SWIGTYPE_p_SimPersonAndOrganization_PersonAndOrganization_Default_sequence swig_types[858]
#define SWIGTYPE_p_SimPersonAndOrganization_PersonAndOrganization_Default_traits swig_types[859]
#define SWIGTYPE_p_SimPersonAndOrganization_PersonAndOrganization_Default_type swig_types[860]
#define SWIGTYPE_p_SimPerson_Person_Default_const_iterator swig_types[861]
#define SWIGTYPE_p_SimPerson_Person_Default_iterator swig_types[862]
#define SWIGTYPE_p_SimPerson_Person_Default_sequence swig_types[863]
#define SWIGTYPE_p_SimPerson_Person_Default_traits swig_types[864]
#define SWIGTYPE_p_SimPerson_Person_Default_type swig_types[865]
#define SWIGTYPE_p_SimPlacement_Axis2Placement2D_Default_const_iterator swig_types[866]
#define SWIGTYPE_p_SimPlacement_Axis2Placement2D_Default_iterator swig_types[867]
#define SWIGTYPE_p_SimPlacement_Axis2Placement2D_Default_sequence swig_types[868]
#define SWIGTYPE_p_SimPlacement_Axis2Placement2D_Default_traits swig_types[869]
#define SWIGTYPE_p_SimPlacement_Axis2Placement2D_Default_type swig_types[870]
#define SWIGTYPE_p_SimPlacement_Axis2Placement3D_Default_const_iterator swig_types[871]
#define SWIGTYPE_p_SimPlacement_Axis2Placement3D_Default_iterator swig_types[872]
#define SWIGTYPE_p_SimPlacement_Axis2Placement3D_Default_sequence swig_types[873]
#define SWIGTYPE_p_SimPlacement_Axis2Placement3D_Default_traits swig_types[874]
#define SWIGTYPE_p_SimPlacement_Axis2Placement3D_Default_type swig_types[875]
#define SWIGTYPE_p_SimPresentationLayerAssignment_Default_Default_const_iterator swig_types[876]
#define SWIGTYPE_p_SimPresentationLayerAssignment_Default_Default_iterator swig_types[877]
#define SWIGTYPE_p_SimPresentationLayerAssignment_Default_Default_sequence swig_types[878]
#define SWIGTYPE_p_SimPresentationLayerAssignment_Default_Default_traits swig_types[879]
#define SWIGTYPE_p_SimPresentationLayerAssignment_Default_Default_type swig_types[880]
#define SWIGTYPE_p_SimProject_Project_DesignAlternative_const_iterator swig_types[881]
#define SWIGTYPE_p_SimProject_Project_DesignAlternative_iterator swig_types[882]
#define SWIGTYPE_p_SimProject_Project_DesignAlternative_sequence swig_types[883]
#define SWIGTYPE_p_SimProject_Project_DesignAlternative_traits swig_types[884]
#define SWIGTYPE_p_SimProject_Project_DesignAlternative_type swig_types[885]
#define SWIGTYPE_p_SimRepresentationMap_RepresentationMap_Default_const_iterator swig_types[886]
#define SWIGTYPE_p_SimRepresentationMap_RepresentationMap_Default_iterator swig_types[887]
#define SWIGTYPE_p_SimRepresentationMap_RepresentationMap_Default_sequence swig_types[888]
#define SWIGTYPE_p_SimRepresentationMap_RepresentationMap_Default_traits swig_types[889]
#define SWIGTYPE_p_SimRepresentationMap_RepresentationMap_Default_type swig_types[890]
#define SWIGTYPE_p_SimSIUnitType_SiUnit_Default_const_iterator swig_types[891]
#define SWIGTYPE_p_SimSIUnitType_SiUnit_Default_iterator swig_types[892]
#define SWIGTYPE_p_SimSIUnitType_SiUnit_Default_sequence swig_types[893]
#define SWIGTYPE_p_SimSIUnitType_SiUnit_Default_traits swig_types[894]
#define SWIGTYPE_p_SimSIUnitType_SiUnit_Default_type swig_types[895]
#define SWIGTYPE_p_SimSensor_TemperatureSensor_DryBulb_const_iterator swig_types[896]
#define SWIGTYPE_p_SimSensor_TemperatureSensor_DryBulb_iterator swig_types[897]
#define SWIGTYPE_p_SimSensor_TemperatureSensor_DryBulb_sequence swig_types[898]
#define SWIGTYPE_p_SimSensor_TemperatureSensor_DryBulb_traits swig_types[899]
#define SWIGTYPE_p_SimSensor_TemperatureSensor_DryBulb_type swig_types[900]
#define SWIGTYPE_p_SimShapeRepresentation_ShapeRepresentation_Default_const_iterator swig_types[901]
#define SWIGTYPE_p_SimShapeRepresentation_ShapeRepresentation_Default_iterator swig_types[902]
#define SWIGTYPE_p_SimShapeRepresentation_ShapeRepresentation_Default_sequence swig_types[903]
#define SWIGTYPE_p_SimShapeRepresentation_ShapeRepresentation_Default_traits swig_types[904]
#define SWIGTYPE_p_SimShapeRepresentation_ShapeRepresentation_Default_type swig_types[905]
#define SWIGTYPE_p_SimSimulationConfiguration_SimulationConfiguration_Default_const_iterator swig_types[906]
#define SWIGTYPE_p_SimSimulationConfiguration_SimulationConfiguration_Default_iterator swig_types[907]
#define SWIGTYPE_p_SimSimulationConfiguration_SimulationConfiguration_Default_sequence swig_types[908]
#define SWIGTYPE_p_SimSimulationConfiguration_SimulationConfiguration_Default_traits swig_types[909]
#define SWIGTYPE_p_SimSimulationConfiguration_SimulationConfiguration_Default_type swig_types[910]
#define SWIGTYPE_p_SimSimulationParameters_HvacDesign_WaterLoopSizing_const_iterator swig_types[911]
#define SWIGTYPE_p_SimSimulationParameters_HvacDesign_WaterLoopSizing_iterator swig_types[912]
#define SWIGTYPE_p_SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence swig_types[913]
#define SWIGTYPE_p_SimSimulationParameters_HvacDesign_WaterLoopSizing_traits swig_types[914]
#define SWIGTYPE_p_SimSimulationParameters_HvacDesign_WaterLoopSizing_type swig_types[915]
#define SWIGTYPE_p_SimSite_BuildingSite_Default_const_iterator swig_types[916]
#define SWIGTYPE_p_SimSite_BuildingSite_Default_iterator swig_types[917]
#define SWIGTYPE_p_SimSite_BuildingSite_Default_sequence swig_types[918]
#define SWIGTYPE_p_SimSite_BuildingSite_Default_traits swig_types[919]
#define SWIGTYPE_p_SimSite_BuildingSite_Default_type swig_types[920]
#define SWIGTYPE_p_SimSlabParams_Slab_Floor_const_iterator swig_types[921]
#define SWIGTYPE_p_SimSlabParams_Slab_Floor_iterator swig_types[922]
#define SWIGTYPE_p_SimSlabParams_Slab_Floor_sequence swig_types[923]
#define SWIGTYPE_p_SimSlabParams_Slab_Floor_traits swig_types[924]
#define SWIGTYPE_p_SimSlabParams_Slab_Floor_type swig_types[925]
#define SWIGTYPE_p_SimSlab_Default_Default_const_iterator swig_types[926]
#define SWIGTYPE_p_SimSlab_Default_Default_iterator swig_types[927]
#define SWIGTYPE_p_SimSlab_Default_Default_sequence swig_types[928]
#define SWIGTYPE_p_SimSlab_Default_Default_traits swig_types[929]
#define SWIGTYPE_p_SimSlab_Default_Default_type swig_types[930]
#define SWIGTYPE_p_SimSlab_Floor_FloorOverEarth_const_iterator swig_types[931]
#define SWIGTYPE_p_SimSlab_Floor_FloorOverEarth_iterator swig_types[932]
#define SWIGTYPE_p_SimSlab_Floor_FloorOverEarth_sequence swig_types[933]
#define SWIGTYPE_p_SimSlab_Floor_FloorOverEarth_traits swig_types[934]
#define SWIGTYPE_p_SimSlab_Floor_FloorOverEarth_type swig_types[935]
#define SWIGTYPE_p_SimSlab_Floor_InterzoneFloor_const_iterator swig_types[936]
#define SWIGTYPE_p_SimSlab_Floor_InterzoneFloor_iterator swig_types[937]
#define SWIGTYPE_p_SimSlab_Floor_InterzoneFloor_sequence swig_types[938]
#define SWIGTYPE_p_SimSlab_Floor_InterzoneFloor_traits swig_types[939]
#define SWIGTYPE_p_SimSlab_Floor_InterzoneFloor_type swig_types[940]
#define SWIGTYPE_p_SimSlab_RoofSlab_RoofUnderAir_const_iterator swig_types[941]
#define SWIGTYPE_p_SimSlab_RoofSlab_RoofUnderAir_iterator swig_types[942]
#define SWIGTYPE_p_SimSlab_RoofSlab_RoofUnderAir_sequence swig_types[943]
#define SWIGTYPE_p_SimSlab_RoofSlab_RoofUnderAir_traits swig_types[944]
#define SWIGTYPE_p_SimSlab_RoofSlab_RoofUnderAir_type swig_types[945]
#define SWIGTYPE_p_SimSoftwareApplication_Default_Default_const_iterator swig_types[946]
#define SWIGTYPE_p_SimSoftwareApplication_Default_Default_iterator swig_types[947]
#define SWIGTYPE_p_SimSoftwareApplication_Default_Default_sequence swig_types[948]
#define SWIGTYPE_p_SimSoftwareApplication_Default_Default_traits swig_types[949]
#define SWIGTYPE_p_SimSoftwareApplication_Default_Default_type swig_types[950]
#define SWIGTYPE_p_SimSolarShade_Fin_Default_const_iterator swig_types[951]
#define SWIGTYPE_p_SimSolarShade_Fin_Default_iterator swig_types[952]
#define SWIGTYPE_p_SimSolarShade_Fin_Default_sequence swig_types[953]
#define SWIGTYPE_p_SimSolarShade_Fin_Default_traits swig_types[954]
#define SWIGTYPE_p_SimSolarShade_Fin_Default_type swig_types[955]
#define SWIGTYPE_p_SimSolarShade_Overhang_Default_const_iterator swig_types[956]
#define SWIGTYPE_p_SimSolarShade_Overhang_Default_iterator swig_types[957]
#define SWIGTYPE_p_SimSolarShade_Overhang_Default_sequence swig_types[958]
#define SWIGTYPE_p_SimSolarShade_Overhang_Default_traits swig_types[959]
#define SWIGTYPE_p_SimSolarShade_Overhang_Default_type swig_types[960]
#define SWIGTYPE_p_SimSpaceBoundary_SecondLevel_SubTypeA_const_iterator swig_types[961]
#define SWIGTYPE_p_SimSpaceBoundary_SecondLevel_SubTypeA_iterator swig_types[962]
#define SWIGTYPE_p_SimSpaceBoundary_SecondLevel_SubTypeA_sequence swig_types[963]
#define SWIGTYPE_p_SimSpaceBoundary_SecondLevel_SubTypeA_traits swig_types[964]
#define SWIGTYPE_p_SimSpaceBoundary_SecondLevel_SubTypeA_type swig_types[965]
#define SWIGTYPE_p_SimSpaceParams_Space_Default_const_iterator swig_types[966]
#define SWIGTYPE_p_SimSpaceParams_Space_Default_iterator swig_types[967]
#define SWIGTYPE_p_SimSpaceParams_Space_Default_sequence swig_types[968]
#define SWIGTYPE_p_SimSpaceParams_Space_Default_traits swig_types[969]
#define SWIGTYPE_p_SimSpaceParams_Space_Default_type swig_types[970]
#define SWIGTYPE_p_SimSpace_Occupied_Default_const_iterator swig_types[971]
#define SWIGTYPE_p_SimSpace_Occupied_Default_iterator swig_types[972]
#define SWIGTYPE_p_SimSpace_Occupied_Default_sequence swig_types[973]
#define SWIGTYPE_p_SimSpace_Occupied_Default_traits swig_types[974]
#define SWIGTYPE_p_SimSpace_Occupied_Default_type swig_types[975]
#define SWIGTYPE_p_SimSpatialZone_ThermalZone_Default_const_iterator swig_types[976]
#define SWIGTYPE_p_SimSpatialZone_ThermalZone_Default_iterator swig_types[977]
#define SWIGTYPE_p_SimSpatialZone_ThermalZone_Default_sequence swig_types[978]
#define SWIGTYPE_p_SimSpatialZone_ThermalZone_Default_traits swig_types[979]
#define SWIGTYPE_p_SimSpatialZone_ThermalZone_Default_type swig_types[980]
#define SWIGTYPE_p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_const_iterator swig_types[981]
#define SWIGTYPE_p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_iterator swig_types[982]
#define SWIGTYPE_p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_sequence swig_types[983]
#define SWIGTYPE_p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_traits swig_types[984]
#define SWIGTYPE_p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_type swig_types[985]
#define SWIGTYPE_p_SimSystem_HvacHotWater_Control_const_iterator swig_types[986]
#define SWIGTYPE_p_SimSystem_HvacHotWater_Control_iterator swig_types[987]
#define SWIGTYPE_p_SimSystem_HvacHotWater_Control_sequence swig_types[988]
#define SWIGTYPE_p_SimSystem_HvacHotWater_Control_traits swig_types[989]
#define SWIGTYPE_p_SimSystem_HvacHotWater_Control_type swig_types[990]
#define SWIGTYPE_p_SimSystem_HvacHotWater_Demand_const_iterator swig_types[991]
#define SWIGTYPE_p_SimSystem_HvacHotWater_Demand_iterator swig_types[992]
#define SWIGTYPE_p_SimSystem_HvacHotWater_Demand_sequence swig_types[993]
#define SWIGTYPE_p_SimSystem_HvacHotWater_Demand_traits swig_types[994]
#define SWIGTYPE_p_SimSystem_HvacHotWater_Demand_type swig_types[995]
#define SWIGTYPE_p_SimSystem_HvacHotWater_FullSystem_const_iterator swig_types[996]
#define SWIGTYPE_p_SimSystem_HvacHotWater_FullSystem_iterator swig_types[997]
#define SWIGTYPE_p_SimSystem_HvacHotWater_FullSystem_sequence swig_types[998]
#define SWIGTYPE_p_SimSystem_HvacHotWater_FullSystem_traits swig_types[999]
#define SWIGTYPE_p_SimSystem_HvacHotWater_FullSystem_type swig_types[1000]
#define SWIGTYPE_p_SimSystem_HvacHotWater_Supply_const_iterator swig_types[1001]
#define SWIGTYPE_p_SimSystem_HvacHotWater_Supply_iterator swig_types[1002]
#define SWIGTYPE_p_SimSystem_HvacHotWater_Supply_sequence swig_types[1003]
#define SWIGTYPE_p_SimSystem_HvacHotWater_Supply_traits swig_types[1004]
#define SWIGTYPE_p_SimSystem_HvacHotWater_Supply_type swig_types[1005]
#define SWIGTYPE_p_SimSystem_ZoneHvacGroup_Control_const_iterator swig_types[1006]
#define SWIGTYPE_p_SimSystem_ZoneHvacGroup_Control_iterator swig_types[1007]
#define SWIGTYPE_p_SimSystem_ZoneHvacGroup_Control_sequence swig_types[1008]
#define SWIGTYPE_p_SimSystem_ZoneHvacGroup_Control_traits swig_types[1009]
#define SWIGTYPE_p_SimSystem_ZoneHvacGroup_Control_type swig_types[1010]
#define SWIGTYPE_p_SimSystem_ZoneHvacGroup_Demand_const_iterator swig_types[1011]
#define SWIGTYPE_p_SimSystem_ZoneHvacGroup_Demand_iterator swig_types[1012]
#define SWIGTYPE_p_SimSystem_ZoneHvacGroup_Demand_sequence swig_types[1013]
#define SWIGTYPE_p_SimSystem_ZoneHvacGroup_Demand_traits swig_types[1014]
#define SWIGTYPE_p_SimSystem_ZoneHvacGroup_Demand_type swig_types[1015]
#define SWIGTYPE_p_SimSystem_ZoneHvacGroup_FullSystem_const_iterator swig_types[1016]
#define SWIGTYPE_p_SimSystem_ZoneHvacGroup_FullSystem_iterator swig_types[1017]
#define SWIGTYPE_p_SimSystem_ZoneHvacGroup_FullSystem_sequence swig_types[1018]
#define SWIGTYPE_p_SimSystem_ZoneHvacGroup_FullSystem_traits swig_types[1019]
#define SWIGTYPE_p_SimSystem_ZoneHvacGroup_FullSystem_type swig_types[1020]
#define SWIGTYPE_p_SimSystem_ZoneHvacGroup_Supply_const_iterator swig_types[1021]
#define SWIGTYPE_p_SimSystem_ZoneHvacGroup_Supply_iterator swig_types[1022]
#define SWIGTYPE_p_SimSystem_ZoneHvacGroup_Supply_sequence swig_types[1023]
#define SWIGTYPE_p_SimSystem_ZoneHvacGroup_Supply_traits swig_types[1024]
#define SWIGTYPE_p_SimSystem_ZoneHvacGroup_Supply_type swig_types[1025]
#define SWIGTYPE_p_SimTemplateConstructions_Constructions_Default_const_iterator swig_types[1026]
#define SWIGTYPE_p_SimTemplateConstructions_Constructions_Default_iterator swig_types[1027]
#define SWIGTYPE_p_SimTemplateConstructions_Constructions_Default_sequence swig_types[1028]
#define SWIGTYPE_p_SimTemplateConstructions_Constructions_Default_traits swig_types[1029]
#define SWIGTYPE_p_SimTemplateConstructions_Constructions_Default_type swig_types[1030]
#define SWIGTYPE_p_SimTemplateLocation_Location_Default_const_iterator swig_types[1031]
#define SWIGTYPE_p_SimTemplateLocation_Location_Default_iterator swig_types[1032]
#define SWIGTYPE_p_SimTemplateLocation_Location_Default_sequence swig_types[1033]
#define SWIGTYPE_p_SimTemplateLocation_Location_Default_traits swig_types[1034]
#define SWIGTYPE_p_SimTemplateLocation_Location_Default_type swig_types[1035]
#define SWIGTYPE_p_SimTemplateZoneConditions_ZoneConditions_Default_const_iterator swig_types[1036]
#define SWIGTYPE_p_SimTemplateZoneConditions_ZoneConditions_Default_iterator swig_types[1037]
#define SWIGTYPE_p_SimTemplateZoneConditions_ZoneConditions_Default_sequence swig_types[1038]
#define SWIGTYPE_p_SimTemplateZoneConditions_ZoneConditions_Default_traits swig_types[1039]
#define SWIGTYPE_p_SimTemplateZoneConditions_ZoneConditions_Default_type swig_types[1040]
#define SWIGTYPE_p_SimTemplateZoneLoads_ZoneLoads_Default_const_iterator swig_types[1041]
#define SWIGTYPE_p_SimTemplateZoneLoads_ZoneLoads_Default_iterator swig_types[1042]
#define SWIGTYPE_p_SimTemplateZoneLoads_ZoneLoads_Default_sequence swig_types[1043]
#define SWIGTYPE_p_SimTemplateZoneLoads_ZoneLoads_Default_traits swig_types[1044]
#define SWIGTYPE_p_SimTemplateZoneLoads_ZoneLoads_Default_type swig_types[1045]
#define SWIGTYPE_p_SimThermalZoneType_ThermalZone_Default_const_iterator swig_types[1046]
#define SWIGTYPE_p_SimThermalZoneType_ThermalZone_Default_iterator swig_types[1047]
#define SWIGTYPE_p_SimThermalZoneType_ThermalZone_Default_sequence swig_types[1048]
#define SWIGTYPE_p_SimThermalZoneType_ThermalZone_Default_traits swig_types[1049]
#define SWIGTYPE_p_SimThermalZoneType_ThermalZone_Default_type swig_types[1050]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Calendar_Configuration_const_iterator swig_types[1051]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Calendar_Configuration_iterator swig_types[1052]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Calendar_Configuration_sequence swig_types[1053]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Calendar_Configuration_traits swig_types[1054]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Calendar_Configuration_type swig_types[1055]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Day_Interval_const_iterator swig_types[1056]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Day_Interval_iterator swig_types[1057]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Day_Interval_sequence swig_types[1058]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Day_Interval_traits swig_types[1059]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Day_Interval_type swig_types[1060]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Limits_Default_const_iterator swig_types[1061]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Limits_Default_iterator swig_types[1062]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Limits_Default_sequence swig_types[1063]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Limits_Default_traits swig_types[1064]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Limits_Default_type swig_types[1065]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Week_Daily_const_iterator swig_types[1066]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Week_Daily_iterator swig_types[1067]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Week_Daily_sequence swig_types[1068]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Week_Daily_traits swig_types[1069]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Week_Daily_type swig_types[1070]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Year_Default_const_iterator swig_types[1071]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Year_Default_iterator swig_types[1072]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Year_Default_sequence swig_types[1073]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Year_Default_traits swig_types[1074]
#define SWIGTYPE_p_SimTimeSeriesSchedule_Year_Default_type swig_types[1075]
#define SWIGTYPE_p_SimUniqueID_optional swig_types[1076]
#define SWIGTYPE_p_SimUniqueID_traits swig_types[1077]
#define SWIGTYPE_p_SimUniqueID_type swig_types[1078]
#define SWIGTYPE_p_SimWallParams_Wall_Default_const_iterator swig_types[1079]
#define SWIGTYPE_p_SimWallParams_Wall_Default_iterator swig_types[1080]
#define SWIGTYPE_p_SimWallParams_Wall_Default_sequence swig_types[1081]
#define SWIGTYPE_p_SimWallParams_Wall_Default_traits swig_types[1082]
#define SWIGTYPE_p_SimWallParams_Wall_Default_type swig_types[1083]
#define SWIGTYPE_p_SimWallType_Wall_Default_const_iterator swig_types[1084]
#define SWIGTYPE_p_SimWallType_Wall_Default_iterator swig_types[1085]
#define SWIGTYPE_p_SimWallType_Wall_Default_sequence swig_types[1086]
#define SWIGTYPE_p_SimWallType_Wall_Default_traits swig_types[1087]
#define SWIGTYPE_p_SimWallType_Wall_Default_type swig_types[1088]
#define SWIGTYPE_p_SimWall_Wall_Default_const_iterator swig_types[1089]
#define SWIGTYPE_p_SimWall_Wall_Default_iterator swig_types[1090]
#define SWIGTYPE_p_SimWall_Wall_Default_sequence swig_types[1091]
#define SWIGTYPE_p_SimWall_Wall_Default_traits swig_types[1092]
#define SWIGTYPE_p_SimWall_Wall_Default_type swig_types[1093]
#define SWIGTYPE_p_SimWall_Wall_ExteriorAboveGrade_const_iterator swig_types[1094]
#define SWIGTYPE_p_SimWall_Wall_ExteriorAboveGrade_iterator swig_types[1095]
#define SWIGTYPE_p_SimWall_Wall_ExteriorAboveGrade_sequence swig_types[1096]
#define SWIGTYPE_p_SimWall_Wall_ExteriorAboveGrade_traits swig_types[1097]
#define SWIGTYPE_p_SimWall_Wall_ExteriorAboveGrade_type swig_types[1098]
#define SWIGTYPE_p_SimWall_Wall_Interior_const_iterator swig_types[1099]
#define SWIGTYPE_p_SimWall_Wall_Interior_iterator swig_types[1100]
#define SWIGTYPE_p_SimWall_Wall_Interior_sequence swig_types[1101]
#define SWIGTYPE_p_SimWall_Wall_Interior_traits swig_types[1102]
#define SWIGTYPE_p_SimWall_Wall_Interior_type swig_types[1103]
#define SWIGTYPE_p_SimWindowArrayParams_WindowArray_Default_const_iterator swig_types[1104]
#define SWIGTYPE_p_SimWindowArrayParams_WindowArray_Default_iterator swig_types[1105]
#define SWIGTYPE_p_SimWindowArrayParams_WindowArray_Default_sequence swig_types[1106]
#define SWIGTYPE_p_SimWindowArrayParams_WindowArray_Default_traits swig_types[1107]
#define SWIGTYPE_p_SimWindowArrayParams_WindowArray_Default_type swig_types[1108]
#define SWIGTYPE_p_SimWindowLiningProps_WindowLiningProps_Default_const_iterator swig_types[1109]
#define SWIGTYPE_p_SimWindowLiningProps_WindowLiningProps_Default_iterator swig_types[1110]
#define SWIGTYPE_p_SimWindowLiningProps_WindowLiningProps_Default_sequence swig_types[1111]
#define SWIGTYPE_p_SimWindowLiningProps_WindowLiningProps_Default_traits swig_types[1112]
#define SWIGTYPE_p_SimWindowLiningProps_WindowLiningProps_Default_type swig_types[1113]
#define SWIGTYPE_p_SimWindowParams_Window_Default_const_iterator swig_types[1114]
#define SWIGTYPE_p_SimWindowParams_Window_Default_iterator swig_types[1115]
#define SWIGTYPE_p_SimWindowParams_Window_Default_sequence swig_types[1116]
#define SWIGTYPE_p_SimWindowParams_Window_Default_traits swig_types[1117]
#define SWIGTYPE_p_SimWindowParams_Window_Default_type swig_types[1118]
#define SWIGTYPE_p_SimWindowType_Window_Default_const_iterator swig_types[1119]
#define SWIGTYPE_p_SimWindowType_Window_Default_iterator swig_types[1120]
#define SWIGTYPE_p_SimWindowType_Window_Default_sequence swig_types[1121]
#define SWIGTYPE_p_SimWindowType_Window_Default_traits swig_types[1122]
#define SWIGTYPE_p_SimWindowType_Window_Default_type swig_types[1123]
#define SWIGTYPE_p_SimWindowType_Window_Exterior_const_iterator swig_types[1124]
#define SWIGTYPE_p_SimWindowType_Window_Exterior_iterator swig_types[1125]
#define SWIGTYPE_p_SimWindowType_Window_Exterior_sequence swig_types[1126]
#define SWIGTYPE_p_SimWindowType_Window_Exterior_traits swig_types[1127]
#define SWIGTYPE_p_SimWindowType_Window_Exterior_type swig_types[1128]
#define SWIGTYPE_p_SimWindowType_Window_Interior_const_iterator swig_types[1129]
#define SWIGTYPE_p_SimWindowType_Window_Interior_iterator swig_types[1130]
#define SWIGTYPE_p_SimWindowType_Window_Interior_sequence swig_types[1131]
#define SWIGTYPE_p_SimWindowType_Window_Interior_traits swig_types[1132]
#define SWIGTYPE_p_SimWindowType_Window_Interior_type swig_types[1133]
#define SWIGTYPE_p_SimWindow_Window_Default_const_iterator swig_types[1134]
#define SWIGTYPE_p_SimWindow_Window_Default_iterator swig_types[1135]
#define SWIGTYPE_p_SimWindow_Window_Default_sequence swig_types[1136]
#define SWIGTYPE_p_SimWindow_Window_Default_traits swig_types[1137]
#define SWIGTYPE_p_SimWindow_Window_Default_type swig_types[1138]
#define SWIGTYPE_p_SimWindow_Window_ExteriorDetailed_const_iterator swig_types[1139]
#define SWIGTYPE_p_SimWindow_Window_ExteriorDetailed_iterator swig_types[1140]
#define SWIGTYPE_p_SimWindow_Window_ExteriorDetailed_sequence swig_types[1141]
#define SWIGTYPE_p_SimWindow_Window_ExteriorDetailed_traits swig_types[1142]
#define SWIGTYPE_p_SimWindow_Window_ExteriorDetailed_type swig_types[1143]
#define SWIGTYPE_p_SimWindow_Window_Exterior_const_iterator swig_types[1144]
#define SWIGTYPE_p_SimWindow_Window_Exterior_iterator swig_types[1145]
#define SWIGTYPE_p_SimWindow_Window_Exterior_sequence swig_types[1146]
#define SWIGTYPE_p_SimWindow_Window_Exterior_traits swig_types[1147]
#define SWIGTYPE_p_SimWindow_Window_Exterior_type swig_types[1148]
#define SWIGTYPE_p_SourceLibraryEntryID_optional swig_types[1149]
#define SWIGTYPE_p_SourceLibraryEntryID_traits swig_types[1150]
#define SWIGTYPE_p_SourceLibraryEntryID_type swig_types[1151]
#define SWIGTYPE_p_SourceLibraryEntryRef_optional swig_types[1152]
#define SWIGTYPE_p_SourceLibraryEntryRef_traits swig_types[1153]
#define SWIGTYPE_p_SourceLibraryEntryRef_type swig_types[1154]
#define SWIGTYPE_p_SourceModelObjectType_optional swig_types[1155]
#define SWIGTYPE_p_SourceModelObjectType_traits swig_types[1156]
#define SWIGTYPE_p_SourceModelObjectType_type swig_types[1157]
#define SWIGTYPE_p_SourceModelSchema_optional swig_types[1158]
#define SWIGTYPE_p_SourceModelSchema_traits swig_types[1159]
#define SWIGTYPE_p_SourceModelSchema_type swig_types[1160]
#define SWIGTYPE_p_Tag_optional swig_types[1161]
#define SWIGTYPE_p_Tag_traits swig_types[1162]
#define SWIGTYPE_p_Tag_type swig_types[1163]
#define SWIGTYPE_p_TemplatesForMembers_optional swig_types[1164]
#define SWIGTYPE_p_TemplatesForMembers_traits swig_types[1165]
#define SWIGTYPE_p_TemplatesForMembers_type swig_types[1166]
#define SWIGTYPE_p_TypeDefCreationParams_optional swig_types[1167]
#define SWIGTYPE_p_TypeDefCreationParams_traits swig_types[1168]
#define SWIGTYPE_p_TypeDefCreationParams_type swig_types[1169]
#define SWIGTYPE_p_TypeDefinition_optional swig_types[1170]
#define SWIGTYPE_p_TypeDefinition_traits swig_types[1171]
#define SWIGTYPE_p_TypeDefinition_type swig_types[1172]
#define SWIGTYPE_p_UnitType_String_optional swig_types[1173]
#define SWIGTYPE_p_UnitType_String_traits swig_types[1174]
#define SWIGTYPE_p_UnitType_String_type swig_types[1175]
#define SWIGTYPE_p_XDirectionX_optional swig_types[1176]
#define SWIGTYPE_p_XDirectionX_traits swig_types[1177]
#define SWIGTYPE_p_XDirectionX_type swig_types[1178]
#define SWIGTYPE_p_XDirectionY_optional swig_types[1179]
#define SWIGTYPE_p_XDirectionY_traits swig_types[1180]
#define SWIGTYPE_p_XDirectionY_type swig_types[1181]
#define SWIGTYPE_p_XDirectionZ_optional swig_types[1182]
#define SWIGTYPE_p_XDirectionZ_traits swig_types[1183]
#define SWIGTYPE_p_XDirectionZ_type swig_types[1184]
#define SWIGTYPE_p__3dHeight_optional swig_types[1185]
#define SWIGTYPE_p__3dHeight_traits swig_types[1186]
#define SWIGTYPE_p__3dHeight_type swig_types[1187]
#define SWIGTYPE_p__3dLength_optional swig_types[1188]
#define SWIGTYPE_p__3dLength_traits swig_types[1189]
#define SWIGTYPE_p__3dLength_type swig_types[1190]
#define SWIGTYPE_p__3dWidth_optional swig_types[1191]
#define SWIGTYPE_p__3dWidth_traits swig_types[1192]
#define SWIGTYPE_p__3dWidth_type swig_types[1193]
#define SWIGTYPE_p_allocator_type swig_types[1194]
#define SWIGTYPE_p_base_const_iterator swig_types[1195]
#define SWIGTYPE_p_base_iterator swig_types[1196]
#define SWIGTYPE_p_base_sequence swig_types[1197]
#define SWIGTYPE_p_base_type swig_types[1198]
#define SWIGTYPE_p_bool swig_types[1199]
#define SWIGTYPE_p_bool_convertible swig_types[1200]
#define SWIGTYPE_p_char swig_types[1201]
#define SWIGTYPE_p_const_iterator swig_types[1202]
#define SWIGTYPE_p_const_reverse_iterator swig_types[1203]
#define SWIGTYPE_p_difference_type swig_types[1204]
#define SWIGTYPE_p_dom_content_optional swig_types[1205]
#define SWIGTYPE_p_double swig_types[1206]
#define SWIGTYPE_p_float swig_types[1207]
#define SWIGTYPE_p_int swig_types[1208]
#define SWIGTYPE_p_iterator swig_types[1209]
#define SWIGTYPE_p_long_long swig_types[1210]
#define SWIGTYPE_p_ptr swig_types[1211]
#define SWIGTYPE_p_reverse_iterator swig_types[1212]
#define SWIGTYPE_p_schema__simxml__MepModel__SimFlowEnergyConverter swig_types[1213]
#define SWIGTYPE_p_schema__simxml__Model__SimModel swig_types[1214]
#define SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimArrayParams swig_types[1215]
#define SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimNode swig_types[1216]
#define SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimPort swig_types[1217]
#define SWIGTYPE_p_schema__simxml__ResourcesGeneral__SimUnitType swig_types[1218]
#define SWIGTYPE_p_schema__simxml__ResourcesGeometry__SimProfileDefinition swig_types[1219]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SelectedPropertyGroups swig_types[1220]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimActorDefinition swig_types[1221]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimAppDefault swig_types[1222]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimBldgModelParams swig_types[1223]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimBuildingElement swig_types[1224]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionControlElement swig_types[1225]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionElement swig_types[1226]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimDistributionFlowElement swig_types[1227]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimElement swig_types[1228]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimFeatureElement swig_types[1229]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem swig_types[1230]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimGroup swig_types[1231]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimObject swig_types[1232]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectDefinition swig_types[1233]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectPlacement swig_types[1234]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimObjectTypeDefinition swig_types[1235]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimPropertySetDefinition swig_types[1236]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentation swig_types[1237]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimRepresentationItem swig_types[1238]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimResourceObject swig_types[1239]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimRoot swig_types[1240]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimSpatialStructureElement swig_types[1241]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimTemplate swig_types[1242]
#define SWIGTYPE_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem swig_types[1243]
#define SWIGTYPE_p_schema__simxml__SimModelCore__doubleList swig_types[1244]
#define SWIGTYPE_p_schema__simxml__SimModelCore__integerList swig_types[1245]
#define SWIGTYPE_p_schema__simxml__SimModelCore__logical swig_types[1246]
#define SWIGTYPE_p_self_ swig_types[1247]
#define SWIGTYPE_p_short swig_types[1248]
#define SWIGTYPE_p_signed_char swig_types[1249]
#define SWIGTYPE_p_size_type swig_types[1250]
#define SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t swig_types[1251]
#define SWIGTYPE_p_std__invalid_argument swig_types[1252]
#define SWIGTYPE_p_std__istream swig_types[1253]
#define SWIGTYPE_p_swig__SwigPyIterator swig_types[1254]
#define SWIGTYPE_p_unsigned_char swig_types[1255]
#define SWIGTYPE_p_unsigned_int swig_types[1256]
#define SWIGTYPE_p_unsigned_long_long swig_types[1257]
#define SWIGTYPE_p_unsigned_short swig_types[1258]
#define SWIGTYPE_p_value_type swig_types[1259]
#define SWIGTYPE_p_xercesc__DOMDocument swig_types[1260]
#define SWIGTYPE_p_xercesc__DOMElement swig_types[1261]
#define SWIGTYPE_p_xercesc__DOMErrorHandler swig_types[1262]
#define SWIGTYPE_p_xercesc__InputSource swig_types[1263]
#define SWIGTYPE_p_xml_schema__dom__auto_ptrT_xercesc__DOMDocument_t swig_types[1264]
#define SWIGTYPE_p_xsd__cxx__tree___type swig_types[1265]
#define SWIGTYPE_p_xsd__cxx__tree__base64_binaryT_char_xsd__cxx__tree__simple_type_t swig_types[1266]
#define SWIGTYPE_p_xsd__cxx__tree__boundsT_char_t swig_types[1267]
#define SWIGTYPE_p_xsd__cxx__tree__bufferT_char_t swig_types[1268]
#define SWIGTYPE_p_xsd__cxx__tree__content_order swig_types[1269]
#define SWIGTYPE_p_xsd__cxx__tree__dateT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[1270]
#define SWIGTYPE_p_xsd__cxx__tree__date_timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[1271]
#define SWIGTYPE_p_xsd__cxx__tree__diagnosticsT_char_t swig_types[1272]
#define SWIGTYPE_p_xsd__cxx__tree__duplicate_idT_char_t swig_types[1273]
#define SWIGTYPE_p_xsd__cxx__tree__durationT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[1274]
#define SWIGTYPE_p_xsd__cxx__tree__entitiesT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__entity_t swig_types[1275]
#define SWIGTYPE_p_xsd__cxx__tree__entityT_char_xsd__cxx__tree__ncname_t swig_types[1276]
#define SWIGTYPE_p_xsd__cxx__tree__errorT_char_t swig_types[1277]
#define SWIGTYPE_p_xsd__cxx__tree__exceptionT_char_t swig_types[1278]
#define SWIGTYPE_p_xsd__cxx__tree__expected_attributeT_char_t swig_types[1279]
#define SWIGTYPE_p_xsd__cxx__tree__expected_elementT_char_t swig_types[1280]
#define SWIGTYPE_p_xsd__cxx__tree__expected_text_contentT_char_t swig_types[1281]
#define SWIGTYPE_p_xsd__cxx__tree__flags swig_types[1282]
#define SWIGTYPE_p_xsd__cxx__tree__gdayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[1283]
#define SWIGTYPE_p_xsd__cxx__tree__gmonthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[1284]
#define SWIGTYPE_p_xsd__cxx__tree__gmonth_dayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[1285]
#define SWIGTYPE_p_xsd__cxx__tree__gyearT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[1286]
#define SWIGTYPE_p_xsd__cxx__tree__gyear_monthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[1287]
#define SWIGTYPE_p_xsd__cxx__tree__hex_binaryT_char_xsd__cxx__tree__simple_type_t swig_types[1288]
#define SWIGTYPE_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t swig_types[1289]
#define SWIGTYPE_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t swig_types[1290]
#define SWIGTYPE_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t swig_types[1291]
#define SWIGTYPE_p_xsd__cxx__tree__languageT_char_xsd__cxx__tree__token_t swig_types[1292]
#define SWIGTYPE_p_xsd__cxx__tree__nameT_char_xsd__cxx__tree__token_t swig_types[1293]
#define SWIGTYPE_p_xsd__cxx__tree__ncnameT_char_xsd__cxx__tree__name_t swig_types[1294]
#define SWIGTYPE_p_xsd__cxx__tree__nmtokenT_char_xsd__cxx__tree__token_t swig_types[1295]
#define SWIGTYPE_p_xsd__cxx__tree__nmtokensT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__nmtoken_t swig_types[1296]
#define SWIGTYPE_p_xsd__cxx__tree__no_prefix_mappingT_char_t swig_types[1297]
#define SWIGTYPE_p_xsd__cxx__tree__no_type_infoT_char_t swig_types[1298]
#define SWIGTYPE_p_xsd__cxx__tree__normalized_stringT_char_xsd__cxx__tree__string_t swig_types[1299]
#define SWIGTYPE_p_xsd__cxx__tree__not_derivedT_char_t swig_types[1300]
#define SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t swig_types[1301]
#define SWIGTYPE_p_xsd__cxx__tree__parsingT_char_t swig_types[1302]
#define SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t swig_types[1303]
#define SWIGTYPE_p_xsd__cxx__tree__qnameT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__uri_xsd__cxx__tree__ncname_t swig_types[1304]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuildingStory_BuildingStory_Default_false_t swig_types[1305]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuilding_Building_Default_false_t swig_types[1306]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_ConnectorList_SimConnections_false_t swig_types[1307]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_EquipmentList_ZoneHvac_false_t swig_types[1308]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_MaterialList_Default_false_t swig_types[1309]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_AirLoopAvailabilityMgrScheme_false_t swig_types[1310]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_DemandManagerScheme_false_t swig_types[1311]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_PlantOperatingScheme_false_t swig_types[1312]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_WaterTempControlScheme_false_t swig_types[1313]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimProject_Project_DesignAlternative_false_t swig_types[1314]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSite_BuildingSite_Default_false_t swig_types[1315]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Default_Default_false_t swig_types[1316]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_FloorOverEarth_false_t swig_types[1317]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_InterzoneFloor_false_t swig_types[1318]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_RoofSlab_RoofUnderAir_false_t swig_types[1319]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Fin_Default_false_t swig_types[1320]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Overhang_Default_false_t swig_types[1321]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpace_Occupied_Default_false_t swig_types[1322]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_Default_false_t swig_types[1323]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_TemplateForZoneGroup_false_t swig_types[1324]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Control_false_t swig_types[1325]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Demand_false_t swig_types[1326]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_FullSystem_false_t swig_types[1327]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Supply_false_t swig_types[1328]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Control_false_t swig_types[1329]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Demand_false_t swig_types[1330]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_FullSystem_false_t swig_types[1331]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Supply_false_t swig_types[1332]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimThermalZoneType_ThermalZone_Default_false_t swig_types[1333]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWallType_Wall_Default_false_t swig_types[1334]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Default_false_t swig_types[1335]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_ExteriorAboveGrade_false_t swig_types[1336]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Interior_false_t swig_types[1337]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Default_false_t swig_types[1338]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Exterior_false_t swig_types[1339]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Interior_false_t swig_types[1340]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t swig_types[1341]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_ExteriorDetailed_false_t swig_types[1342]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Exterior_false_t swig_types[1343]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_SupplyWater_Temperature_false_t swig_types[1344]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_ZoneControlTemperature_Thermostat_false_t swig_types[1345]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_Default_false_t swig_types[1346]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_TemperingValve_false_t swig_types[1347]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Expansion_false_t swig_types[1348]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_false_t swig_types[1349]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Mixed_false_t swig_types[1350]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_false_t swig_types[1351]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Water_false_t swig_types[1352]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Default_Default_false_t swig_types[1353]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Mixer_DemandProxyMixerWater_false_t swig_types[1354]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Splitter_DemandProxySplitterWater_false_t swig_types[1355]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowMover_Pump_VariableSpeedReturn_false_t swig_types[1356]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowPlant_Boiler_BoilerHotWater_false_t swig_types[1357]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowSegment_Pipe_Indoor_false_t swig_types[1358]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimSensor_TemperatureSensor_DryBulb_false_t swig_types[1359]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAddress_Postal_Default_false_t swig_types[1360]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_false_t swig_types[1361]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_false_t swig_types[1362]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponent_false_t swig_types[1363]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacAirLoop_false_t swig_types[1364]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_false_t swig_types[1365]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_false_t swig_types[1366]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_false_t swig_types[1367]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_false_t swig_types[1368]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_false_t swig_types[1369]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_false_t swig_types[1370]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerDemand_false_t swig_types[1371]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_false_t swig_types[1372]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_false_t swig_types[1373]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_AdjacentSite_false_t swig_types[1374]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_SolarObstruction_false_t swig_types[1375]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_Space_Space_false_t swig_types[1376]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_BuildingStory_false_t swig_types[1377]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Building_false_t swig_types[1378]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Project_false_t swig_types[1379]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Site_false_t swig_types[1380]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_false_t swig_types[1381]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_FloorPlenumZone_false_t swig_types[1382]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_ThermalZone_false_t swig_types[1383]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_false_t swig_types[1384]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_false_t swig_types[1385]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_false_t swig_types[1386]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_false_t swig_types[1387]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_false_t swig_types[1388]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_false_t swig_types[1389]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSaveInterval_false_t swig_types[1390]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSave_false_t swig_types[1391]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalPath_false_t swig_types[1392]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalVersion_false_t swig_types[1393]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_MinMonthlyChargeType_false_t swig_types[1394]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppUnitDefault_AppUnitDefault_DatabaseDefault_false_t swig_types[1395]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgSiteParams_BuildingSite_Default_false_t swig_types[1396]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgStoryParams_BuildingStory_Default_false_t swig_types[1397]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryBoma_false_t swig_types[1398]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryOwner_false_t swig_types[1399]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceTypeOwner_false_t swig_types[1400]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_Default_false_t swig_types[1401]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_OmniClass_false_t swig_types[1402]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_HotWaterFlow_Default_false_t swig_types[1403]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_ZoneAirFlow_Default_false_t swig_types[1404]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_AvailabilityManagerScheme_Scheduled_false_t swig_types[1405]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_ControlAndSequencingScheme_HeatingLoad_false_t swig_types[1406]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_false_t swig_types[1407]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointScheme_SingleHeating_false_t swig_types[1408]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDerivedUnitType_DerivedUnit_Default_false_t swig_types[1409]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_In_false_t swig_types[1410]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_Out_false_t swig_types[1411]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_In_false_t swig_types[1412]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_Out_false_t swig_types[1413]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Equipment_Electric_false_t swig_types[1414]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Lights_Default_false_t swig_types[1415]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_People_Default_false_t swig_types[1416]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_DesignDay_Default_false_t swig_types[1417]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_Location_Default_false_t swig_types[1418]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_Default_Default_false_t swig_types[1419]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_GlazingLayerSet_Window_false_t swig_types[1420]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Ceiling_false_t swig_types[1421]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Door_false_t swig_types[1422]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Floor_false_t swig_types[1423]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_InternalSource_false_t swig_types[1424]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Roof_false_t swig_types[1425]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Wall_false_t swig_types[1426]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Default_false_t swig_types[1427]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Thermochromic_false_t swig_types[1428]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_OpaqueMaterialLayer_Default_false_t swig_types[1429]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_Default_Default_false_t swig_types[1430]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Gas_false_t swig_types[1431]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Glazing_false_t swig_types[1432]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_SimpleGlazingSystem_false_t swig_types[1433]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_AirGap_false_t swig_types[1434]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_Default_false_t swig_types[1435]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationContext_Default_false_t swig_types[1436]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationSubContext_Default_false_t swig_types[1437]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_In_false_t swig_types[1438]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_Out_false_t swig_types[1439]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_AirLoop_DigitalSignal_In_false_t swig_types[1440]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_HWLoop_DigitalSignal_In_false_t swig_types[1441]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_Docking_Default_false_t swig_types[1442]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_In_false_t swig_types[1443]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_Out_false_t swig_types[1444]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOrganization_Organization_Default_false_t swig_types[1445]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOwnerHistory_Default_Default_false_t swig_types[1446]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPersonAndOrganization_PersonAndOrganization_Default_false_t swig_types[1447]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPerson_Person_Default_false_t swig_types[1448]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPresentationLayerAssignment_Default_Default_false_t swig_types[1449]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSIUnitType_SiUnit_Default_false_t swig_types[1450]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationConfiguration_SimulationConfiguration_Default_false_t swig_types[1451]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationParameters_HvacDesign_WaterLoopSizing_false_t swig_types[1452]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSlabParams_Slab_Floor_false_t swig_types[1453]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSoftwareApplication_Default_Default_false_t swig_types[1454]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceBoundary_SecondLevel_SubTypeA_false_t swig_types[1455]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceParams_Space_Default_false_t swig_types[1456]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateConstructions_Constructions_Default_false_t swig_types[1457]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateLocation_Location_Default_false_t swig_types[1458]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneConditions_ZoneConditions_Default_false_t swig_types[1459]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneLoads_ZoneLoads_Default_false_t swig_types[1460]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Calendar_Configuration_false_t swig_types[1461]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Day_Interval_false_t swig_types[1462]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Limits_Default_false_t swig_types[1463]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Week_Daily_false_t swig_types[1464]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Year_Default_false_t swig_types[1465]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWallParams_Wall_Default_false_t swig_types[1466]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowArrayParams_WindowArray_Default_false_t swig_types[1467]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowLiningProps_WindowLiningProps_Default_false_t swig_types[1468]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowParams_Window_Default_false_t swig_types[1469]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimArbitraryProfileDef_ArbitraryProfile_Closed_false_t swig_types[1470]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimCartesianTransformOperator_3D_Uniform_false_t swig_types[1471]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_false_t swig_types[1472]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_Default_false_t swig_types[1473]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_Default_false_t swig_types[1474]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_FaceOuterBound_false_t swig_types[1475]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFace_Face_Default_false_t swig_types[1476]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFeatureElementSubtraction_Void_Opening_false_t swig_types[1477]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomBooleanResult_BooleanClippingResult_Default_false_t swig_types[1478]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomCurve_Polyline_Default_false_t swig_types[1479]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_false_t swig_types[1480]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomPoint_Point_CartesianPoint_false_t swig_types[1481]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_FacetedBrep_Default_false_t swig_types[1482]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_false_t swig_types[1483]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_false_t swig_types[1484]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_BoundedSurface_CurveBoundedPlane_false_t swig_types[1485]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_ElementarySurface_Plane_false_t swig_types[1486]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Default_false_t swig_types[1487]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Direction_false_t swig_types[1488]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_AbsolutePlacement_false_t swig_types[1489]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_RelativePlacement_false_t swig_types[1490]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLoop_Loop_PolyLoop_false_t swig_types[1491]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimMappedRepresentationItem_Default_Default_false_t swig_types[1492]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimParameterizedProfileDef_ParameterizedProfile_Rectangle_false_t swig_types[1493]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement2D_Default_false_t swig_types[1494]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement3D_Default_false_t swig_types[1495]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimRepresentationMap_RepresentationMap_Default_false_t swig_types[1496]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimShapeRepresentation_ShapeRepresentation_Default_false_t swig_types[1497]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_BldgCompGroup_ZoneEquipment_false_t swig_types[1498]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_HvacDemandGroup_WaterSystem_false_t swig_types[1499]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneGroup_false_t swig_types[1500]
#define SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneHvacGroup_false_t swig_types[1501]
#define SWIGTYPE_p_xsd__cxx__tree__severity swig_types[1502]
#define SWIGTYPE_p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t swig_types[1503]
#define SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree__type_t_t swig_types[1504]
#define SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t swig_types[1505]
#define SWIGTYPE_p_xsd__cxx__tree__timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t swig_types[1506]
#define SWIGTYPE_p_xsd__cxx__tree__time_zone swig_types[1507]
#define SWIGTYPE_p_xsd__cxx__tree__tokenT_char_xsd__cxx__tree__normalized_string_t swig_types[1508]
#define SWIGTYPE_p_xsd__cxx__tree__unexpected_elementT_char_t swig_types[1509]
#define SWIGTYPE_p_xsd__cxx__tree__unexpected_enumeratorT_char_t swig_types[1510]
#define SWIGTYPE_p_xsd__cxx__tree__uriT_char_xsd__cxx__tree__simple_type_t swig_types[1511]
#define SWIGTYPE_p_xsd__cxx__tree__user_data_keys_templateT_0_t swig_types[1512]
#define SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t swig_types[1513]
static swig_type_info *swig_types[1515];
static swig_module_info swig_module = {swig_types, 1514, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif

/*-----------------------------------------------
              @(target):= _SimModel.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__SimModel

#else
#  define SWIG_init    init_SimModel

#endif
#define SWIG_name    "_SimModel"

#define SWIGVERSION 0x030007 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(_obj);      
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_XINCREF(_obj);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      SWIG_PYTHON_THREAD_END_BLOCK;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XDECREF(_obj);
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#include <string>


#include <stdexcept>


#if defined(__GNUC__)
#  if __GNUC__ == 2 && __GNUC_MINOR <= 96
#     define SWIG_STD_NOMODERN_STL
#  endif
#endif


#include <stddef.h>


#include <iostream>

#if PY_VERSION_HEX >= 0x03020000
# define SWIGPY_SLICE_ARG(obj) ((PyObject*) (obj))
#else
# define SWIGPY_SLICE_ARG(obj) ((PySliceObject*) (obj))
#endif


namespace swig {
  struct stop_iteration {
  };

  struct SwigPyIterator {
  private:
    SwigPtr_PyObject _seq;

  protected:
    SwigPyIterator(PyObject *seq) : _seq(seq)
    {
    }
      
  public:
    virtual ~SwigPyIterator() {}

    // Access iterator method, required by Python
    virtual PyObject *value() const = 0;

    // Forward iterator method, required by Python
    virtual SwigPyIterator *incr(size_t n = 1) = 0;
    
    // Backward iterator method, very common in C++, but not required in Python
    virtual SwigPyIterator *decr(size_t /*n*/ = 1)
    {
      throw stop_iteration();
    }

    // Random access iterator methods, but not required in Python
    virtual ptrdiff_t distance(const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }

    virtual bool equal (const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }
    
    // C++ common/needed methods
    virtual SwigPyIterator *copy() const = 0;

    PyObject *next()     
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      PyObject *obj = value();
      incr();       
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads
      return obj;     
    }

    /* Make an alias for Python 3.x */
    PyObject *__next__()
    {
      return next();
    }

    PyObject *previous()
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      decr();
      PyObject *obj = value();
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads       
      return obj;
    }

    SwigPyIterator *advance(ptrdiff_t n)
    {
      return  (n > 0) ?  incr(n) : decr(-n);
    }
      
    bool operator == (const SwigPyIterator& x)  const
    {
      return equal(x);
    }
      
    bool operator != (const SwigPyIterator& x) const
    {
      return ! operator==(x);
    }
      
    SwigPyIterator& operator += (ptrdiff_t n)
    {
      return *advance(n);
    }

    SwigPyIterator& operator -= (ptrdiff_t n)
    {
      return *advance(-n);
    }
      
    SwigPyIterator* operator + (ptrdiff_t n) const
    {
      return copy()->advance(n);
    }

    SwigPyIterator* operator - (ptrdiff_t n) const
    {
      return copy()->advance(-n);
    }
      
    ptrdiff_t operator - (const SwigPyIterator& x) const
    {
      return x.distance(*this);
    }
      
    static swig_type_info* descriptor() {
      static int init = 0;
      static swig_type_info* desc = 0;
      if (!init) {
	desc = SWIG_TypeQuery("swig::SwigPyIterator *");
	init = 1;
      }	
      return desc;
    }    
  };

#if defined(SWIGPYTHON_BUILTIN)
  inline PyObject* make_output_iterator_builtin (PyObject *pyself)
  {
    Py_INCREF(pyself);
    return pyself;
  }
#endif
}


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
  } else if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else
#endif
  if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
#if PY_VERSION_HEX >= 0x03000000
      {
        long v = PyLong_AsLong(obj);
        if (!PyErr_Occurred()) {
          if (v < 0) {
            return SWIG_OverflowError;
          }
        } else {
          PyErr_Clear();
        }
      }
#endif
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  return res;
}


  #define SWIG_From_long   PyLong_FromLong 


SWIGINTERNINLINE PyObject *
SWIG_From_ptrdiff_t  (ptrdiff_t value)
{    
  return SWIG_From_long  (static_cast< long >(value));
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_ptrdiff_t (PyObject * obj, ptrdiff_t *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
  return res;
}


#include <algorithm>


#include <vector>


#include <utility>


#include <map>


#include <algorithm>


#define SWIG_FILE_WITH_INIT
#include "../SimModel_Dll_lib/framework/simmodel.hxx"
using namespace xsd::cxx::tree;


namespace swig {  
  template <class Type>
  struct noconst_traits {
    typedef Type noconst_type;
  };

  template <class Type>
  struct noconst_traits<const Type> {
    typedef Type noconst_type;
  };

  /*
    type categories
  */
  struct pointer_category { };  
  struct value_category { };

  /*
    General traits that provides type_name and type_info
  */
  template <class Type> struct traits { };

  template <class Type>
  inline const char* type_name() {
    return traits<typename noconst_traits<Type >::noconst_type >::type_name();
  }

  template <class Type> 
  struct traits_info {
    static swig_type_info *type_query(std::string name) {
      name += " *";
      return SWIG_TypeQuery(name.c_str());
    }    
    static swig_type_info *type_info() {
      static swig_type_info *info = type_query(type_name<Type>());
      return info;
    }
  };

  template <class Type>
  inline swig_type_info *type_info() {
    return traits_info<Type>::type_info();
  }

  /*
    Partial specialization for pointers
  */
  template <class Type> struct traits <Type *> {
    typedef pointer_category category;
    static std::string make_ptr_name(const char* name) {
      std::string ptrname = name;
      ptrname += " *";
      return ptrname;
    }    
    static const char* type_name() {
      static std::string name = make_ptr_name(swig::type_name<Type>());
      return name.c_str();
    }
  };

  template <class Type, class Category> 
  struct traits_as { };
 
  template <class Type, class Category> 
  struct traits_check { };

}


namespace swig {  
  /*
    Traits that provides the from method
  */
  template <class Type> struct traits_from_ptr {
    static PyObject *from(Type *val, int owner = 0) {
      return SWIG_InternalNewPointerObj(val, type_info<Type>(), owner);
    }
  };

  template <class Type> struct traits_from {
    static PyObject *from(const Type& val) {
      return traits_from_ptr<Type>::from(new Type(val), 1);
    }
  };

  template <class Type> struct traits_from<Type *> {
    static PyObject *from(Type* val) {
      return traits_from_ptr<Type>::from(val, 0);
    }
  };

  template <class Type> struct traits_from<const Type *> {
    static PyObject *from(const Type* val) {
      return traits_from_ptr<Type>::from(const_cast<Type*>(val), 0);
    }
  };


  template <class Type>
  inline PyObject *from(const Type& val) {
    return traits_from<Type>::from(val);
  }

  template <class Type>
  inline PyObject *from_ptr(Type* val, int owner) {
    return traits_from_ptr<Type>::from(val, owner);
  }

  /*
    Traits that provides the asval/as/check method
  */
  template <class Type>
  struct traits_asptr {   
    static int asptr(PyObject *obj, Type **val) {
      Type *p;
      int res = SWIG_ConvertPtr(obj, (void**)&p, type_info<Type>(), 0);
      if (SWIG_IsOK(res)) {
	if (val) *val = p;
      }
      return res;
    }
  }; 

  template <class Type>
  inline int asptr(PyObject *obj, Type **vptr) {
    return traits_asptr<Type>::asptr(obj, vptr);
  }

  template <class Type> 
  struct traits_asval {
    static int asval(PyObject *obj, Type *val) {
      if (val) {
	Type *p = 0;
	int res = traits_asptr<Type>::asptr(obj, &p);
	if (!SWIG_IsOK(res)) return res;	
	if (p) {
	  typedef typename noconst_traits<Type>::noconst_type noconst_type;
	  *(const_cast<noconst_type*>(val)) = *p;
	  if (SWIG_IsNewObj(res)){
	    delete p;
	    res = SWIG_DelNewMask(res);
	  }
	  return res;
	} else {
	  return SWIG_ERROR;
	}
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };

  template <class Type> struct traits_asval<Type*> {
    static int asval(PyObject *obj, Type **val) {
      if (val) {
        typedef typename noconst_traits<Type>::noconst_type noconst_type;
        noconst_type *p = 0;
        int res = traits_asptr<noconst_type>::asptr(obj,  &p);
        if (SWIG_IsOK(res)) {
          *(const_cast<noconst_type**>(val)) = p;
	}
	return res;
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };
  
  template <class Type>
  inline int asval(PyObject *obj, Type *val) {
    return traits_asval<Type>::asval(obj, val);
  }

  template <class Type> 
  struct traits_as<Type, value_category> {
    static Type as(PyObject *obj, bool throw_error) {
      Type v;
      int res = asval(obj, &v);
      if (!obj || !SWIG_IsOK(res)) {
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
      }
      return v;
    }
  };

  template <class Type> 
  struct traits_as<Type, pointer_category> {
    static Type as(PyObject *obj, bool throw_error) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res) && v) {
	if (SWIG_IsNewObj(res)) {
	  Type r(*v);
	  delete v;
	  return r;
	} else {
	  return *v;
	}
      } else {
	// Uninitialized return value, no Type() constructor required.
	static Type *v_def = (Type*) malloc(sizeof(Type));
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
	memset(v_def,0,sizeof(Type));
	return *v_def;
      }
    }
  };

  template <class Type> 
  struct traits_as<Type*, pointer_category> {
    static Type* as(PyObject *obj, bool throw_error) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res)) {
	return v;
      } else {
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
	return 0;
      }
    }
  };
    
  template <class Type>
  inline Type as(PyObject *obj, bool te = false) {
    return traits_as<Type, typename traits<Type>::category>::as(obj, te);
  }

  template <class Type> 
  struct traits_check<Type, value_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asval(obj, (Type *)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type> 
  struct traits_check<Type, pointer_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asptr(obj, (Type **)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type>
  inline bool check(PyObject *obj) {
    return traits_check<Type, typename traits<Type>::category>::check(obj);
  }
}


#include <functional>

namespace std {
  template <>
  struct less <PyObject *>: public binary_function<PyObject *, PyObject *, bool>
  {
    bool
    operator()(PyObject * v, PyObject *w) const
    { 
      bool res;
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      res = PyObject_RichCompareBool(v, w, Py_LT) ? true : false;
      /* This may fall into a case of inconsistent
               eg. ObjA > ObjX > ObjB
               but ObjA < ObjB
      */
      if( PyErr_Occurred() && PyErr_ExceptionMatches(PyExc_TypeError) )
      {
        /* Objects can't be compared, this mostly occurred in Python 3.0 */
        /* Compare their ptr directly for a workaround */
        res = (v < w);
        PyErr_Clear();
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
      return res;
    }
  };

  template <>
  struct less <swig::SwigPtr_PyObject>: public binary_function<swig::SwigPtr_PyObject, swig::SwigPtr_PyObject, bool>
  {
    bool
    operator()(const swig::SwigPtr_PyObject& v, const swig::SwigPtr_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

  template <>
  struct less <swig::SwigVar_PyObject>: public binary_function<swig::SwigVar_PyObject, swig::SwigVar_PyObject, bool>
  {
    bool
    operator()(const swig::SwigVar_PyObject& v, const swig::SwigVar_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

}

namespace swig {
  template <> struct traits<PyObject *> {
    typedef value_category category;
    static const char* type_name() { return "PyObject *"; }
  };  

  template <>  struct traits_asval<PyObject * > {   
    typedef PyObject * value_type;
    static int asval(PyObject *obj, value_type *val) {
      if (val) *val = obj;
      return SWIG_OK;
    }
  };

  template <> 
  struct traits_check<PyObject *, value_category> {
    static bool check(PyObject *) {
      return true;
    }
  };

  template <>  struct traits_from<PyObject *> {
    typedef PyObject * value_type;
    static PyObject *from(const value_type& val) {
      Py_XINCREF(val);
      return val;
    }
  };
  
}

namespace swig {
  template <class Difference>
  inline size_t
  check_index(Difference i, size_t size, bool insert = false) {
    if ( i < 0 ) {
      if ((size_t) (-i) <= size)
	return (size_t) (i + size);
    } else if ( (size_t) i < size ) {
      return (size_t) i;
    } else if (insert && ((size_t) i == size)) {
      return size;
    }
    throw std::out_of_range("index out of range");
  }

  template <class Difference>
  void
  slice_adjust(Difference i, Difference j, Py_ssize_t step, size_t size, Difference &ii, Difference &jj, bool insert = false) {
    if (step == 0) {
      throw std::invalid_argument("slice step cannot be zero");
    } else if (step > 0) {
      // Required range: 0 <= i < size, 0 <= j < size
      if (i < 0) {
        ii = 0;
      } else if (i < (Difference)size) {
        ii = i;
      } else if (insert && (i >= (Difference)size)) {
        ii = (Difference)size;
      }
      if ( j < 0 ) {
        jj = 0;
      } else {
        jj = (j < (Difference)size) ? j : (Difference)size;
      }
    } else {
      // Required range: -1 <= i < size-1, -1 <= j < size-1
      if (i < -1) {
        ii = -1;
      } else if (i < (Difference) size) {
        ii = i;
      } else if (i >= (Difference)(size-1)) {
        ii = (Difference)(size-1);
      }
      if (j < -1) {
        jj = -1;
      } else {
        jj = (j < (Difference)size ) ? j : (Difference)(size-1);
      }
    }
  }

  template <class Sequence, class Difference>
  inline typename Sequence::iterator
  getpos(Sequence* self, Difference i)  {
    typename Sequence::iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence, class Difference>
  inline typename Sequence::const_iterator
  cgetpos(const Sequence* self, Difference i)  {
    typename Sequence::const_iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence, class Difference>
  inline Sequence*
  getslice(const Sequence* self, Difference i, Difference j, Py_ssize_t step) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj);

    if (step > 0) {
      typename Sequence::const_iterator sb = self->begin();
      typename Sequence::const_iterator se = self->begin();
      std::advance(sb,ii);
      std::advance(se,jj);
      if (step == 1) {
        return new Sequence(sb, se);
      } else {
        Sequence *sequence = new Sequence();
        typename Sequence::const_iterator it = sb;
        while (it!=se) {
          sequence->push_back(*it);
          for (Py_ssize_t c=0; c<step && it!=se; ++c)
            it++;
        }
        return sequence;
      } 
    } else {
      Sequence *sequence = new Sequence();
      if (ii > jj) {
        typename Sequence::const_reverse_iterator sb = self->rbegin();
        typename Sequence::const_reverse_iterator se = self->rbegin();
        std::advance(sb,size-ii-1);
        std::advance(se,size-jj-1);
        typename Sequence::const_reverse_iterator it = sb;
        while (it!=se) {
          sequence->push_back(*it);
          for (Py_ssize_t c=0; c<-step && it!=se; ++c)
            it++;
        }
      }
      return sequence;
    }
  }

  template <class Sequence, class Difference, class InputSeq>
  inline void
  setslice(Sequence* self, Difference i, Difference j, Py_ssize_t step, const InputSeq& is = InputSeq()) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj, true);
    if (step > 0) {
      if (jj < ii)
        jj = ii;
      if (step == 1) {
        size_t ssize = jj - ii;
        if (ssize <= is.size()) {
          // expanding/staying the same size
          typename Sequence::iterator sb = self->begin();
          typename InputSeq::const_iterator isit = is.begin();
          std::advance(sb,ii);
          std::advance(isit, jj - ii);
          self->insert(std::copy(is.begin(), isit, sb), isit, is.end());
        } else {
          // shrinking
          typename Sequence::iterator sb = self->begin();
          typename Sequence::iterator se = self->begin();
          std::advance(sb,ii);
          std::advance(se,jj);
          self->erase(sb,se);
          sb = self->begin();
          std::advance(sb,ii);
          self->insert(sb, is.begin(), is.end());
        }
      } else {
        size_t replacecount = (jj - ii + step - 1) / step;
        if (is.size() != replacecount) {
          char msg[1024];
          sprintf(msg, "attempt to assign sequence of size %lu to extended slice of size %lu", (unsigned long)is.size(), (unsigned long)replacecount);
          throw std::invalid_argument(msg);
        }
        typename Sequence::const_iterator isit = is.begin();
        typename Sequence::iterator it = self->begin();
        std::advance(it,ii);
        for (size_t rc=0; rc<replacecount; ++rc) {
          *it++ = *isit++;
          for (Py_ssize_t c=0; c<(step-1) && it != self->end(); ++c)
            it++;
        }
      }
    } else {
      if (jj > ii)
        jj = ii;
      size_t replacecount = (ii - jj - step - 1) / -step;
      if (is.size() != replacecount) {
        char msg[1024];
        sprintf(msg, "attempt to assign sequence of size %lu to extended slice of size %lu", (unsigned long)is.size(), (unsigned long)replacecount);
        throw std::invalid_argument(msg);
      }
      typename Sequence::const_iterator isit = is.begin();
      typename Sequence::reverse_iterator it = self->rbegin();
      std::advance(it,size-ii-1);
      for (size_t rc=0; rc<replacecount; ++rc) {
        *it++ = *isit++;
        for (Py_ssize_t c=0; c<(-step-1) && it != self->rend(); ++c)
          it++;
      }
    }
  }

  template <class Sequence, class Difference>
  inline void
  delslice(Sequence* self, Difference i, Difference j, Py_ssize_t step) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj, true);
    if (step > 0) {
      if (jj > ii) {
        typename Sequence::iterator sb = self->begin();
        std::advance(sb,ii);
        if (step == 1) {
          typename Sequence::iterator se = self->begin();
          std::advance(se,jj);
          self->erase(sb,se);
        } else {
          typename Sequence::iterator it = sb;
          size_t delcount = (jj - ii + step - 1) / step;
          while (delcount) {
            it = self->erase(it);
            for (Py_ssize_t c=0; c<(step-1) && it != self->end(); ++c)
              it++;
            delcount--;
          }
        }
      }
    } else {
      if (ii > jj) {
        typename Sequence::reverse_iterator sb = self->rbegin();
        std::advance(sb,size-ii-1);
        typename Sequence::reverse_iterator it = sb;
        size_t delcount = (ii - jj - step - 1) / -step;
        while (delcount) {
          it = typename Sequence::reverse_iterator(self->erase((++it).base()));
          for (Py_ssize_t c=0; c<(-step-1) && it != self->rend(); ++c)
            it++;
          delcount--;
        }
      }
    }
  }
}


#if defined(__SUNPRO_CC) && defined(_RWSTD_VER)
#  if !defined(SWIG_NO_STD_NOITERATOR_TRAITS_STL)
#    define SWIG_STD_NOITERATOR_TRAITS_STL
#  endif
#endif

#if !defined(SWIG_STD_NOITERATOR_TRAITS_STL)
#include <iterator>
#else
namespace std {
  template <class Iterator>
  struct iterator_traits {
    typedef ptrdiff_t difference_type;
    typedef typename Iterator::value_type value_type;
  };

  template <class Iterator, class Category,class T, class Reference, class Pointer, class Distance>
  struct iterator_traits<__reverse_bi_iterator<Iterator,Category,T,Reference,Pointer,Distance> > {
    typedef Distance difference_type;
    typedef T value_type;
  };

  template <class T>
  struct iterator_traits<T*> {
    typedef T value_type;
    typedef ptrdiff_t difference_type;
  };

  template<typename _InputIterator>
  inline typename iterator_traits<_InputIterator>::difference_type
  distance(_InputIterator __first, _InputIterator __last)
  {
    typename iterator_traits<_InputIterator>::difference_type __n = 0;
    while (__first != __last) {
      ++__first; ++__n;
    }
    return __n;
  }
}
#endif


namespace swig {
  template<typename OutIterator>
  class SwigPyIterator_T :  public SwigPyIterator
  {
  public:
    typedef OutIterator out_iterator;
    typedef typename std::iterator_traits<out_iterator>::value_type value_type;    
    typedef SwigPyIterator_T<out_iterator> self_type;

    SwigPyIterator_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator(seq), current(curr)
    {
    }

    const out_iterator& get_current() const
    {
      return current;
    }

    
    bool equal (const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return (current == iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }
    
    ptrdiff_t distance(const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return std::distance(current, iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }    
    
  protected:
    out_iterator current;
  };
  
  template <class ValueType>
  struct from_oper 
  {
    typedef const ValueType& argument_type;
    typedef PyObject *result_type;
    result_type operator()(argument_type v) const
    {
      return swig::from(v);
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorOpen_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;
    typedef SwigPyIteratorOpen_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorOpen_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq)
    {
    }
    
    PyObject *value() const {
      return from(static_cast<const value_type&>(*(base::current)));
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	++base::current;
      }
      return this;
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	--base::current;
      }
      return this;
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorClosed_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;    
    typedef SwigPyIteratorClosed_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorClosed_T(out_iterator curr, out_iterator first, out_iterator last, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq), begin(first), end(last)
    {
    }
    
    PyObject *value() const {
      if (base::current == end) {
	throw stop_iteration();
      } else {
	return from(static_cast<const value_type&>(*(base::current)));
      }
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	if (base::current == end) {
	  throw stop_iteration();
	} else {
	  ++base::current;
	}
      }
      return this;
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	if (base::current == begin) {
	  throw stop_iteration();
	} else {
	  --base::current;
	}
      }
      return this;
    }

  private:
    out_iterator begin;
    out_iterator end;
  };

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, const OutIter& begin,const OutIter& end, PyObject *seq = 0)
  {
    return new SwigPyIteratorClosed_T<OutIter>(current, begin, end, seq);
  }

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, PyObject *seq = 0)
  {
    return new SwigPyIteratorOpen_T<OutIter>(current, seq);
  }

}


namespace swig
{
  template <class T>
  struct SwigPySequence_Ref
  {
    SwigPySequence_Ref(PyObject* seq, int index)
      : _seq(seq), _index(index)
    {
    }
    
    operator T () const
    {
      swig::SwigVar_PyObject item = PySequence_GetItem(_seq, _index);
      try {
	return swig::as<T>(item, true);
      } catch (std::exception& e) {
	char msg[1024];
	sprintf(msg, "in sequence element %d ", _index);
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<T>());
	}
	SWIG_Python_AddErrorMsg(msg);
	SWIG_Python_AddErrorMsg(e.what());
	throw;
      }
    }

    SwigPySequence_Ref& operator=(const T& v)
    {
      PySequence_SetItem(_seq, _index, swig::from<T>(v));
      return *this;
    }

  private:
    PyObject* _seq;
    int _index;
  };

  template <class T>
  struct SwigPySequence_ArrowProxy
  {
    SwigPySequence_ArrowProxy(const T& x): m_value(x) {}
    const T* operator->() const { return &m_value; }
    operator const T*() const { return &m_value; }
    T m_value;
  };

  template <class T, class Reference >
  struct SwigPySequence_InputIterator
  {
    typedef SwigPySequence_InputIterator<T, Reference > self;

    typedef std::random_access_iterator_tag iterator_category;
    typedef Reference reference;
    typedef T value_type;
    typedef T* pointer;
    typedef int difference_type;

    SwigPySequence_InputIterator()
    {
    }

    SwigPySequence_InputIterator(PyObject* seq, int index)
      : _seq(seq), _index(index)
    {
    }

    reference operator*() const
    {
      return reference(_seq, _index);
    }

    SwigPySequence_ArrowProxy<T>
    operator->() const {
      return SwigPySequence_ArrowProxy<T>(operator*());
    }

    bool operator==(const self& ri) const
    {
      return (_index == ri._index) && (_seq == ri._seq);
    }

    bool operator!=(const self& ri) const
    {
      return !(operator==(ri));
    }

    self& operator ++ ()
    {
      ++_index;
      return *this;
    }

    self& operator -- ()
    {
      --_index;
      return *this;
    }

    self& operator += (difference_type n)
    {
      _index += n;
      return *this;
    }

    self operator +(difference_type n) const
    {
      return self(_seq, _index + n);
    }

    self& operator -= (difference_type n)
    {
      _index -= n;
      return *this;
    }

    self operator -(difference_type n) const
    {
      return self(_seq, _index - n);
    }

    difference_type operator - (const self& ri) const
    {
      return _index - ri._index;
    }

    bool operator < (const self& ri) const
    {
      return _index < ri._index;
    }

    reference
    operator[](difference_type n) const
    {
      return reference(_seq, _index + n);
    }

  private:
    PyObject* _seq;
    difference_type _index;
  };

  template <class T>
  struct SwigPySequence_Cont
  {
    typedef SwigPySequence_Ref<T> reference;
    typedef const SwigPySequence_Ref<T> const_reference;
    typedef T value_type;
    typedef T* pointer;
    typedef int difference_type;
    typedef int size_type;
    typedef const pointer const_pointer;
    typedef SwigPySequence_InputIterator<T, reference> iterator;
    typedef SwigPySequence_InputIterator<T, const_reference> const_iterator;

    SwigPySequence_Cont(PyObject* seq) : _seq(0)
    {
      if (!PySequence_Check(seq)) {
	throw std::invalid_argument("a sequence is expected");
      }
      _seq = seq;
      Py_INCREF(_seq);
    }

    ~SwigPySequence_Cont()
    {
      Py_XDECREF(_seq);
    }

    size_type size() const
    {
      return static_cast<size_type>(PySequence_Size(_seq));
    }

    bool empty() const
    {
      return size() == 0;
    }

    iterator begin()
    {
      return iterator(_seq, 0);
    }

    const_iterator begin() const
    {
      return const_iterator(_seq, 0);
    }

    iterator end()
    {
      return iterator(_seq, size());
    }

    const_iterator end() const
    {
      return const_iterator(_seq, size());
    }

    reference operator[](difference_type n)
    {
      return reference(_seq, n);
    }

    const_reference operator[](difference_type n)  const
    {
      return const_reference(_seq, n);
    }

    bool check(bool set_err = true) const
    {
      int s = size();
      for (int i = 0; i < s; ++i) {
	swig::SwigVar_PyObject item = PySequence_GetItem(_seq, i);
	if (!swig::check<value_type>(item)) {
	  if (set_err) {
	    char msg[1024];
	    sprintf(msg, "in sequence element %d", i);
	    SWIG_Error(SWIG_RuntimeError, msg);
	  }
	  return false;
	}
      }
      return true;
    }

  private:
    PyObject* _seq;
  };

}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
#if PY_VERSION_HEX>=0x03000000
  if (PyUnicode_Check(obj))
#else  
  if (PyString_Check(obj))
#endif
  {
    char *cstr; Py_ssize_t len;
#if PY_VERSION_HEX>=0x03000000
    if (!alloc && cptr) {
        /* We can't allow converting without allocation, since the internal
           representation of string in Python 3 is UCS-2/UCS-4 but we require
           a UTF-8 representation.
           TODO(bhy) More detailed explanation */
        return SWIG_RuntimeError;
    }
    obj = PyUnicode_AsUTF8String(obj);
    PyBytes_AsStringAndSize(obj, &cstr, &len);
    if(alloc) *alloc = SWIG_NEWOBJ;
#else
    PyString_AsStringAndSize(obj, &cstr, &len);
#endif
    if (cptr) {
      if (alloc) {
	/* 
	   In python the user should not be able to modify the inner
	   string representation. To warranty that, if you define
	   SWIG_PYTHON_SAFE_CSTRINGS, a new/copy of the python string
	   buffer is always returned.

	   The default behavior is just to return the pointer value,
	   so, be careful.
	*/ 
#if defined(SWIG_PYTHON_SAFE_CSTRINGS)
	if (*alloc != SWIG_OLDOBJ) 
#else
	if (*alloc == SWIG_NEWOBJ) 
#endif
	  {
	    *cptr = reinterpret_cast< char* >(memcpy((new char[len + 1]), cstr, sizeof(char)*(len + 1)));
	    *alloc = SWIG_NEWOBJ;
	  }
	else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
        #if PY_VERSION_HEX>=0x03000000
        assert(0); /* Should never reach here in Python 3 */
        #endif
	*cptr = SWIG_Python_str_AsChar(obj);
      }
    }
    if (psize) *psize = len + 1;
#if PY_VERSION_HEX>=0x03000000
    Py_XDECREF(obj);
#endif
    return SWIG_OK;
  } else {
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsPtr_std_string (PyObject * obj, std::string **val) 
{
  char* buf = 0 ; size_t size = 0; int alloc = SWIG_OLDOBJ;
  if (SWIG_IsOK((SWIG_AsCharPtrAndSize(obj, &buf, &size, &alloc)))) {
    if (buf) {
      if (val) *val = new std::string(buf, size - 1);
      if (alloc == SWIG_NEWOBJ) delete[] buf;
      return SWIG_NEWOBJ;
    } else {
      if (val) *val = 0;
      return SWIG_OLDOBJ;
    }
  } else {
    static int init = 0;
    static swig_type_info* descriptor = 0;
    if (!init) {
      descriptor = SWIG_TypeQuery("std::string" " *");
      init = 1;
    }
    if (descriptor) {
      std::string *vptr;
      int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
      if (SWIG_IsOK(res) && val) *val = vptr;
      return res;
    }
  }
  return SWIG_ERROR;
}



/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "SimModel_wrap.h"

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_delete_SwigPyIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SwigPyIterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SwigPyIterator" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_value",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_value" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)((swig::SwigPyIterator const *)arg1)->value();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_incr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_incr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_incr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_incr__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_incr__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SwigPyIterator_incr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::incr(size_t)\n"
    "    swig::SwigPyIterator::incr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_decr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_decr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_decr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_decr__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_decr__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SwigPyIterator_decr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::decr(size_t)\n"
    "    swig::SwigPyIterator::decr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_distance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ptrdiff_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_distance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_distance" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = ((swig::SwigPyIterator const *)arg1)->distance((swig::SwigPyIterator const &)*arg2);
  }
  catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_equal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_equal" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = (bool)((swig::SwigPyIterator const *)arg1)->equal((swig::SwigPyIterator const &)*arg2);
  }
  catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_copy" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_next" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->next();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___next__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator___next__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___next__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->__next__();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_previous(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_previous",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_previous" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->previous();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_advance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_advance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_advance" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_advance" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->advance(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___eq__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator ==((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___ne__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator !=((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___iadd__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___iadd__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator +=(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___isub__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___isub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator -=(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___add__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___add__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator +(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator -(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ptrdiff_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = ((swig::SwigPyIterator const *)arg1)->operator -((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_swig__SwigPyIterator, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_0(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *SwigPyIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_swig__SwigPyIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SimModel_SimAddress_Postal_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAddress_Postal_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAddress_Postal_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAddress_Postal_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAddress_Postal_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAddress_Postal_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAddress_Postal_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAddress_Postal_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAddress_Postal_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAddress_Postal_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAddress_Postal_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAddress_Postal_Default_sequence *) &(arg1)->SimAddress_Postal_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAddress_Postal_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAddress_Postal_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAddress_Postal_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAddress_Postal_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAddress_Postal_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAddress_Postal_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAddress_Postal_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAddress_Postal_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAddress_Postal_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAddress_Postal_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAddress_Postal_Default_sequence * >(argp2);
  (arg1)->SimAddress_Postal_Default((schema::simxml::Model::SimModel::SimAddress_Postal_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAddress_Postal_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAddress_Postal_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAddress_Postal_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAddress_Postal_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAddress_Postal_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAddress_Postal_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAddress_Postal_Default() const\n"
    "    schema::simxml::Model::SimModel::SimAddress_Postal_Default()\n"
    "    schema::simxml::Model::SimModel::SimAddress_Postal_Default(schema::simxml::Model::SimModel::SimAddress_Postal_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence *) &(arg1)->SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence * >(argp2);
  (arg1)->SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary((schema::simxml::Model::SimModel::SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary() const\n"
    "    schema::simxml::Model::SimModel::SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary()\n"
    "    schema::simxml::Model::SimModel::SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary(schema::simxml::Model::SimModel::SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponent__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponent_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponent",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponent" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponent_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_BldgComponentGroup_HvacComponent();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponent_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponent__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponent_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponent",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponent" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponent_sequence *) &(arg1)->SimAppObjNameDefault_BldgComponentGroup_HvacComponent();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponent_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponent__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponent_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponent",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponent" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponent_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponent" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponent_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponent" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponent_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponent_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_BldgComponentGroup_HvacComponent((schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponent_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponent(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponent__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponent__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponent_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponent__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponent'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponent() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponent()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponent(schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponent_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_sequence *) &(arg1)->SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup((schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup(schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacAirLoop__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacAirLoop_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_DistributionSystem_HvacAirLoop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacAirLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacAirLoop_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_DistributionSystem_HvacAirLoop();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacAirLoop_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacAirLoop__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacAirLoop_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_DistributionSystem_HvacAirLoop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacAirLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacAirLoop_sequence *) &(arg1)->SimAppObjNameDefault_DistributionSystem_HvacAirLoop();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacAirLoop_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacAirLoop__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacAirLoop_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_DistributionSystem_HvacAirLoop",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacAirLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacAirLoop_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacAirLoop" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacAirLoop_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacAirLoop" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacAirLoop_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacAirLoop_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_DistributionSystem_HvacAirLoop((schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacAirLoop_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacAirLoop(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacAirLoop__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacAirLoop__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacAirLoop_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacAirLoop__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_DistributionSystem_HvacAirLoop'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacAirLoop() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacAirLoop()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacAirLoop(schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacAirLoop_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_sequence *) &(arg1)->SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop((schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop(schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_sequence *) &(arg1)->SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop((schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop(schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_sequence *) &(arg1)->SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop((schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop(schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_DistributionSystem_HvacSteamLoop();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_sequence *) &(arg1)->SimAppObjNameDefault_DistributionSystem_HvacSteamLoop();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_DistributionSystem_HvacSteamLoop((schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacSteamLoop() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacSteamLoop()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacSteamLoop(schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_DistributionSystem_MixedWaterLoop();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_sequence *) &(arg1)->SimAppObjNameDefault_DistributionSystem_MixedWaterLoop();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_DistributionSystem_MixedWaterLoop((schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_MixedWaterLoop() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_MixedWaterLoop()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_MixedWaterLoop(schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_DistributionSystem_RefrigerationLoop();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_sequence *) &(arg1)->SimAppObjNameDefault_DistributionSystem_RefrigerationLoop();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_DistributionSystem_RefrigerationLoop((schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_RefrigerationLoop() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_RefrigerationLoop()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_RefrigerationLoop(schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerDemand__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerDemand_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerDemand",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerDemand" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerDemand_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_DistributionSystem_SitePowerDemand();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerDemand_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerDemand__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerDemand_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerDemand",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerDemand" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerDemand_sequence *) &(arg1)->SimAppObjNameDefault_DistributionSystem_SitePowerDemand();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerDemand_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerDemand__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerDemand_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerDemand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerDemand" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerDemand_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerDemand" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerDemand_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerDemand" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerDemand_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerDemand_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_DistributionSystem_SitePowerDemand((schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerDemand_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerDemand(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerDemand__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerDemand__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerDemand_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerDemand__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerDemand'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerDemand() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerDemand()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerDemand(schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerDemand_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_DistributionSystem_SitePowerGeneration();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_sequence *) &(arg1)->SimAppObjNameDefault_DistributionSystem_SitePowerGeneration();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_DistributionSystem_SitePowerGeneration((schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerGeneration() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerGeneration()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerGeneration(schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_sequence *) &(arg1)->SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow((schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow(schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SiteContext_AdjacentSite__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_AdjacentSite_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_SiteContext_AdjacentSite",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SiteContext_AdjacentSite" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_AdjacentSite_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_SiteContext_AdjacentSite();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_AdjacentSite_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SiteContext_AdjacentSite__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_AdjacentSite_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_SiteContext_AdjacentSite",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SiteContext_AdjacentSite" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_AdjacentSite_sequence *) &(arg1)->SimAppObjNameDefault_SiteContext_AdjacentSite();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_AdjacentSite_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SiteContext_AdjacentSite__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_AdjacentSite_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_SiteContext_AdjacentSite",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SiteContext_AdjacentSite" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_AdjacentSite_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_SiteContext_AdjacentSite" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_AdjacentSite_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_SiteContext_AdjacentSite" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_AdjacentSite_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_AdjacentSite_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_SiteContext_AdjacentSite((schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_AdjacentSite_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SiteContext_AdjacentSite(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_SiteContext_AdjacentSite__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_SiteContext_AdjacentSite__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_AdjacentSite_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_SiteContext_AdjacentSite__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_SiteContext_AdjacentSite'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_AdjacentSite() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_AdjacentSite()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_AdjacentSite(schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_AdjacentSite_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SiteContext_SolarObstruction__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_SolarObstruction_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_SiteContext_SolarObstruction",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SiteContext_SolarObstruction" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_SolarObstruction_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_SiteContext_SolarObstruction();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_SolarObstruction_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SiteContext_SolarObstruction__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_SolarObstruction_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_SiteContext_SolarObstruction",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SiteContext_SolarObstruction" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_SolarObstruction_sequence *) &(arg1)->SimAppObjNameDefault_SiteContext_SolarObstruction();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_SolarObstruction_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SiteContext_SolarObstruction__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_SolarObstruction_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_SiteContext_SolarObstruction",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SiteContext_SolarObstruction" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_SolarObstruction_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_SiteContext_SolarObstruction" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_SolarObstruction_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_SiteContext_SolarObstruction" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_SolarObstruction_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_SolarObstruction_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_SiteContext_SolarObstruction((schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_SolarObstruction_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SiteContext_SolarObstruction(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_SiteContext_SolarObstruction__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_SiteContext_SolarObstruction__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_SolarObstruction_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_SiteContext_SolarObstruction__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_SiteContext_SolarObstruction'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_SolarObstruction() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_SolarObstruction()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_SolarObstruction(schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_SolarObstruction_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_Space_Space__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_Space_Space_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_Space_Space",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_Space_Space" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_Space_Space_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_Space_Space();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_Space_Space_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_Space_Space__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_Space_Space_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_Space_Space",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_Space_Space" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_Space_Space_sequence *) &(arg1)->SimAppObjNameDefault_Space_Space();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_Space_Space_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_Space_Space__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_Space_Space_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_Space_Space",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_Space_Space" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_Space_Space_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_Space_Space" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_Space_Space_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_Space_Space" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_Space_Space_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_Space_Space_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_Space_Space((schema::simxml::Model::SimModel::SimAppObjNameDefault_Space_Space_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_Space_Space(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_Space_Space__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_Space_Space__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_Space_Space_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_Space_Space__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_Space_Space'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_Space_Space() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_Space_Space()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_Space_Space(schema::simxml::Model::SimModel::SimAppObjNameDefault_Space_Space_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Building__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Building_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_SpatialContainer_Building",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SpatialContainer_Building" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Building_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_SpatialContainer_Building();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Building_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Building__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Building_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_SpatialContainer_Building",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SpatialContainer_Building" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Building_sequence *) &(arg1)->SimAppObjNameDefault_SpatialContainer_Building();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Building_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Building__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Building_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_SpatialContainer_Building",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SpatialContainer_Building" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Building_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_SpatialContainer_Building" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Building_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_SpatialContainer_Building" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Building_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Building_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_SpatialContainer_Building((schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Building_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Building(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Building__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Building__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Building_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Building__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_SpatialContainer_Building'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Building() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Building()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Building(schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Building_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialContainer_BuildingStory__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_BuildingStory_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_SpatialContainer_BuildingStory",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SpatialContainer_BuildingStory" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_BuildingStory_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_SpatialContainer_BuildingStory();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_BuildingStory_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialContainer_BuildingStory__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_BuildingStory_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_SpatialContainer_BuildingStory",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SpatialContainer_BuildingStory" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_BuildingStory_sequence *) &(arg1)->SimAppObjNameDefault_SpatialContainer_BuildingStory();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_BuildingStory_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialContainer_BuildingStory__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_BuildingStory_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_SpatialContainer_BuildingStory",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SpatialContainer_BuildingStory" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_BuildingStory_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_SpatialContainer_BuildingStory" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_BuildingStory_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_SpatialContainer_BuildingStory" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_BuildingStory_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_BuildingStory_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_SpatialContainer_BuildingStory((schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_BuildingStory_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialContainer_BuildingStory(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_SpatialContainer_BuildingStory__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_SpatialContainer_BuildingStory__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_BuildingStory_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_SpatialContainer_BuildingStory__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_SpatialContainer_BuildingStory'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_BuildingStory() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_BuildingStory()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_BuildingStory(schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_BuildingStory_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Project__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Project_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_SpatialContainer_Project",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SpatialContainer_Project" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Project_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_SpatialContainer_Project();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Project_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Project__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Project_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_SpatialContainer_Project",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SpatialContainer_Project" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Project_sequence *) &(arg1)->SimAppObjNameDefault_SpatialContainer_Project();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Project_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Project__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Project_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_SpatialContainer_Project",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SpatialContainer_Project" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Project_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_SpatialContainer_Project" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Project_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_SpatialContainer_Project" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Project_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Project_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_SpatialContainer_Project((schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Project_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Project(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Project__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Project__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Project_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Project__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_SpatialContainer_Project'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Project() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Project()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Project(schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Project_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Site__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Site_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_SpatialContainer_Site",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SpatialContainer_Site" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Site_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_SpatialContainer_Site();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Site_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Site__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Site_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_SpatialContainer_Site",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SpatialContainer_Site" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Site_sequence *) &(arg1)->SimAppObjNameDefault_SpatialContainer_Site();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Site_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Site__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Site_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_SpatialContainer_Site",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SpatialContainer_Site" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Site_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_SpatialContainer_Site" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Site_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_SpatialContainer_Site" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Site_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Site_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_SpatialContainer_Site((schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Site_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Site(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Site__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Site__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Site_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Site__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_SpatialContainer_Site'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Site() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Site()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Site(schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Site_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_SpatialZone_CeilingPlenumZone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_sequence *) &(arg1)->SimAppObjNameDefault_SpatialZone_CeilingPlenumZone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_SpatialZone_CeilingPlenumZone((schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_CeilingPlenumZone() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_CeilingPlenumZone()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_CeilingPlenumZone(schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialZone_FloorPlenumZone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_FloorPlenumZone_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_SpatialZone_FloorPlenumZone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SpatialZone_FloorPlenumZone" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_FloorPlenumZone_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_SpatialZone_FloorPlenumZone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_FloorPlenumZone_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialZone_FloorPlenumZone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_FloorPlenumZone_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_SpatialZone_FloorPlenumZone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SpatialZone_FloorPlenumZone" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_FloorPlenumZone_sequence *) &(arg1)->SimAppObjNameDefault_SpatialZone_FloorPlenumZone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_FloorPlenumZone_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialZone_FloorPlenumZone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_FloorPlenumZone_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_SpatialZone_FloorPlenumZone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SpatialZone_FloorPlenumZone" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_FloorPlenumZone_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_SpatialZone_FloorPlenumZone" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_FloorPlenumZone_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_SpatialZone_FloorPlenumZone" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_FloorPlenumZone_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_FloorPlenumZone_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_SpatialZone_FloorPlenumZone((schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_FloorPlenumZone_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialZone_FloorPlenumZone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_SpatialZone_FloorPlenumZone__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_SpatialZone_FloorPlenumZone__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_FloorPlenumZone_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_SpatialZone_FloorPlenumZone__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_SpatialZone_FloorPlenumZone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_FloorPlenumZone() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_FloorPlenumZone()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_FloorPlenumZone(schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_FloorPlenumZone_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialZone_ThermalZone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_ThermalZone_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_SpatialZone_ThermalZone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SpatialZone_ThermalZone" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_ThermalZone_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_SpatialZone_ThermalZone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_ThermalZone_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialZone_ThermalZone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_ThermalZone_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_SpatialZone_ThermalZone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SpatialZone_ThermalZone" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_ThermalZone_sequence *) &(arg1)->SimAppObjNameDefault_SpatialZone_ThermalZone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_ThermalZone_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialZone_ThermalZone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_ThermalZone_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_SpatialZone_ThermalZone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_SpatialZone_ThermalZone" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_ThermalZone_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_SpatialZone_ThermalZone" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_ThermalZone_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_SpatialZone_ThermalZone" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_ThermalZone_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_ThermalZone_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_SpatialZone_ThermalZone((schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_ThermalZone_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_SpatialZone_ThermalZone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_SpatialZone_ThermalZone__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_SpatialZone_ThermalZone__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_ThermalZone_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_SpatialZone_ThermalZone__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_SpatialZone_ThermalZone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_ThermalZone() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_ThermalZone()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_ThermalZone(schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_ThermalZone_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_sequence *) &(arg1)->SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup((schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup(schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_sequence *) &(arg1)->SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup((schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup(schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_sequence *) &(arg1)->SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup((schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup(schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_sequence *) &(arg1)->SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup((schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup(schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_sequence *) &(arg1)->SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup((schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup(schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_sequence *) &(arg1)->SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_sequence * >(argp2);
  (arg1)->SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup((schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup() const\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup()\n"
    "    schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup(schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppPreferences_AppPreferences_AutoSave__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSave_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppPreferences_AppPreferences_AutoSave",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppPreferences_AppPreferences_AutoSave" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSave_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppPreferences_AppPreferences_AutoSave();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSave_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppPreferences_AppPreferences_AutoSave__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSave_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppPreferences_AppPreferences_AutoSave",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppPreferences_AppPreferences_AutoSave" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSave_sequence *) &(arg1)->SimAppPreferences_AppPreferences_AutoSave();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSave_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppPreferences_AppPreferences_AutoSave__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSave_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppPreferences_AppPreferences_AutoSave",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppPreferences_AppPreferences_AutoSave" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSave_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppPreferences_AppPreferences_AutoSave" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSave_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppPreferences_AppPreferences_AutoSave" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSave_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSave_sequence * >(argp2);
  (arg1)->SimAppPreferences_AppPreferences_AutoSave((schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSave_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppPreferences_AppPreferences_AutoSave(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppPreferences_AppPreferences_AutoSave__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppPreferences_AppPreferences_AutoSave__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSave_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppPreferences_AppPreferences_AutoSave__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppPreferences_AppPreferences_AutoSave'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSave() const\n"
    "    schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSave()\n"
    "    schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSave(schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSave_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppPreferences_AppPreferences_AutoSaveInterval__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSaveInterval_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppPreferences_AppPreferences_AutoSaveInterval",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppPreferences_AppPreferences_AutoSaveInterval" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSaveInterval_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppPreferences_AppPreferences_AutoSaveInterval();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSaveInterval_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppPreferences_AppPreferences_AutoSaveInterval__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSaveInterval_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppPreferences_AppPreferences_AutoSaveInterval",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppPreferences_AppPreferences_AutoSaveInterval" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSaveInterval_sequence *) &(arg1)->SimAppPreferences_AppPreferences_AutoSaveInterval();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSaveInterval_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppPreferences_AppPreferences_AutoSaveInterval__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSaveInterval_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppPreferences_AppPreferences_AutoSaveInterval",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppPreferences_AppPreferences_AutoSaveInterval" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSaveInterval_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppPreferences_AppPreferences_AutoSaveInterval" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSaveInterval_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppPreferences_AppPreferences_AutoSaveInterval" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSaveInterval_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSaveInterval_sequence * >(argp2);
  (arg1)->SimAppPreferences_AppPreferences_AutoSaveInterval((schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSaveInterval_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppPreferences_AppPreferences_AutoSaveInterval(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppPreferences_AppPreferences_AutoSaveInterval__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppPreferences_AppPreferences_AutoSaveInterval__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSaveInterval_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppPreferences_AppPreferences_AutoSaveInterval__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppPreferences_AppPreferences_AutoSaveInterval'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSaveInterval() const\n"
    "    schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSaveInterval()\n"
    "    schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSaveInterval(schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSaveInterval_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppPreferences_AppPreferences_EPlusInstalPath__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalPath_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppPreferences_AppPreferences_EPlusInstalPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppPreferences_AppPreferences_EPlusInstalPath" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalPath_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppPreferences_AppPreferences_EPlusInstalPath();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalPath_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppPreferences_AppPreferences_EPlusInstalPath__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalPath_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppPreferences_AppPreferences_EPlusInstalPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppPreferences_AppPreferences_EPlusInstalPath" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalPath_sequence *) &(arg1)->SimAppPreferences_AppPreferences_EPlusInstalPath();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalPath_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppPreferences_AppPreferences_EPlusInstalPath__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalPath_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppPreferences_AppPreferences_EPlusInstalPath",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppPreferences_AppPreferences_EPlusInstalPath" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalPath_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppPreferences_AppPreferences_EPlusInstalPath" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalPath_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppPreferences_AppPreferences_EPlusInstalPath" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalPath_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalPath_sequence * >(argp2);
  (arg1)->SimAppPreferences_AppPreferences_EPlusInstalPath((schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalPath_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppPreferences_AppPreferences_EPlusInstalPath(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppPreferences_AppPreferences_EPlusInstalPath__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppPreferences_AppPreferences_EPlusInstalPath__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalPath_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppPreferences_AppPreferences_EPlusInstalPath__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppPreferences_AppPreferences_EPlusInstalPath'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalPath() const\n"
    "    schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalPath()\n"
    "    schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalPath(schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalPath_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppPreferences_AppPreferences_EPlusInstalVersion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppPreferences_AppPreferences_EPlusInstalVersion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppPreferences_AppPreferences_EPlusInstalVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppPreferences_AppPreferences_EPlusInstalVersion();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalVersion_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppPreferences_AppPreferences_EPlusInstalVersion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppPreferences_AppPreferences_EPlusInstalVersion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppPreferences_AppPreferences_EPlusInstalVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence *) &(arg1)->SimAppPreferences_AppPreferences_EPlusInstalVersion();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalVersion_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppPreferences_AppPreferences_EPlusInstalVersion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppPreferences_AppPreferences_EPlusInstalVersion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppPreferences_AppPreferences_EPlusInstalVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalVersion_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppPreferences_AppPreferences_EPlusInstalVersion" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppPreferences_AppPreferences_EPlusInstalVersion" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence * >(argp2);
  (arg1)->SimAppPreferences_AppPreferences_EPlusInstalVersion((schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppPreferences_AppPreferences_EPlusInstalVersion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppPreferences_AppPreferences_EPlusInstalVersion__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppPreferences_AppPreferences_EPlusInstalVersion__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalVersion_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppPreferences_AppPreferences_EPlusInstalVersion__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppPreferences_AppPreferences_EPlusInstalVersion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalVersion() const\n"
    "    schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalVersion()\n"
    "    schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalVersion(schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppPreferences_AppPreferences_MinMonthlyChargeType__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppPreferences_AppPreferences_MinMonthlyChargeType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppPreferences_AppPreferences_MinMonthlyChargeType" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppPreferences_AppPreferences_MinMonthlyChargeType();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_MinMonthlyChargeType_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppPreferences_AppPreferences_MinMonthlyChargeType__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppPreferences_AppPreferences_MinMonthlyChargeType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppPreferences_AppPreferences_MinMonthlyChargeType" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence *) &(arg1)->SimAppPreferences_AppPreferences_MinMonthlyChargeType();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_MinMonthlyChargeType_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppPreferences_AppPreferences_MinMonthlyChargeType__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppPreferences_AppPreferences_MinMonthlyChargeType",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppPreferences_AppPreferences_MinMonthlyChargeType" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_MinMonthlyChargeType_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppPreferences_AppPreferences_MinMonthlyChargeType" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppPreferences_AppPreferences_MinMonthlyChargeType" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence * >(argp2);
  (arg1)->SimAppPreferences_AppPreferences_MinMonthlyChargeType((schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppPreferences_AppPreferences_MinMonthlyChargeType(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppPreferences_AppPreferences_MinMonthlyChargeType__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppPreferences_AppPreferences_MinMonthlyChargeType__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_MinMonthlyChargeType_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppPreferences_AppPreferences_MinMonthlyChargeType__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppPreferences_AppPreferences_MinMonthlyChargeType'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_MinMonthlyChargeType() const\n"
    "    schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_MinMonthlyChargeType()\n"
    "    schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_MinMonthlyChargeType(schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppUnitDefault_AppUnitDefault_DatabaseDefault__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppUnitDefault_AppUnitDefault_DatabaseDefault",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppUnitDefault_AppUnitDefault_DatabaseDefault" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimAppUnitDefault_AppUnitDefault_DatabaseDefault();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppUnitDefault_AppUnitDefault_DatabaseDefault_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppUnitDefault_AppUnitDefault_DatabaseDefault__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimAppUnitDefault_AppUnitDefault_DatabaseDefault",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppUnitDefault_AppUnitDefault_DatabaseDefault" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence *) &(arg1)->SimAppUnitDefault_AppUnitDefault_DatabaseDefault();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppUnitDefault_AppUnitDefault_DatabaseDefault_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppUnitDefault_AppUnitDefault_DatabaseDefault__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimAppUnitDefault_AppUnitDefault_DatabaseDefault",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimAppUnitDefault_AppUnitDefault_DatabaseDefault" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppUnitDefault_AppUnitDefault_DatabaseDefault_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimAppUnitDefault_AppUnitDefault_DatabaseDefault" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimAppUnitDefault_AppUnitDefault_DatabaseDefault" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence * >(argp2);
  (arg1)->SimAppUnitDefault_AppUnitDefault_DatabaseDefault((schema::simxml::Model::SimModel::SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimAppUnitDefault_AppUnitDefault_DatabaseDefault(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppUnitDefault_AppUnitDefault_DatabaseDefault__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimAppUnitDefault_AppUnitDefault_DatabaseDefault__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppUnitDefault_AppUnitDefault_DatabaseDefault_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimAppUnitDefault_AppUnitDefault_DatabaseDefault__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimAppUnitDefault_AppUnitDefault_DatabaseDefault'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimAppUnitDefault_AppUnitDefault_DatabaseDefault() const\n"
    "    schema::simxml::Model::SimModel::SimAppUnitDefault_AppUnitDefault_DatabaseDefault()\n"
    "    schema::simxml::Model::SimModel::SimAppUnitDefault_AppUnitDefault_DatabaseDefault(schema::simxml::Model::SimModel::SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimArbitraryProfileDef_ArbitraryProfile_Closed__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimArbitraryProfileDef_ArbitraryProfile_Closed",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimArbitraryProfileDef_ArbitraryProfile_Closed" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimArbitraryProfileDef_ArbitraryProfile_Closed();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimArbitraryProfileDef_ArbitraryProfile_Closed_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimArbitraryProfileDef_ArbitraryProfile_Closed__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimArbitraryProfileDef_ArbitraryProfile_Closed",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimArbitraryProfileDef_ArbitraryProfile_Closed" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence *) &(arg1)->SimArbitraryProfileDef_ArbitraryProfile_Closed();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimArbitraryProfileDef_ArbitraryProfile_Closed_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimArbitraryProfileDef_ArbitraryProfile_Closed__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimArbitraryProfileDef_ArbitraryProfile_Closed",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimArbitraryProfileDef_ArbitraryProfile_Closed" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimArbitraryProfileDef_ArbitraryProfile_Closed_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimArbitraryProfileDef_ArbitraryProfile_Closed" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimArbitraryProfileDef_ArbitraryProfile_Closed" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence * >(argp2);
  (arg1)->SimArbitraryProfileDef_ArbitraryProfile_Closed((schema::simxml::Model::SimModel::SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimArbitraryProfileDef_ArbitraryProfile_Closed(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimArbitraryProfileDef_ArbitraryProfile_Closed__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimArbitraryProfileDef_ArbitraryProfile_Closed__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimArbitraryProfileDef_ArbitraryProfile_Closed_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimArbitraryProfileDef_ArbitraryProfile_Closed__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimArbitraryProfileDef_ArbitraryProfile_Closed'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimArbitraryProfileDef_ArbitraryProfile_Closed() const\n"
    "    schema::simxml::Model::SimModel::SimArbitraryProfileDef_ArbitraryProfile_Closed()\n"
    "    schema::simxml::Model::SimModel::SimArbitraryProfileDef_ArbitraryProfile_Closed(schema::simxml::Model::SimModel::SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimBldgSiteParams_BuildingSite_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimBldgSiteParams_BuildingSite_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimBldgSiteParams_BuildingSite_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimBldgSiteParams_BuildingSite_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimBldgSiteParams_BuildingSite_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimBldgSiteParams_BuildingSite_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgSiteParams_BuildingSite_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimBldgSiteParams_BuildingSite_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimBldgSiteParams_BuildingSite_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimBldgSiteParams_BuildingSite_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimBldgSiteParams_BuildingSite_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimBldgSiteParams_BuildingSite_Default_sequence *) &(arg1)->SimBldgSiteParams_BuildingSite_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgSiteParams_BuildingSite_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimBldgSiteParams_BuildingSite_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimBldgSiteParams_BuildingSite_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimBldgSiteParams_BuildingSite_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimBldgSiteParams_BuildingSite_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgSiteParams_BuildingSite_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimBldgSiteParams_BuildingSite_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimBldgSiteParams_BuildingSite_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimBldgSiteParams_BuildingSite_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimBldgSiteParams_BuildingSite_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimBldgSiteParams_BuildingSite_Default_sequence * >(argp2);
  (arg1)->SimBldgSiteParams_BuildingSite_Default((schema::simxml::Model::SimModel::SimBldgSiteParams_BuildingSite_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimBldgSiteParams_BuildingSite_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimBldgSiteParams_BuildingSite_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimBldgSiteParams_BuildingSite_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgSiteParams_BuildingSite_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimBldgSiteParams_BuildingSite_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimBldgSiteParams_BuildingSite_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimBldgSiteParams_BuildingSite_Default() const\n"
    "    schema::simxml::Model::SimModel::SimBldgSiteParams_BuildingSite_Default()\n"
    "    schema::simxml::Model::SimModel::SimBldgSiteParams_BuildingSite_Default(schema::simxml::Model::SimModel::SimBldgSiteParams_BuildingSite_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimBldgStoryParams_BuildingStory_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimBldgStoryParams_BuildingStory_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimBldgStoryParams_BuildingStory_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimBldgStoryParams_BuildingStory_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimBldgStoryParams_BuildingStory_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimBldgStoryParams_BuildingStory_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgStoryParams_BuildingStory_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimBldgStoryParams_BuildingStory_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimBldgStoryParams_BuildingStory_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimBldgStoryParams_BuildingStory_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimBldgStoryParams_BuildingStory_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimBldgStoryParams_BuildingStory_Default_sequence *) &(arg1)->SimBldgStoryParams_BuildingStory_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgStoryParams_BuildingStory_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimBldgStoryParams_BuildingStory_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimBldgStoryParams_BuildingStory_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimBldgStoryParams_BuildingStory_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimBldgStoryParams_BuildingStory_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgStoryParams_BuildingStory_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimBldgStoryParams_BuildingStory_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimBldgStoryParams_BuildingStory_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimBldgStoryParams_BuildingStory_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimBldgStoryParams_BuildingStory_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimBldgStoryParams_BuildingStory_Default_sequence * >(argp2);
  (arg1)->SimBldgStoryParams_BuildingStory_Default((schema::simxml::Model::SimModel::SimBldgStoryParams_BuildingStory_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimBldgStoryParams_BuildingStory_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimBldgStoryParams_BuildingStory_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimBldgStoryParams_BuildingStory_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgStoryParams_BuildingStory_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimBldgStoryParams_BuildingStory_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimBldgStoryParams_BuildingStory_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimBldgStoryParams_BuildingStory_Default() const\n"
    "    schema::simxml::Model::SimModel::SimBldgStoryParams_BuildingStory_Default()\n"
    "    schema::simxml::Model::SimModel::SimBldgStoryParams_BuildingStory_Default(schema::simxml::Model::SimModel::SimBldgStoryParams_BuildingStory_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimBuilding_Building_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimBuilding_Building_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimBuilding_Building_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimBuilding_Building_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimBuilding_Building_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimBuilding_Building_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuilding_Building_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimBuilding_Building_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimBuilding_Building_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimBuilding_Building_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimBuilding_Building_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimBuilding_Building_Default_sequence *) &(arg1)->SimBuilding_Building_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuilding_Building_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimBuilding_Building_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimBuilding_Building_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimBuilding_Building_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimBuilding_Building_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuilding_Building_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimBuilding_Building_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimBuilding_Building_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimBuilding_Building_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimBuilding_Building_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimBuilding_Building_Default_sequence * >(argp2);
  (arg1)->SimBuilding_Building_Default((schema::simxml::Model::SimModel::SimBuilding_Building_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimBuilding_Building_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimBuilding_Building_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimBuilding_Building_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuilding_Building_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimBuilding_Building_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimBuilding_Building_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimBuilding_Building_Default() const\n"
    "    schema::simxml::Model::SimModel::SimBuilding_Building_Default()\n"
    "    schema::simxml::Model::SimModel::SimBuilding_Building_Default(schema::simxml::Model::SimModel::SimBuilding_Building_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimBuildingStory_BuildingStory_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimBuildingStory_BuildingStory_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimBuildingStory_BuildingStory_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimBuildingStory_BuildingStory_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimBuildingStory_BuildingStory_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimBuildingStory_BuildingStory_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuildingStory_BuildingStory_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimBuildingStory_BuildingStory_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimBuildingStory_BuildingStory_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimBuildingStory_BuildingStory_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimBuildingStory_BuildingStory_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimBuildingStory_BuildingStory_Default_sequence *) &(arg1)->SimBuildingStory_BuildingStory_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuildingStory_BuildingStory_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimBuildingStory_BuildingStory_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimBuildingStory_BuildingStory_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimBuildingStory_BuildingStory_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimBuildingStory_BuildingStory_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuildingStory_BuildingStory_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimBuildingStory_BuildingStory_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimBuildingStory_BuildingStory_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimBuildingStory_BuildingStory_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimBuildingStory_BuildingStory_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimBuildingStory_BuildingStory_Default_sequence * >(argp2);
  (arg1)->SimBuildingStory_BuildingStory_Default((schema::simxml::Model::SimModel::SimBuildingStory_BuildingStory_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimBuildingStory_BuildingStory_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimBuildingStory_BuildingStory_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimBuildingStory_BuildingStory_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuildingStory_BuildingStory_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimBuildingStory_BuildingStory_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimBuildingStory_BuildingStory_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimBuildingStory_BuildingStory_Default() const\n"
    "    schema::simxml::Model::SimModel::SimBuildingStory_BuildingStory_Default()\n"
    "    schema::simxml::Model::SimModel::SimBuildingStory_BuildingStory_Default(schema::simxml::Model::SimModel::SimBuildingStory_BuildingStory_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimCartesianTransformOperator_3D_Uniform__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimCartesianTransformOperator_3D_Uniform_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimCartesianTransformOperator_3D_Uniform",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimCartesianTransformOperator_3D_Uniform" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimCartesianTransformOperator_3D_Uniform_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimCartesianTransformOperator_3D_Uniform();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimCartesianTransformOperator_3D_Uniform_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimCartesianTransformOperator_3D_Uniform__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimCartesianTransformOperator_3D_Uniform_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimCartesianTransformOperator_3D_Uniform",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimCartesianTransformOperator_3D_Uniform" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimCartesianTransformOperator_3D_Uniform_sequence *) &(arg1)->SimCartesianTransformOperator_3D_Uniform();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimCartesianTransformOperator_3D_Uniform_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimCartesianTransformOperator_3D_Uniform__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimCartesianTransformOperator_3D_Uniform_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimCartesianTransformOperator_3D_Uniform",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimCartesianTransformOperator_3D_Uniform" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimCartesianTransformOperator_3D_Uniform_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimCartesianTransformOperator_3D_Uniform" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimCartesianTransformOperator_3D_Uniform_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimCartesianTransformOperator_3D_Uniform" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimCartesianTransformOperator_3D_Uniform_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimCartesianTransformOperator_3D_Uniform_sequence * >(argp2);
  (arg1)->SimCartesianTransformOperator_3D_Uniform((schema::simxml::Model::SimModel::SimCartesianTransformOperator_3D_Uniform_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimCartesianTransformOperator_3D_Uniform(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimCartesianTransformOperator_3D_Uniform__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimCartesianTransformOperator_3D_Uniform__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimCartesianTransformOperator_3D_Uniform_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimCartesianTransformOperator_3D_Uniform__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimCartesianTransformOperator_3D_Uniform'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimCartesianTransformOperator_3D_Uniform() const\n"
    "    schema::simxml::Model::SimModel::SimCartesianTransformOperator_3D_Uniform()\n"
    "    schema::simxml::Model::SimModel::SimCartesianTransformOperator_3D_Uniform(schema::simxml::Model::SimModel::SimCartesianTransformOperator_3D_Uniform_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimClassification_ClassificationReference_SpaceCategoryBoma__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryBoma_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimClassification_ClassificationReference_SpaceCategoryBoma",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimClassification_ClassificationReference_SpaceCategoryBoma" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryBoma_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimClassification_ClassificationReference_SpaceCategoryBoma();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryBoma_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimClassification_ClassificationReference_SpaceCategoryBoma__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryBoma_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimClassification_ClassificationReference_SpaceCategoryBoma",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimClassification_ClassificationReference_SpaceCategoryBoma" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryBoma_sequence *) &(arg1)->SimClassification_ClassificationReference_SpaceCategoryBoma();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryBoma_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimClassification_ClassificationReference_SpaceCategoryBoma__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryBoma_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimClassification_ClassificationReference_SpaceCategoryBoma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimClassification_ClassificationReference_SpaceCategoryBoma" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryBoma_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimClassification_ClassificationReference_SpaceCategoryBoma" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryBoma_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimClassification_ClassificationReference_SpaceCategoryBoma" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryBoma_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryBoma_sequence * >(argp2);
  (arg1)->SimClassification_ClassificationReference_SpaceCategoryBoma((schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryBoma_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimClassification_ClassificationReference_SpaceCategoryBoma(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimClassification_ClassificationReference_SpaceCategoryBoma__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimClassification_ClassificationReference_SpaceCategoryBoma__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryBoma_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimClassification_ClassificationReference_SpaceCategoryBoma__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimClassification_ClassificationReference_SpaceCategoryBoma'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryBoma() const\n"
    "    schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryBoma()\n"
    "    schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryBoma(schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryBoma_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimClassification_ClassificationReference_SpaceCategoryOwner__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryOwner_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimClassification_ClassificationReference_SpaceCategoryOwner",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimClassification_ClassificationReference_SpaceCategoryOwner" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryOwner_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimClassification_ClassificationReference_SpaceCategoryOwner();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryOwner_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimClassification_ClassificationReference_SpaceCategoryOwner__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryOwner_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimClassification_ClassificationReference_SpaceCategoryOwner",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimClassification_ClassificationReference_SpaceCategoryOwner" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryOwner_sequence *) &(arg1)->SimClassification_ClassificationReference_SpaceCategoryOwner();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryOwner_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimClassification_ClassificationReference_SpaceCategoryOwner__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryOwner_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimClassification_ClassificationReference_SpaceCategoryOwner",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimClassification_ClassificationReference_SpaceCategoryOwner" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryOwner_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimClassification_ClassificationReference_SpaceCategoryOwner" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryOwner_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimClassification_ClassificationReference_SpaceCategoryOwner" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryOwner_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryOwner_sequence * >(argp2);
  (arg1)->SimClassification_ClassificationReference_SpaceCategoryOwner((schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryOwner_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimClassification_ClassificationReference_SpaceCategoryOwner(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimClassification_ClassificationReference_SpaceCategoryOwner__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimClassification_ClassificationReference_SpaceCategoryOwner__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryOwner_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimClassification_ClassificationReference_SpaceCategoryOwner__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimClassification_ClassificationReference_SpaceCategoryOwner'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryOwner() const\n"
    "    schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryOwner()\n"
    "    schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryOwner(schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryOwner_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimClassification_ClassificationReference_SpaceTypeOwner__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceTypeOwner_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimClassification_ClassificationReference_SpaceTypeOwner",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimClassification_ClassificationReference_SpaceTypeOwner" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceTypeOwner_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimClassification_ClassificationReference_SpaceTypeOwner();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceTypeOwner_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimClassification_ClassificationReference_SpaceTypeOwner__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceTypeOwner_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimClassification_ClassificationReference_SpaceTypeOwner",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimClassification_ClassificationReference_SpaceTypeOwner" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceTypeOwner_sequence *) &(arg1)->SimClassification_ClassificationReference_SpaceTypeOwner();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceTypeOwner_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimClassification_ClassificationReference_SpaceTypeOwner__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceTypeOwner_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimClassification_ClassificationReference_SpaceTypeOwner",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimClassification_ClassificationReference_SpaceTypeOwner" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceTypeOwner_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimClassification_ClassificationReference_SpaceTypeOwner" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceTypeOwner_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimClassification_ClassificationReference_SpaceTypeOwner" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceTypeOwner_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceTypeOwner_sequence * >(argp2);
  (arg1)->SimClassification_ClassificationReference_SpaceTypeOwner((schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceTypeOwner_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimClassification_ClassificationReference_SpaceTypeOwner(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimClassification_ClassificationReference_SpaceTypeOwner__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimClassification_ClassificationReference_SpaceTypeOwner__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceTypeOwner_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimClassification_ClassificationReference_SpaceTypeOwner__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimClassification_ClassificationReference_SpaceTypeOwner'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceTypeOwner() const\n"
    "    schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceTypeOwner()\n"
    "    schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceTypeOwner(schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceTypeOwner_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimClassification_ClassificationSystem_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimClassification_ClassificationSystem_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimClassification_ClassificationSystem_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimClassification_ClassificationSystem_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimClassification_ClassificationSystem_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimClassification_ClassificationSystem_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimClassification_ClassificationSystem_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_Default_sequence *) &(arg1)->SimClassification_ClassificationSystem_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimClassification_ClassificationSystem_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimClassification_ClassificationSystem_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimClassification_ClassificationSystem_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimClassification_ClassificationSystem_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimClassification_ClassificationSystem_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_Default_sequence * >(argp2);
  (arg1)->SimClassification_ClassificationSystem_Default((schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimClassification_ClassificationSystem_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimClassification_ClassificationSystem_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimClassification_ClassificationSystem_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimClassification_ClassificationSystem_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimClassification_ClassificationSystem_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_Default() const\n"
    "    schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_Default()\n"
    "    schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_Default(schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimClassification_ClassificationSystem_OmniClass__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_OmniClass_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimClassification_ClassificationSystem_OmniClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimClassification_ClassificationSystem_OmniClass" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_OmniClass_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimClassification_ClassificationSystem_OmniClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_OmniClass_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimClassification_ClassificationSystem_OmniClass__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_OmniClass_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimClassification_ClassificationSystem_OmniClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimClassification_ClassificationSystem_OmniClass" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_OmniClass_sequence *) &(arg1)->SimClassification_ClassificationSystem_OmniClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_OmniClass_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimClassification_ClassificationSystem_OmniClass__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_OmniClass_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimClassification_ClassificationSystem_OmniClass",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimClassification_ClassificationSystem_OmniClass" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_OmniClass_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimClassification_ClassificationSystem_OmniClass" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_OmniClass_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimClassification_ClassificationSystem_OmniClass" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_OmniClass_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_OmniClass_sequence * >(argp2);
  (arg1)->SimClassification_ClassificationSystem_OmniClass((schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_OmniClass_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimClassification_ClassificationSystem_OmniClass(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimClassification_ClassificationSystem_OmniClass__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimClassification_ClassificationSystem_OmniClass__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_OmniClass_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimClassification_ClassificationSystem_OmniClass__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimClassification_ClassificationSystem_OmniClass'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_OmniClass() const\n"
    "    schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_OmniClass()\n"
    "    schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_OmniClass(schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_OmniClass_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimConnectedFaceSet_ConnectedFaceSet_ClosedShell();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence *) &(arg1)->SimConnectedFaceSet_ConnectedFaceSet_ClosedShell();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence * >(argp2);
  (arg1)->SimConnectedFaceSet_ConnectedFaceSet_ClosedShell((schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_ClosedShell() const\n"
    "    schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_ClosedShell()\n"
    "    schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_ClosedShell(schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimConnectedFaceSet_ConnectedFaceSet_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimConnectedFaceSet_ConnectedFaceSet_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimConnectedFaceSet_ConnectedFaceSet_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimConnectedFaceSet_ConnectedFaceSet_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimConnectedFaceSet_ConnectedFaceSet_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimConnectedFaceSet_ConnectedFaceSet_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimConnectedFaceSet_ConnectedFaceSet_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_Default_sequence *) &(arg1)->SimConnectedFaceSet_ConnectedFaceSet_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimConnectedFaceSet_ConnectedFaceSet_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimConnectedFaceSet_ConnectedFaceSet_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimConnectedFaceSet_ConnectedFaceSet_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimConnectedFaceSet_ConnectedFaceSet_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimConnectedFaceSet_ConnectedFaceSet_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_Default_sequence * >(argp2);
  (arg1)->SimConnectedFaceSet_ConnectedFaceSet_Default((schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimConnectedFaceSet_ConnectedFaceSet_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimConnectedFaceSet_ConnectedFaceSet_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimConnectedFaceSet_ConnectedFaceSet_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimConnectedFaceSet_ConnectedFaceSet_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimConnectedFaceSet_ConnectedFaceSet_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_Default() const\n"
    "    schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_Default()\n"
    "    schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_Default(schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimConnection_HotWaterFlow_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimConnection_HotWaterFlow_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimConnection_HotWaterFlow_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimConnection_HotWaterFlow_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimConnection_HotWaterFlow_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimConnection_HotWaterFlow_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_HotWaterFlow_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimConnection_HotWaterFlow_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimConnection_HotWaterFlow_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimConnection_HotWaterFlow_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimConnection_HotWaterFlow_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimConnection_HotWaterFlow_Default_sequence *) &(arg1)->SimConnection_HotWaterFlow_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_HotWaterFlow_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimConnection_HotWaterFlow_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimConnection_HotWaterFlow_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimConnection_HotWaterFlow_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimConnection_HotWaterFlow_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_HotWaterFlow_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimConnection_HotWaterFlow_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimConnection_HotWaterFlow_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimConnection_HotWaterFlow_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimConnection_HotWaterFlow_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimConnection_HotWaterFlow_Default_sequence * >(argp2);
  (arg1)->SimConnection_HotWaterFlow_Default((schema::simxml::Model::SimModel::SimConnection_HotWaterFlow_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimConnection_HotWaterFlow_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimConnection_HotWaterFlow_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimConnection_HotWaterFlow_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_HotWaterFlow_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimConnection_HotWaterFlow_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimConnection_HotWaterFlow_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimConnection_HotWaterFlow_Default() const\n"
    "    schema::simxml::Model::SimModel::SimConnection_HotWaterFlow_Default()\n"
    "    schema::simxml::Model::SimModel::SimConnection_HotWaterFlow_Default(schema::simxml::Model::SimModel::SimConnection_HotWaterFlow_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimConnection_ZoneAirFlow_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimConnection_ZoneAirFlow_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimConnection_ZoneAirFlow_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimConnection_ZoneAirFlow_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimConnection_ZoneAirFlow_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimConnection_ZoneAirFlow_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_ZoneAirFlow_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimConnection_ZoneAirFlow_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimConnection_ZoneAirFlow_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimConnection_ZoneAirFlow_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimConnection_ZoneAirFlow_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimConnection_ZoneAirFlow_Default_sequence *) &(arg1)->SimConnection_ZoneAirFlow_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_ZoneAirFlow_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimConnection_ZoneAirFlow_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimConnection_ZoneAirFlow_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimConnection_ZoneAirFlow_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimConnection_ZoneAirFlow_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_ZoneAirFlow_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimConnection_ZoneAirFlow_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimConnection_ZoneAirFlow_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimConnection_ZoneAirFlow_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimConnection_ZoneAirFlow_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimConnection_ZoneAirFlow_Default_sequence * >(argp2);
  (arg1)->SimConnection_ZoneAirFlow_Default((schema::simxml::Model::SimModel::SimConnection_ZoneAirFlow_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimConnection_ZoneAirFlow_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimConnection_ZoneAirFlow_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimConnection_ZoneAirFlow_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_ZoneAirFlow_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimConnection_ZoneAirFlow_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimConnection_ZoneAirFlow_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimConnection_ZoneAirFlow_Default() const\n"
    "    schema::simxml::Model::SimModel::SimConnection_ZoneAirFlow_Default()\n"
    "    schema::simxml::Model::SimModel::SimConnection_ZoneAirFlow_Default(schema::simxml::Model::SimModel::SimConnection_ZoneAirFlow_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimController_SupplyWater_Temperature__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimController_SupplyWater_Temperature_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimController_SupplyWater_Temperature",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimController_SupplyWater_Temperature" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimController_SupplyWater_Temperature_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimController_SupplyWater_Temperature();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_SupplyWater_Temperature_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimController_SupplyWater_Temperature__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimController_SupplyWater_Temperature_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimController_SupplyWater_Temperature",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimController_SupplyWater_Temperature" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimController_SupplyWater_Temperature_sequence *) &(arg1)->SimController_SupplyWater_Temperature();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_SupplyWater_Temperature_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimController_SupplyWater_Temperature__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimController_SupplyWater_Temperature_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimController_SupplyWater_Temperature",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimController_SupplyWater_Temperature" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_SupplyWater_Temperature_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimController_SupplyWater_Temperature" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimController_SupplyWater_Temperature_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimController_SupplyWater_Temperature" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimController_SupplyWater_Temperature_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimController_SupplyWater_Temperature_sequence * >(argp2);
  (arg1)->SimController_SupplyWater_Temperature((schema::simxml::Model::SimModel::SimController_SupplyWater_Temperature_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimController_SupplyWater_Temperature(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimController_SupplyWater_Temperature__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimController_SupplyWater_Temperature__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_SupplyWater_Temperature_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimController_SupplyWater_Temperature__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimController_SupplyWater_Temperature'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimController_SupplyWater_Temperature() const\n"
    "    schema::simxml::Model::SimModel::SimController_SupplyWater_Temperature()\n"
    "    schema::simxml::Model::SimModel::SimController_SupplyWater_Temperature(schema::simxml::Model::SimModel::SimController_SupplyWater_Temperature_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimController_ZoneControlTemperature_Thermostat__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimController_ZoneControlTemperature_Thermostat_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimController_ZoneControlTemperature_Thermostat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimController_ZoneControlTemperature_Thermostat" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimController_ZoneControlTemperature_Thermostat_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimController_ZoneControlTemperature_Thermostat();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_ZoneControlTemperature_Thermostat_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimController_ZoneControlTemperature_Thermostat__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimController_ZoneControlTemperature_Thermostat_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimController_ZoneControlTemperature_Thermostat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimController_ZoneControlTemperature_Thermostat" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimController_ZoneControlTemperature_Thermostat_sequence *) &(arg1)->SimController_ZoneControlTemperature_Thermostat();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_ZoneControlTemperature_Thermostat_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimController_ZoneControlTemperature_Thermostat__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimController_ZoneControlTemperature_Thermostat_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimController_ZoneControlTemperature_Thermostat",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimController_ZoneControlTemperature_Thermostat" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_ZoneControlTemperature_Thermostat_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimController_ZoneControlTemperature_Thermostat" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimController_ZoneControlTemperature_Thermostat_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimController_ZoneControlTemperature_Thermostat" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimController_ZoneControlTemperature_Thermostat_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimController_ZoneControlTemperature_Thermostat_sequence * >(argp2);
  (arg1)->SimController_ZoneControlTemperature_Thermostat((schema::simxml::Model::SimModel::SimController_ZoneControlTemperature_Thermostat_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimController_ZoneControlTemperature_Thermostat(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimController_ZoneControlTemperature_Thermostat__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimController_ZoneControlTemperature_Thermostat__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_ZoneControlTemperature_Thermostat_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimController_ZoneControlTemperature_Thermostat__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimController_ZoneControlTemperature_Thermostat'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimController_ZoneControlTemperature_Thermostat() const\n"
    "    schema::simxml::Model::SimModel::SimController_ZoneControlTemperature_Thermostat()\n"
    "    schema::simxml::Model::SimModel::SimController_ZoneControlTemperature_Thermostat(schema::simxml::Model::SimModel::SimController_ZoneControlTemperature_Thermostat_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimControlScheme_AvailabilityManagerScheme_Scheduled__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimControlScheme_AvailabilityManagerScheme_Scheduled",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimControlScheme_AvailabilityManagerScheme_Scheduled" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimControlScheme_AvailabilityManagerScheme_Scheduled();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_AvailabilityManagerScheme_Scheduled_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimControlScheme_AvailabilityManagerScheme_Scheduled__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimControlScheme_AvailabilityManagerScheme_Scheduled",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimControlScheme_AvailabilityManagerScheme_Scheduled" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence *) &(arg1)->SimControlScheme_AvailabilityManagerScheme_Scheduled();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_AvailabilityManagerScheme_Scheduled_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimControlScheme_AvailabilityManagerScheme_Scheduled__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimControlScheme_AvailabilityManagerScheme_Scheduled",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimControlScheme_AvailabilityManagerScheme_Scheduled" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_AvailabilityManagerScheme_Scheduled_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimControlScheme_AvailabilityManagerScheme_Scheduled" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimControlScheme_AvailabilityManagerScheme_Scheduled" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence * >(argp2);
  (arg1)->SimControlScheme_AvailabilityManagerScheme_Scheduled((schema::simxml::Model::SimModel::SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimControlScheme_AvailabilityManagerScheme_Scheduled(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimControlScheme_AvailabilityManagerScheme_Scheduled__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimControlScheme_AvailabilityManagerScheme_Scheduled__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_AvailabilityManagerScheme_Scheduled_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimControlScheme_AvailabilityManagerScheme_Scheduled__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimControlScheme_AvailabilityManagerScheme_Scheduled'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimControlScheme_AvailabilityManagerScheme_Scheduled() const\n"
    "    schema::simxml::Model::SimModel::SimControlScheme_AvailabilityManagerScheme_Scheduled()\n"
    "    schema::simxml::Model::SimModel::SimControlScheme_AvailabilityManagerScheme_Scheduled(schema::simxml::Model::SimModel::SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimControlScheme_ControlAndSequencingScheme_HeatingLoad__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimControlScheme_ControlAndSequencingScheme_HeatingLoad",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimControlScheme_ControlAndSequencingScheme_HeatingLoad" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimControlScheme_ControlAndSequencingScheme_HeatingLoad();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_ControlAndSequencingScheme_HeatingLoad_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimControlScheme_ControlAndSequencingScheme_HeatingLoad__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimControlScheme_ControlAndSequencingScheme_HeatingLoad",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimControlScheme_ControlAndSequencingScheme_HeatingLoad" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence *) &(arg1)->SimControlScheme_ControlAndSequencingScheme_HeatingLoad();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_ControlAndSequencingScheme_HeatingLoad_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimControlScheme_ControlAndSequencingScheme_HeatingLoad__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimControlScheme_ControlAndSequencingScheme_HeatingLoad",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimControlScheme_ControlAndSequencingScheme_HeatingLoad" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_ControlAndSequencingScheme_HeatingLoad_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimControlScheme_ControlAndSequencingScheme_HeatingLoad" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimControlScheme_ControlAndSequencingScheme_HeatingLoad" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence * >(argp2);
  (arg1)->SimControlScheme_ControlAndSequencingScheme_HeatingLoad((schema::simxml::Model::SimModel::SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimControlScheme_ControlAndSequencingScheme_HeatingLoad(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimControlScheme_ControlAndSequencingScheme_HeatingLoad__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimControlScheme_ControlAndSequencingScheme_HeatingLoad__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_ControlAndSequencingScheme_HeatingLoad_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimControlScheme_ControlAndSequencingScheme_HeatingLoad__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimControlScheme_ControlAndSequencingScheme_HeatingLoad'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimControlScheme_ControlAndSequencingScheme_HeatingLoad() const\n"
    "    schema::simxml::Model::SimModel::SimControlScheme_ControlAndSequencingScheme_HeatingLoad()\n"
    "    schema::simxml::Model::SimModel::SimControlScheme_ControlAndSequencingScheme_HeatingLoad(schema::simxml::Model::SimModel::SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimControlScheme_SetpointManagerScheme_ScheduledSetpoint();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence *) &(arg1)->SimControlScheme_SetpointManagerScheme_ScheduledSetpoint();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence * >(argp2);
  (arg1)->SimControlScheme_SetpointManagerScheme_ScheduledSetpoint((schema::simxml::Model::SimModel::SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimControlScheme_SetpointManagerScheme_ScheduledSetpoint() const\n"
    "    schema::simxml::Model::SimModel::SimControlScheme_SetpointManagerScheme_ScheduledSetpoint()\n"
    "    schema::simxml::Model::SimModel::SimControlScheme_SetpointManagerScheme_ScheduledSetpoint(schema::simxml::Model::SimModel::SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimControlScheme_SetpointScheme_SingleHeating__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimControlScheme_SetpointScheme_SingleHeating_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimControlScheme_SetpointScheme_SingleHeating",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimControlScheme_SetpointScheme_SingleHeating" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimControlScheme_SetpointScheme_SingleHeating_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimControlScheme_SetpointScheme_SingleHeating();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointScheme_SingleHeating_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimControlScheme_SetpointScheme_SingleHeating__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimControlScheme_SetpointScheme_SingleHeating_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimControlScheme_SetpointScheme_SingleHeating",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimControlScheme_SetpointScheme_SingleHeating" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimControlScheme_SetpointScheme_SingleHeating_sequence *) &(arg1)->SimControlScheme_SetpointScheme_SingleHeating();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointScheme_SingleHeating_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimControlScheme_SetpointScheme_SingleHeating__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimControlScheme_SetpointScheme_SingleHeating_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimControlScheme_SetpointScheme_SingleHeating",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimControlScheme_SetpointScheme_SingleHeating" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointScheme_SingleHeating_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimControlScheme_SetpointScheme_SingleHeating" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimControlScheme_SetpointScheme_SingleHeating_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimControlScheme_SetpointScheme_SingleHeating" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimControlScheme_SetpointScheme_SingleHeating_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimControlScheme_SetpointScheme_SingleHeating_sequence * >(argp2);
  (arg1)->SimControlScheme_SetpointScheme_SingleHeating((schema::simxml::Model::SimModel::SimControlScheme_SetpointScheme_SingleHeating_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimControlScheme_SetpointScheme_SingleHeating(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimControlScheme_SetpointScheme_SingleHeating__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimControlScheme_SetpointScheme_SingleHeating__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointScheme_SingleHeating_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimControlScheme_SetpointScheme_SingleHeating__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimControlScheme_SetpointScheme_SingleHeating'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimControlScheme_SetpointScheme_SingleHeating() const\n"
    "    schema::simxml::Model::SimModel::SimControlScheme_SetpointScheme_SingleHeating()\n"
    "    schema::simxml::Model::SimModel::SimControlScheme_SetpointScheme_SingleHeating(schema::simxml::Model::SimModel::SimControlScheme_SetpointScheme_SingleHeating_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimDerivedUnitType_DerivedUnit_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimDerivedUnitType_DerivedUnit_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimDerivedUnitType_DerivedUnit_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimDerivedUnitType_DerivedUnit_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimDerivedUnitType_DerivedUnit_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimDerivedUnitType_DerivedUnit_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDerivedUnitType_DerivedUnit_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimDerivedUnitType_DerivedUnit_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimDerivedUnitType_DerivedUnit_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimDerivedUnitType_DerivedUnit_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimDerivedUnitType_DerivedUnit_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimDerivedUnitType_DerivedUnit_Default_sequence *) &(arg1)->SimDerivedUnitType_DerivedUnit_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDerivedUnitType_DerivedUnit_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimDerivedUnitType_DerivedUnit_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimDerivedUnitType_DerivedUnit_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimDerivedUnitType_DerivedUnit_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimDerivedUnitType_DerivedUnit_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDerivedUnitType_DerivedUnit_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimDerivedUnitType_DerivedUnit_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimDerivedUnitType_DerivedUnit_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimDerivedUnitType_DerivedUnit_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimDerivedUnitType_DerivedUnit_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimDerivedUnitType_DerivedUnit_Default_sequence * >(argp2);
  (arg1)->SimDerivedUnitType_DerivedUnit_Default((schema::simxml::Model::SimModel::SimDerivedUnitType_DerivedUnit_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimDerivedUnitType_DerivedUnit_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimDerivedUnitType_DerivedUnit_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimDerivedUnitType_DerivedUnit_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDerivedUnitType_DerivedUnit_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimDerivedUnitType_DerivedUnit_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimDerivedUnitType_DerivedUnit_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimDerivedUnitType_DerivedUnit_Default() const\n"
    "    schema::simxml::Model::SimModel::SimDerivedUnitType_DerivedUnit_Default()\n"
    "    schema::simxml::Model::SimModel::SimDerivedUnitType_DerivedUnit_Default(schema::simxml::Model::SimModel::SimDerivedUnitType_DerivedUnit_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimDistributionPort_AirFlowPort_Air_In__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_In_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimDistributionPort_AirFlowPort_Air_In",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimDistributionPort_AirFlowPort_Air_In" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_In_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimDistributionPort_AirFlowPort_Air_In();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_In_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimDistributionPort_AirFlowPort_Air_In__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_In_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimDistributionPort_AirFlowPort_Air_In",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimDistributionPort_AirFlowPort_Air_In" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_In_sequence *) &(arg1)->SimDistributionPort_AirFlowPort_Air_In();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_In_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimDistributionPort_AirFlowPort_Air_In__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_In_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimDistributionPort_AirFlowPort_Air_In",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimDistributionPort_AirFlowPort_Air_In" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_In_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimDistributionPort_AirFlowPort_Air_In" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_In_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimDistributionPort_AirFlowPort_Air_In" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_In_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_In_sequence * >(argp2);
  (arg1)->SimDistributionPort_AirFlowPort_Air_In((schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_In_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimDistributionPort_AirFlowPort_Air_In(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimDistributionPort_AirFlowPort_Air_In__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimDistributionPort_AirFlowPort_Air_In__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_In_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimDistributionPort_AirFlowPort_Air_In__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimDistributionPort_AirFlowPort_Air_In'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_In() const\n"
    "    schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_In()\n"
    "    schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_In(schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_In_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimDistributionPort_AirFlowPort_Air_Out__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_Out_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimDistributionPort_AirFlowPort_Air_Out",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimDistributionPort_AirFlowPort_Air_Out" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_Out_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimDistributionPort_AirFlowPort_Air_Out();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_Out_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimDistributionPort_AirFlowPort_Air_Out__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_Out_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimDistributionPort_AirFlowPort_Air_Out",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimDistributionPort_AirFlowPort_Air_Out" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_Out_sequence *) &(arg1)->SimDistributionPort_AirFlowPort_Air_Out();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_Out_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimDistributionPort_AirFlowPort_Air_Out__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_Out_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimDistributionPort_AirFlowPort_Air_Out",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimDistributionPort_AirFlowPort_Air_Out" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_Out_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimDistributionPort_AirFlowPort_Air_Out" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_Out_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimDistributionPort_AirFlowPort_Air_Out" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_Out_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_Out_sequence * >(argp2);
  (arg1)->SimDistributionPort_AirFlowPort_Air_Out((schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_Out_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimDistributionPort_AirFlowPort_Air_Out(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimDistributionPort_AirFlowPort_Air_Out__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimDistributionPort_AirFlowPort_Air_Out__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_Out_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimDistributionPort_AirFlowPort_Air_Out__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimDistributionPort_AirFlowPort_Air_Out'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_Out() const\n"
    "    schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_Out()\n"
    "    schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_Out(schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_Out_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimDistributionPort_HotWaterFlowPort_Water_In__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_In_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimDistributionPort_HotWaterFlowPort_Water_In",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimDistributionPort_HotWaterFlowPort_Water_In" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_In_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimDistributionPort_HotWaterFlowPort_Water_In();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_In_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimDistributionPort_HotWaterFlowPort_Water_In__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_In_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimDistributionPort_HotWaterFlowPort_Water_In",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimDistributionPort_HotWaterFlowPort_Water_In" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_In_sequence *) &(arg1)->SimDistributionPort_HotWaterFlowPort_Water_In();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_In_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimDistributionPort_HotWaterFlowPort_Water_In__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_In_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimDistributionPort_HotWaterFlowPort_Water_In",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimDistributionPort_HotWaterFlowPort_Water_In" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_In_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimDistributionPort_HotWaterFlowPort_Water_In" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_In_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimDistributionPort_HotWaterFlowPort_Water_In" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_In_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_In_sequence * >(argp2);
  (arg1)->SimDistributionPort_HotWaterFlowPort_Water_In((schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_In_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimDistributionPort_HotWaterFlowPort_Water_In(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimDistributionPort_HotWaterFlowPort_Water_In__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimDistributionPort_HotWaterFlowPort_Water_In__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_In_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimDistributionPort_HotWaterFlowPort_Water_In__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimDistributionPort_HotWaterFlowPort_Water_In'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_In() const\n"
    "    schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_In()\n"
    "    schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_In(schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_In_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimDistributionPort_HotWaterFlowPort_Water_Out__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_Out_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimDistributionPort_HotWaterFlowPort_Water_Out",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimDistributionPort_HotWaterFlowPort_Water_Out" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_Out_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimDistributionPort_HotWaterFlowPort_Water_Out();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_Out_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimDistributionPort_HotWaterFlowPort_Water_Out__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_Out_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimDistributionPort_HotWaterFlowPort_Water_Out",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimDistributionPort_HotWaterFlowPort_Water_Out" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_Out_sequence *) &(arg1)->SimDistributionPort_HotWaterFlowPort_Water_Out();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_Out_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimDistributionPort_HotWaterFlowPort_Water_Out__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_Out_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimDistributionPort_HotWaterFlowPort_Water_Out",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimDistributionPort_HotWaterFlowPort_Water_Out" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_Out_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimDistributionPort_HotWaterFlowPort_Water_Out" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_Out_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimDistributionPort_HotWaterFlowPort_Water_Out" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_Out_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_Out_sequence * >(argp2);
  (arg1)->SimDistributionPort_HotWaterFlowPort_Water_Out((schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_Out_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimDistributionPort_HotWaterFlowPort_Water_Out(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimDistributionPort_HotWaterFlowPort_Water_Out__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimDistributionPort_HotWaterFlowPort_Water_Out__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_Out_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimDistributionPort_HotWaterFlowPort_Water_Out__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimDistributionPort_HotWaterFlowPort_Water_Out'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_Out() const\n"
    "    schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_Out()\n"
    "    schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_Out(schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_Out_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFace_Face_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFace_Face_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFace_Face_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFace_Face_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFace_Face_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimFace_Face_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFace_Face_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFace_Face_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFace_Face_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFace_Face_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFace_Face_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFace_Face_Default_sequence *) &(arg1)->SimFace_Face_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFace_Face_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFace_Face_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimFace_Face_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimFace_Face_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFace_Face_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFace_Face_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimFace_Face_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFace_Face_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimFace_Face_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFace_Face_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimFace_Face_Default_sequence * >(argp2);
  (arg1)->SimFace_Face_Default((schema::simxml::Model::SimModel::SimFace_Face_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFace_Face_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFace_Face_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFace_Face_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFace_Face_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimFace_Face_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimFace_Face_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimFace_Face_Default() const\n"
    "    schema::simxml::Model::SimModel::SimFace_Face_Default()\n"
    "    schema::simxml::Model::SimModel::SimFace_Face_Default(schema::simxml::Model::SimModel::SimFace_Face_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFaceBound_FaceBound_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFaceBound_FaceBound_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFaceBound_FaceBound_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFaceBound_FaceBound_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFaceBound_FaceBound_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimFaceBound_FaceBound_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFaceBound_FaceBound_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFaceBound_FaceBound_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFaceBound_FaceBound_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFaceBound_FaceBound_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFaceBound_FaceBound_Default_sequence *) &(arg1)->SimFaceBound_FaceBound_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFaceBound_FaceBound_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimFaceBound_FaceBound_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimFaceBound_FaceBound_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFaceBound_FaceBound_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimFaceBound_FaceBound_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFaceBound_FaceBound_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimFaceBound_FaceBound_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFaceBound_FaceBound_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimFaceBound_FaceBound_Default_sequence * >(argp2);
  (arg1)->SimFaceBound_FaceBound_Default((schema::simxml::Model::SimModel::SimFaceBound_FaceBound_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFaceBound_FaceBound_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFaceBound_FaceBound_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFaceBound_FaceBound_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimFaceBound_FaceBound_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimFaceBound_FaceBound_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimFaceBound_FaceBound_Default() const\n"
    "    schema::simxml::Model::SimModel::SimFaceBound_FaceBound_Default()\n"
    "    schema::simxml::Model::SimModel::SimFaceBound_FaceBound_Default(schema::simxml::Model::SimModel::SimFaceBound_FaceBound_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFaceBound_FaceBound_FaceOuterBound__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFaceBound_FaceBound_FaceOuterBound_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFaceBound_FaceBound_FaceOuterBound",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFaceBound_FaceBound_FaceOuterBound" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFaceBound_FaceBound_FaceOuterBound_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimFaceBound_FaceBound_FaceOuterBound();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_FaceOuterBound_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFaceBound_FaceBound_FaceOuterBound__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFaceBound_FaceBound_FaceOuterBound_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFaceBound_FaceBound_FaceOuterBound",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFaceBound_FaceBound_FaceOuterBound" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFaceBound_FaceBound_FaceOuterBound_sequence *) &(arg1)->SimFaceBound_FaceBound_FaceOuterBound();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_FaceOuterBound_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFaceBound_FaceBound_FaceOuterBound__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimFaceBound_FaceBound_FaceOuterBound_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimFaceBound_FaceBound_FaceOuterBound",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFaceBound_FaceBound_FaceOuterBound" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_FaceOuterBound_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimFaceBound_FaceBound_FaceOuterBound" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFaceBound_FaceBound_FaceOuterBound_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimFaceBound_FaceBound_FaceOuterBound" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFaceBound_FaceBound_FaceOuterBound_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimFaceBound_FaceBound_FaceOuterBound_sequence * >(argp2);
  (arg1)->SimFaceBound_FaceBound_FaceOuterBound((schema::simxml::Model::SimModel::SimFaceBound_FaceBound_FaceOuterBound_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFaceBound_FaceBound_FaceOuterBound(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFaceBound_FaceBound_FaceOuterBound__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFaceBound_FaceBound_FaceOuterBound__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_FaceOuterBound_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimFaceBound_FaceBound_FaceOuterBound__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimFaceBound_FaceBound_FaceOuterBound'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimFaceBound_FaceBound_FaceOuterBound() const\n"
    "    schema::simxml::Model::SimModel::SimFaceBound_FaceBound_FaceOuterBound()\n"
    "    schema::simxml::Model::SimModel::SimFaceBound_FaceBound_FaceOuterBound(schema::simxml::Model::SimModel::SimFaceBound_FaceBound_FaceOuterBound_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFeatureElementSubtraction_Void_Opening__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFeatureElementSubtraction_Void_Opening_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFeatureElementSubtraction_Void_Opening",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFeatureElementSubtraction_Void_Opening" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFeatureElementSubtraction_Void_Opening_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimFeatureElementSubtraction_Void_Opening();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFeatureElementSubtraction_Void_Opening_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFeatureElementSubtraction_Void_Opening__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFeatureElementSubtraction_Void_Opening_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFeatureElementSubtraction_Void_Opening",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFeatureElementSubtraction_Void_Opening" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFeatureElementSubtraction_Void_Opening_sequence *) &(arg1)->SimFeatureElementSubtraction_Void_Opening();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFeatureElementSubtraction_Void_Opening_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFeatureElementSubtraction_Void_Opening__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimFeatureElementSubtraction_Void_Opening_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimFeatureElementSubtraction_Void_Opening",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFeatureElementSubtraction_Void_Opening" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFeatureElementSubtraction_Void_Opening_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimFeatureElementSubtraction_Void_Opening" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFeatureElementSubtraction_Void_Opening_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimFeatureElementSubtraction_Void_Opening" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFeatureElementSubtraction_Void_Opening_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimFeatureElementSubtraction_Void_Opening_sequence * >(argp2);
  (arg1)->SimFeatureElementSubtraction_Void_Opening((schema::simxml::Model::SimModel::SimFeatureElementSubtraction_Void_Opening_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFeatureElementSubtraction_Void_Opening(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFeatureElementSubtraction_Void_Opening__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFeatureElementSubtraction_Void_Opening__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFeatureElementSubtraction_Void_Opening_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimFeatureElementSubtraction_Void_Opening__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimFeatureElementSubtraction_Void_Opening'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimFeatureElementSubtraction_Void_Opening() const\n"
    "    schema::simxml::Model::SimModel::SimFeatureElementSubtraction_Void_Opening()\n"
    "    schema::simxml::Model::SimModel::SimFeatureElementSubtraction_Void_Opening(schema::simxml::Model::SimModel::SimFeatureElementSubtraction_Void_Opening_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowController_Valve_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowController_Valve_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowController_Valve_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowController_Valve_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowController_Valve_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimFlowController_Valve_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowController_Valve_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowController_Valve_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowController_Valve_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowController_Valve_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowController_Valve_Default_sequence *) &(arg1)->SimFlowController_Valve_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowController_Valve_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimFlowController_Valve_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimFlowController_Valve_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowController_Valve_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimFlowController_Valve_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowController_Valve_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimFlowController_Valve_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowController_Valve_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimFlowController_Valve_Default_sequence * >(argp2);
  (arg1)->SimFlowController_Valve_Default((schema::simxml::Model::SimModel::SimFlowController_Valve_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowController_Valve_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowController_Valve_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowController_Valve_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimFlowController_Valve_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimFlowController_Valve_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimFlowController_Valve_Default() const\n"
    "    schema::simxml::Model::SimModel::SimFlowController_Valve_Default()\n"
    "    schema::simxml::Model::SimModel::SimFlowController_Valve_Default(schema::simxml::Model::SimModel::SimFlowController_Valve_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowController_Valve_TemperingValve__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowController_Valve_TemperingValve_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowController_Valve_TemperingValve",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowController_Valve_TemperingValve" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowController_Valve_TemperingValve_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimFlowController_Valve_TemperingValve();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_TemperingValve_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowController_Valve_TemperingValve__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowController_Valve_TemperingValve_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowController_Valve_TemperingValve",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowController_Valve_TemperingValve" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowController_Valve_TemperingValve_sequence *) &(arg1)->SimFlowController_Valve_TemperingValve();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_TemperingValve_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowController_Valve_TemperingValve__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimFlowController_Valve_TemperingValve_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimFlowController_Valve_TemperingValve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowController_Valve_TemperingValve" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_TemperingValve_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimFlowController_Valve_TemperingValve" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowController_Valve_TemperingValve_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimFlowController_Valve_TemperingValve" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowController_Valve_TemperingValve_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimFlowController_Valve_TemperingValve_sequence * >(argp2);
  (arg1)->SimFlowController_Valve_TemperingValve((schema::simxml::Model::SimModel::SimFlowController_Valve_TemperingValve_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowController_Valve_TemperingValve(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowController_Valve_TemperingValve__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowController_Valve_TemperingValve__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_TemperingValve_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimFlowController_Valve_TemperingValve__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimFlowController_Valve_TemperingValve'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimFlowController_Valve_TemperingValve() const\n"
    "    schema::simxml::Model::SimModel::SimFlowController_Valve_TemperingValve()\n"
    "    schema::simxml::Model::SimModel::SimFlowController_Valve_TemperingValve(schema::simxml::Model::SimModel::SimFlowController_Valve_TemperingValve_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence *) &(arg1)->SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence * >(argp2);
  (arg1)->SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water((schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water() const\n"
    "    schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water()\n"
    "    schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water(schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Water__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Water",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Water" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimFlowEnergyTransfer_ConvectiveHeater_Water();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Water_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Water__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Water",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Water" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence *) &(arg1)->SimFlowEnergyTransfer_ConvectiveHeater_Water();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Water_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Water__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Water",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Water" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Water_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Water" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Water" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence * >(argp2);
  (arg1)->SimFlowEnergyTransfer_ConvectiveHeater_Water((schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Water(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Water__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Water__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Water_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Water__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Water'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Water() const\n"
    "    schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Water()\n"
    "    schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Water(schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Mixed__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Mixed",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Mixed" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimFlowEnergyTransferStorage_HotWaterTank_Mixed();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Mixed_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Mixed__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Mixed",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Mixed" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence *) &(arg1)->SimFlowEnergyTransferStorage_HotWaterTank_Mixed();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Mixed_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Mixed__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Mixed",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Mixed" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Mixed_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Mixed" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Mixed" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence * >(argp2);
  (arg1)->SimFlowEnergyTransferStorage_HotWaterTank_Mixed((schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Mixed(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Mixed__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Mixed__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Mixed_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Mixed__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Mixed'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Mixed() const\n"
    "    schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Mixed()\n"
    "    schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Mixed(schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Expansion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Expansion_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Expansion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Expansion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Expansion_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimFlowEnergyTransferStorage_HotWaterTank_Expansion();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Expansion_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Expansion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Expansion_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Expansion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Expansion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Expansion_sequence *) &(arg1)->SimFlowEnergyTransferStorage_HotWaterTank_Expansion();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Expansion_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Expansion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Expansion_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Expansion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Expansion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Expansion_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Expansion" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Expansion_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Expansion" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Expansion_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Expansion_sequence * >(argp2);
  (arg1)->SimFlowEnergyTransferStorage_HotWaterTank_Expansion((schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Expansion_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Expansion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Expansion__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Expansion__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Expansion_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Expansion__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Expansion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Expansion() const\n"
    "    schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Expansion()\n"
    "    schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Expansion(schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Expansion_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimFlowEnergyTransferStorage_HotWaterTank_MixedDual();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_sequence *) &(arg1)->SimFlowEnergyTransferStorage_HotWaterTank_MixedDual();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_sequence * >(argp2);
  (arg1)->SimFlowEnergyTransferStorage_HotWaterTank_MixedDual((schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_MixedDual() const\n"
    "    schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_MixedDual()\n"
    "    schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_MixedDual(schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowFitting_Default_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowFitting_Default_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowFitting_Default_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowFitting_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowFitting_Default_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimFlowFitting_Default_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Default_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowFitting_Default_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowFitting_Default_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowFitting_Default_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowFitting_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowFitting_Default_Default_sequence *) &(arg1)->SimFlowFitting_Default_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Default_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowFitting_Default_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimFlowFitting_Default_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimFlowFitting_Default_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowFitting_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Default_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimFlowFitting_Default_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowFitting_Default_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimFlowFitting_Default_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowFitting_Default_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimFlowFitting_Default_Default_sequence * >(argp2);
  (arg1)->SimFlowFitting_Default_Default((schema::simxml::Model::SimModel::SimFlowFitting_Default_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowFitting_Default_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowFitting_Default_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowFitting_Default_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Default_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimFlowFitting_Default_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimFlowFitting_Default_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimFlowFitting_Default_Default() const\n"
    "    schema::simxml::Model::SimModel::SimFlowFitting_Default_Default()\n"
    "    schema::simxml::Model::SimModel::SimFlowFitting_Default_Default(schema::simxml::Model::SimModel::SimFlowFitting_Default_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowFitting_Mixer_DemandProxyMixerWater__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowFitting_Mixer_DemandProxyMixerWater_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowFitting_Mixer_DemandProxyMixerWater",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowFitting_Mixer_DemandProxyMixerWater" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowFitting_Mixer_DemandProxyMixerWater_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimFlowFitting_Mixer_DemandProxyMixerWater();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Mixer_DemandProxyMixerWater_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowFitting_Mixer_DemandProxyMixerWater__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowFitting_Mixer_DemandProxyMixerWater_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowFitting_Mixer_DemandProxyMixerWater",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowFitting_Mixer_DemandProxyMixerWater" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowFitting_Mixer_DemandProxyMixerWater_sequence *) &(arg1)->SimFlowFitting_Mixer_DemandProxyMixerWater();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Mixer_DemandProxyMixerWater_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowFitting_Mixer_DemandProxyMixerWater__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimFlowFitting_Mixer_DemandProxyMixerWater_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimFlowFitting_Mixer_DemandProxyMixerWater",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowFitting_Mixer_DemandProxyMixerWater" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Mixer_DemandProxyMixerWater_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimFlowFitting_Mixer_DemandProxyMixerWater" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowFitting_Mixer_DemandProxyMixerWater_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimFlowFitting_Mixer_DemandProxyMixerWater" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowFitting_Mixer_DemandProxyMixerWater_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimFlowFitting_Mixer_DemandProxyMixerWater_sequence * >(argp2);
  (arg1)->SimFlowFitting_Mixer_DemandProxyMixerWater((schema::simxml::Model::SimModel::SimFlowFitting_Mixer_DemandProxyMixerWater_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowFitting_Mixer_DemandProxyMixerWater(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowFitting_Mixer_DemandProxyMixerWater__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowFitting_Mixer_DemandProxyMixerWater__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Mixer_DemandProxyMixerWater_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimFlowFitting_Mixer_DemandProxyMixerWater__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimFlowFitting_Mixer_DemandProxyMixerWater'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimFlowFitting_Mixer_DemandProxyMixerWater() const\n"
    "    schema::simxml::Model::SimModel::SimFlowFitting_Mixer_DemandProxyMixerWater()\n"
    "    schema::simxml::Model::SimModel::SimFlowFitting_Mixer_DemandProxyMixerWater(schema::simxml::Model::SimModel::SimFlowFitting_Mixer_DemandProxyMixerWater_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowFitting_Splitter_DemandProxySplitterWater__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowFitting_Splitter_DemandProxySplitterWater_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowFitting_Splitter_DemandProxySplitterWater",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowFitting_Splitter_DemandProxySplitterWater" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowFitting_Splitter_DemandProxySplitterWater_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimFlowFitting_Splitter_DemandProxySplitterWater();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Splitter_DemandProxySplitterWater_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowFitting_Splitter_DemandProxySplitterWater__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowFitting_Splitter_DemandProxySplitterWater_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowFitting_Splitter_DemandProxySplitterWater",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowFitting_Splitter_DemandProxySplitterWater" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowFitting_Splitter_DemandProxySplitterWater_sequence *) &(arg1)->SimFlowFitting_Splitter_DemandProxySplitterWater();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Splitter_DemandProxySplitterWater_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowFitting_Splitter_DemandProxySplitterWater__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimFlowFitting_Splitter_DemandProxySplitterWater_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimFlowFitting_Splitter_DemandProxySplitterWater",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowFitting_Splitter_DemandProxySplitterWater" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Splitter_DemandProxySplitterWater_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimFlowFitting_Splitter_DemandProxySplitterWater" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowFitting_Splitter_DemandProxySplitterWater_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimFlowFitting_Splitter_DemandProxySplitterWater" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowFitting_Splitter_DemandProxySplitterWater_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimFlowFitting_Splitter_DemandProxySplitterWater_sequence * >(argp2);
  (arg1)->SimFlowFitting_Splitter_DemandProxySplitterWater((schema::simxml::Model::SimModel::SimFlowFitting_Splitter_DemandProxySplitterWater_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowFitting_Splitter_DemandProxySplitterWater(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowFitting_Splitter_DemandProxySplitterWater__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowFitting_Splitter_DemandProxySplitterWater__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Splitter_DemandProxySplitterWater_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimFlowFitting_Splitter_DemandProxySplitterWater__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimFlowFitting_Splitter_DemandProxySplitterWater'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimFlowFitting_Splitter_DemandProxySplitterWater() const\n"
    "    schema::simxml::Model::SimModel::SimFlowFitting_Splitter_DemandProxySplitterWater()\n"
    "    schema::simxml::Model::SimModel::SimFlowFitting_Splitter_DemandProxySplitterWater(schema::simxml::Model::SimModel::SimFlowFitting_Splitter_DemandProxySplitterWater_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowMover_Pump_VariableSpeedReturn__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowMover_Pump_VariableSpeedReturn_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowMover_Pump_VariableSpeedReturn",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowMover_Pump_VariableSpeedReturn" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowMover_Pump_VariableSpeedReturn_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimFlowMover_Pump_VariableSpeedReturn();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowMover_Pump_VariableSpeedReturn_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowMover_Pump_VariableSpeedReturn__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowMover_Pump_VariableSpeedReturn_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowMover_Pump_VariableSpeedReturn",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowMover_Pump_VariableSpeedReturn" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowMover_Pump_VariableSpeedReturn_sequence *) &(arg1)->SimFlowMover_Pump_VariableSpeedReturn();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowMover_Pump_VariableSpeedReturn_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowMover_Pump_VariableSpeedReturn__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimFlowMover_Pump_VariableSpeedReturn_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimFlowMover_Pump_VariableSpeedReturn",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowMover_Pump_VariableSpeedReturn" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowMover_Pump_VariableSpeedReturn_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimFlowMover_Pump_VariableSpeedReturn" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowMover_Pump_VariableSpeedReturn_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimFlowMover_Pump_VariableSpeedReturn" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowMover_Pump_VariableSpeedReturn_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimFlowMover_Pump_VariableSpeedReturn_sequence * >(argp2);
  (arg1)->SimFlowMover_Pump_VariableSpeedReturn((schema::simxml::Model::SimModel::SimFlowMover_Pump_VariableSpeedReturn_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowMover_Pump_VariableSpeedReturn(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowMover_Pump_VariableSpeedReturn__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowMover_Pump_VariableSpeedReturn__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowMover_Pump_VariableSpeedReturn_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimFlowMover_Pump_VariableSpeedReturn__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimFlowMover_Pump_VariableSpeedReturn'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimFlowMover_Pump_VariableSpeedReturn() const\n"
    "    schema::simxml::Model::SimModel::SimFlowMover_Pump_VariableSpeedReturn()\n"
    "    schema::simxml::Model::SimModel::SimFlowMover_Pump_VariableSpeedReturn(schema::simxml::Model::SimModel::SimFlowMover_Pump_VariableSpeedReturn_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowPlant_Boiler_BoilerHotWater__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowPlant_Boiler_BoilerHotWater_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowPlant_Boiler_BoilerHotWater",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowPlant_Boiler_BoilerHotWater" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowPlant_Boiler_BoilerHotWater_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimFlowPlant_Boiler_BoilerHotWater();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowPlant_Boiler_BoilerHotWater_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowPlant_Boiler_BoilerHotWater__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowPlant_Boiler_BoilerHotWater_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowPlant_Boiler_BoilerHotWater",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowPlant_Boiler_BoilerHotWater" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowPlant_Boiler_BoilerHotWater_sequence *) &(arg1)->SimFlowPlant_Boiler_BoilerHotWater();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowPlant_Boiler_BoilerHotWater_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowPlant_Boiler_BoilerHotWater__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimFlowPlant_Boiler_BoilerHotWater_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimFlowPlant_Boiler_BoilerHotWater",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowPlant_Boiler_BoilerHotWater" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowPlant_Boiler_BoilerHotWater_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimFlowPlant_Boiler_BoilerHotWater" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowPlant_Boiler_BoilerHotWater_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimFlowPlant_Boiler_BoilerHotWater" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowPlant_Boiler_BoilerHotWater_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimFlowPlant_Boiler_BoilerHotWater_sequence * >(argp2);
  (arg1)->SimFlowPlant_Boiler_BoilerHotWater((schema::simxml::Model::SimModel::SimFlowPlant_Boiler_BoilerHotWater_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowPlant_Boiler_BoilerHotWater(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowPlant_Boiler_BoilerHotWater__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowPlant_Boiler_BoilerHotWater__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowPlant_Boiler_BoilerHotWater_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimFlowPlant_Boiler_BoilerHotWater__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimFlowPlant_Boiler_BoilerHotWater'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimFlowPlant_Boiler_BoilerHotWater() const\n"
    "    schema::simxml::Model::SimModel::SimFlowPlant_Boiler_BoilerHotWater()\n"
    "    schema::simxml::Model::SimModel::SimFlowPlant_Boiler_BoilerHotWater(schema::simxml::Model::SimModel::SimFlowPlant_Boiler_BoilerHotWater_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowSegment_Pipe_Indoor__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowSegment_Pipe_Indoor_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowSegment_Pipe_Indoor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowSegment_Pipe_Indoor" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowSegment_Pipe_Indoor_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimFlowSegment_Pipe_Indoor();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowSegment_Pipe_Indoor_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowSegment_Pipe_Indoor__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimFlowSegment_Pipe_Indoor_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimFlowSegment_Pipe_Indoor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowSegment_Pipe_Indoor" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimFlowSegment_Pipe_Indoor_sequence *) &(arg1)->SimFlowSegment_Pipe_Indoor();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowSegment_Pipe_Indoor_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowSegment_Pipe_Indoor__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimFlowSegment_Pipe_Indoor_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimFlowSegment_Pipe_Indoor",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimFlowSegment_Pipe_Indoor" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowSegment_Pipe_Indoor_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimFlowSegment_Pipe_Indoor" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowSegment_Pipe_Indoor_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimFlowSegment_Pipe_Indoor" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimFlowSegment_Pipe_Indoor_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimFlowSegment_Pipe_Indoor_sequence * >(argp2);
  (arg1)->SimFlowSegment_Pipe_Indoor((schema::simxml::Model::SimModel::SimFlowSegment_Pipe_Indoor_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimFlowSegment_Pipe_Indoor(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowSegment_Pipe_Indoor__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimFlowSegment_Pipe_Indoor__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowSegment_Pipe_Indoor_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimFlowSegment_Pipe_Indoor__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimFlowSegment_Pipe_Indoor'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimFlowSegment_Pipe_Indoor() const\n"
    "    schema::simxml::Model::SimModel::SimFlowSegment_Pipe_Indoor()\n"
    "    schema::simxml::Model::SimModel::SimFlowSegment_Pipe_Indoor(schema::simxml::Model::SimModel::SimFlowSegment_Pipe_Indoor_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomBooleanResult_BooleanClippingResult_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomBooleanResult_BooleanClippingResult_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomBooleanResult_BooleanClippingResult_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomBooleanResult_BooleanClippingResult_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomBooleanResult_BooleanClippingResult_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimGeomBooleanResult_BooleanClippingResult_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomBooleanResult_BooleanClippingResult_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomBooleanResult_BooleanClippingResult_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomBooleanResult_BooleanClippingResult_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomBooleanResult_BooleanClippingResult_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomBooleanResult_BooleanClippingResult_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomBooleanResult_BooleanClippingResult_Default_sequence *) &(arg1)->SimGeomBooleanResult_BooleanClippingResult_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomBooleanResult_BooleanClippingResult_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomBooleanResult_BooleanClippingResult_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimGeomBooleanResult_BooleanClippingResult_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimGeomBooleanResult_BooleanClippingResult_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomBooleanResult_BooleanClippingResult_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomBooleanResult_BooleanClippingResult_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimGeomBooleanResult_BooleanClippingResult_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomBooleanResult_BooleanClippingResult_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimGeomBooleanResult_BooleanClippingResult_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomBooleanResult_BooleanClippingResult_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimGeomBooleanResult_BooleanClippingResult_Default_sequence * >(argp2);
  (arg1)->SimGeomBooleanResult_BooleanClippingResult_Default((schema::simxml::Model::SimModel::SimGeomBooleanResult_BooleanClippingResult_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomBooleanResult_BooleanClippingResult_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomBooleanResult_BooleanClippingResult_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomBooleanResult_BooleanClippingResult_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomBooleanResult_BooleanClippingResult_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimGeomBooleanResult_BooleanClippingResult_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimGeomBooleanResult_BooleanClippingResult_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimGeomBooleanResult_BooleanClippingResult_Default() const\n"
    "    schema::simxml::Model::SimModel::SimGeomBooleanResult_BooleanClippingResult_Default()\n"
    "    schema::simxml::Model::SimModel::SimGeomBooleanResult_BooleanClippingResult_Default(schema::simxml::Model::SimModel::SimGeomBooleanResult_BooleanClippingResult_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomCurve_Polyline_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomCurve_Polyline_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomCurve_Polyline_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomCurve_Polyline_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomCurve_Polyline_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimGeomCurve_Polyline_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomCurve_Polyline_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomCurve_Polyline_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomCurve_Polyline_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomCurve_Polyline_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomCurve_Polyline_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomCurve_Polyline_Default_sequence *) &(arg1)->SimGeomCurve_Polyline_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomCurve_Polyline_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomCurve_Polyline_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimGeomCurve_Polyline_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimGeomCurve_Polyline_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomCurve_Polyline_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomCurve_Polyline_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimGeomCurve_Polyline_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomCurve_Polyline_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimGeomCurve_Polyline_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomCurve_Polyline_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimGeomCurve_Polyline_Default_sequence * >(argp2);
  (arg1)->SimGeomCurve_Polyline_Default((schema::simxml::Model::SimModel::SimGeomCurve_Polyline_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomCurve_Polyline_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomCurve_Polyline_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomCurve_Polyline_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomCurve_Polyline_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimGeomCurve_Polyline_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimGeomCurve_Polyline_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimGeomCurve_Polyline_Default() const\n"
    "    schema::simxml::Model::SimModel::SimGeomCurve_Polyline_Default()\n"
    "    schema::simxml::Model::SimModel::SimGeomCurve_Polyline_Default(schema::simxml::Model::SimModel::SimGeomCurve_Polyline_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence *) &(arg1)->SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence * >(argp2);
  (arg1)->SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace((schema::simxml::Model::SimModel::SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace() const\n"
    "    schema::simxml::Model::SimModel::SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace()\n"
    "    schema::simxml::Model::SimModel::SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace(schema::simxml::Model::SimModel::SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomPoint_Point_CartesianPoint__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomPoint_Point_CartesianPoint_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomPoint_Point_CartesianPoint",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomPoint_Point_CartesianPoint" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomPoint_Point_CartesianPoint_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimGeomPoint_Point_CartesianPoint();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomPoint_Point_CartesianPoint_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomPoint_Point_CartesianPoint__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomPoint_Point_CartesianPoint_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomPoint_Point_CartesianPoint",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomPoint_Point_CartesianPoint" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomPoint_Point_CartesianPoint_sequence *) &(arg1)->SimGeomPoint_Point_CartesianPoint();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomPoint_Point_CartesianPoint_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomPoint_Point_CartesianPoint__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimGeomPoint_Point_CartesianPoint_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimGeomPoint_Point_CartesianPoint",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomPoint_Point_CartesianPoint" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomPoint_Point_CartesianPoint_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimGeomPoint_Point_CartesianPoint" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomPoint_Point_CartesianPoint_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimGeomPoint_Point_CartesianPoint" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomPoint_Point_CartesianPoint_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimGeomPoint_Point_CartesianPoint_sequence * >(argp2);
  (arg1)->SimGeomPoint_Point_CartesianPoint((schema::simxml::Model::SimModel::SimGeomPoint_Point_CartesianPoint_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomPoint_Point_CartesianPoint(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomPoint_Point_CartesianPoint__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomPoint_Point_CartesianPoint__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomPoint_Point_CartesianPoint_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimGeomPoint_Point_CartesianPoint__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimGeomPoint_Point_CartesianPoint'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimGeomPoint_Point_CartesianPoint() const\n"
    "    schema::simxml::Model::SimModel::SimGeomPoint_Point_CartesianPoint()\n"
    "    schema::simxml::Model::SimModel::SimGeomPoint_Point_CartesianPoint(schema::simxml::Model::SimModel::SimGeomPoint_Point_CartesianPoint_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomSolidModel_FacetedBrep_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomSolidModel_FacetedBrep_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomSolidModel_FacetedBrep_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomSolidModel_FacetedBrep_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomSolidModel_FacetedBrep_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimGeomSolidModel_FacetedBrep_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_FacetedBrep_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomSolidModel_FacetedBrep_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomSolidModel_FacetedBrep_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomSolidModel_FacetedBrep_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomSolidModel_FacetedBrep_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomSolidModel_FacetedBrep_Default_sequence *) &(arg1)->SimGeomSolidModel_FacetedBrep_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_FacetedBrep_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomSolidModel_FacetedBrep_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimGeomSolidModel_FacetedBrep_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimGeomSolidModel_FacetedBrep_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomSolidModel_FacetedBrep_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_FacetedBrep_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimGeomSolidModel_FacetedBrep_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomSolidModel_FacetedBrep_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimGeomSolidModel_FacetedBrep_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomSolidModel_FacetedBrep_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimGeomSolidModel_FacetedBrep_Default_sequence * >(argp2);
  (arg1)->SimGeomSolidModel_FacetedBrep_Default((schema::simxml::Model::SimModel::SimGeomSolidModel_FacetedBrep_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomSolidModel_FacetedBrep_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomSolidModel_FacetedBrep_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomSolidModel_FacetedBrep_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_FacetedBrep_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimGeomSolidModel_FacetedBrep_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimGeomSolidModel_FacetedBrep_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimGeomSolidModel_FacetedBrep_Default() const\n"
    "    schema::simxml::Model::SimModel::SimGeomSolidModel_FacetedBrep_Default()\n"
    "    schema::simxml::Model::SimModel::SimGeomSolidModel_FacetedBrep_Default(schema::simxml::Model::SimModel::SimGeomSolidModel_FacetedBrep_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence *) &(arg1)->SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence * >(argp2);
  (arg1)->SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid((schema::simxml::Model::SimModel::SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid() const\n"
    "    schema::simxml::Model::SimModel::SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid()\n"
    "    schema::simxml::Model::SimModel::SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid(schema::simxml::Model::SimModel::SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomSurface_BoundedSurface_CurveBoundedPlane__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomSurface_BoundedSurface_CurveBoundedPlane",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomSurface_BoundedSurface_CurveBoundedPlane" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimGeomSurface_BoundedSurface_CurveBoundedPlane();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_BoundedSurface_CurveBoundedPlane_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomSurface_BoundedSurface_CurveBoundedPlane__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomSurface_BoundedSurface_CurveBoundedPlane",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomSurface_BoundedSurface_CurveBoundedPlane" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence *) &(arg1)->SimGeomSurface_BoundedSurface_CurveBoundedPlane();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_BoundedSurface_CurveBoundedPlane_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomSurface_BoundedSurface_CurveBoundedPlane__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimGeomSurface_BoundedSurface_CurveBoundedPlane",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomSurface_BoundedSurface_CurveBoundedPlane" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_BoundedSurface_CurveBoundedPlane_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimGeomSurface_BoundedSurface_CurveBoundedPlane" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimGeomSurface_BoundedSurface_CurveBoundedPlane" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence * >(argp2);
  (arg1)->SimGeomSurface_BoundedSurface_CurveBoundedPlane((schema::simxml::Model::SimModel::SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomSurface_BoundedSurface_CurveBoundedPlane(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomSurface_BoundedSurface_CurveBoundedPlane__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomSurface_BoundedSurface_CurveBoundedPlane__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_BoundedSurface_CurveBoundedPlane_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimGeomSurface_BoundedSurface_CurveBoundedPlane__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimGeomSurface_BoundedSurface_CurveBoundedPlane'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimGeomSurface_BoundedSurface_CurveBoundedPlane() const\n"
    "    schema::simxml::Model::SimModel::SimGeomSurface_BoundedSurface_CurveBoundedPlane()\n"
    "    schema::simxml::Model::SimModel::SimGeomSurface_BoundedSurface_CurveBoundedPlane(schema::simxml::Model::SimModel::SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomSurface_ElementarySurface_Plane__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomSurface_ElementarySurface_Plane_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomSurface_ElementarySurface_Plane",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomSurface_ElementarySurface_Plane" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomSurface_ElementarySurface_Plane_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimGeomSurface_ElementarySurface_Plane();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_ElementarySurface_Plane_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomSurface_ElementarySurface_Plane__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomSurface_ElementarySurface_Plane_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomSurface_ElementarySurface_Plane",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomSurface_ElementarySurface_Plane" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomSurface_ElementarySurface_Plane_sequence *) &(arg1)->SimGeomSurface_ElementarySurface_Plane();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_ElementarySurface_Plane_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomSurface_ElementarySurface_Plane__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimGeomSurface_ElementarySurface_Plane_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimGeomSurface_ElementarySurface_Plane",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomSurface_ElementarySurface_Plane" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_ElementarySurface_Plane_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimGeomSurface_ElementarySurface_Plane" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomSurface_ElementarySurface_Plane_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimGeomSurface_ElementarySurface_Plane" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomSurface_ElementarySurface_Plane_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimGeomSurface_ElementarySurface_Plane_sequence * >(argp2);
  (arg1)->SimGeomSurface_ElementarySurface_Plane((schema::simxml::Model::SimModel::SimGeomSurface_ElementarySurface_Plane_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomSurface_ElementarySurface_Plane(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomSurface_ElementarySurface_Plane__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomSurface_ElementarySurface_Plane__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_ElementarySurface_Plane_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimGeomSurface_ElementarySurface_Plane__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimGeomSurface_ElementarySurface_Plane'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimGeomSurface_ElementarySurface_Plane() const\n"
    "    schema::simxml::Model::SimModel::SimGeomSurface_ElementarySurface_Plane()\n"
    "    schema::simxml::Model::SimModel::SimGeomSurface_ElementarySurface_Plane(schema::simxml::Model::SimModel::SimGeomSurface_ElementarySurface_Plane_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimGeomSurfaceModel_FaceBasedSurfaceModel_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence *) &(arg1)->SimGeomSurfaceModel_FaceBasedSurfaceModel_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence * >(argp2);
  (arg1)->SimGeomSurfaceModel_FaceBasedSurfaceModel_Default((schema::simxml::Model::SimModel::SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimGeomSurfaceModel_FaceBasedSurfaceModel_Default() const\n"
    "    schema::simxml::Model::SimModel::SimGeomSurfaceModel_FaceBasedSurfaceModel_Default()\n"
    "    schema::simxml::Model::SimModel::SimGeomSurfaceModel_FaceBasedSurfaceModel_Default(schema::simxml::Model::SimModel::SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomVector_Vector_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomVector_Vector_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomVector_Vector_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomVector_Vector_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomVector_Vector_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimGeomVector_Vector_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomVector_Vector_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomVector_Vector_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomVector_Vector_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomVector_Vector_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomVector_Vector_Default_sequence *) &(arg1)->SimGeomVector_Vector_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomVector_Vector_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimGeomVector_Vector_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimGeomVector_Vector_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomVector_Vector_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimGeomVector_Vector_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomVector_Vector_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimGeomVector_Vector_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomVector_Vector_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimGeomVector_Vector_Default_sequence * >(argp2);
  (arg1)->SimGeomVector_Vector_Default((schema::simxml::Model::SimModel::SimGeomVector_Vector_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomVector_Vector_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomVector_Vector_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomVector_Vector_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimGeomVector_Vector_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimGeomVector_Vector_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimGeomVector_Vector_Default() const\n"
    "    schema::simxml::Model::SimModel::SimGeomVector_Vector_Default()\n"
    "    schema::simxml::Model::SimModel::SimGeomVector_Vector_Default(schema::simxml::Model::SimModel::SimGeomVector_Vector_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomVector_Vector_Direction__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomVector_Vector_Direction_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomVector_Vector_Direction",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomVector_Vector_Direction" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomVector_Vector_Direction_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimGeomVector_Vector_Direction();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Direction_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomVector_Vector_Direction__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGeomVector_Vector_Direction_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGeomVector_Vector_Direction",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomVector_Vector_Direction" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGeomVector_Vector_Direction_sequence *) &(arg1)->SimGeomVector_Vector_Direction();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Direction_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomVector_Vector_Direction__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimGeomVector_Vector_Direction_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimGeomVector_Vector_Direction",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGeomVector_Vector_Direction" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Direction_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimGeomVector_Vector_Direction" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomVector_Vector_Direction_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimGeomVector_Vector_Direction" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGeomVector_Vector_Direction_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimGeomVector_Vector_Direction_sequence * >(argp2);
  (arg1)->SimGeomVector_Vector_Direction((schema::simxml::Model::SimModel::SimGeomVector_Vector_Direction_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGeomVector_Vector_Direction(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomVector_Vector_Direction__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGeomVector_Vector_Direction__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Direction_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimGeomVector_Vector_Direction__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimGeomVector_Vector_Direction'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimGeomVector_Vector_Direction() const\n"
    "    schema::simxml::Model::SimModel::SimGeomVector_Vector_Direction()\n"
    "    schema::simxml::Model::SimModel::SimGeomVector_Vector_Direction(schema::simxml::Model::SimModel::SimGeomVector_Vector_Direction_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGroup_BldgCompGroup_ZoneEquipment__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGroup_BldgCompGroup_ZoneEquipment_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGroup_BldgCompGroup_ZoneEquipment",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGroup_BldgCompGroup_ZoneEquipment" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGroup_BldgCompGroup_ZoneEquipment_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimGroup_BldgCompGroup_ZoneEquipment();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_BldgCompGroup_ZoneEquipment_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGroup_BldgCompGroup_ZoneEquipment__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGroup_BldgCompGroup_ZoneEquipment_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGroup_BldgCompGroup_ZoneEquipment",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGroup_BldgCompGroup_ZoneEquipment" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGroup_BldgCompGroup_ZoneEquipment_sequence *) &(arg1)->SimGroup_BldgCompGroup_ZoneEquipment();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_BldgCompGroup_ZoneEquipment_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGroup_BldgCompGroup_ZoneEquipment__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimGroup_BldgCompGroup_ZoneEquipment_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimGroup_BldgCompGroup_ZoneEquipment",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGroup_BldgCompGroup_ZoneEquipment" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_BldgCompGroup_ZoneEquipment_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimGroup_BldgCompGroup_ZoneEquipment" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGroup_BldgCompGroup_ZoneEquipment_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimGroup_BldgCompGroup_ZoneEquipment" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGroup_BldgCompGroup_ZoneEquipment_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimGroup_BldgCompGroup_ZoneEquipment_sequence * >(argp2);
  (arg1)->SimGroup_BldgCompGroup_ZoneEquipment((schema::simxml::Model::SimModel::SimGroup_BldgCompGroup_ZoneEquipment_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGroup_BldgCompGroup_ZoneEquipment(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGroup_BldgCompGroup_ZoneEquipment__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGroup_BldgCompGroup_ZoneEquipment__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_BldgCompGroup_ZoneEquipment_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimGroup_BldgCompGroup_ZoneEquipment__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimGroup_BldgCompGroup_ZoneEquipment'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimGroup_BldgCompGroup_ZoneEquipment() const\n"
    "    schema::simxml::Model::SimModel::SimGroup_BldgCompGroup_ZoneEquipment()\n"
    "    schema::simxml::Model::SimModel::SimGroup_BldgCompGroup_ZoneEquipment(schema::simxml::Model::SimModel::SimGroup_BldgCompGroup_ZoneEquipment_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGroup_HvacDemandGroup_WaterSystem__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGroup_HvacDemandGroup_WaterSystem_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGroup_HvacDemandGroup_WaterSystem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGroup_HvacDemandGroup_WaterSystem" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGroup_HvacDemandGroup_WaterSystem_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimGroup_HvacDemandGroup_WaterSystem();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_HvacDemandGroup_WaterSystem_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGroup_HvacDemandGroup_WaterSystem__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGroup_HvacDemandGroup_WaterSystem_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGroup_HvacDemandGroup_WaterSystem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGroup_HvacDemandGroup_WaterSystem" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGroup_HvacDemandGroup_WaterSystem_sequence *) &(arg1)->SimGroup_HvacDemandGroup_WaterSystem();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_HvacDemandGroup_WaterSystem_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGroup_HvacDemandGroup_WaterSystem__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimGroup_HvacDemandGroup_WaterSystem_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimGroup_HvacDemandGroup_WaterSystem",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGroup_HvacDemandGroup_WaterSystem" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_HvacDemandGroup_WaterSystem_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimGroup_HvacDemandGroup_WaterSystem" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGroup_HvacDemandGroup_WaterSystem_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimGroup_HvacDemandGroup_WaterSystem" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGroup_HvacDemandGroup_WaterSystem_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimGroup_HvacDemandGroup_WaterSystem_sequence * >(argp2);
  (arg1)->SimGroup_HvacDemandGroup_WaterSystem((schema::simxml::Model::SimModel::SimGroup_HvacDemandGroup_WaterSystem_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGroup_HvacDemandGroup_WaterSystem(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGroup_HvacDemandGroup_WaterSystem__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGroup_HvacDemandGroup_WaterSystem__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_HvacDemandGroup_WaterSystem_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimGroup_HvacDemandGroup_WaterSystem__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimGroup_HvacDemandGroup_WaterSystem'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimGroup_HvacDemandGroup_WaterSystem() const\n"
    "    schema::simxml::Model::SimModel::SimGroup_HvacDemandGroup_WaterSystem()\n"
    "    schema::simxml::Model::SimModel::SimGroup_HvacDemandGroup_WaterSystem(schema::simxml::Model::SimModel::SimGroup_HvacDemandGroup_WaterSystem_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGroup_SpatialZoneGroup_ZoneGroup__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneGroup_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGroup_SpatialZoneGroup_ZoneGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGroup_SpatialZoneGroup_ZoneGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneGroup_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimGroup_SpatialZoneGroup_ZoneGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneGroup_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGroup_SpatialZoneGroup_ZoneGroup__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneGroup_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGroup_SpatialZoneGroup_ZoneGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGroup_SpatialZoneGroup_ZoneGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneGroup_sequence *) &(arg1)->SimGroup_SpatialZoneGroup_ZoneGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneGroup_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGroup_SpatialZoneGroup_ZoneGroup__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneGroup_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimGroup_SpatialZoneGroup_ZoneGroup",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGroup_SpatialZoneGroup_ZoneGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneGroup_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimGroup_SpatialZoneGroup_ZoneGroup" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneGroup_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimGroup_SpatialZoneGroup_ZoneGroup" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneGroup_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneGroup_sequence * >(argp2);
  (arg1)->SimGroup_SpatialZoneGroup_ZoneGroup((schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneGroup_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGroup_SpatialZoneGroup_ZoneGroup(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGroup_SpatialZoneGroup_ZoneGroup__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGroup_SpatialZoneGroup_ZoneGroup__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneGroup_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimGroup_SpatialZoneGroup_ZoneGroup__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimGroup_SpatialZoneGroup_ZoneGroup'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneGroup() const\n"
    "    schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneGroup()\n"
    "    schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneGroup(schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneGroup_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGroup_SpatialZoneGroup_ZoneHvacGroup__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGroup_SpatialZoneGroup_ZoneHvacGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGroup_SpatialZoneGroup_ZoneHvacGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimGroup_SpatialZoneGroup_ZoneHvacGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneHvacGroup_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGroup_SpatialZoneGroup_ZoneHvacGroup__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimGroup_SpatialZoneGroup_ZoneHvacGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGroup_SpatialZoneGroup_ZoneHvacGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence *) &(arg1)->SimGroup_SpatialZoneGroup_ZoneHvacGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneHvacGroup_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGroup_SpatialZoneGroup_ZoneHvacGroup__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimGroup_SpatialZoneGroup_ZoneHvacGroup",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimGroup_SpatialZoneGroup_ZoneHvacGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneHvacGroup_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimGroup_SpatialZoneGroup_ZoneHvacGroup" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimGroup_SpatialZoneGroup_ZoneHvacGroup" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence * >(argp2);
  (arg1)->SimGroup_SpatialZoneGroup_ZoneHvacGroup((schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimGroup_SpatialZoneGroup_ZoneHvacGroup(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGroup_SpatialZoneGroup_ZoneHvacGroup__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimGroup_SpatialZoneGroup_ZoneHvacGroup__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneHvacGroup_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimGroup_SpatialZoneGroup_ZoneHvacGroup__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimGroup_SpatialZoneGroup_ZoneHvacGroup'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneHvacGroup() const\n"
    "    schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneHvacGroup()\n"
    "    schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneHvacGroup(schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimInternalLoad_Equipment_Electric__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimInternalLoad_Equipment_Electric_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimInternalLoad_Equipment_Electric",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimInternalLoad_Equipment_Electric" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimInternalLoad_Equipment_Electric_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimInternalLoad_Equipment_Electric();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Equipment_Electric_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimInternalLoad_Equipment_Electric__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimInternalLoad_Equipment_Electric_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimInternalLoad_Equipment_Electric",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimInternalLoad_Equipment_Electric" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimInternalLoad_Equipment_Electric_sequence *) &(arg1)->SimInternalLoad_Equipment_Electric();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Equipment_Electric_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimInternalLoad_Equipment_Electric__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimInternalLoad_Equipment_Electric_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimInternalLoad_Equipment_Electric",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimInternalLoad_Equipment_Electric" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Equipment_Electric_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimInternalLoad_Equipment_Electric" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimInternalLoad_Equipment_Electric_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimInternalLoad_Equipment_Electric" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimInternalLoad_Equipment_Electric_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimInternalLoad_Equipment_Electric_sequence * >(argp2);
  (arg1)->SimInternalLoad_Equipment_Electric((schema::simxml::Model::SimModel::SimInternalLoad_Equipment_Electric_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimInternalLoad_Equipment_Electric(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimInternalLoad_Equipment_Electric__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimInternalLoad_Equipment_Electric__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Equipment_Electric_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimInternalLoad_Equipment_Electric__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimInternalLoad_Equipment_Electric'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimInternalLoad_Equipment_Electric() const\n"
    "    schema::simxml::Model::SimModel::SimInternalLoad_Equipment_Electric()\n"
    "    schema::simxml::Model::SimModel::SimInternalLoad_Equipment_Electric(schema::simxml::Model::SimModel::SimInternalLoad_Equipment_Electric_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimInternalLoad_Lights_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimInternalLoad_Lights_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimInternalLoad_Lights_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimInternalLoad_Lights_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimInternalLoad_Lights_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimInternalLoad_Lights_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Lights_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimInternalLoad_Lights_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimInternalLoad_Lights_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimInternalLoad_Lights_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimInternalLoad_Lights_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimInternalLoad_Lights_Default_sequence *) &(arg1)->SimInternalLoad_Lights_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Lights_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimInternalLoad_Lights_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimInternalLoad_Lights_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimInternalLoad_Lights_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimInternalLoad_Lights_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Lights_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimInternalLoad_Lights_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimInternalLoad_Lights_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimInternalLoad_Lights_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimInternalLoad_Lights_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimInternalLoad_Lights_Default_sequence * >(argp2);
  (arg1)->SimInternalLoad_Lights_Default((schema::simxml::Model::SimModel::SimInternalLoad_Lights_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimInternalLoad_Lights_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimInternalLoad_Lights_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimInternalLoad_Lights_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Lights_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimInternalLoad_Lights_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimInternalLoad_Lights_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimInternalLoad_Lights_Default() const\n"
    "    schema::simxml::Model::SimModel::SimInternalLoad_Lights_Default()\n"
    "    schema::simxml::Model::SimModel::SimInternalLoad_Lights_Default(schema::simxml::Model::SimModel::SimInternalLoad_Lights_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimInternalLoad_People_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimInternalLoad_People_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimInternalLoad_People_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimInternalLoad_People_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimInternalLoad_People_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimInternalLoad_People_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_People_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimInternalLoad_People_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimInternalLoad_People_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimInternalLoad_People_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimInternalLoad_People_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimInternalLoad_People_Default_sequence *) &(arg1)->SimInternalLoad_People_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_People_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimInternalLoad_People_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimInternalLoad_People_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimInternalLoad_People_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimInternalLoad_People_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_People_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimInternalLoad_People_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimInternalLoad_People_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimInternalLoad_People_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimInternalLoad_People_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimInternalLoad_People_Default_sequence * >(argp2);
  (arg1)->SimInternalLoad_People_Default((schema::simxml::Model::SimModel::SimInternalLoad_People_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimInternalLoad_People_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimInternalLoad_People_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimInternalLoad_People_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_People_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimInternalLoad_People_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimInternalLoad_People_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimInternalLoad_People_Default() const\n"
    "    schema::simxml::Model::SimModel::SimInternalLoad_People_Default()\n"
    "    schema::simxml::Model::SimModel::SimInternalLoad_People_Default(schema::simxml::Model::SimModel::SimInternalLoad_People_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_ConnectorList_SimConnections__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimList_ConnectorList_SimConnections_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimList_ConnectorList_SimConnections",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimList_ConnectorList_SimConnections" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimList_ConnectorList_SimConnections_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimList_ConnectorList_SimConnections();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_ConnectorList_SimConnections_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_ConnectorList_SimConnections__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimList_ConnectorList_SimConnections_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimList_ConnectorList_SimConnections",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimList_ConnectorList_SimConnections" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimList_ConnectorList_SimConnections_sequence *) &(arg1)->SimList_ConnectorList_SimConnections();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_ConnectorList_SimConnections_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_ConnectorList_SimConnections__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimList_ConnectorList_SimConnections_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimList_ConnectorList_SimConnections",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimList_ConnectorList_SimConnections" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_ConnectorList_SimConnections_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimList_ConnectorList_SimConnections" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimList_ConnectorList_SimConnections_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimList_ConnectorList_SimConnections" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimList_ConnectorList_SimConnections_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimList_ConnectorList_SimConnections_sequence * >(argp2);
  (arg1)->SimList_ConnectorList_SimConnections((schema::simxml::Model::SimModel::SimList_ConnectorList_SimConnections_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_ConnectorList_SimConnections(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimList_ConnectorList_SimConnections__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimList_ConnectorList_SimConnections__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_ConnectorList_SimConnections_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimList_ConnectorList_SimConnections__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimList_ConnectorList_SimConnections'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimList_ConnectorList_SimConnections() const\n"
    "    schema::simxml::Model::SimModel::SimList_ConnectorList_SimConnections()\n"
    "    schema::simxml::Model::SimModel::SimList_ConnectorList_SimConnections(schema::simxml::Model::SimModel::SimList_ConnectorList_SimConnections_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_EquipmentList_ZoneHvac__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimList_EquipmentList_ZoneHvac_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimList_EquipmentList_ZoneHvac",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimList_EquipmentList_ZoneHvac" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimList_EquipmentList_ZoneHvac_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimList_EquipmentList_ZoneHvac();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_EquipmentList_ZoneHvac_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_EquipmentList_ZoneHvac__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimList_EquipmentList_ZoneHvac_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimList_EquipmentList_ZoneHvac",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimList_EquipmentList_ZoneHvac" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimList_EquipmentList_ZoneHvac_sequence *) &(arg1)->SimList_EquipmentList_ZoneHvac();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_EquipmentList_ZoneHvac_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_EquipmentList_ZoneHvac__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimList_EquipmentList_ZoneHvac_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimList_EquipmentList_ZoneHvac",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimList_EquipmentList_ZoneHvac" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_EquipmentList_ZoneHvac_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimList_EquipmentList_ZoneHvac" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimList_EquipmentList_ZoneHvac_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimList_EquipmentList_ZoneHvac" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimList_EquipmentList_ZoneHvac_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimList_EquipmentList_ZoneHvac_sequence * >(argp2);
  (arg1)->SimList_EquipmentList_ZoneHvac((schema::simxml::Model::SimModel::SimList_EquipmentList_ZoneHvac_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_EquipmentList_ZoneHvac(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimList_EquipmentList_ZoneHvac__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimList_EquipmentList_ZoneHvac__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_EquipmentList_ZoneHvac_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimList_EquipmentList_ZoneHvac__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimList_EquipmentList_ZoneHvac'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimList_EquipmentList_ZoneHvac() const\n"
    "    schema::simxml::Model::SimModel::SimList_EquipmentList_ZoneHvac()\n"
    "    schema::simxml::Model::SimModel::SimList_EquipmentList_ZoneHvac(schema::simxml::Model::SimModel::SimList_EquipmentList_ZoneHvac_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_MaterialList_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimList_MaterialList_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimList_MaterialList_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimList_MaterialList_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimList_MaterialList_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimList_MaterialList_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_MaterialList_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_MaterialList_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimList_MaterialList_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimList_MaterialList_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimList_MaterialList_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimList_MaterialList_Default_sequence *) &(arg1)->SimList_MaterialList_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_MaterialList_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_MaterialList_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimList_MaterialList_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimList_MaterialList_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimList_MaterialList_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_MaterialList_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimList_MaterialList_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimList_MaterialList_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimList_MaterialList_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimList_MaterialList_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimList_MaterialList_Default_sequence * >(argp2);
  (arg1)->SimList_MaterialList_Default((schema::simxml::Model::SimModel::SimList_MaterialList_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_MaterialList_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimList_MaterialList_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimList_MaterialList_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_MaterialList_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimList_MaterialList_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimList_MaterialList_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimList_MaterialList_Default() const\n"
    "    schema::simxml::Model::SimModel::SimList_MaterialList_Default()\n"
    "    schema::simxml::Model::SimModel::SimList_MaterialList_Default(schema::simxml::Model::SimModel::SimList_MaterialList_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_SchemeList_AirLoopAvailabilityMgrScheme__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimList_SchemeList_AirLoopAvailabilityMgrScheme",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimList_SchemeList_AirLoopAvailabilityMgrScheme" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimList_SchemeList_AirLoopAvailabilityMgrScheme();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_AirLoopAvailabilityMgrScheme_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_SchemeList_AirLoopAvailabilityMgrScheme__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimList_SchemeList_AirLoopAvailabilityMgrScheme",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimList_SchemeList_AirLoopAvailabilityMgrScheme" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence *) &(arg1)->SimList_SchemeList_AirLoopAvailabilityMgrScheme();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_AirLoopAvailabilityMgrScheme_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_SchemeList_AirLoopAvailabilityMgrScheme__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimList_SchemeList_AirLoopAvailabilityMgrScheme",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimList_SchemeList_AirLoopAvailabilityMgrScheme" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_AirLoopAvailabilityMgrScheme_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimList_SchemeList_AirLoopAvailabilityMgrScheme" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimList_SchemeList_AirLoopAvailabilityMgrScheme" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence * >(argp2);
  (arg1)->SimList_SchemeList_AirLoopAvailabilityMgrScheme((schema::simxml::Model::SimModel::SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_SchemeList_AirLoopAvailabilityMgrScheme(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimList_SchemeList_AirLoopAvailabilityMgrScheme__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimList_SchemeList_AirLoopAvailabilityMgrScheme__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_AirLoopAvailabilityMgrScheme_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimList_SchemeList_AirLoopAvailabilityMgrScheme__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimList_SchemeList_AirLoopAvailabilityMgrScheme'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimList_SchemeList_AirLoopAvailabilityMgrScheme() const\n"
    "    schema::simxml::Model::SimModel::SimList_SchemeList_AirLoopAvailabilityMgrScheme()\n"
    "    schema::simxml::Model::SimModel::SimList_SchemeList_AirLoopAvailabilityMgrScheme(schema::simxml::Model::SimModel::SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_SchemeList_DemandManagerScheme__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimList_SchemeList_DemandManagerScheme_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimList_SchemeList_DemandManagerScheme",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimList_SchemeList_DemandManagerScheme" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimList_SchemeList_DemandManagerScheme_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimList_SchemeList_DemandManagerScheme();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_DemandManagerScheme_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_SchemeList_DemandManagerScheme__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimList_SchemeList_DemandManagerScheme_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimList_SchemeList_DemandManagerScheme",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimList_SchemeList_DemandManagerScheme" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimList_SchemeList_DemandManagerScheme_sequence *) &(arg1)->SimList_SchemeList_DemandManagerScheme();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_DemandManagerScheme_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_SchemeList_DemandManagerScheme__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimList_SchemeList_DemandManagerScheme_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimList_SchemeList_DemandManagerScheme",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimList_SchemeList_DemandManagerScheme" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_DemandManagerScheme_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimList_SchemeList_DemandManagerScheme" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimList_SchemeList_DemandManagerScheme_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimList_SchemeList_DemandManagerScheme" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimList_SchemeList_DemandManagerScheme_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimList_SchemeList_DemandManagerScheme_sequence * >(argp2);
  (arg1)->SimList_SchemeList_DemandManagerScheme((schema::simxml::Model::SimModel::SimList_SchemeList_DemandManagerScheme_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_SchemeList_DemandManagerScheme(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimList_SchemeList_DemandManagerScheme__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimList_SchemeList_DemandManagerScheme__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_DemandManagerScheme_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimList_SchemeList_DemandManagerScheme__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimList_SchemeList_DemandManagerScheme'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimList_SchemeList_DemandManagerScheme() const\n"
    "    schema::simxml::Model::SimModel::SimList_SchemeList_DemandManagerScheme()\n"
    "    schema::simxml::Model::SimModel::SimList_SchemeList_DemandManagerScheme(schema::simxml::Model::SimModel::SimList_SchemeList_DemandManagerScheme_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_SchemeList_PlantOperatingScheme__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimList_SchemeList_PlantOperatingScheme_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimList_SchemeList_PlantOperatingScheme",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimList_SchemeList_PlantOperatingScheme" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimList_SchemeList_PlantOperatingScheme_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimList_SchemeList_PlantOperatingScheme();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_PlantOperatingScheme_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_SchemeList_PlantOperatingScheme__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimList_SchemeList_PlantOperatingScheme_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimList_SchemeList_PlantOperatingScheme",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimList_SchemeList_PlantOperatingScheme" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimList_SchemeList_PlantOperatingScheme_sequence *) &(arg1)->SimList_SchemeList_PlantOperatingScheme();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_PlantOperatingScheme_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_SchemeList_PlantOperatingScheme__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimList_SchemeList_PlantOperatingScheme_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimList_SchemeList_PlantOperatingScheme",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimList_SchemeList_PlantOperatingScheme" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_PlantOperatingScheme_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimList_SchemeList_PlantOperatingScheme" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimList_SchemeList_PlantOperatingScheme_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimList_SchemeList_PlantOperatingScheme" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimList_SchemeList_PlantOperatingScheme_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimList_SchemeList_PlantOperatingScheme_sequence * >(argp2);
  (arg1)->SimList_SchemeList_PlantOperatingScheme((schema::simxml::Model::SimModel::SimList_SchemeList_PlantOperatingScheme_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_SchemeList_PlantOperatingScheme(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimList_SchemeList_PlantOperatingScheme__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimList_SchemeList_PlantOperatingScheme__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_PlantOperatingScheme_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimList_SchemeList_PlantOperatingScheme__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimList_SchemeList_PlantOperatingScheme'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimList_SchemeList_PlantOperatingScheme() const\n"
    "    schema::simxml::Model::SimModel::SimList_SchemeList_PlantOperatingScheme()\n"
    "    schema::simxml::Model::SimModel::SimList_SchemeList_PlantOperatingScheme(schema::simxml::Model::SimModel::SimList_SchemeList_PlantOperatingScheme_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_SchemeList_WaterTempControlScheme__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimList_SchemeList_WaterTempControlScheme_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimList_SchemeList_WaterTempControlScheme",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimList_SchemeList_WaterTempControlScheme" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimList_SchemeList_WaterTempControlScheme_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimList_SchemeList_WaterTempControlScheme();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_WaterTempControlScheme_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_SchemeList_WaterTempControlScheme__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimList_SchemeList_WaterTempControlScheme_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimList_SchemeList_WaterTempControlScheme",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimList_SchemeList_WaterTempControlScheme" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimList_SchemeList_WaterTempControlScheme_sequence *) &(arg1)->SimList_SchemeList_WaterTempControlScheme();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_WaterTempControlScheme_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_SchemeList_WaterTempControlScheme__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimList_SchemeList_WaterTempControlScheme_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimList_SchemeList_WaterTempControlScheme",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimList_SchemeList_WaterTempControlScheme" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_WaterTempControlScheme_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimList_SchemeList_WaterTempControlScheme" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimList_SchemeList_WaterTempControlScheme_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimList_SchemeList_WaterTempControlScheme" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimList_SchemeList_WaterTempControlScheme_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimList_SchemeList_WaterTempControlScheme_sequence * >(argp2);
  (arg1)->SimList_SchemeList_WaterTempControlScheme((schema::simxml::Model::SimModel::SimList_SchemeList_WaterTempControlScheme_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimList_SchemeList_WaterTempControlScheme(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimList_SchemeList_WaterTempControlScheme__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimList_SchemeList_WaterTempControlScheme__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_WaterTempControlScheme_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimList_SchemeList_WaterTempControlScheme__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimList_SchemeList_WaterTempControlScheme'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimList_SchemeList_WaterTempControlScheme() const\n"
    "    schema::simxml::Model::SimModel::SimList_SchemeList_WaterTempControlScheme()\n"
    "    schema::simxml::Model::SimModel::SimList_SchemeList_WaterTempControlScheme(schema::simxml::Model::SimModel::SimList_SchemeList_WaterTempControlScheme_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimLocalPlacement_LocalPlacement_AbsolutePlacement__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimLocalPlacement_LocalPlacement_AbsolutePlacement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimLocalPlacement_LocalPlacement_AbsolutePlacement" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimLocalPlacement_LocalPlacement_AbsolutePlacement();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_AbsolutePlacement_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimLocalPlacement_LocalPlacement_AbsolutePlacement__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimLocalPlacement_LocalPlacement_AbsolutePlacement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimLocalPlacement_LocalPlacement_AbsolutePlacement" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence *) &(arg1)->SimLocalPlacement_LocalPlacement_AbsolutePlacement();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_AbsolutePlacement_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimLocalPlacement_LocalPlacement_AbsolutePlacement__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimLocalPlacement_LocalPlacement_AbsolutePlacement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimLocalPlacement_LocalPlacement_AbsolutePlacement" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_AbsolutePlacement_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimLocalPlacement_LocalPlacement_AbsolutePlacement" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimLocalPlacement_LocalPlacement_AbsolutePlacement" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence * >(argp2);
  (arg1)->SimLocalPlacement_LocalPlacement_AbsolutePlacement((schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimLocalPlacement_LocalPlacement_AbsolutePlacement(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimLocalPlacement_LocalPlacement_AbsolutePlacement__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimLocalPlacement_LocalPlacement_AbsolutePlacement__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_AbsolutePlacement_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimLocalPlacement_LocalPlacement_AbsolutePlacement__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimLocalPlacement_LocalPlacement_AbsolutePlacement'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_AbsolutePlacement() const\n"
    "    schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_AbsolutePlacement()\n"
    "    schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_AbsolutePlacement(schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimLocalPlacement_LocalPlacement_RelativePlacement__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_RelativePlacement_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimLocalPlacement_LocalPlacement_RelativePlacement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimLocalPlacement_LocalPlacement_RelativePlacement" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_RelativePlacement_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimLocalPlacement_LocalPlacement_RelativePlacement();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_RelativePlacement_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimLocalPlacement_LocalPlacement_RelativePlacement__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_RelativePlacement_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimLocalPlacement_LocalPlacement_RelativePlacement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimLocalPlacement_LocalPlacement_RelativePlacement" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_RelativePlacement_sequence *) &(arg1)->SimLocalPlacement_LocalPlacement_RelativePlacement();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_RelativePlacement_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimLocalPlacement_LocalPlacement_RelativePlacement__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_RelativePlacement_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimLocalPlacement_LocalPlacement_RelativePlacement",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimLocalPlacement_LocalPlacement_RelativePlacement" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_RelativePlacement_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimLocalPlacement_LocalPlacement_RelativePlacement" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_RelativePlacement_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimLocalPlacement_LocalPlacement_RelativePlacement" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_RelativePlacement_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_RelativePlacement_sequence * >(argp2);
  (arg1)->SimLocalPlacement_LocalPlacement_RelativePlacement((schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_RelativePlacement_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimLocalPlacement_LocalPlacement_RelativePlacement(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimLocalPlacement_LocalPlacement_RelativePlacement__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimLocalPlacement_LocalPlacement_RelativePlacement__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_RelativePlacement_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimLocalPlacement_LocalPlacement_RelativePlacement__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimLocalPlacement_LocalPlacement_RelativePlacement'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_RelativePlacement() const\n"
    "    schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_RelativePlacement()\n"
    "    schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_RelativePlacement(schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_RelativePlacement_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimLocationAndWeather_DesignDay_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimLocationAndWeather_DesignDay_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimLocationAndWeather_DesignDay_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimLocationAndWeather_DesignDay_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimLocationAndWeather_DesignDay_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimLocationAndWeather_DesignDay_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_DesignDay_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimLocationAndWeather_DesignDay_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimLocationAndWeather_DesignDay_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimLocationAndWeather_DesignDay_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimLocationAndWeather_DesignDay_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimLocationAndWeather_DesignDay_Default_sequence *) &(arg1)->SimLocationAndWeather_DesignDay_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_DesignDay_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimLocationAndWeather_DesignDay_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimLocationAndWeather_DesignDay_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimLocationAndWeather_DesignDay_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimLocationAndWeather_DesignDay_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_DesignDay_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimLocationAndWeather_DesignDay_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimLocationAndWeather_DesignDay_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimLocationAndWeather_DesignDay_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimLocationAndWeather_DesignDay_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimLocationAndWeather_DesignDay_Default_sequence * >(argp2);
  (arg1)->SimLocationAndWeather_DesignDay_Default((schema::simxml::Model::SimModel::SimLocationAndWeather_DesignDay_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimLocationAndWeather_DesignDay_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimLocationAndWeather_DesignDay_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimLocationAndWeather_DesignDay_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_DesignDay_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimLocationAndWeather_DesignDay_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimLocationAndWeather_DesignDay_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimLocationAndWeather_DesignDay_Default() const\n"
    "    schema::simxml::Model::SimModel::SimLocationAndWeather_DesignDay_Default()\n"
    "    schema::simxml::Model::SimModel::SimLocationAndWeather_DesignDay_Default(schema::simxml::Model::SimModel::SimLocationAndWeather_DesignDay_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimLocationAndWeather_Location_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimLocationAndWeather_Location_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimLocationAndWeather_Location_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimLocationAndWeather_Location_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimLocationAndWeather_Location_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimLocationAndWeather_Location_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_Location_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimLocationAndWeather_Location_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimLocationAndWeather_Location_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimLocationAndWeather_Location_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimLocationAndWeather_Location_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimLocationAndWeather_Location_Default_sequence *) &(arg1)->SimLocationAndWeather_Location_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_Location_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimLocationAndWeather_Location_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimLocationAndWeather_Location_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimLocationAndWeather_Location_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimLocationAndWeather_Location_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_Location_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimLocationAndWeather_Location_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimLocationAndWeather_Location_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimLocationAndWeather_Location_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimLocationAndWeather_Location_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimLocationAndWeather_Location_Default_sequence * >(argp2);
  (arg1)->SimLocationAndWeather_Location_Default((schema::simxml::Model::SimModel::SimLocationAndWeather_Location_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimLocationAndWeather_Location_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimLocationAndWeather_Location_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimLocationAndWeather_Location_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_Location_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimLocationAndWeather_Location_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimLocationAndWeather_Location_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimLocationAndWeather_Location_Default() const\n"
    "    schema::simxml::Model::SimModel::SimLocationAndWeather_Location_Default()\n"
    "    schema::simxml::Model::SimModel::SimLocationAndWeather_Location_Default(schema::simxml::Model::SimModel::SimLocationAndWeather_Location_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimLoop_Loop_PolyLoop__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimLoop_Loop_PolyLoop_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimLoop_Loop_PolyLoop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimLoop_Loop_PolyLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimLoop_Loop_PolyLoop_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimLoop_Loop_PolyLoop();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLoop_Loop_PolyLoop_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimLoop_Loop_PolyLoop__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimLoop_Loop_PolyLoop_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimLoop_Loop_PolyLoop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimLoop_Loop_PolyLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimLoop_Loop_PolyLoop_sequence *) &(arg1)->SimLoop_Loop_PolyLoop();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLoop_Loop_PolyLoop_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimLoop_Loop_PolyLoop__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimLoop_Loop_PolyLoop_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimLoop_Loop_PolyLoop",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimLoop_Loop_PolyLoop" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLoop_Loop_PolyLoop_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimLoop_Loop_PolyLoop" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimLoop_Loop_PolyLoop_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimLoop_Loop_PolyLoop" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimLoop_Loop_PolyLoop_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimLoop_Loop_PolyLoop_sequence * >(argp2);
  (arg1)->SimLoop_Loop_PolyLoop((schema::simxml::Model::SimModel::SimLoop_Loop_PolyLoop_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimLoop_Loop_PolyLoop(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimLoop_Loop_PolyLoop__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimLoop_Loop_PolyLoop__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLoop_Loop_PolyLoop_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimLoop_Loop_PolyLoop__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimLoop_Loop_PolyLoop'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimLoop_Loop_PolyLoop() const\n"
    "    schema::simxml::Model::SimModel::SimLoop_Loop_PolyLoop()\n"
    "    schema::simxml::Model::SimModel::SimLoop_Loop_PolyLoop(schema::simxml::Model::SimModel::SimLoop_Loop_PolyLoop_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMappedRepresentationItem_Default_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMappedRepresentationItem_Default_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMappedRepresentationItem_Default_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMappedRepresentationItem_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMappedRepresentationItem_Default_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimMappedRepresentationItem_Default_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimMappedRepresentationItem_Default_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMappedRepresentationItem_Default_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMappedRepresentationItem_Default_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMappedRepresentationItem_Default_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMappedRepresentationItem_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMappedRepresentationItem_Default_Default_sequence *) &(arg1)->SimMappedRepresentationItem_Default_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimMappedRepresentationItem_Default_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMappedRepresentationItem_Default_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimMappedRepresentationItem_Default_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimMappedRepresentationItem_Default_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMappedRepresentationItem_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimMappedRepresentationItem_Default_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimMappedRepresentationItem_Default_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMappedRepresentationItem_Default_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimMappedRepresentationItem_Default_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMappedRepresentationItem_Default_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimMappedRepresentationItem_Default_Default_sequence * >(argp2);
  (arg1)->SimMappedRepresentationItem_Default_Default((schema::simxml::Model::SimModel::SimMappedRepresentationItem_Default_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMappedRepresentationItem_Default_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMappedRepresentationItem_Default_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMappedRepresentationItem_Default_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimMappedRepresentationItem_Default_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimMappedRepresentationItem_Default_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimMappedRepresentationItem_Default_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimMappedRepresentationItem_Default_Default() const\n"
    "    schema::simxml::Model::SimModel::SimMappedRepresentationItem_Default_Default()\n"
    "    schema::simxml::Model::SimModel::SimMappedRepresentationItem_Default_Default(schema::simxml::Model::SimModel::SimMappedRepresentationItem_Default_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_Default_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterial_Default_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterial_Default_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterial_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterial_Default_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimMaterial_Default_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_Default_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_Default_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterial_Default_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterial_Default_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterial_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterial_Default_Default_sequence *) &(arg1)->SimMaterial_Default_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_Default_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_Default_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimMaterial_Default_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimMaterial_Default_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterial_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_Default_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimMaterial_Default_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterial_Default_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimMaterial_Default_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterial_Default_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimMaterial_Default_Default_sequence * >(argp2);
  (arg1)->SimMaterial_Default_Default((schema::simxml::Model::SimModel::SimMaterial_Default_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_Default_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterial_Default_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterial_Default_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_Default_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimMaterial_Default_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimMaterial_Default_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimMaterial_Default_Default() const\n"
    "    schema::simxml::Model::SimModel::SimMaterial_Default_Default()\n"
    "    schema::simxml::Model::SimModel::SimMaterial_Default_Default(schema::simxml::Model::SimModel::SimMaterial_Default_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_GlazingMaterial_Gas__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Gas_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterial_GlazingMaterial_Gas",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterial_GlazingMaterial_Gas" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Gas_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimMaterial_GlazingMaterial_Gas();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Gas_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_GlazingMaterial_Gas__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Gas_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterial_GlazingMaterial_Gas",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterial_GlazingMaterial_Gas" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Gas_sequence *) &(arg1)->SimMaterial_GlazingMaterial_Gas();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Gas_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_GlazingMaterial_Gas__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Gas_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimMaterial_GlazingMaterial_Gas",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterial_GlazingMaterial_Gas" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Gas_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimMaterial_GlazingMaterial_Gas" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Gas_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimMaterial_GlazingMaterial_Gas" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Gas_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Gas_sequence * >(argp2);
  (arg1)->SimMaterial_GlazingMaterial_Gas((schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Gas_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_GlazingMaterial_Gas(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterial_GlazingMaterial_Gas__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterial_GlazingMaterial_Gas__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Gas_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimMaterial_GlazingMaterial_Gas__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimMaterial_GlazingMaterial_Gas'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Gas() const\n"
    "    schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Gas()\n"
    "    schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Gas(schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Gas_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_GlazingMaterial_Glazing__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Glazing_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterial_GlazingMaterial_Glazing",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterial_GlazingMaterial_Glazing" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Glazing_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimMaterial_GlazingMaterial_Glazing();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Glazing_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_GlazingMaterial_Glazing__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Glazing_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterial_GlazingMaterial_Glazing",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterial_GlazingMaterial_Glazing" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Glazing_sequence *) &(arg1)->SimMaterial_GlazingMaterial_Glazing();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Glazing_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_GlazingMaterial_Glazing__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Glazing_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimMaterial_GlazingMaterial_Glazing",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterial_GlazingMaterial_Glazing" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Glazing_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimMaterial_GlazingMaterial_Glazing" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Glazing_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimMaterial_GlazingMaterial_Glazing" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Glazing_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Glazing_sequence * >(argp2);
  (arg1)->SimMaterial_GlazingMaterial_Glazing((schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Glazing_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_GlazingMaterial_Glazing(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterial_GlazingMaterial_Glazing__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterial_GlazingMaterial_Glazing__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Glazing_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimMaterial_GlazingMaterial_Glazing__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimMaterial_GlazingMaterial_Glazing'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Glazing() const\n"
    "    schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Glazing()\n"
    "    schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Glazing(schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Glazing_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_GlazingMaterial_SimpleGlazingSystem__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterial_GlazingMaterial_SimpleGlazingSystem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterial_GlazingMaterial_SimpleGlazingSystem" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimMaterial_GlazingMaterial_SimpleGlazingSystem();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_SimpleGlazingSystem_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_GlazingMaterial_SimpleGlazingSystem__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterial_GlazingMaterial_SimpleGlazingSystem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterial_GlazingMaterial_SimpleGlazingSystem" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence *) &(arg1)->SimMaterial_GlazingMaterial_SimpleGlazingSystem();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_SimpleGlazingSystem_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_GlazingMaterial_SimpleGlazingSystem__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimMaterial_GlazingMaterial_SimpleGlazingSystem",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterial_GlazingMaterial_SimpleGlazingSystem" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_SimpleGlazingSystem_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimMaterial_GlazingMaterial_SimpleGlazingSystem" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimMaterial_GlazingMaterial_SimpleGlazingSystem" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence * >(argp2);
  (arg1)->SimMaterial_GlazingMaterial_SimpleGlazingSystem((schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_GlazingMaterial_SimpleGlazingSystem(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterial_GlazingMaterial_SimpleGlazingSystem__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterial_GlazingMaterial_SimpleGlazingSystem__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_SimpleGlazingSystem_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimMaterial_GlazingMaterial_SimpleGlazingSystem__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimMaterial_GlazingMaterial_SimpleGlazingSystem'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_SimpleGlazingSystem() const\n"
    "    schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_SimpleGlazingSystem()\n"
    "    schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_SimpleGlazingSystem(schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_OpaqueMaterial_AirGap__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_AirGap_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterial_OpaqueMaterial_AirGap",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterial_OpaqueMaterial_AirGap" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_AirGap_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimMaterial_OpaqueMaterial_AirGap();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_AirGap_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_OpaqueMaterial_AirGap__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_AirGap_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterial_OpaqueMaterial_AirGap",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterial_OpaqueMaterial_AirGap" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_AirGap_sequence *) &(arg1)->SimMaterial_OpaqueMaterial_AirGap();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_AirGap_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_OpaqueMaterial_AirGap__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_AirGap_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimMaterial_OpaqueMaterial_AirGap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterial_OpaqueMaterial_AirGap" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_AirGap_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimMaterial_OpaqueMaterial_AirGap" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_AirGap_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimMaterial_OpaqueMaterial_AirGap" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_AirGap_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_AirGap_sequence * >(argp2);
  (arg1)->SimMaterial_OpaqueMaterial_AirGap((schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_AirGap_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_OpaqueMaterial_AirGap(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterial_OpaqueMaterial_AirGap__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterial_OpaqueMaterial_AirGap__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_AirGap_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimMaterial_OpaqueMaterial_AirGap__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimMaterial_OpaqueMaterial_AirGap'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_AirGap() const\n"
    "    schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_AirGap()\n"
    "    schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_AirGap(schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_AirGap_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_OpaqueMaterial_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterial_OpaqueMaterial_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterial_OpaqueMaterial_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimMaterial_OpaqueMaterial_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_OpaqueMaterial_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterial_OpaqueMaterial_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterial_OpaqueMaterial_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_Default_sequence *) &(arg1)->SimMaterial_OpaqueMaterial_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_OpaqueMaterial_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimMaterial_OpaqueMaterial_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterial_OpaqueMaterial_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimMaterial_OpaqueMaterial_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimMaterial_OpaqueMaterial_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_Default_sequence * >(argp2);
  (arg1)->SimMaterial_OpaqueMaterial_Default((schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterial_OpaqueMaterial_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterial_OpaqueMaterial_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterial_OpaqueMaterial_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimMaterial_OpaqueMaterial_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimMaterial_OpaqueMaterial_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_Default() const\n"
    "    schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_Default()\n"
    "    schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_Default(schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayer_GlazingMaterialLayer_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayer_GlazingMaterialLayer_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayer_GlazingMaterialLayer_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimMaterialLayer_GlazingMaterialLayer_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayer_GlazingMaterialLayer_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayer_GlazingMaterialLayer_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayer_GlazingMaterialLayer_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Default_sequence *) &(arg1)->SimMaterialLayer_GlazingMaterialLayer_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayer_GlazingMaterialLayer_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimMaterialLayer_GlazingMaterialLayer_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayer_GlazingMaterialLayer_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimMaterialLayer_GlazingMaterialLayer_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimMaterialLayer_GlazingMaterialLayer_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Default_sequence * >(argp2);
  (arg1)->SimMaterialLayer_GlazingMaterialLayer_Default((schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayer_GlazingMaterialLayer_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayer_GlazingMaterialLayer_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayer_GlazingMaterialLayer_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimMaterialLayer_GlazingMaterialLayer_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimMaterialLayer_GlazingMaterialLayer_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Default() const\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Default()\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Default(schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayer_GlazingMaterialLayer_Thermochromic__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Thermochromic_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayer_GlazingMaterialLayer_Thermochromic",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayer_GlazingMaterialLayer_Thermochromic" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Thermochromic_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimMaterialLayer_GlazingMaterialLayer_Thermochromic();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Thermochromic_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayer_GlazingMaterialLayer_Thermochromic__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Thermochromic_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayer_GlazingMaterialLayer_Thermochromic",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayer_GlazingMaterialLayer_Thermochromic" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Thermochromic_sequence *) &(arg1)->SimMaterialLayer_GlazingMaterialLayer_Thermochromic();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Thermochromic_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayer_GlazingMaterialLayer_Thermochromic__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Thermochromic_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimMaterialLayer_GlazingMaterialLayer_Thermochromic",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayer_GlazingMaterialLayer_Thermochromic" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Thermochromic_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimMaterialLayer_GlazingMaterialLayer_Thermochromic" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Thermochromic_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimMaterialLayer_GlazingMaterialLayer_Thermochromic" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Thermochromic_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Thermochromic_sequence * >(argp2);
  (arg1)->SimMaterialLayer_GlazingMaterialLayer_Thermochromic((schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Thermochromic_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayer_GlazingMaterialLayer_Thermochromic(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayer_GlazingMaterialLayer_Thermochromic__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayer_GlazingMaterialLayer_Thermochromic__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Thermochromic_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimMaterialLayer_GlazingMaterialLayer_Thermochromic__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimMaterialLayer_GlazingMaterialLayer_Thermochromic'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Thermochromic() const\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Thermochromic()\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Thermochromic(schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Thermochromic_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayer_OpaqueMaterialLayer_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayer_OpaqueMaterialLayer_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayer_OpaqueMaterialLayer_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayer_OpaqueMaterialLayer_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayer_OpaqueMaterialLayer_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimMaterialLayer_OpaqueMaterialLayer_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_OpaqueMaterialLayer_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayer_OpaqueMaterialLayer_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayer_OpaqueMaterialLayer_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayer_OpaqueMaterialLayer_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayer_OpaqueMaterialLayer_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayer_OpaqueMaterialLayer_Default_sequence *) &(arg1)->SimMaterialLayer_OpaqueMaterialLayer_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_OpaqueMaterialLayer_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayer_OpaqueMaterialLayer_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayer_OpaqueMaterialLayer_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimMaterialLayer_OpaqueMaterialLayer_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayer_OpaqueMaterialLayer_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_OpaqueMaterialLayer_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimMaterialLayer_OpaqueMaterialLayer_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayer_OpaqueMaterialLayer_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimMaterialLayer_OpaqueMaterialLayer_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayer_OpaqueMaterialLayer_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimMaterialLayer_OpaqueMaterialLayer_Default_sequence * >(argp2);
  (arg1)->SimMaterialLayer_OpaqueMaterialLayer_Default((schema::simxml::Model::SimModel::SimMaterialLayer_OpaqueMaterialLayer_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayer_OpaqueMaterialLayer_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayer_OpaqueMaterialLayer_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayer_OpaqueMaterialLayer_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_OpaqueMaterialLayer_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimMaterialLayer_OpaqueMaterialLayer_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimMaterialLayer_OpaqueMaterialLayer_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayer_OpaqueMaterialLayer_Default() const\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayer_OpaqueMaterialLayer_Default()\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayer_OpaqueMaterialLayer_Default(schema::simxml::Model::SimModel::SimMaterialLayer_OpaqueMaterialLayer_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_Default_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_Default_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayerSet_Default_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayerSet_Default_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimMaterialLayerSet_Default_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_Default_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_Default_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_Default_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayerSet_Default_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayerSet_Default_Default_sequence *) &(arg1)->SimMaterialLayerSet_Default_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_Default_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_Default_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_Default_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimMaterialLayerSet_Default_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_Default_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimMaterialLayerSet_Default_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayerSet_Default_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimMaterialLayerSet_Default_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayerSet_Default_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimMaterialLayerSet_Default_Default_sequence * >(argp2);
  (arg1)->SimMaterialLayerSet_Default_Default((schema::simxml::Model::SimModel::SimMaterialLayerSet_Default_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_Default_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayerSet_Default_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayerSet_Default_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_Default_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimMaterialLayerSet_Default_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimMaterialLayerSet_Default_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_Default_Default() const\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_Default_Default()\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_Default_Default(schema::simxml::Model::SimModel::SimMaterialLayerSet_Default_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_GlazingLayerSet_Window__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_GlazingLayerSet_Window_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayerSet_GlazingLayerSet_Window",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_GlazingLayerSet_Window" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayerSet_GlazingLayerSet_Window_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimMaterialLayerSet_GlazingLayerSet_Window();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_GlazingLayerSet_Window_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_GlazingLayerSet_Window__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_GlazingLayerSet_Window_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayerSet_GlazingLayerSet_Window",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_GlazingLayerSet_Window" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayerSet_GlazingLayerSet_Window_sequence *) &(arg1)->SimMaterialLayerSet_GlazingLayerSet_Window();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_GlazingLayerSet_Window_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_GlazingLayerSet_Window__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_GlazingLayerSet_Window_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimMaterialLayerSet_GlazingLayerSet_Window",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_GlazingLayerSet_Window" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_GlazingLayerSet_Window_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimMaterialLayerSet_GlazingLayerSet_Window" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayerSet_GlazingLayerSet_Window_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimMaterialLayerSet_GlazingLayerSet_Window" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayerSet_GlazingLayerSet_Window_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimMaterialLayerSet_GlazingLayerSet_Window_sequence * >(argp2);
  (arg1)->SimMaterialLayerSet_GlazingLayerSet_Window((schema::simxml::Model::SimModel::SimMaterialLayerSet_GlazingLayerSet_Window_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_GlazingLayerSet_Window(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayerSet_GlazingLayerSet_Window__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayerSet_GlazingLayerSet_Window__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_GlazingLayerSet_Window_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimMaterialLayerSet_GlazingLayerSet_Window__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimMaterialLayerSet_GlazingLayerSet_Window'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_GlazingLayerSet_Window() const\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_GlazingLayerSet_Window()\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_GlazingLayerSet_Window(schema::simxml::Model::SimModel::SimMaterialLayerSet_GlazingLayerSet_Window_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Ceiling__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayerSet_OpaqueLayerSet_Ceiling",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Ceiling" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimMaterialLayerSet_OpaqueLayerSet_Ceiling();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Ceiling_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Ceiling__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayerSet_OpaqueLayerSet_Ceiling",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Ceiling" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence *) &(arg1)->SimMaterialLayerSet_OpaqueLayerSet_Ceiling();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Ceiling_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Ceiling__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimMaterialLayerSet_OpaqueLayerSet_Ceiling",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Ceiling" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Ceiling_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Ceiling" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Ceiling" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence * >(argp2);
  (arg1)->SimMaterialLayerSet_OpaqueLayerSet_Ceiling((schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Ceiling(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Ceiling__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Ceiling__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Ceiling_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Ceiling__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimMaterialLayerSet_OpaqueLayerSet_Ceiling'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Ceiling() const\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Ceiling()\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Ceiling(schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Door__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Door_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayerSet_OpaqueLayerSet_Door",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Door" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Door_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimMaterialLayerSet_OpaqueLayerSet_Door();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Door_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Door__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Door_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayerSet_OpaqueLayerSet_Door",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Door" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Door_sequence *) &(arg1)->SimMaterialLayerSet_OpaqueLayerSet_Door();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Door_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Door__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Door_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimMaterialLayerSet_OpaqueLayerSet_Door",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Door" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Door_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Door" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Door_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Door" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Door_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Door_sequence * >(argp2);
  (arg1)->SimMaterialLayerSet_OpaqueLayerSet_Door((schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Door_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Door(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Door__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Door__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Door_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Door__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimMaterialLayerSet_OpaqueLayerSet_Door'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Door() const\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Door()\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Door(schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Door_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Floor__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayerSet_OpaqueLayerSet_Floor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Floor" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimMaterialLayerSet_OpaqueLayerSet_Floor();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Floor_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Floor__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayerSet_OpaqueLayerSet_Floor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Floor" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence *) &(arg1)->SimMaterialLayerSet_OpaqueLayerSet_Floor();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Floor_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Floor__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimMaterialLayerSet_OpaqueLayerSet_Floor",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Floor" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Floor_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Floor" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Floor" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence * >(argp2);
  (arg1)->SimMaterialLayerSet_OpaqueLayerSet_Floor((schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Floor(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Floor__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Floor__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Floor_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Floor__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimMaterialLayerSet_OpaqueLayerSet_Floor'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Floor() const\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Floor()\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Floor(schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_InternalSource__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayerSet_OpaqueLayerSet_InternalSource",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_InternalSource" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimMaterialLayerSet_OpaqueLayerSet_InternalSource();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_InternalSource_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_InternalSource__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayerSet_OpaqueLayerSet_InternalSource",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_InternalSource" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence *) &(arg1)->SimMaterialLayerSet_OpaqueLayerSet_InternalSource();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_InternalSource_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_InternalSource__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimMaterialLayerSet_OpaqueLayerSet_InternalSource",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_InternalSource" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_InternalSource_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_InternalSource" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_InternalSource" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence * >(argp2);
  (arg1)->SimMaterialLayerSet_OpaqueLayerSet_InternalSource((schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_InternalSource(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_InternalSource__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_InternalSource__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_InternalSource_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_InternalSource__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimMaterialLayerSet_OpaqueLayerSet_InternalSource'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_InternalSource() const\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_InternalSource()\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_InternalSource(schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Roof__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayerSet_OpaqueLayerSet_Roof",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Roof" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimMaterialLayerSet_OpaqueLayerSet_Roof();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Roof_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Roof__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayerSet_OpaqueLayerSet_Roof",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Roof" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence *) &(arg1)->SimMaterialLayerSet_OpaqueLayerSet_Roof();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Roof_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Roof__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimMaterialLayerSet_OpaqueLayerSet_Roof",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Roof" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Roof_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Roof" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Roof" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence * >(argp2);
  (arg1)->SimMaterialLayerSet_OpaqueLayerSet_Roof((schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Roof(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Roof__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Roof__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Roof_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Roof__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimMaterialLayerSet_OpaqueLayerSet_Roof'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Roof() const\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Roof()\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Roof(schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Wall__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayerSet_OpaqueLayerSet_Wall",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Wall" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimMaterialLayerSet_OpaqueLayerSet_Wall();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Wall_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Wall__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimMaterialLayerSet_OpaqueLayerSet_Wall",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Wall" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence *) &(arg1)->SimMaterialLayerSet_OpaqueLayerSet_Wall();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Wall_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Wall__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimMaterialLayerSet_OpaqueLayerSet_Wall",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Wall" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Wall_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Wall" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimMaterialLayerSet_OpaqueLayerSet_Wall" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence * >(argp2);
  (arg1)->SimMaterialLayerSet_OpaqueLayerSet_Wall((schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Wall(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Wall__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Wall__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Wall_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Wall__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimMaterialLayerSet_OpaqueLayerSet_Wall'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Wall() const\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Wall()\n"
    "    schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Wall(schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelRepresentationContext_GeometricRepresentationContext_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimModelRepresentationContext_GeometricRepresentationContext_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelRepresentationContext_GeometricRepresentationContext_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimModelRepresentationContext_GeometricRepresentationContext_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationContext_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelRepresentationContext_GeometricRepresentationContext_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimModelRepresentationContext_GeometricRepresentationContext_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelRepresentationContext_GeometricRepresentationContext_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence *) &(arg1)->SimModelRepresentationContext_GeometricRepresentationContext_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationContext_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelRepresentationContext_GeometricRepresentationContext_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimModelRepresentationContext_GeometricRepresentationContext_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelRepresentationContext_GeometricRepresentationContext_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationContext_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimModelRepresentationContext_GeometricRepresentationContext_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimModelRepresentationContext_GeometricRepresentationContext_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence * >(argp2);
  (arg1)->SimModelRepresentationContext_GeometricRepresentationContext_Default((schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelRepresentationContext_GeometricRepresentationContext_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimModelRepresentationContext_GeometricRepresentationContext_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimModelRepresentationContext_GeometricRepresentationContext_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationContext_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimModelRepresentationContext_GeometricRepresentationContext_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimModelRepresentationContext_GeometricRepresentationContext_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationContext_Default() const\n"
    "    schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationContext_Default()\n"
    "    schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationContext_Default(schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelRepresentationContext_GeometricRepresentationSubContext_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimModelRepresentationContext_GeometricRepresentationSubContext_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelRepresentationContext_GeometricRepresentationSubContext_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimModelRepresentationContext_GeometricRepresentationSubContext_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationSubContext_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelRepresentationContext_GeometricRepresentationSubContext_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimModelRepresentationContext_GeometricRepresentationSubContext_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelRepresentationContext_GeometricRepresentationSubContext_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence *) &(arg1)->SimModelRepresentationContext_GeometricRepresentationSubContext_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationSubContext_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelRepresentationContext_GeometricRepresentationSubContext_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimModelRepresentationContext_GeometricRepresentationSubContext_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelRepresentationContext_GeometricRepresentationSubContext_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationSubContext_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimModelRepresentationContext_GeometricRepresentationSubContext_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimModelRepresentationContext_GeometricRepresentationSubContext_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence * >(argp2);
  (arg1)->SimModelRepresentationContext_GeometricRepresentationSubContext_Default((schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelRepresentationContext_GeometricRepresentationSubContext_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimModelRepresentationContext_GeometricRepresentationSubContext_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimModelRepresentationContext_GeometricRepresentationSubContext_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationSubContext_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimModelRepresentationContext_GeometricRepresentationSubContext_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimModelRepresentationContext_GeometricRepresentationSubContext_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationSubContext_Default() const\n"
    "    schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationSubContext_Default()\n"
    "    schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationSubContext_Default(schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_AirFlowPort_Air_In__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_In_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimNode_AirFlowPort_Air_In",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimNode_AirFlowPort_Air_In" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_In_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimNode_AirFlowPort_Air_In();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_In_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_AirFlowPort_Air_In__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_In_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimNode_AirFlowPort_Air_In",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimNode_AirFlowPort_Air_In" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_In_sequence *) &(arg1)->SimNode_AirFlowPort_Air_In();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_In_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_AirFlowPort_Air_In__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_In_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimNode_AirFlowPort_Air_In",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimNode_AirFlowPort_Air_In" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_In_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimNode_AirFlowPort_Air_In" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_In_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimNode_AirFlowPort_Air_In" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_In_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_In_sequence * >(argp2);
  (arg1)->SimNode_AirFlowPort_Air_In((schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_In_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_AirFlowPort_Air_In(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimNode_AirFlowPort_Air_In__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimNode_AirFlowPort_Air_In__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_In_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimNode_AirFlowPort_Air_In__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimNode_AirFlowPort_Air_In'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_In() const\n"
    "    schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_In()\n"
    "    schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_In(schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_In_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_AirFlowPort_Air_Out__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_Out_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimNode_AirFlowPort_Air_Out",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimNode_AirFlowPort_Air_Out" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_Out_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimNode_AirFlowPort_Air_Out();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_Out_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_AirFlowPort_Air_Out__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_Out_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimNode_AirFlowPort_Air_Out",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimNode_AirFlowPort_Air_Out" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_Out_sequence *) &(arg1)->SimNode_AirFlowPort_Air_Out();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_Out_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_AirFlowPort_Air_Out__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_Out_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimNode_AirFlowPort_Air_Out",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimNode_AirFlowPort_Air_Out" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_Out_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimNode_AirFlowPort_Air_Out" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_Out_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimNode_AirFlowPort_Air_Out" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_Out_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_Out_sequence * >(argp2);
  (arg1)->SimNode_AirFlowPort_Air_Out((schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_Out_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_AirFlowPort_Air_Out(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimNode_AirFlowPort_Air_Out__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimNode_AirFlowPort_Air_Out__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_Out_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimNode_AirFlowPort_Air_Out__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimNode_AirFlowPort_Air_Out'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_Out() const\n"
    "    schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_Out()\n"
    "    schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_Out(schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_Out_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_DigitalControl_AirLoop_DigitalSignal_In__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimNode_DigitalControl_AirLoop_DigitalSignal_In",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimNode_DigitalControl_AirLoop_DigitalSignal_In" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimNode_DigitalControl_AirLoop_DigitalSignal_In();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_AirLoop_DigitalSignal_In_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_DigitalControl_AirLoop_DigitalSignal_In__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimNode_DigitalControl_AirLoop_DigitalSignal_In",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimNode_DigitalControl_AirLoop_DigitalSignal_In" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence *) &(arg1)->SimNode_DigitalControl_AirLoop_DigitalSignal_In();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_AirLoop_DigitalSignal_In_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_DigitalControl_AirLoop_DigitalSignal_In__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimNode_DigitalControl_AirLoop_DigitalSignal_In",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimNode_DigitalControl_AirLoop_DigitalSignal_In" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_AirLoop_DigitalSignal_In_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimNode_DigitalControl_AirLoop_DigitalSignal_In" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimNode_DigitalControl_AirLoop_DigitalSignal_In" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence * >(argp2);
  (arg1)->SimNode_DigitalControl_AirLoop_DigitalSignal_In((schema::simxml::Model::SimModel::SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_DigitalControl_AirLoop_DigitalSignal_In(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimNode_DigitalControl_AirLoop_DigitalSignal_In__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimNode_DigitalControl_AirLoop_DigitalSignal_In__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_AirLoop_DigitalSignal_In_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimNode_DigitalControl_AirLoop_DigitalSignal_In__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimNode_DigitalControl_AirLoop_DigitalSignal_In'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimNode_DigitalControl_AirLoop_DigitalSignal_In() const\n"
    "    schema::simxml::Model::SimModel::SimNode_DigitalControl_AirLoop_DigitalSignal_In()\n"
    "    schema::simxml::Model::SimModel::SimNode_DigitalControl_AirLoop_DigitalSignal_In(schema::simxml::Model::SimModel::SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_DigitalControl_HWLoop_DigitalSignal_In__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimNode_DigitalControl_HWLoop_DigitalSignal_In",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimNode_DigitalControl_HWLoop_DigitalSignal_In" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimNode_DigitalControl_HWLoop_DigitalSignal_In();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_HWLoop_DigitalSignal_In_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_DigitalControl_HWLoop_DigitalSignal_In__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimNode_DigitalControl_HWLoop_DigitalSignal_In",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimNode_DigitalControl_HWLoop_DigitalSignal_In" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence *) &(arg1)->SimNode_DigitalControl_HWLoop_DigitalSignal_In();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_HWLoop_DigitalSignal_In_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_DigitalControl_HWLoop_DigitalSignal_In__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimNode_DigitalControl_HWLoop_DigitalSignal_In",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimNode_DigitalControl_HWLoop_DigitalSignal_In" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_HWLoop_DigitalSignal_In_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimNode_DigitalControl_HWLoop_DigitalSignal_In" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimNode_DigitalControl_HWLoop_DigitalSignal_In" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence * >(argp2);
  (arg1)->SimNode_DigitalControl_HWLoop_DigitalSignal_In((schema::simxml::Model::SimModel::SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_DigitalControl_HWLoop_DigitalSignal_In(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimNode_DigitalControl_HWLoop_DigitalSignal_In__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimNode_DigitalControl_HWLoop_DigitalSignal_In__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_HWLoop_DigitalSignal_In_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimNode_DigitalControl_HWLoop_DigitalSignal_In__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimNode_DigitalControl_HWLoop_DigitalSignal_In'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimNode_DigitalControl_HWLoop_DigitalSignal_In() const\n"
    "    schema::simxml::Model::SimModel::SimNode_DigitalControl_HWLoop_DigitalSignal_In()\n"
    "    schema::simxml::Model::SimModel::SimNode_DigitalControl_HWLoop_DigitalSignal_In(schema::simxml::Model::SimModel::SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_Docking_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimNode_Docking_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimNode_Docking_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimNode_Docking_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimNode_Docking_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimNode_Docking_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_Docking_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_Docking_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimNode_Docking_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimNode_Docking_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimNode_Docking_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimNode_Docking_Default_sequence *) &(arg1)->SimNode_Docking_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_Docking_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_Docking_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimNode_Docking_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimNode_Docking_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimNode_Docking_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_Docking_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimNode_Docking_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimNode_Docking_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimNode_Docking_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimNode_Docking_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimNode_Docking_Default_sequence * >(argp2);
  (arg1)->SimNode_Docking_Default((schema::simxml::Model::SimModel::SimNode_Docking_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_Docking_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimNode_Docking_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimNode_Docking_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_Docking_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimNode_Docking_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimNode_Docking_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimNode_Docking_Default() const\n"
    "    schema::simxml::Model::SimModel::SimNode_Docking_Default()\n"
    "    schema::simxml::Model::SimModel::SimNode_Docking_Default(schema::simxml::Model::SimModel::SimNode_Docking_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_HotWaterFlowPort_Water_In__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_In_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimNode_HotWaterFlowPort_Water_In",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimNode_HotWaterFlowPort_Water_In" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_In_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimNode_HotWaterFlowPort_Water_In();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_In_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_HotWaterFlowPort_Water_In__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_In_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimNode_HotWaterFlowPort_Water_In",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimNode_HotWaterFlowPort_Water_In" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_In_sequence *) &(arg1)->SimNode_HotWaterFlowPort_Water_In();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_In_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_HotWaterFlowPort_Water_In__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_In_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimNode_HotWaterFlowPort_Water_In",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimNode_HotWaterFlowPort_Water_In" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_In_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimNode_HotWaterFlowPort_Water_In" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_In_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimNode_HotWaterFlowPort_Water_In" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_In_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_In_sequence * >(argp2);
  (arg1)->SimNode_HotWaterFlowPort_Water_In((schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_In_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_HotWaterFlowPort_Water_In(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimNode_HotWaterFlowPort_Water_In__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimNode_HotWaterFlowPort_Water_In__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_In_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimNode_HotWaterFlowPort_Water_In__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimNode_HotWaterFlowPort_Water_In'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_In() const\n"
    "    schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_In()\n"
    "    schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_In(schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_In_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_HotWaterFlowPort_Water_Out__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_Out_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimNode_HotWaterFlowPort_Water_Out",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimNode_HotWaterFlowPort_Water_Out" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_Out_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimNode_HotWaterFlowPort_Water_Out();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_Out_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_HotWaterFlowPort_Water_Out__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_Out_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimNode_HotWaterFlowPort_Water_Out",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimNode_HotWaterFlowPort_Water_Out" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_Out_sequence *) &(arg1)->SimNode_HotWaterFlowPort_Water_Out();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_Out_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_HotWaterFlowPort_Water_Out__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_Out_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimNode_HotWaterFlowPort_Water_Out",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimNode_HotWaterFlowPort_Water_Out" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_Out_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimNode_HotWaterFlowPort_Water_Out" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_Out_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimNode_HotWaterFlowPort_Water_Out" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_Out_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_Out_sequence * >(argp2);
  (arg1)->SimNode_HotWaterFlowPort_Water_Out((schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_Out_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimNode_HotWaterFlowPort_Water_Out(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimNode_HotWaterFlowPort_Water_Out__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimNode_HotWaterFlowPort_Water_Out__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_Out_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimNode_HotWaterFlowPort_Water_Out__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimNode_HotWaterFlowPort_Water_Out'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_Out() const\n"
    "    schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_Out()\n"
    "    schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_Out(schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_Out_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimOrganization_Organization_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimOrganization_Organization_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimOrganization_Organization_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimOrganization_Organization_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimOrganization_Organization_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimOrganization_Organization_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOrganization_Organization_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimOrganization_Organization_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimOrganization_Organization_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimOrganization_Organization_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimOrganization_Organization_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimOrganization_Organization_Default_sequence *) &(arg1)->SimOrganization_Organization_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOrganization_Organization_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimOrganization_Organization_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimOrganization_Organization_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimOrganization_Organization_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimOrganization_Organization_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOrganization_Organization_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimOrganization_Organization_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimOrganization_Organization_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimOrganization_Organization_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimOrganization_Organization_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimOrganization_Organization_Default_sequence * >(argp2);
  (arg1)->SimOrganization_Organization_Default((schema::simxml::Model::SimModel::SimOrganization_Organization_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimOrganization_Organization_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimOrganization_Organization_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimOrganization_Organization_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOrganization_Organization_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimOrganization_Organization_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimOrganization_Organization_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimOrganization_Organization_Default() const\n"
    "    schema::simxml::Model::SimModel::SimOrganization_Organization_Default()\n"
    "    schema::simxml::Model::SimModel::SimOrganization_Organization_Default(schema::simxml::Model::SimModel::SimOrganization_Organization_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimOwnerHistory_Default_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimOwnerHistory_Default_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimOwnerHistory_Default_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimOwnerHistory_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimOwnerHistory_Default_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimOwnerHistory_Default_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOwnerHistory_Default_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimOwnerHistory_Default_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimOwnerHistory_Default_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimOwnerHistory_Default_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimOwnerHistory_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimOwnerHistory_Default_Default_sequence *) &(arg1)->SimOwnerHistory_Default_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOwnerHistory_Default_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimOwnerHistory_Default_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimOwnerHistory_Default_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimOwnerHistory_Default_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimOwnerHistory_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOwnerHistory_Default_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimOwnerHistory_Default_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimOwnerHistory_Default_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimOwnerHistory_Default_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimOwnerHistory_Default_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimOwnerHistory_Default_Default_sequence * >(argp2);
  (arg1)->SimOwnerHistory_Default_Default((schema::simxml::Model::SimModel::SimOwnerHistory_Default_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimOwnerHistory_Default_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimOwnerHistory_Default_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimOwnerHistory_Default_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOwnerHistory_Default_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimOwnerHistory_Default_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimOwnerHistory_Default_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimOwnerHistory_Default_Default() const\n"
    "    schema::simxml::Model::SimModel::SimOwnerHistory_Default_Default()\n"
    "    schema::simxml::Model::SimModel::SimOwnerHistory_Default_Default(schema::simxml::Model::SimModel::SimOwnerHistory_Default_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimParameterizedProfileDef_ParameterizedProfile_Rectangle__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimParameterizedProfileDef_ParameterizedProfile_Rectangle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimParameterizedProfileDef_ParameterizedProfile_Rectangle" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimParameterizedProfileDef_ParameterizedProfile_Rectangle();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimParameterizedProfileDef_ParameterizedProfile_Rectangle_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimParameterizedProfileDef_ParameterizedProfile_Rectangle__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimParameterizedProfileDef_ParameterizedProfile_Rectangle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimParameterizedProfileDef_ParameterizedProfile_Rectangle" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence *) &(arg1)->SimParameterizedProfileDef_ParameterizedProfile_Rectangle();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimParameterizedProfileDef_ParameterizedProfile_Rectangle_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimParameterizedProfileDef_ParameterizedProfile_Rectangle__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimParameterizedProfileDef_ParameterizedProfile_Rectangle",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimParameterizedProfileDef_ParameterizedProfile_Rectangle" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimParameterizedProfileDef_ParameterizedProfile_Rectangle_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimParameterizedProfileDef_ParameterizedProfile_Rectangle" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimParameterizedProfileDef_ParameterizedProfile_Rectangle" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence * >(argp2);
  (arg1)->SimParameterizedProfileDef_ParameterizedProfile_Rectangle((schema::simxml::Model::SimModel::SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimParameterizedProfileDef_ParameterizedProfile_Rectangle(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimParameterizedProfileDef_ParameterizedProfile_Rectangle__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimParameterizedProfileDef_ParameterizedProfile_Rectangle__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimParameterizedProfileDef_ParameterizedProfile_Rectangle_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimParameterizedProfileDef_ParameterizedProfile_Rectangle__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimParameterizedProfileDef_ParameterizedProfile_Rectangle'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimParameterizedProfileDef_ParameterizedProfile_Rectangle() const\n"
    "    schema::simxml::Model::SimModel::SimParameterizedProfileDef_ParameterizedProfile_Rectangle()\n"
    "    schema::simxml::Model::SimModel::SimParameterizedProfileDef_ParameterizedProfile_Rectangle(schema::simxml::Model::SimModel::SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimPerson_Person_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimPerson_Person_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimPerson_Person_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimPerson_Person_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimPerson_Person_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimPerson_Person_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPerson_Person_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimPerson_Person_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimPerson_Person_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimPerson_Person_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimPerson_Person_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimPerson_Person_Default_sequence *) &(arg1)->SimPerson_Person_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPerson_Person_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimPerson_Person_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimPerson_Person_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimPerson_Person_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimPerson_Person_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPerson_Person_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimPerson_Person_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimPerson_Person_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimPerson_Person_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimPerson_Person_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimPerson_Person_Default_sequence * >(argp2);
  (arg1)->SimPerson_Person_Default((schema::simxml::Model::SimModel::SimPerson_Person_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimPerson_Person_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimPerson_Person_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimPerson_Person_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPerson_Person_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimPerson_Person_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimPerson_Person_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimPerson_Person_Default() const\n"
    "    schema::simxml::Model::SimModel::SimPerson_Person_Default()\n"
    "    schema::simxml::Model::SimModel::SimPerson_Person_Default(schema::simxml::Model::SimModel::SimPerson_Person_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimPersonAndOrganization_PersonAndOrganization_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimPersonAndOrganization_PersonAndOrganization_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimPersonAndOrganization_PersonAndOrganization_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimPersonAndOrganization_PersonAndOrganization_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimPersonAndOrganization_PersonAndOrganization_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimPersonAndOrganization_PersonAndOrganization_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPersonAndOrganization_PersonAndOrganization_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimPersonAndOrganization_PersonAndOrganization_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimPersonAndOrganization_PersonAndOrganization_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimPersonAndOrganization_PersonAndOrganization_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimPersonAndOrganization_PersonAndOrganization_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimPersonAndOrganization_PersonAndOrganization_Default_sequence *) &(arg1)->SimPersonAndOrganization_PersonAndOrganization_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPersonAndOrganization_PersonAndOrganization_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimPersonAndOrganization_PersonAndOrganization_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimPersonAndOrganization_PersonAndOrganization_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimPersonAndOrganization_PersonAndOrganization_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimPersonAndOrganization_PersonAndOrganization_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPersonAndOrganization_PersonAndOrganization_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimPersonAndOrganization_PersonAndOrganization_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimPersonAndOrganization_PersonAndOrganization_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimPersonAndOrganization_PersonAndOrganization_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimPersonAndOrganization_PersonAndOrganization_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimPersonAndOrganization_PersonAndOrganization_Default_sequence * >(argp2);
  (arg1)->SimPersonAndOrganization_PersonAndOrganization_Default((schema::simxml::Model::SimModel::SimPersonAndOrganization_PersonAndOrganization_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimPersonAndOrganization_PersonAndOrganization_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimPersonAndOrganization_PersonAndOrganization_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimPersonAndOrganization_PersonAndOrganization_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPersonAndOrganization_PersonAndOrganization_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimPersonAndOrganization_PersonAndOrganization_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimPersonAndOrganization_PersonAndOrganization_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimPersonAndOrganization_PersonAndOrganization_Default() const\n"
    "    schema::simxml::Model::SimModel::SimPersonAndOrganization_PersonAndOrganization_Default()\n"
    "    schema::simxml::Model::SimModel::SimPersonAndOrganization_PersonAndOrganization_Default(schema::simxml::Model::SimModel::SimPersonAndOrganization_PersonAndOrganization_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimPlacement_Axis2Placement2D_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimPlacement_Axis2Placement2D_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimPlacement_Axis2Placement2D_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimPlacement_Axis2Placement2D_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimPlacement_Axis2Placement2D_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimPlacement_Axis2Placement2D_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement2D_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimPlacement_Axis2Placement2D_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimPlacement_Axis2Placement2D_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimPlacement_Axis2Placement2D_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimPlacement_Axis2Placement2D_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimPlacement_Axis2Placement2D_Default_sequence *) &(arg1)->SimPlacement_Axis2Placement2D_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement2D_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimPlacement_Axis2Placement2D_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimPlacement_Axis2Placement2D_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimPlacement_Axis2Placement2D_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimPlacement_Axis2Placement2D_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement2D_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimPlacement_Axis2Placement2D_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimPlacement_Axis2Placement2D_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimPlacement_Axis2Placement2D_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimPlacement_Axis2Placement2D_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimPlacement_Axis2Placement2D_Default_sequence * >(argp2);
  (arg1)->SimPlacement_Axis2Placement2D_Default((schema::simxml::Model::SimModel::SimPlacement_Axis2Placement2D_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimPlacement_Axis2Placement2D_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimPlacement_Axis2Placement2D_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimPlacement_Axis2Placement2D_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement2D_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimPlacement_Axis2Placement2D_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimPlacement_Axis2Placement2D_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimPlacement_Axis2Placement2D_Default() const\n"
    "    schema::simxml::Model::SimModel::SimPlacement_Axis2Placement2D_Default()\n"
    "    schema::simxml::Model::SimModel::SimPlacement_Axis2Placement2D_Default(schema::simxml::Model::SimModel::SimPlacement_Axis2Placement2D_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimPlacement_Axis2Placement3D_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimPlacement_Axis2Placement3D_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimPlacement_Axis2Placement3D_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimPlacement_Axis2Placement3D_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimPlacement_Axis2Placement3D_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimPlacement_Axis2Placement3D_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement3D_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimPlacement_Axis2Placement3D_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimPlacement_Axis2Placement3D_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimPlacement_Axis2Placement3D_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimPlacement_Axis2Placement3D_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimPlacement_Axis2Placement3D_Default_sequence *) &(arg1)->SimPlacement_Axis2Placement3D_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement3D_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimPlacement_Axis2Placement3D_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimPlacement_Axis2Placement3D_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimPlacement_Axis2Placement3D_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimPlacement_Axis2Placement3D_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement3D_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimPlacement_Axis2Placement3D_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimPlacement_Axis2Placement3D_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimPlacement_Axis2Placement3D_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimPlacement_Axis2Placement3D_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimPlacement_Axis2Placement3D_Default_sequence * >(argp2);
  (arg1)->SimPlacement_Axis2Placement3D_Default((schema::simxml::Model::SimModel::SimPlacement_Axis2Placement3D_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimPlacement_Axis2Placement3D_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimPlacement_Axis2Placement3D_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimPlacement_Axis2Placement3D_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement3D_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimPlacement_Axis2Placement3D_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimPlacement_Axis2Placement3D_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimPlacement_Axis2Placement3D_Default() const\n"
    "    schema::simxml::Model::SimModel::SimPlacement_Axis2Placement3D_Default()\n"
    "    schema::simxml::Model::SimModel::SimPlacement_Axis2Placement3D_Default(schema::simxml::Model::SimModel::SimPlacement_Axis2Placement3D_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimPresentationLayerAssignment_Default_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimPresentationLayerAssignment_Default_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimPresentationLayerAssignment_Default_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimPresentationLayerAssignment_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimPresentationLayerAssignment_Default_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimPresentationLayerAssignment_Default_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPresentationLayerAssignment_Default_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimPresentationLayerAssignment_Default_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimPresentationLayerAssignment_Default_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimPresentationLayerAssignment_Default_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimPresentationLayerAssignment_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimPresentationLayerAssignment_Default_Default_sequence *) &(arg1)->SimPresentationLayerAssignment_Default_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPresentationLayerAssignment_Default_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimPresentationLayerAssignment_Default_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimPresentationLayerAssignment_Default_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimPresentationLayerAssignment_Default_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimPresentationLayerAssignment_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPresentationLayerAssignment_Default_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimPresentationLayerAssignment_Default_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimPresentationLayerAssignment_Default_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimPresentationLayerAssignment_Default_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimPresentationLayerAssignment_Default_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimPresentationLayerAssignment_Default_Default_sequence * >(argp2);
  (arg1)->SimPresentationLayerAssignment_Default_Default((schema::simxml::Model::SimModel::SimPresentationLayerAssignment_Default_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimPresentationLayerAssignment_Default_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimPresentationLayerAssignment_Default_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimPresentationLayerAssignment_Default_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPresentationLayerAssignment_Default_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimPresentationLayerAssignment_Default_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimPresentationLayerAssignment_Default_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimPresentationLayerAssignment_Default_Default() const\n"
    "    schema::simxml::Model::SimModel::SimPresentationLayerAssignment_Default_Default()\n"
    "    schema::simxml::Model::SimModel::SimPresentationLayerAssignment_Default_Default(schema::simxml::Model::SimModel::SimPresentationLayerAssignment_Default_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimProject_Project_DesignAlternative__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimProject_Project_DesignAlternative_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimProject_Project_DesignAlternative",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimProject_Project_DesignAlternative" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimProject_Project_DesignAlternative_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimProject_Project_DesignAlternative();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimProject_Project_DesignAlternative_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimProject_Project_DesignAlternative__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimProject_Project_DesignAlternative_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimProject_Project_DesignAlternative",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimProject_Project_DesignAlternative" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimProject_Project_DesignAlternative_sequence *) &(arg1)->SimProject_Project_DesignAlternative();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimProject_Project_DesignAlternative_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimProject_Project_DesignAlternative__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimProject_Project_DesignAlternative_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimProject_Project_DesignAlternative",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimProject_Project_DesignAlternative" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimProject_Project_DesignAlternative_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimProject_Project_DesignAlternative" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimProject_Project_DesignAlternative_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimProject_Project_DesignAlternative" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimProject_Project_DesignAlternative_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimProject_Project_DesignAlternative_sequence * >(argp2);
  (arg1)->SimProject_Project_DesignAlternative((schema::simxml::Model::SimModel::SimProject_Project_DesignAlternative_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimProject_Project_DesignAlternative(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimProject_Project_DesignAlternative__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimProject_Project_DesignAlternative__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimProject_Project_DesignAlternative_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimProject_Project_DesignAlternative__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimProject_Project_DesignAlternative'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimProject_Project_DesignAlternative() const\n"
    "    schema::simxml::Model::SimModel::SimProject_Project_DesignAlternative()\n"
    "    schema::simxml::Model::SimModel::SimProject_Project_DesignAlternative(schema::simxml::Model::SimModel::SimProject_Project_DesignAlternative_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimRepresentationMap_RepresentationMap_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimRepresentationMap_RepresentationMap_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimRepresentationMap_RepresentationMap_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimRepresentationMap_RepresentationMap_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimRepresentationMap_RepresentationMap_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimRepresentationMap_RepresentationMap_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimRepresentationMap_RepresentationMap_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimRepresentationMap_RepresentationMap_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimRepresentationMap_RepresentationMap_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimRepresentationMap_RepresentationMap_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimRepresentationMap_RepresentationMap_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimRepresentationMap_RepresentationMap_Default_sequence *) &(arg1)->SimRepresentationMap_RepresentationMap_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimRepresentationMap_RepresentationMap_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimRepresentationMap_RepresentationMap_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimRepresentationMap_RepresentationMap_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimRepresentationMap_RepresentationMap_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimRepresentationMap_RepresentationMap_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimRepresentationMap_RepresentationMap_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimRepresentationMap_RepresentationMap_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimRepresentationMap_RepresentationMap_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimRepresentationMap_RepresentationMap_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimRepresentationMap_RepresentationMap_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimRepresentationMap_RepresentationMap_Default_sequence * >(argp2);
  (arg1)->SimRepresentationMap_RepresentationMap_Default((schema::simxml::Model::SimModel::SimRepresentationMap_RepresentationMap_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimRepresentationMap_RepresentationMap_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimRepresentationMap_RepresentationMap_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimRepresentationMap_RepresentationMap_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimRepresentationMap_RepresentationMap_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimRepresentationMap_RepresentationMap_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimRepresentationMap_RepresentationMap_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimRepresentationMap_RepresentationMap_Default() const\n"
    "    schema::simxml::Model::SimModel::SimRepresentationMap_RepresentationMap_Default()\n"
    "    schema::simxml::Model::SimModel::SimRepresentationMap_RepresentationMap_Default(schema::simxml::Model::SimModel::SimRepresentationMap_RepresentationMap_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSensor_TemperatureSensor_DryBulb__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSensor_TemperatureSensor_DryBulb_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSensor_TemperatureSensor_DryBulb",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSensor_TemperatureSensor_DryBulb" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSensor_TemperatureSensor_DryBulb_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSensor_TemperatureSensor_DryBulb();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimSensor_TemperatureSensor_DryBulb_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSensor_TemperatureSensor_DryBulb__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSensor_TemperatureSensor_DryBulb_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSensor_TemperatureSensor_DryBulb",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSensor_TemperatureSensor_DryBulb" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSensor_TemperatureSensor_DryBulb_sequence *) &(arg1)->SimSensor_TemperatureSensor_DryBulb();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimSensor_TemperatureSensor_DryBulb_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSensor_TemperatureSensor_DryBulb__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSensor_TemperatureSensor_DryBulb_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSensor_TemperatureSensor_DryBulb",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSensor_TemperatureSensor_DryBulb" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimSensor_TemperatureSensor_DryBulb_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSensor_TemperatureSensor_DryBulb" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSensor_TemperatureSensor_DryBulb_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSensor_TemperatureSensor_DryBulb" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSensor_TemperatureSensor_DryBulb_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSensor_TemperatureSensor_DryBulb_sequence * >(argp2);
  (arg1)->SimSensor_TemperatureSensor_DryBulb((schema::simxml::Model::SimModel::SimSensor_TemperatureSensor_DryBulb_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSensor_TemperatureSensor_DryBulb(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSensor_TemperatureSensor_DryBulb__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSensor_TemperatureSensor_DryBulb__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimSensor_TemperatureSensor_DryBulb_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSensor_TemperatureSensor_DryBulb__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSensor_TemperatureSensor_DryBulb'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSensor_TemperatureSensor_DryBulb() const\n"
    "    schema::simxml::Model::SimModel::SimSensor_TemperatureSensor_DryBulb()\n"
    "    schema::simxml::Model::SimModel::SimSensor_TemperatureSensor_DryBulb(schema::simxml::Model::SimModel::SimSensor_TemperatureSensor_DryBulb_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimShapeRepresentation_ShapeRepresentation_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimShapeRepresentation_ShapeRepresentation_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimShapeRepresentation_ShapeRepresentation_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimShapeRepresentation_ShapeRepresentation_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimShapeRepresentation_ShapeRepresentation_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimShapeRepresentation_ShapeRepresentation_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimShapeRepresentation_ShapeRepresentation_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimShapeRepresentation_ShapeRepresentation_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimShapeRepresentation_ShapeRepresentation_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimShapeRepresentation_ShapeRepresentation_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimShapeRepresentation_ShapeRepresentation_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimShapeRepresentation_ShapeRepresentation_Default_sequence *) &(arg1)->SimShapeRepresentation_ShapeRepresentation_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimShapeRepresentation_ShapeRepresentation_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimShapeRepresentation_ShapeRepresentation_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimShapeRepresentation_ShapeRepresentation_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimShapeRepresentation_ShapeRepresentation_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimShapeRepresentation_ShapeRepresentation_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimShapeRepresentation_ShapeRepresentation_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimShapeRepresentation_ShapeRepresentation_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimShapeRepresentation_ShapeRepresentation_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimShapeRepresentation_ShapeRepresentation_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimShapeRepresentation_ShapeRepresentation_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimShapeRepresentation_ShapeRepresentation_Default_sequence * >(argp2);
  (arg1)->SimShapeRepresentation_ShapeRepresentation_Default((schema::simxml::Model::SimModel::SimShapeRepresentation_ShapeRepresentation_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimShapeRepresentation_ShapeRepresentation_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimShapeRepresentation_ShapeRepresentation_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimShapeRepresentation_ShapeRepresentation_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimShapeRepresentation_ShapeRepresentation_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimShapeRepresentation_ShapeRepresentation_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimShapeRepresentation_ShapeRepresentation_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimShapeRepresentation_ShapeRepresentation_Default() const\n"
    "    schema::simxml::Model::SimModel::SimShapeRepresentation_ShapeRepresentation_Default()\n"
    "    schema::simxml::Model::SimModel::SimShapeRepresentation_ShapeRepresentation_Default(schema::simxml::Model::SimModel::SimShapeRepresentation_ShapeRepresentation_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSimulationConfiguration_SimulationConfiguration_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSimulationConfiguration_SimulationConfiguration_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSimulationConfiguration_SimulationConfiguration_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSimulationConfiguration_SimulationConfiguration_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSimulationConfiguration_SimulationConfiguration_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSimulationConfiguration_SimulationConfiguration_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationConfiguration_SimulationConfiguration_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSimulationConfiguration_SimulationConfiguration_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSimulationConfiguration_SimulationConfiguration_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSimulationConfiguration_SimulationConfiguration_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSimulationConfiguration_SimulationConfiguration_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSimulationConfiguration_SimulationConfiguration_Default_sequence *) &(arg1)->SimSimulationConfiguration_SimulationConfiguration_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationConfiguration_SimulationConfiguration_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSimulationConfiguration_SimulationConfiguration_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSimulationConfiguration_SimulationConfiguration_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSimulationConfiguration_SimulationConfiguration_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSimulationConfiguration_SimulationConfiguration_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationConfiguration_SimulationConfiguration_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSimulationConfiguration_SimulationConfiguration_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSimulationConfiguration_SimulationConfiguration_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSimulationConfiguration_SimulationConfiguration_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSimulationConfiguration_SimulationConfiguration_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSimulationConfiguration_SimulationConfiguration_Default_sequence * >(argp2);
  (arg1)->SimSimulationConfiguration_SimulationConfiguration_Default((schema::simxml::Model::SimModel::SimSimulationConfiguration_SimulationConfiguration_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSimulationConfiguration_SimulationConfiguration_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSimulationConfiguration_SimulationConfiguration_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSimulationConfiguration_SimulationConfiguration_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationConfiguration_SimulationConfiguration_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSimulationConfiguration_SimulationConfiguration_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSimulationConfiguration_SimulationConfiguration_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSimulationConfiguration_SimulationConfiguration_Default() const\n"
    "    schema::simxml::Model::SimModel::SimSimulationConfiguration_SimulationConfiguration_Default()\n"
    "    schema::simxml::Model::SimModel::SimSimulationConfiguration_SimulationConfiguration_Default(schema::simxml::Model::SimModel::SimSimulationConfiguration_SimulationConfiguration_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSimulationParameters_HvacDesign_WaterLoopSizing__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSimulationParameters_HvacDesign_WaterLoopSizing",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSimulationParameters_HvacDesign_WaterLoopSizing" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSimulationParameters_HvacDesign_WaterLoopSizing();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationParameters_HvacDesign_WaterLoopSizing_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSimulationParameters_HvacDesign_WaterLoopSizing__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSimulationParameters_HvacDesign_WaterLoopSizing",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSimulationParameters_HvacDesign_WaterLoopSizing" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence *) &(arg1)->SimSimulationParameters_HvacDesign_WaterLoopSizing();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationParameters_HvacDesign_WaterLoopSizing_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSimulationParameters_HvacDesign_WaterLoopSizing__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSimulationParameters_HvacDesign_WaterLoopSizing",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSimulationParameters_HvacDesign_WaterLoopSizing" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationParameters_HvacDesign_WaterLoopSizing_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSimulationParameters_HvacDesign_WaterLoopSizing" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSimulationParameters_HvacDesign_WaterLoopSizing" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence * >(argp2);
  (arg1)->SimSimulationParameters_HvacDesign_WaterLoopSizing((schema::simxml::Model::SimModel::SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSimulationParameters_HvacDesign_WaterLoopSizing(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSimulationParameters_HvacDesign_WaterLoopSizing__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSimulationParameters_HvacDesign_WaterLoopSizing__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationParameters_HvacDesign_WaterLoopSizing_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSimulationParameters_HvacDesign_WaterLoopSizing__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSimulationParameters_HvacDesign_WaterLoopSizing'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSimulationParameters_HvacDesign_WaterLoopSizing() const\n"
    "    schema::simxml::Model::SimModel::SimSimulationParameters_HvacDesign_WaterLoopSizing()\n"
    "    schema::simxml::Model::SimModel::SimSimulationParameters_HvacDesign_WaterLoopSizing(schema::simxml::Model::SimModel::SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSite_BuildingSite_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSite_BuildingSite_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSite_BuildingSite_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSite_BuildingSite_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSite_BuildingSite_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSite_BuildingSite_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSite_BuildingSite_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSite_BuildingSite_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSite_BuildingSite_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSite_BuildingSite_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSite_BuildingSite_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSite_BuildingSite_Default_sequence *) &(arg1)->SimSite_BuildingSite_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSite_BuildingSite_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSite_BuildingSite_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSite_BuildingSite_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSite_BuildingSite_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSite_BuildingSite_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSite_BuildingSite_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSite_BuildingSite_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSite_BuildingSite_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSite_BuildingSite_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSite_BuildingSite_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSite_BuildingSite_Default_sequence * >(argp2);
  (arg1)->SimSite_BuildingSite_Default((schema::simxml::Model::SimModel::SimSite_BuildingSite_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSite_BuildingSite_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSite_BuildingSite_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSite_BuildingSite_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSite_BuildingSite_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSite_BuildingSite_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSite_BuildingSite_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSite_BuildingSite_Default() const\n"
    "    schema::simxml::Model::SimModel::SimSite_BuildingSite_Default()\n"
    "    schema::simxml::Model::SimModel::SimSite_BuildingSite_Default(schema::simxml::Model::SimModel::SimSite_BuildingSite_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSIUnitType_SiUnit_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSIUnitType_SiUnit_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSIUnitType_SiUnit_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSIUnitType_SiUnit_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSIUnitType_SiUnit_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSIUnitType_SiUnit_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSIUnitType_SiUnit_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSIUnitType_SiUnit_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSIUnitType_SiUnit_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSIUnitType_SiUnit_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSIUnitType_SiUnit_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSIUnitType_SiUnit_Default_sequence *) &(arg1)->SimSIUnitType_SiUnit_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSIUnitType_SiUnit_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSIUnitType_SiUnit_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSIUnitType_SiUnit_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSIUnitType_SiUnit_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSIUnitType_SiUnit_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSIUnitType_SiUnit_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSIUnitType_SiUnit_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSIUnitType_SiUnit_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSIUnitType_SiUnit_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSIUnitType_SiUnit_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSIUnitType_SiUnit_Default_sequence * >(argp2);
  (arg1)->SimSIUnitType_SiUnit_Default((schema::simxml::Model::SimModel::SimSIUnitType_SiUnit_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSIUnitType_SiUnit_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSIUnitType_SiUnit_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSIUnitType_SiUnit_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSIUnitType_SiUnit_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSIUnitType_SiUnit_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSIUnitType_SiUnit_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSIUnitType_SiUnit_Default() const\n"
    "    schema::simxml::Model::SimModel::SimSIUnitType_SiUnit_Default()\n"
    "    schema::simxml::Model::SimModel::SimSIUnitType_SiUnit_Default(schema::simxml::Model::SimModel::SimSIUnitType_SiUnit_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSlab_Default_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSlab_Default_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSlab_Default_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSlab_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSlab_Default_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSlab_Default_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Default_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSlab_Default_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSlab_Default_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSlab_Default_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSlab_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSlab_Default_Default_sequence *) &(arg1)->SimSlab_Default_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Default_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSlab_Default_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSlab_Default_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSlab_Default_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSlab_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Default_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSlab_Default_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSlab_Default_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSlab_Default_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSlab_Default_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSlab_Default_Default_sequence * >(argp2);
  (arg1)->SimSlab_Default_Default((schema::simxml::Model::SimModel::SimSlab_Default_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSlab_Default_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSlab_Default_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSlab_Default_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Default_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSlab_Default_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSlab_Default_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSlab_Default_Default() const\n"
    "    schema::simxml::Model::SimModel::SimSlab_Default_Default()\n"
    "    schema::simxml::Model::SimModel::SimSlab_Default_Default(schema::simxml::Model::SimModel::SimSlab_Default_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSlab_Floor_FloorOverEarth__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSlab_Floor_FloorOverEarth_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSlab_Floor_FloorOverEarth",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSlab_Floor_FloorOverEarth" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSlab_Floor_FloorOverEarth_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSlab_Floor_FloorOverEarth();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_FloorOverEarth_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSlab_Floor_FloorOverEarth__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSlab_Floor_FloorOverEarth_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSlab_Floor_FloorOverEarth",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSlab_Floor_FloorOverEarth" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSlab_Floor_FloorOverEarth_sequence *) &(arg1)->SimSlab_Floor_FloorOverEarth();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_FloorOverEarth_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSlab_Floor_FloorOverEarth__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSlab_Floor_FloorOverEarth_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSlab_Floor_FloorOverEarth",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSlab_Floor_FloorOverEarth" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_FloorOverEarth_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSlab_Floor_FloorOverEarth" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSlab_Floor_FloorOverEarth_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSlab_Floor_FloorOverEarth" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSlab_Floor_FloorOverEarth_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSlab_Floor_FloorOverEarth_sequence * >(argp2);
  (arg1)->SimSlab_Floor_FloorOverEarth((schema::simxml::Model::SimModel::SimSlab_Floor_FloorOverEarth_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSlab_Floor_FloorOverEarth(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSlab_Floor_FloorOverEarth__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSlab_Floor_FloorOverEarth__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_FloorOverEarth_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSlab_Floor_FloorOverEarth__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSlab_Floor_FloorOverEarth'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSlab_Floor_FloorOverEarth() const\n"
    "    schema::simxml::Model::SimModel::SimSlab_Floor_FloorOverEarth()\n"
    "    schema::simxml::Model::SimModel::SimSlab_Floor_FloorOverEarth(schema::simxml::Model::SimModel::SimSlab_Floor_FloorOverEarth_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSlab_Floor_InterzoneFloor__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSlab_Floor_InterzoneFloor_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSlab_Floor_InterzoneFloor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSlab_Floor_InterzoneFloor" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSlab_Floor_InterzoneFloor_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSlab_Floor_InterzoneFloor();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_InterzoneFloor_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSlab_Floor_InterzoneFloor__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSlab_Floor_InterzoneFloor_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSlab_Floor_InterzoneFloor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSlab_Floor_InterzoneFloor" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSlab_Floor_InterzoneFloor_sequence *) &(arg1)->SimSlab_Floor_InterzoneFloor();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_InterzoneFloor_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSlab_Floor_InterzoneFloor__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSlab_Floor_InterzoneFloor_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSlab_Floor_InterzoneFloor",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSlab_Floor_InterzoneFloor" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_InterzoneFloor_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSlab_Floor_InterzoneFloor" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSlab_Floor_InterzoneFloor_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSlab_Floor_InterzoneFloor" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSlab_Floor_InterzoneFloor_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSlab_Floor_InterzoneFloor_sequence * >(argp2);
  (arg1)->SimSlab_Floor_InterzoneFloor((schema::simxml::Model::SimModel::SimSlab_Floor_InterzoneFloor_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSlab_Floor_InterzoneFloor(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSlab_Floor_InterzoneFloor__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSlab_Floor_InterzoneFloor__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_InterzoneFloor_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSlab_Floor_InterzoneFloor__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSlab_Floor_InterzoneFloor'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSlab_Floor_InterzoneFloor() const\n"
    "    schema::simxml::Model::SimModel::SimSlab_Floor_InterzoneFloor()\n"
    "    schema::simxml::Model::SimModel::SimSlab_Floor_InterzoneFloor(schema::simxml::Model::SimModel::SimSlab_Floor_InterzoneFloor_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSlab_RoofSlab_RoofUnderAir__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSlab_RoofSlab_RoofUnderAir_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSlab_RoofSlab_RoofUnderAir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSlab_RoofSlab_RoofUnderAir" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSlab_RoofSlab_RoofUnderAir_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSlab_RoofSlab_RoofUnderAir();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_RoofSlab_RoofUnderAir_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSlab_RoofSlab_RoofUnderAir__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSlab_RoofSlab_RoofUnderAir_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSlab_RoofSlab_RoofUnderAir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSlab_RoofSlab_RoofUnderAir" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSlab_RoofSlab_RoofUnderAir_sequence *) &(arg1)->SimSlab_RoofSlab_RoofUnderAir();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_RoofSlab_RoofUnderAir_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSlab_RoofSlab_RoofUnderAir__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSlab_RoofSlab_RoofUnderAir_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSlab_RoofSlab_RoofUnderAir",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSlab_RoofSlab_RoofUnderAir" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_RoofSlab_RoofUnderAir_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSlab_RoofSlab_RoofUnderAir" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSlab_RoofSlab_RoofUnderAir_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSlab_RoofSlab_RoofUnderAir" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSlab_RoofSlab_RoofUnderAir_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSlab_RoofSlab_RoofUnderAir_sequence * >(argp2);
  (arg1)->SimSlab_RoofSlab_RoofUnderAir((schema::simxml::Model::SimModel::SimSlab_RoofSlab_RoofUnderAir_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSlab_RoofSlab_RoofUnderAir(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSlab_RoofSlab_RoofUnderAir__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSlab_RoofSlab_RoofUnderAir__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_RoofSlab_RoofUnderAir_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSlab_RoofSlab_RoofUnderAir__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSlab_RoofSlab_RoofUnderAir'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSlab_RoofSlab_RoofUnderAir() const\n"
    "    schema::simxml::Model::SimModel::SimSlab_RoofSlab_RoofUnderAir()\n"
    "    schema::simxml::Model::SimModel::SimSlab_RoofSlab_RoofUnderAir(schema::simxml::Model::SimModel::SimSlab_RoofSlab_RoofUnderAir_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSlabParams_Slab_Floor__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSlabParams_Slab_Floor_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSlabParams_Slab_Floor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSlabParams_Slab_Floor" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSlabParams_Slab_Floor_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSlabParams_Slab_Floor();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSlabParams_Slab_Floor_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSlabParams_Slab_Floor__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSlabParams_Slab_Floor_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSlabParams_Slab_Floor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSlabParams_Slab_Floor" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSlabParams_Slab_Floor_sequence *) &(arg1)->SimSlabParams_Slab_Floor();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSlabParams_Slab_Floor_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSlabParams_Slab_Floor__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSlabParams_Slab_Floor_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSlabParams_Slab_Floor",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSlabParams_Slab_Floor" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSlabParams_Slab_Floor_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSlabParams_Slab_Floor" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSlabParams_Slab_Floor_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSlabParams_Slab_Floor" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSlabParams_Slab_Floor_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSlabParams_Slab_Floor_sequence * >(argp2);
  (arg1)->SimSlabParams_Slab_Floor((schema::simxml::Model::SimModel::SimSlabParams_Slab_Floor_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSlabParams_Slab_Floor(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSlabParams_Slab_Floor__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSlabParams_Slab_Floor__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSlabParams_Slab_Floor_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSlabParams_Slab_Floor__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSlabParams_Slab_Floor'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSlabParams_Slab_Floor() const\n"
    "    schema::simxml::Model::SimModel::SimSlabParams_Slab_Floor()\n"
    "    schema::simxml::Model::SimModel::SimSlabParams_Slab_Floor(schema::simxml::Model::SimModel::SimSlabParams_Slab_Floor_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSoftwareApplication_Default_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSoftwareApplication_Default_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSoftwareApplication_Default_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSoftwareApplication_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSoftwareApplication_Default_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSoftwareApplication_Default_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSoftwareApplication_Default_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSoftwareApplication_Default_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSoftwareApplication_Default_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSoftwareApplication_Default_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSoftwareApplication_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSoftwareApplication_Default_Default_sequence *) &(arg1)->SimSoftwareApplication_Default_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSoftwareApplication_Default_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSoftwareApplication_Default_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSoftwareApplication_Default_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSoftwareApplication_Default_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSoftwareApplication_Default_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSoftwareApplication_Default_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSoftwareApplication_Default_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSoftwareApplication_Default_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSoftwareApplication_Default_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSoftwareApplication_Default_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSoftwareApplication_Default_Default_sequence * >(argp2);
  (arg1)->SimSoftwareApplication_Default_Default((schema::simxml::Model::SimModel::SimSoftwareApplication_Default_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSoftwareApplication_Default_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSoftwareApplication_Default_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSoftwareApplication_Default_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSoftwareApplication_Default_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSoftwareApplication_Default_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSoftwareApplication_Default_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSoftwareApplication_Default_Default() const\n"
    "    schema::simxml::Model::SimModel::SimSoftwareApplication_Default_Default()\n"
    "    schema::simxml::Model::SimModel::SimSoftwareApplication_Default_Default(schema::simxml::Model::SimModel::SimSoftwareApplication_Default_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSolarShade_Fin_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSolarShade_Fin_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSolarShade_Fin_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSolarShade_Fin_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSolarShade_Fin_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSolarShade_Fin_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Fin_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSolarShade_Fin_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSolarShade_Fin_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSolarShade_Fin_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSolarShade_Fin_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSolarShade_Fin_Default_sequence *) &(arg1)->SimSolarShade_Fin_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Fin_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSolarShade_Fin_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSolarShade_Fin_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSolarShade_Fin_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSolarShade_Fin_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Fin_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSolarShade_Fin_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSolarShade_Fin_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSolarShade_Fin_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSolarShade_Fin_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSolarShade_Fin_Default_sequence * >(argp2);
  (arg1)->SimSolarShade_Fin_Default((schema::simxml::Model::SimModel::SimSolarShade_Fin_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSolarShade_Fin_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSolarShade_Fin_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSolarShade_Fin_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Fin_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSolarShade_Fin_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSolarShade_Fin_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSolarShade_Fin_Default() const\n"
    "    schema::simxml::Model::SimModel::SimSolarShade_Fin_Default()\n"
    "    schema::simxml::Model::SimModel::SimSolarShade_Fin_Default(schema::simxml::Model::SimModel::SimSolarShade_Fin_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSolarShade_Overhang_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSolarShade_Overhang_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSolarShade_Overhang_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSolarShade_Overhang_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSolarShade_Overhang_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSolarShade_Overhang_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Overhang_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSolarShade_Overhang_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSolarShade_Overhang_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSolarShade_Overhang_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSolarShade_Overhang_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSolarShade_Overhang_Default_sequence *) &(arg1)->SimSolarShade_Overhang_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Overhang_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSolarShade_Overhang_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSolarShade_Overhang_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSolarShade_Overhang_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSolarShade_Overhang_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Overhang_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSolarShade_Overhang_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSolarShade_Overhang_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSolarShade_Overhang_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSolarShade_Overhang_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSolarShade_Overhang_Default_sequence * >(argp2);
  (arg1)->SimSolarShade_Overhang_Default((schema::simxml::Model::SimModel::SimSolarShade_Overhang_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSolarShade_Overhang_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSolarShade_Overhang_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSolarShade_Overhang_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Overhang_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSolarShade_Overhang_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSolarShade_Overhang_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSolarShade_Overhang_Default() const\n"
    "    schema::simxml::Model::SimModel::SimSolarShade_Overhang_Default()\n"
    "    schema::simxml::Model::SimModel::SimSolarShade_Overhang_Default(schema::simxml::Model::SimModel::SimSolarShade_Overhang_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSpace_Occupied_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSpace_Occupied_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSpace_Occupied_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSpace_Occupied_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSpace_Occupied_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSpace_Occupied_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpace_Occupied_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSpace_Occupied_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSpace_Occupied_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSpace_Occupied_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSpace_Occupied_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSpace_Occupied_Default_sequence *) &(arg1)->SimSpace_Occupied_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpace_Occupied_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSpace_Occupied_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSpace_Occupied_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSpace_Occupied_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSpace_Occupied_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpace_Occupied_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSpace_Occupied_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSpace_Occupied_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSpace_Occupied_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSpace_Occupied_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSpace_Occupied_Default_sequence * >(argp2);
  (arg1)->SimSpace_Occupied_Default((schema::simxml::Model::SimModel::SimSpace_Occupied_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSpace_Occupied_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSpace_Occupied_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSpace_Occupied_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpace_Occupied_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSpace_Occupied_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSpace_Occupied_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSpace_Occupied_Default() const\n"
    "    schema::simxml::Model::SimModel::SimSpace_Occupied_Default()\n"
    "    schema::simxml::Model::SimModel::SimSpace_Occupied_Default(schema::simxml::Model::SimModel::SimSpace_Occupied_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSpaceBoundary_SecondLevel_SubTypeA__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSpaceBoundary_SecondLevel_SubTypeA_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSpaceBoundary_SecondLevel_SubTypeA",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSpaceBoundary_SecondLevel_SubTypeA" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSpaceBoundary_SecondLevel_SubTypeA_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSpaceBoundary_SecondLevel_SubTypeA();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceBoundary_SecondLevel_SubTypeA_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSpaceBoundary_SecondLevel_SubTypeA__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSpaceBoundary_SecondLevel_SubTypeA_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSpaceBoundary_SecondLevel_SubTypeA",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSpaceBoundary_SecondLevel_SubTypeA" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSpaceBoundary_SecondLevel_SubTypeA_sequence *) &(arg1)->SimSpaceBoundary_SecondLevel_SubTypeA();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceBoundary_SecondLevel_SubTypeA_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSpaceBoundary_SecondLevel_SubTypeA__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSpaceBoundary_SecondLevel_SubTypeA_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSpaceBoundary_SecondLevel_SubTypeA",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSpaceBoundary_SecondLevel_SubTypeA" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceBoundary_SecondLevel_SubTypeA_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSpaceBoundary_SecondLevel_SubTypeA" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSpaceBoundary_SecondLevel_SubTypeA_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSpaceBoundary_SecondLevel_SubTypeA" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSpaceBoundary_SecondLevel_SubTypeA_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSpaceBoundary_SecondLevel_SubTypeA_sequence * >(argp2);
  (arg1)->SimSpaceBoundary_SecondLevel_SubTypeA((schema::simxml::Model::SimModel::SimSpaceBoundary_SecondLevel_SubTypeA_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSpaceBoundary_SecondLevel_SubTypeA(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSpaceBoundary_SecondLevel_SubTypeA__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSpaceBoundary_SecondLevel_SubTypeA__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceBoundary_SecondLevel_SubTypeA_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSpaceBoundary_SecondLevel_SubTypeA__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSpaceBoundary_SecondLevel_SubTypeA'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSpaceBoundary_SecondLevel_SubTypeA() const\n"
    "    schema::simxml::Model::SimModel::SimSpaceBoundary_SecondLevel_SubTypeA()\n"
    "    schema::simxml::Model::SimModel::SimSpaceBoundary_SecondLevel_SubTypeA(schema::simxml::Model::SimModel::SimSpaceBoundary_SecondLevel_SubTypeA_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSpaceParams_Space_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSpaceParams_Space_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSpaceParams_Space_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSpaceParams_Space_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSpaceParams_Space_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSpaceParams_Space_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceParams_Space_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSpaceParams_Space_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSpaceParams_Space_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSpaceParams_Space_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSpaceParams_Space_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSpaceParams_Space_Default_sequence *) &(arg1)->SimSpaceParams_Space_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceParams_Space_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSpaceParams_Space_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSpaceParams_Space_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSpaceParams_Space_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSpaceParams_Space_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceParams_Space_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSpaceParams_Space_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSpaceParams_Space_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSpaceParams_Space_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSpaceParams_Space_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSpaceParams_Space_Default_sequence * >(argp2);
  (arg1)->SimSpaceParams_Space_Default((schema::simxml::Model::SimModel::SimSpaceParams_Space_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSpaceParams_Space_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSpaceParams_Space_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSpaceParams_Space_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceParams_Space_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSpaceParams_Space_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSpaceParams_Space_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSpaceParams_Space_Default() const\n"
    "    schema::simxml::Model::SimModel::SimSpaceParams_Space_Default()\n"
    "    schema::simxml::Model::SimModel::SimSpaceParams_Space_Default(schema::simxml::Model::SimModel::SimSpaceParams_Space_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSpatialZone_ThermalZone_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSpatialZone_ThermalZone_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSpatialZone_ThermalZone_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSpatialZone_ThermalZone_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSpatialZone_ThermalZone_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSpatialZone_ThermalZone_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSpatialZone_ThermalZone_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_Default_sequence *) &(arg1)->SimSpatialZone_ThermalZone_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSpatialZone_ThermalZone_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSpatialZone_ThermalZone_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSpatialZone_ThermalZone_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSpatialZone_ThermalZone_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSpatialZone_ThermalZone_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_Default_sequence * >(argp2);
  (arg1)->SimSpatialZone_ThermalZone_Default((schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSpatialZone_ThermalZone_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSpatialZone_ThermalZone_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSpatialZone_ThermalZone_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSpatialZone_ThermalZone_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSpatialZone_ThermalZone_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_Default() const\n"
    "    schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_Default()\n"
    "    schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_Default(schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSpatialZone_ThermalZone_TemplateForZoneGroup__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_TemplateForZoneGroup_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSpatialZone_ThermalZone_TemplateForZoneGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSpatialZone_ThermalZone_TemplateForZoneGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_TemplateForZoneGroup_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSpatialZone_ThermalZone_TemplateForZoneGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_TemplateForZoneGroup_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSpatialZone_ThermalZone_TemplateForZoneGroup__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_TemplateForZoneGroup_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSpatialZone_ThermalZone_TemplateForZoneGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSpatialZone_ThermalZone_TemplateForZoneGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_TemplateForZoneGroup_sequence *) &(arg1)->SimSpatialZone_ThermalZone_TemplateForZoneGroup();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_TemplateForZoneGroup_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSpatialZone_ThermalZone_TemplateForZoneGroup__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_TemplateForZoneGroup_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSpatialZone_ThermalZone_TemplateForZoneGroup",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSpatialZone_ThermalZone_TemplateForZoneGroup" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_TemplateForZoneGroup_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSpatialZone_ThermalZone_TemplateForZoneGroup" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_TemplateForZoneGroup_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSpatialZone_ThermalZone_TemplateForZoneGroup" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_TemplateForZoneGroup_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_TemplateForZoneGroup_sequence * >(argp2);
  (arg1)->SimSpatialZone_ThermalZone_TemplateForZoneGroup((schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_TemplateForZoneGroup_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSpatialZone_ThermalZone_TemplateForZoneGroup(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSpatialZone_ThermalZone_TemplateForZoneGroup__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSpatialZone_ThermalZone_TemplateForZoneGroup__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_TemplateForZoneGroup_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSpatialZone_ThermalZone_TemplateForZoneGroup__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSpatialZone_ThermalZone_TemplateForZoneGroup'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_TemplateForZoneGroup() const\n"
    "    schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_TemplateForZoneGroup()\n"
    "    schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_TemplateForZoneGroup(schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_TemplateForZoneGroup_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_HvacHotWater_Control__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Control_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSystem_HvacHotWater_Control",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_HvacHotWater_Control" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Control_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSystem_HvacHotWater_Control();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Control_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_HvacHotWater_Control__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Control_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSystem_HvacHotWater_Control",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_HvacHotWater_Control" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Control_sequence *) &(arg1)->SimSystem_HvacHotWater_Control();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Control_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_HvacHotWater_Control__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Control_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSystem_HvacHotWater_Control",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_HvacHotWater_Control" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Control_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSystem_HvacHotWater_Control" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Control_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSystem_HvacHotWater_Control" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Control_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Control_sequence * >(argp2);
  (arg1)->SimSystem_HvacHotWater_Control((schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Control_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_HvacHotWater_Control(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSystem_HvacHotWater_Control__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSystem_HvacHotWater_Control__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Control_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSystem_HvacHotWater_Control__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSystem_HvacHotWater_Control'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Control() const\n"
    "    schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Control()\n"
    "    schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Control(schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Control_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_HvacHotWater_Demand__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Demand_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSystem_HvacHotWater_Demand",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_HvacHotWater_Demand" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Demand_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSystem_HvacHotWater_Demand();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Demand_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_HvacHotWater_Demand__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Demand_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSystem_HvacHotWater_Demand",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_HvacHotWater_Demand" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Demand_sequence *) &(arg1)->SimSystem_HvacHotWater_Demand();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Demand_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_HvacHotWater_Demand__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Demand_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSystem_HvacHotWater_Demand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_HvacHotWater_Demand" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Demand_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSystem_HvacHotWater_Demand" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Demand_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSystem_HvacHotWater_Demand" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Demand_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Demand_sequence * >(argp2);
  (arg1)->SimSystem_HvacHotWater_Demand((schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Demand_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_HvacHotWater_Demand(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSystem_HvacHotWater_Demand__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSystem_HvacHotWater_Demand__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Demand_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSystem_HvacHotWater_Demand__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSystem_HvacHotWater_Demand'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Demand() const\n"
    "    schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Demand()\n"
    "    schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Demand(schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Demand_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_HvacHotWater_FullSystem__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSystem_HvacHotWater_FullSystem_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSystem_HvacHotWater_FullSystem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_HvacHotWater_FullSystem" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSystem_HvacHotWater_FullSystem_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSystem_HvacHotWater_FullSystem();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_FullSystem_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_HvacHotWater_FullSystem__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSystem_HvacHotWater_FullSystem_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSystem_HvacHotWater_FullSystem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_HvacHotWater_FullSystem" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSystem_HvacHotWater_FullSystem_sequence *) &(arg1)->SimSystem_HvacHotWater_FullSystem();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_FullSystem_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_HvacHotWater_FullSystem__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSystem_HvacHotWater_FullSystem_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSystem_HvacHotWater_FullSystem",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_HvacHotWater_FullSystem" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_FullSystem_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSystem_HvacHotWater_FullSystem" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSystem_HvacHotWater_FullSystem_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSystem_HvacHotWater_FullSystem" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSystem_HvacHotWater_FullSystem_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSystem_HvacHotWater_FullSystem_sequence * >(argp2);
  (arg1)->SimSystem_HvacHotWater_FullSystem((schema::simxml::Model::SimModel::SimSystem_HvacHotWater_FullSystem_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_HvacHotWater_FullSystem(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSystem_HvacHotWater_FullSystem__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSystem_HvacHotWater_FullSystem__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_FullSystem_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSystem_HvacHotWater_FullSystem__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSystem_HvacHotWater_FullSystem'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSystem_HvacHotWater_FullSystem() const\n"
    "    schema::simxml::Model::SimModel::SimSystem_HvacHotWater_FullSystem()\n"
    "    schema::simxml::Model::SimModel::SimSystem_HvacHotWater_FullSystem(schema::simxml::Model::SimModel::SimSystem_HvacHotWater_FullSystem_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_HvacHotWater_Supply__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Supply_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSystem_HvacHotWater_Supply",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_HvacHotWater_Supply" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Supply_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSystem_HvacHotWater_Supply();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Supply_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_HvacHotWater_Supply__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Supply_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSystem_HvacHotWater_Supply",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_HvacHotWater_Supply" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Supply_sequence *) &(arg1)->SimSystem_HvacHotWater_Supply();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Supply_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_HvacHotWater_Supply__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Supply_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSystem_HvacHotWater_Supply",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_HvacHotWater_Supply" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Supply_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSystem_HvacHotWater_Supply" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Supply_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSystem_HvacHotWater_Supply" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Supply_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Supply_sequence * >(argp2);
  (arg1)->SimSystem_HvacHotWater_Supply((schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Supply_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_HvacHotWater_Supply(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSystem_HvacHotWater_Supply__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSystem_HvacHotWater_Supply__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Supply_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSystem_HvacHotWater_Supply__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSystem_HvacHotWater_Supply'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Supply() const\n"
    "    schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Supply()\n"
    "    schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Supply(schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Supply_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_ZoneHvacGroup_Control__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Control_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSystem_ZoneHvacGroup_Control",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_ZoneHvacGroup_Control" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Control_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSystem_ZoneHvacGroup_Control();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Control_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_ZoneHvacGroup_Control__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Control_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSystem_ZoneHvacGroup_Control",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_ZoneHvacGroup_Control" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Control_sequence *) &(arg1)->SimSystem_ZoneHvacGroup_Control();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Control_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_ZoneHvacGroup_Control__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Control_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSystem_ZoneHvacGroup_Control",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_ZoneHvacGroup_Control" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Control_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSystem_ZoneHvacGroup_Control" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Control_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSystem_ZoneHvacGroup_Control" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Control_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Control_sequence * >(argp2);
  (arg1)->SimSystem_ZoneHvacGroup_Control((schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Control_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_ZoneHvacGroup_Control(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSystem_ZoneHvacGroup_Control__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSystem_ZoneHvacGroup_Control__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Control_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSystem_ZoneHvacGroup_Control__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSystem_ZoneHvacGroup_Control'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Control() const\n"
    "    schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Control()\n"
    "    schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Control(schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Control_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_ZoneHvacGroup_Demand__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Demand_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSystem_ZoneHvacGroup_Demand",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_ZoneHvacGroup_Demand" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Demand_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSystem_ZoneHvacGroup_Demand();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Demand_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_ZoneHvacGroup_Demand__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Demand_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSystem_ZoneHvacGroup_Demand",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_ZoneHvacGroup_Demand" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Demand_sequence *) &(arg1)->SimSystem_ZoneHvacGroup_Demand();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Demand_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_ZoneHvacGroup_Demand__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Demand_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSystem_ZoneHvacGroup_Demand",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_ZoneHvacGroup_Demand" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Demand_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSystem_ZoneHvacGroup_Demand" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Demand_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSystem_ZoneHvacGroup_Demand" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Demand_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Demand_sequence * >(argp2);
  (arg1)->SimSystem_ZoneHvacGroup_Demand((schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Demand_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_ZoneHvacGroup_Demand(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSystem_ZoneHvacGroup_Demand__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSystem_ZoneHvacGroup_Demand__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Demand_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSystem_ZoneHvacGroup_Demand__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSystem_ZoneHvacGroup_Demand'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Demand() const\n"
    "    schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Demand()\n"
    "    schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Demand(schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Demand_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_ZoneHvacGroup_FullSystem__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_FullSystem_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSystem_ZoneHvacGroup_FullSystem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_ZoneHvacGroup_FullSystem" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_FullSystem_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSystem_ZoneHvacGroup_FullSystem();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_FullSystem_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_ZoneHvacGroup_FullSystem__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_FullSystem_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSystem_ZoneHvacGroup_FullSystem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_ZoneHvacGroup_FullSystem" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_FullSystem_sequence *) &(arg1)->SimSystem_ZoneHvacGroup_FullSystem();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_FullSystem_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_ZoneHvacGroup_FullSystem__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_FullSystem_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSystem_ZoneHvacGroup_FullSystem",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_ZoneHvacGroup_FullSystem" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_FullSystem_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSystem_ZoneHvacGroup_FullSystem" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_FullSystem_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSystem_ZoneHvacGroup_FullSystem" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_FullSystem_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_FullSystem_sequence * >(argp2);
  (arg1)->SimSystem_ZoneHvacGroup_FullSystem((schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_FullSystem_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_ZoneHvacGroup_FullSystem(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSystem_ZoneHvacGroup_FullSystem__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSystem_ZoneHvacGroup_FullSystem__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_FullSystem_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSystem_ZoneHvacGroup_FullSystem__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSystem_ZoneHvacGroup_FullSystem'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_FullSystem() const\n"
    "    schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_FullSystem()\n"
    "    schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_FullSystem(schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_FullSystem_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_ZoneHvacGroup_Supply__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Supply_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSystem_ZoneHvacGroup_Supply",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_ZoneHvacGroup_Supply" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Supply_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimSystem_ZoneHvacGroup_Supply();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Supply_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_ZoneHvacGroup_Supply__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Supply_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimSystem_ZoneHvacGroup_Supply",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_ZoneHvacGroup_Supply" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Supply_sequence *) &(arg1)->SimSystem_ZoneHvacGroup_Supply();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Supply_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_ZoneHvacGroup_Supply__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Supply_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimSystem_ZoneHvacGroup_Supply",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimSystem_ZoneHvacGroup_Supply" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Supply_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimSystem_ZoneHvacGroup_Supply" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Supply_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimSystem_ZoneHvacGroup_Supply" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Supply_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Supply_sequence * >(argp2);
  (arg1)->SimSystem_ZoneHvacGroup_Supply((schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Supply_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimSystem_ZoneHvacGroup_Supply(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSystem_ZoneHvacGroup_Supply__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimSystem_ZoneHvacGroup_Supply__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Supply_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimSystem_ZoneHvacGroup_Supply__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimSystem_ZoneHvacGroup_Supply'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Supply() const\n"
    "    schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Supply()\n"
    "    schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Supply(schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Supply_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTemplateConstructions_Constructions_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimTemplateConstructions_Constructions_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimTemplateConstructions_Constructions_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTemplateConstructions_Constructions_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimTemplateConstructions_Constructions_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimTemplateConstructions_Constructions_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateConstructions_Constructions_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTemplateConstructions_Constructions_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimTemplateConstructions_Constructions_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimTemplateConstructions_Constructions_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTemplateConstructions_Constructions_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimTemplateConstructions_Constructions_Default_sequence *) &(arg1)->SimTemplateConstructions_Constructions_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateConstructions_Constructions_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTemplateConstructions_Constructions_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimTemplateConstructions_Constructions_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimTemplateConstructions_Constructions_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTemplateConstructions_Constructions_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateConstructions_Constructions_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimTemplateConstructions_Constructions_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimTemplateConstructions_Constructions_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimTemplateConstructions_Constructions_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimTemplateConstructions_Constructions_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimTemplateConstructions_Constructions_Default_sequence * >(argp2);
  (arg1)->SimTemplateConstructions_Constructions_Default((schema::simxml::Model::SimModel::SimTemplateConstructions_Constructions_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTemplateConstructions_Constructions_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimTemplateConstructions_Constructions_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimTemplateConstructions_Constructions_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateConstructions_Constructions_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimTemplateConstructions_Constructions_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimTemplateConstructions_Constructions_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimTemplateConstructions_Constructions_Default() const\n"
    "    schema::simxml::Model::SimModel::SimTemplateConstructions_Constructions_Default()\n"
    "    schema::simxml::Model::SimModel::SimTemplateConstructions_Constructions_Default(schema::simxml::Model::SimModel::SimTemplateConstructions_Constructions_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTemplateLocation_Location_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimTemplateLocation_Location_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimTemplateLocation_Location_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTemplateLocation_Location_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimTemplateLocation_Location_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimTemplateLocation_Location_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateLocation_Location_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTemplateLocation_Location_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimTemplateLocation_Location_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimTemplateLocation_Location_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTemplateLocation_Location_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimTemplateLocation_Location_Default_sequence *) &(arg1)->SimTemplateLocation_Location_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateLocation_Location_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTemplateLocation_Location_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimTemplateLocation_Location_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimTemplateLocation_Location_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTemplateLocation_Location_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateLocation_Location_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimTemplateLocation_Location_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimTemplateLocation_Location_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimTemplateLocation_Location_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimTemplateLocation_Location_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimTemplateLocation_Location_Default_sequence * >(argp2);
  (arg1)->SimTemplateLocation_Location_Default((schema::simxml::Model::SimModel::SimTemplateLocation_Location_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTemplateLocation_Location_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimTemplateLocation_Location_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimTemplateLocation_Location_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateLocation_Location_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimTemplateLocation_Location_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimTemplateLocation_Location_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimTemplateLocation_Location_Default() const\n"
    "    schema::simxml::Model::SimModel::SimTemplateLocation_Location_Default()\n"
    "    schema::simxml::Model::SimModel::SimTemplateLocation_Location_Default(schema::simxml::Model::SimModel::SimTemplateLocation_Location_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTemplateZoneConditions_ZoneConditions_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimTemplateZoneConditions_ZoneConditions_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimTemplateZoneConditions_ZoneConditions_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTemplateZoneConditions_ZoneConditions_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimTemplateZoneConditions_ZoneConditions_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimTemplateZoneConditions_ZoneConditions_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneConditions_ZoneConditions_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTemplateZoneConditions_ZoneConditions_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimTemplateZoneConditions_ZoneConditions_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimTemplateZoneConditions_ZoneConditions_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTemplateZoneConditions_ZoneConditions_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimTemplateZoneConditions_ZoneConditions_Default_sequence *) &(arg1)->SimTemplateZoneConditions_ZoneConditions_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneConditions_ZoneConditions_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTemplateZoneConditions_ZoneConditions_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimTemplateZoneConditions_ZoneConditions_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimTemplateZoneConditions_ZoneConditions_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTemplateZoneConditions_ZoneConditions_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneConditions_ZoneConditions_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimTemplateZoneConditions_ZoneConditions_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimTemplateZoneConditions_ZoneConditions_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimTemplateZoneConditions_ZoneConditions_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimTemplateZoneConditions_ZoneConditions_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimTemplateZoneConditions_ZoneConditions_Default_sequence * >(argp2);
  (arg1)->SimTemplateZoneConditions_ZoneConditions_Default((schema::simxml::Model::SimModel::SimTemplateZoneConditions_ZoneConditions_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTemplateZoneConditions_ZoneConditions_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimTemplateZoneConditions_ZoneConditions_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimTemplateZoneConditions_ZoneConditions_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneConditions_ZoneConditions_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimTemplateZoneConditions_ZoneConditions_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimTemplateZoneConditions_ZoneConditions_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimTemplateZoneConditions_ZoneConditions_Default() const\n"
    "    schema::simxml::Model::SimModel::SimTemplateZoneConditions_ZoneConditions_Default()\n"
    "    schema::simxml::Model::SimModel::SimTemplateZoneConditions_ZoneConditions_Default(schema::simxml::Model::SimModel::SimTemplateZoneConditions_ZoneConditions_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTemplateZoneLoads_ZoneLoads_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimTemplateZoneLoads_ZoneLoads_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimTemplateZoneLoads_ZoneLoads_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTemplateZoneLoads_ZoneLoads_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimTemplateZoneLoads_ZoneLoads_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimTemplateZoneLoads_ZoneLoads_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneLoads_ZoneLoads_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTemplateZoneLoads_ZoneLoads_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimTemplateZoneLoads_ZoneLoads_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimTemplateZoneLoads_ZoneLoads_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTemplateZoneLoads_ZoneLoads_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimTemplateZoneLoads_ZoneLoads_Default_sequence *) &(arg1)->SimTemplateZoneLoads_ZoneLoads_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneLoads_ZoneLoads_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTemplateZoneLoads_ZoneLoads_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimTemplateZoneLoads_ZoneLoads_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimTemplateZoneLoads_ZoneLoads_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTemplateZoneLoads_ZoneLoads_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneLoads_ZoneLoads_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimTemplateZoneLoads_ZoneLoads_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimTemplateZoneLoads_ZoneLoads_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimTemplateZoneLoads_ZoneLoads_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimTemplateZoneLoads_ZoneLoads_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimTemplateZoneLoads_ZoneLoads_Default_sequence * >(argp2);
  (arg1)->SimTemplateZoneLoads_ZoneLoads_Default((schema::simxml::Model::SimModel::SimTemplateZoneLoads_ZoneLoads_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTemplateZoneLoads_ZoneLoads_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimTemplateZoneLoads_ZoneLoads_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimTemplateZoneLoads_ZoneLoads_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneLoads_ZoneLoads_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimTemplateZoneLoads_ZoneLoads_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimTemplateZoneLoads_ZoneLoads_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimTemplateZoneLoads_ZoneLoads_Default() const\n"
    "    schema::simxml::Model::SimModel::SimTemplateZoneLoads_ZoneLoads_Default()\n"
    "    schema::simxml::Model::SimModel::SimTemplateZoneLoads_ZoneLoads_Default(schema::simxml::Model::SimModel::SimTemplateZoneLoads_ZoneLoads_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimThermalZoneType_ThermalZone_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimThermalZoneType_ThermalZone_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimThermalZoneType_ThermalZone_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimThermalZoneType_ThermalZone_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimThermalZoneType_ThermalZone_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimThermalZoneType_ThermalZone_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimThermalZoneType_ThermalZone_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimThermalZoneType_ThermalZone_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimThermalZoneType_ThermalZone_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimThermalZoneType_ThermalZone_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimThermalZoneType_ThermalZone_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimThermalZoneType_ThermalZone_Default_sequence *) &(arg1)->SimThermalZoneType_ThermalZone_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimThermalZoneType_ThermalZone_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimThermalZoneType_ThermalZone_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimThermalZoneType_ThermalZone_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimThermalZoneType_ThermalZone_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimThermalZoneType_ThermalZone_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimThermalZoneType_ThermalZone_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimThermalZoneType_ThermalZone_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimThermalZoneType_ThermalZone_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimThermalZoneType_ThermalZone_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimThermalZoneType_ThermalZone_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimThermalZoneType_ThermalZone_Default_sequence * >(argp2);
  (arg1)->SimThermalZoneType_ThermalZone_Default((schema::simxml::Model::SimModel::SimThermalZoneType_ThermalZone_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimThermalZoneType_ThermalZone_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimThermalZoneType_ThermalZone_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimThermalZoneType_ThermalZone_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimThermalZoneType_ThermalZone_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimThermalZoneType_ThermalZone_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimThermalZoneType_ThermalZone_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimThermalZoneType_ThermalZone_Default() const\n"
    "    schema::simxml::Model::SimModel::SimThermalZoneType_ThermalZone_Default()\n"
    "    schema::simxml::Model::SimModel::SimThermalZoneType_ThermalZone_Default(schema::simxml::Model::SimModel::SimThermalZoneType_ThermalZone_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTimeSeriesSchedule_Calendar_Configuration__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Calendar_Configuration_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimTimeSeriesSchedule_Calendar_Configuration",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTimeSeriesSchedule_Calendar_Configuration" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Calendar_Configuration_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimTimeSeriesSchedule_Calendar_Configuration();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Calendar_Configuration_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTimeSeriesSchedule_Calendar_Configuration__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Calendar_Configuration_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimTimeSeriesSchedule_Calendar_Configuration",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTimeSeriesSchedule_Calendar_Configuration" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Calendar_Configuration_sequence *) &(arg1)->SimTimeSeriesSchedule_Calendar_Configuration();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Calendar_Configuration_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTimeSeriesSchedule_Calendar_Configuration__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Calendar_Configuration_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimTimeSeriesSchedule_Calendar_Configuration",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTimeSeriesSchedule_Calendar_Configuration" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Calendar_Configuration_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimTimeSeriesSchedule_Calendar_Configuration" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Calendar_Configuration_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimTimeSeriesSchedule_Calendar_Configuration" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Calendar_Configuration_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Calendar_Configuration_sequence * >(argp2);
  (arg1)->SimTimeSeriesSchedule_Calendar_Configuration((schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Calendar_Configuration_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTimeSeriesSchedule_Calendar_Configuration(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimTimeSeriesSchedule_Calendar_Configuration__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimTimeSeriesSchedule_Calendar_Configuration__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Calendar_Configuration_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimTimeSeriesSchedule_Calendar_Configuration__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimTimeSeriesSchedule_Calendar_Configuration'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Calendar_Configuration() const\n"
    "    schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Calendar_Configuration()\n"
    "    schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Calendar_Configuration(schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Calendar_Configuration_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTimeSeriesSchedule_Day_Interval__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Day_Interval_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimTimeSeriesSchedule_Day_Interval",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTimeSeriesSchedule_Day_Interval" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Day_Interval_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimTimeSeriesSchedule_Day_Interval();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Day_Interval_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTimeSeriesSchedule_Day_Interval__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Day_Interval_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimTimeSeriesSchedule_Day_Interval",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTimeSeriesSchedule_Day_Interval" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Day_Interval_sequence *) &(arg1)->SimTimeSeriesSchedule_Day_Interval();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Day_Interval_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTimeSeriesSchedule_Day_Interval__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Day_Interval_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimTimeSeriesSchedule_Day_Interval",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTimeSeriesSchedule_Day_Interval" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Day_Interval_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimTimeSeriesSchedule_Day_Interval" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Day_Interval_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimTimeSeriesSchedule_Day_Interval" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Day_Interval_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Day_Interval_sequence * >(argp2);
  (arg1)->SimTimeSeriesSchedule_Day_Interval((schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Day_Interval_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTimeSeriesSchedule_Day_Interval(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimTimeSeriesSchedule_Day_Interval__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimTimeSeriesSchedule_Day_Interval__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Day_Interval_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimTimeSeriesSchedule_Day_Interval__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimTimeSeriesSchedule_Day_Interval'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Day_Interval() const\n"
    "    schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Day_Interval()\n"
    "    schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Day_Interval(schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Day_Interval_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTimeSeriesSchedule_Limits_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Limits_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimTimeSeriesSchedule_Limits_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTimeSeriesSchedule_Limits_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Limits_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimTimeSeriesSchedule_Limits_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Limits_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTimeSeriesSchedule_Limits_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Limits_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimTimeSeriesSchedule_Limits_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTimeSeriesSchedule_Limits_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Limits_Default_sequence *) &(arg1)->SimTimeSeriesSchedule_Limits_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Limits_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTimeSeriesSchedule_Limits_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Limits_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimTimeSeriesSchedule_Limits_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTimeSeriesSchedule_Limits_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Limits_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimTimeSeriesSchedule_Limits_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Limits_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimTimeSeriesSchedule_Limits_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Limits_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Limits_Default_sequence * >(argp2);
  (arg1)->SimTimeSeriesSchedule_Limits_Default((schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Limits_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTimeSeriesSchedule_Limits_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimTimeSeriesSchedule_Limits_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimTimeSeriesSchedule_Limits_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Limits_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimTimeSeriesSchedule_Limits_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimTimeSeriesSchedule_Limits_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Limits_Default() const\n"
    "    schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Limits_Default()\n"
    "    schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Limits_Default(schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Limits_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTimeSeriesSchedule_Week_Daily__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Week_Daily_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimTimeSeriesSchedule_Week_Daily",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTimeSeriesSchedule_Week_Daily" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Week_Daily_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimTimeSeriesSchedule_Week_Daily();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Week_Daily_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTimeSeriesSchedule_Week_Daily__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Week_Daily_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimTimeSeriesSchedule_Week_Daily",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTimeSeriesSchedule_Week_Daily" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Week_Daily_sequence *) &(arg1)->SimTimeSeriesSchedule_Week_Daily();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Week_Daily_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTimeSeriesSchedule_Week_Daily__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Week_Daily_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimTimeSeriesSchedule_Week_Daily",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTimeSeriesSchedule_Week_Daily" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Week_Daily_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimTimeSeriesSchedule_Week_Daily" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Week_Daily_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimTimeSeriesSchedule_Week_Daily" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Week_Daily_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Week_Daily_sequence * >(argp2);
  (arg1)->SimTimeSeriesSchedule_Week_Daily((schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Week_Daily_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTimeSeriesSchedule_Week_Daily(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimTimeSeriesSchedule_Week_Daily__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimTimeSeriesSchedule_Week_Daily__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Week_Daily_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimTimeSeriesSchedule_Week_Daily__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimTimeSeriesSchedule_Week_Daily'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Week_Daily() const\n"
    "    schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Week_Daily()\n"
    "    schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Week_Daily(schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Week_Daily_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTimeSeriesSchedule_Year_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Year_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimTimeSeriesSchedule_Year_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTimeSeriesSchedule_Year_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Year_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimTimeSeriesSchedule_Year_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Year_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTimeSeriesSchedule_Year_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Year_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimTimeSeriesSchedule_Year_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTimeSeriesSchedule_Year_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Year_Default_sequence *) &(arg1)->SimTimeSeriesSchedule_Year_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Year_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTimeSeriesSchedule_Year_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Year_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimTimeSeriesSchedule_Year_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimTimeSeriesSchedule_Year_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Year_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimTimeSeriesSchedule_Year_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Year_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimTimeSeriesSchedule_Year_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Year_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Year_Default_sequence * >(argp2);
  (arg1)->SimTimeSeriesSchedule_Year_Default((schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Year_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimTimeSeriesSchedule_Year_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimTimeSeriesSchedule_Year_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimTimeSeriesSchedule_Year_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Year_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimTimeSeriesSchedule_Year_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimTimeSeriesSchedule_Year_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Year_Default() const\n"
    "    schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Year_Default()\n"
    "    schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Year_Default(schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Year_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWall_Wall_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWall_Wall_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWall_Wall_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWall_Wall_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWall_Wall_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimWall_Wall_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWall_Wall_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWall_Wall_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWall_Wall_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWall_Wall_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWall_Wall_Default_sequence *) &(arg1)->SimWall_Wall_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWall_Wall_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimWall_Wall_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimWall_Wall_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWall_Wall_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimWall_Wall_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWall_Wall_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimWall_Wall_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWall_Wall_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimWall_Wall_Default_sequence * >(argp2);
  (arg1)->SimWall_Wall_Default((schema::simxml::Model::SimModel::SimWall_Wall_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWall_Wall_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWall_Wall_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWall_Wall_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimWall_Wall_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimWall_Wall_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimWall_Wall_Default() const\n"
    "    schema::simxml::Model::SimModel::SimWall_Wall_Default()\n"
    "    schema::simxml::Model::SimModel::SimWall_Wall_Default(schema::simxml::Model::SimModel::SimWall_Wall_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWall_Wall_ExteriorAboveGrade__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWall_Wall_ExteriorAboveGrade_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWall_Wall_ExteriorAboveGrade",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWall_Wall_ExteriorAboveGrade" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWall_Wall_ExteriorAboveGrade_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimWall_Wall_ExteriorAboveGrade();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_ExteriorAboveGrade_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWall_Wall_ExteriorAboveGrade__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWall_Wall_ExteriorAboveGrade_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWall_Wall_ExteriorAboveGrade",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWall_Wall_ExteriorAboveGrade" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWall_Wall_ExteriorAboveGrade_sequence *) &(arg1)->SimWall_Wall_ExteriorAboveGrade();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_ExteriorAboveGrade_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWall_Wall_ExteriorAboveGrade__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimWall_Wall_ExteriorAboveGrade_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimWall_Wall_ExteriorAboveGrade",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWall_Wall_ExteriorAboveGrade" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_ExteriorAboveGrade_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimWall_Wall_ExteriorAboveGrade" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWall_Wall_ExteriorAboveGrade_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimWall_Wall_ExteriorAboveGrade" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWall_Wall_ExteriorAboveGrade_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimWall_Wall_ExteriorAboveGrade_sequence * >(argp2);
  (arg1)->SimWall_Wall_ExteriorAboveGrade((schema::simxml::Model::SimModel::SimWall_Wall_ExteriorAboveGrade_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWall_Wall_ExteriorAboveGrade(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWall_Wall_ExteriorAboveGrade__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWall_Wall_ExteriorAboveGrade__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_ExteriorAboveGrade_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimWall_Wall_ExteriorAboveGrade__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimWall_Wall_ExteriorAboveGrade'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimWall_Wall_ExteriorAboveGrade() const\n"
    "    schema::simxml::Model::SimModel::SimWall_Wall_ExteriorAboveGrade()\n"
    "    schema::simxml::Model::SimModel::SimWall_Wall_ExteriorAboveGrade(schema::simxml::Model::SimModel::SimWall_Wall_ExteriorAboveGrade_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWall_Wall_Interior__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWall_Wall_Interior_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWall_Wall_Interior",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWall_Wall_Interior" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWall_Wall_Interior_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimWall_Wall_Interior();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Interior_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWall_Wall_Interior__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWall_Wall_Interior_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWall_Wall_Interior",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWall_Wall_Interior" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWall_Wall_Interior_sequence *) &(arg1)->SimWall_Wall_Interior();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Interior_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWall_Wall_Interior__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimWall_Wall_Interior_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimWall_Wall_Interior",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWall_Wall_Interior" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Interior_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimWall_Wall_Interior" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWall_Wall_Interior_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimWall_Wall_Interior" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWall_Wall_Interior_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimWall_Wall_Interior_sequence * >(argp2);
  (arg1)->SimWall_Wall_Interior((schema::simxml::Model::SimModel::SimWall_Wall_Interior_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWall_Wall_Interior(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWall_Wall_Interior__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWall_Wall_Interior__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Interior_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimWall_Wall_Interior__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimWall_Wall_Interior'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimWall_Wall_Interior() const\n"
    "    schema::simxml::Model::SimModel::SimWall_Wall_Interior()\n"
    "    schema::simxml::Model::SimModel::SimWall_Wall_Interior(schema::simxml::Model::SimModel::SimWall_Wall_Interior_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWallParams_Wall_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWallParams_Wall_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWallParams_Wall_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWallParams_Wall_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWallParams_Wall_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimWallParams_Wall_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWallParams_Wall_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWallParams_Wall_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWallParams_Wall_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWallParams_Wall_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWallParams_Wall_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWallParams_Wall_Default_sequence *) &(arg1)->SimWallParams_Wall_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWallParams_Wall_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWallParams_Wall_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimWallParams_Wall_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimWallParams_Wall_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWallParams_Wall_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWallParams_Wall_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimWallParams_Wall_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWallParams_Wall_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimWallParams_Wall_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWallParams_Wall_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimWallParams_Wall_Default_sequence * >(argp2);
  (arg1)->SimWallParams_Wall_Default((schema::simxml::Model::SimModel::SimWallParams_Wall_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWallParams_Wall_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWallParams_Wall_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWallParams_Wall_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWallParams_Wall_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimWallParams_Wall_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimWallParams_Wall_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimWallParams_Wall_Default() const\n"
    "    schema::simxml::Model::SimModel::SimWallParams_Wall_Default()\n"
    "    schema::simxml::Model::SimModel::SimWallParams_Wall_Default(schema::simxml::Model::SimModel::SimWallParams_Wall_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWallType_Wall_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWallType_Wall_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWallType_Wall_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWallType_Wall_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWallType_Wall_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimWallType_Wall_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWallType_Wall_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWallType_Wall_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWallType_Wall_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWallType_Wall_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWallType_Wall_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWallType_Wall_Default_sequence *) &(arg1)->SimWallType_Wall_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWallType_Wall_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWallType_Wall_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimWallType_Wall_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimWallType_Wall_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWallType_Wall_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWallType_Wall_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimWallType_Wall_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWallType_Wall_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimWallType_Wall_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWallType_Wall_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimWallType_Wall_Default_sequence * >(argp2);
  (arg1)->SimWallType_Wall_Default((schema::simxml::Model::SimModel::SimWallType_Wall_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWallType_Wall_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWallType_Wall_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWallType_Wall_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWallType_Wall_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimWallType_Wall_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimWallType_Wall_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimWallType_Wall_Default() const\n"
    "    schema::simxml::Model::SimModel::SimWallType_Wall_Default()\n"
    "    schema::simxml::Model::SimModel::SimWallType_Wall_Default(schema::simxml::Model::SimModel::SimWallType_Wall_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindow_Window_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWindow_Window_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWindow_Window_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindow_Window_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWindow_Window_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimWindow_Window_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindow_Window_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWindow_Window_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWindow_Window_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindow_Window_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWindow_Window_Default_sequence *) &(arg1)->SimWindow_Window_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindow_Window_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimWindow_Window_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimWindow_Window_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindow_Window_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimWindow_Window_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWindow_Window_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimWindow_Window_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWindow_Window_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimWindow_Window_Default_sequence * >(argp2);
  (arg1)->SimWindow_Window_Default((schema::simxml::Model::SimModel::SimWindow_Window_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindow_Window_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWindow_Window_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWindow_Window_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimWindow_Window_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimWindow_Window_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimWindow_Window_Default() const\n"
    "    schema::simxml::Model::SimModel::SimWindow_Window_Default()\n"
    "    schema::simxml::Model::SimModel::SimWindow_Window_Default(schema::simxml::Model::SimModel::SimWindow_Window_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindow_Window_Exterior__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWindow_Window_Exterior_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWindow_Window_Exterior",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindow_Window_Exterior" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWindow_Window_Exterior_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimWindow_Window_Exterior();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Exterior_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindow_Window_Exterior__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWindow_Window_Exterior_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWindow_Window_Exterior",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindow_Window_Exterior" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWindow_Window_Exterior_sequence *) &(arg1)->SimWindow_Window_Exterior();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Exterior_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindow_Window_Exterior__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimWindow_Window_Exterior_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimWindow_Window_Exterior",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindow_Window_Exterior" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Exterior_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimWindow_Window_Exterior" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWindow_Window_Exterior_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimWindow_Window_Exterior" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWindow_Window_Exterior_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimWindow_Window_Exterior_sequence * >(argp2);
  (arg1)->SimWindow_Window_Exterior((schema::simxml::Model::SimModel::SimWindow_Window_Exterior_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindow_Window_Exterior(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWindow_Window_Exterior__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWindow_Window_Exterior__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Exterior_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimWindow_Window_Exterior__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimWindow_Window_Exterior'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimWindow_Window_Exterior() const\n"
    "    schema::simxml::Model::SimModel::SimWindow_Window_Exterior()\n"
    "    schema::simxml::Model::SimModel::SimWindow_Window_Exterior(schema::simxml::Model::SimModel::SimWindow_Window_Exterior_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindow_Window_ExteriorDetailed__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWindow_Window_ExteriorDetailed_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWindow_Window_ExteriorDetailed",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindow_Window_ExteriorDetailed" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWindow_Window_ExteriorDetailed_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimWindow_Window_ExteriorDetailed();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_ExteriorDetailed_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindow_Window_ExteriorDetailed__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWindow_Window_ExteriorDetailed_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWindow_Window_ExteriorDetailed",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindow_Window_ExteriorDetailed" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWindow_Window_ExteriorDetailed_sequence *) &(arg1)->SimWindow_Window_ExteriorDetailed();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_ExteriorDetailed_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindow_Window_ExteriorDetailed__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimWindow_Window_ExteriorDetailed_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimWindow_Window_ExteriorDetailed",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindow_Window_ExteriorDetailed" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_ExteriorDetailed_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimWindow_Window_ExteriorDetailed" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWindow_Window_ExteriorDetailed_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimWindow_Window_ExteriorDetailed" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWindow_Window_ExteriorDetailed_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimWindow_Window_ExteriorDetailed_sequence * >(argp2);
  (arg1)->SimWindow_Window_ExteriorDetailed((schema::simxml::Model::SimModel::SimWindow_Window_ExteriorDetailed_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindow_Window_ExteriorDetailed(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWindow_Window_ExteriorDetailed__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWindow_Window_ExteriorDetailed__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_ExteriorDetailed_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimWindow_Window_ExteriorDetailed__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimWindow_Window_ExteriorDetailed'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimWindow_Window_ExteriorDetailed() const\n"
    "    schema::simxml::Model::SimModel::SimWindow_Window_ExteriorDetailed()\n"
    "    schema::simxml::Model::SimModel::SimWindow_Window_ExteriorDetailed(schema::simxml::Model::SimModel::SimWindow_Window_ExteriorDetailed_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowArrayParams_WindowArray_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWindowArrayParams_WindowArray_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWindowArrayParams_WindowArray_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindowArrayParams_WindowArray_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWindowArrayParams_WindowArray_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimWindowArrayParams_WindowArray_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowArrayParams_WindowArray_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowArrayParams_WindowArray_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWindowArrayParams_WindowArray_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWindowArrayParams_WindowArray_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindowArrayParams_WindowArray_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWindowArrayParams_WindowArray_Default_sequence *) &(arg1)->SimWindowArrayParams_WindowArray_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowArrayParams_WindowArray_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowArrayParams_WindowArray_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimWindowArrayParams_WindowArray_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimWindowArrayParams_WindowArray_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindowArrayParams_WindowArray_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowArrayParams_WindowArray_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimWindowArrayParams_WindowArray_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWindowArrayParams_WindowArray_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimWindowArrayParams_WindowArray_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWindowArrayParams_WindowArray_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimWindowArrayParams_WindowArray_Default_sequence * >(argp2);
  (arg1)->SimWindowArrayParams_WindowArray_Default((schema::simxml::Model::SimModel::SimWindowArrayParams_WindowArray_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowArrayParams_WindowArray_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWindowArrayParams_WindowArray_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWindowArrayParams_WindowArray_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowArrayParams_WindowArray_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimWindowArrayParams_WindowArray_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimWindowArrayParams_WindowArray_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimWindowArrayParams_WindowArray_Default() const\n"
    "    schema::simxml::Model::SimModel::SimWindowArrayParams_WindowArray_Default()\n"
    "    schema::simxml::Model::SimModel::SimWindowArrayParams_WindowArray_Default(schema::simxml::Model::SimModel::SimWindowArrayParams_WindowArray_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowLiningProps_WindowLiningProps_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWindowLiningProps_WindowLiningProps_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWindowLiningProps_WindowLiningProps_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindowLiningProps_WindowLiningProps_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWindowLiningProps_WindowLiningProps_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimWindowLiningProps_WindowLiningProps_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowLiningProps_WindowLiningProps_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowLiningProps_WindowLiningProps_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWindowLiningProps_WindowLiningProps_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWindowLiningProps_WindowLiningProps_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindowLiningProps_WindowLiningProps_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWindowLiningProps_WindowLiningProps_Default_sequence *) &(arg1)->SimWindowLiningProps_WindowLiningProps_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowLiningProps_WindowLiningProps_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowLiningProps_WindowLiningProps_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimWindowLiningProps_WindowLiningProps_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimWindowLiningProps_WindowLiningProps_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindowLiningProps_WindowLiningProps_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowLiningProps_WindowLiningProps_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimWindowLiningProps_WindowLiningProps_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWindowLiningProps_WindowLiningProps_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimWindowLiningProps_WindowLiningProps_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWindowLiningProps_WindowLiningProps_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimWindowLiningProps_WindowLiningProps_Default_sequence * >(argp2);
  (arg1)->SimWindowLiningProps_WindowLiningProps_Default((schema::simxml::Model::SimModel::SimWindowLiningProps_WindowLiningProps_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowLiningProps_WindowLiningProps_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWindowLiningProps_WindowLiningProps_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWindowLiningProps_WindowLiningProps_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowLiningProps_WindowLiningProps_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimWindowLiningProps_WindowLiningProps_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimWindowLiningProps_WindowLiningProps_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimWindowLiningProps_WindowLiningProps_Default() const\n"
    "    schema::simxml::Model::SimModel::SimWindowLiningProps_WindowLiningProps_Default()\n"
    "    schema::simxml::Model::SimModel::SimWindowLiningProps_WindowLiningProps_Default(schema::simxml::Model::SimModel::SimWindowLiningProps_WindowLiningProps_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowParams_Window_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWindowParams_Window_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWindowParams_Window_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindowParams_Window_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWindowParams_Window_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimWindowParams_Window_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowParams_Window_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowParams_Window_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWindowParams_Window_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWindowParams_Window_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindowParams_Window_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWindowParams_Window_Default_sequence *) &(arg1)->SimWindowParams_Window_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowParams_Window_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowParams_Window_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimWindowParams_Window_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimWindowParams_Window_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindowParams_Window_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowParams_Window_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimWindowParams_Window_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWindowParams_Window_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimWindowParams_Window_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWindowParams_Window_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimWindowParams_Window_Default_sequence * >(argp2);
  (arg1)->SimWindowParams_Window_Default((schema::simxml::Model::SimModel::SimWindowParams_Window_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowParams_Window_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWindowParams_Window_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWindowParams_Window_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowParams_Window_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimWindowParams_Window_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimWindowParams_Window_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimWindowParams_Window_Default() const\n"
    "    schema::simxml::Model::SimModel::SimWindowParams_Window_Default()\n"
    "    schema::simxml::Model::SimModel::SimWindowParams_Window_Default(schema::simxml::Model::SimModel::SimWindowParams_Window_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowType_Window_Default__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWindowType_Window_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWindowType_Window_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindowType_Window_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWindowType_Window_Default_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimWindowType_Window_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowType_Window_Default__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWindowType_Window_Default_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWindowType_Window_Default",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindowType_Window_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWindowType_Window_Default_sequence *) &(arg1)->SimWindowType_Window_Default();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Default_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowType_Window_Default__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimWindowType_Window_Default_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimWindowType_Window_Default",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindowType_Window_Default" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Default_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimWindowType_Window_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWindowType_Window_Default_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimWindowType_Window_Default" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWindowType_Window_Default_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimWindowType_Window_Default_sequence * >(argp2);
  (arg1)->SimWindowType_Window_Default((schema::simxml::Model::SimModel::SimWindowType_Window_Default_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowType_Window_Default(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWindowType_Window_Default__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWindowType_Window_Default__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Default_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimWindowType_Window_Default__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimWindowType_Window_Default'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimWindowType_Window_Default() const\n"
    "    schema::simxml::Model::SimModel::SimWindowType_Window_Default()\n"
    "    schema::simxml::Model::SimModel::SimWindowType_Window_Default(schema::simxml::Model::SimModel::SimWindowType_Window_Default_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowType_Window_Exterior__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWindowType_Window_Exterior_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWindowType_Window_Exterior",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindowType_Window_Exterior" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWindowType_Window_Exterior_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimWindowType_Window_Exterior();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Exterior_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowType_Window_Exterior__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWindowType_Window_Exterior_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWindowType_Window_Exterior",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindowType_Window_Exterior" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWindowType_Window_Exterior_sequence *) &(arg1)->SimWindowType_Window_Exterior();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Exterior_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowType_Window_Exterior__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimWindowType_Window_Exterior_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimWindowType_Window_Exterior",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindowType_Window_Exterior" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Exterior_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimWindowType_Window_Exterior" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWindowType_Window_Exterior_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimWindowType_Window_Exterior" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWindowType_Window_Exterior_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimWindowType_Window_Exterior_sequence * >(argp2);
  (arg1)->SimWindowType_Window_Exterior((schema::simxml::Model::SimModel::SimWindowType_Window_Exterior_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowType_Window_Exterior(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWindowType_Window_Exterior__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWindowType_Window_Exterior__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Exterior_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimWindowType_Window_Exterior__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimWindowType_Window_Exterior'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimWindowType_Window_Exterior() const\n"
    "    schema::simxml::Model::SimModel::SimWindowType_Window_Exterior()\n"
    "    schema::simxml::Model::SimModel::SimWindowType_Window_Exterior(schema::simxml::Model::SimModel::SimWindowType_Window_Exterior_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowType_Window_Interior__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWindowType_Window_Interior_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWindowType_Window_Interior",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindowType_Window_Interior" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWindowType_Window_Interior_sequence *) &((schema::simxml::Model::SimModel const *)arg1)->SimWindowType_Window_Interior();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Interior_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowType_Window_Interior__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimWindowType_Window_Interior_sequence *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimWindowType_Window_Interior",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindowType_Window_Interior" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimWindowType_Window_Interior_sequence *) &(arg1)->SimWindowType_Window_Interior();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Interior_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowType_Window_Interior__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimWindowType_Window_Interior_sequence *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimWindowType_Window_Interior",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimWindowType_Window_Interior" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Interior_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimWindowType_Window_Interior" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWindowType_Window_Interior_sequence const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimWindowType_Window_Interior" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimWindowType_Window_Interior_sequence const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimWindowType_Window_Interior_sequence * >(argp2);
  (arg1)->SimWindowType_Window_Interior((schema::simxml::Model::SimModel::SimWindowType_Window_Interior_sequence const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimWindowType_Window_Interior(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWindowType_Window_Interior__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimWindowType_Window_Interior__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Interior_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimWindowType_Window_Interior__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimWindowType_Window_Interior'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimWindowType_Window_Interior() const\n"
    "    schema::simxml::Model::SimModel::SimWindowType_Window_Interior()\n"
    "    schema::simxml::Model::SimModel::SimWindowType_Window_Interior(schema::simxml::Model::SimModel::SimWindowType_Window_Interior_sequence const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelVersion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimModelVersion_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimModelVersion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimModelVersion_optional *) &((schema::simxml::Model::SimModel const *)arg1)->SimModelVersion();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelVersion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimModelVersion_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimModelVersion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimModelVersion_optional *) &(arg1)->SimModelVersion();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelVersion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimModelVersion_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimModelVersion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimModelVersion" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelVersion_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimModelVersion" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelVersion_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimModelVersion_type * >(argp2);
  (arg1)->SimModelVersion((schema::simxml::Model::SimModel::SimModelVersion_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelVersion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimModelVersion_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimModelVersion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimModelVersion" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelVersion_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimModelVersion" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelVersion_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimModelVersion_optional * >(argp2);
  (arg1)->SimModelVersion((schema::simxml::Model::SimModel::SimModelVersion_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelVersion__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  ::std::auto_ptr< schema::simxml::Model::SimModel::SimModelVersion_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimModelVersion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimModelVersion" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::Model::SimModel::SimModelVersion_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimModelVersion" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::Model::SimModel::SimModelVersion_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::Model::SimModel::SimModelVersion_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::Model::SimModel::SimModelVersion_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SimModelVersion(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelVersion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimModelVersion__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimModelVersion__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimModelVersion__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimModelVersion__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimModelVersion__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimModelVersion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimModelVersion() const\n"
    "    schema::simxml::Model::SimModel::SimModelVersion()\n"
    "    schema::simxml::Model::SimModel::SimModelVersion(schema::simxml::Model::SimModel::SimModelVersion_type const &)\n"
    "    schema::simxml::Model::SimModel::SimModelVersion(schema::simxml::Model::SimModel::SimModelVersion_optional const &)\n"
    "    schema::simxml::Model::SimModel::SimModelVersion(::std::auto_ptr< schema::simxml::Model::SimModel::SimModelVersion_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelSchemaVersion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimModelSchemaVersion_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimModelSchemaVersion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelSchemaVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimModelSchemaVersion_optional *) &((schema::simxml::Model::SimModel const *)arg1)->SimModelSchemaVersion();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelSchemaVersion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimModelSchemaVersion_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimModelSchemaVersion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelSchemaVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimModelSchemaVersion_optional *) &(arg1)->SimModelSchemaVersion();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelSchemaVersion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimModelSchemaVersion_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimModelSchemaVersion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelSchemaVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimModelSchemaVersion" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelSchemaVersion_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimModelSchemaVersion" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelSchemaVersion_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimModelSchemaVersion_type * >(argp2);
  (arg1)->SimModelSchemaVersion((schema::simxml::Model::SimModel::SimModelSchemaVersion_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelSchemaVersion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimModelSchemaVersion_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimModelSchemaVersion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelSchemaVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimModelSchemaVersion" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelSchemaVersion_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimModelSchemaVersion" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelSchemaVersion_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimModelSchemaVersion_optional * >(argp2);
  (arg1)->SimModelSchemaVersion((schema::simxml::Model::SimModel::SimModelSchemaVersion_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelSchemaVersion__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  ::std::auto_ptr< schema::simxml::Model::SimModel::SimModelSchemaVersion_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimModelSchemaVersion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelSchemaVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimModelSchemaVersion" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::Model::SimModel::SimModelSchemaVersion_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimModelSchemaVersion" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::Model::SimModel::SimModelSchemaVersion_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::Model::SimModel::SimModelSchemaVersion_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::Model::SimModel::SimModelSchemaVersion_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SimModelSchemaVersion(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelSchemaVersion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimModelSchemaVersion__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimModelSchemaVersion__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimModelSchemaVersion__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimModelSchemaVersion__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimModelSchemaVersion__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimModelSchemaVersion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimModelSchemaVersion() const\n"
    "    schema::simxml::Model::SimModel::SimModelSchemaVersion()\n"
    "    schema::simxml::Model::SimModel::SimModelSchemaVersion(schema::simxml::Model::SimModel::SimModelSchemaVersion_type const &)\n"
    "    schema::simxml::Model::SimModel::SimModelSchemaVersion(schema::simxml::Model::SimModel::SimModelSchemaVersion_optional const &)\n"
    "    schema::simxml::Model::SimModel::SimModelSchemaVersion(::std::auto_ptr< schema::simxml::Model::SimModel::SimModelSchemaVersion_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelUnitsVersion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimModelUnitsVersion_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimModelUnitsVersion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelUnitsVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimModelUnitsVersion_optional *) &((schema::simxml::Model::SimModel const *)arg1)->SimModelUnitsVersion();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelUnitsVersion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimModelUnitsVersion_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimModelUnitsVersion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelUnitsVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimModelUnitsVersion_optional *) &(arg1)->SimModelUnitsVersion();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelUnitsVersion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimModelUnitsVersion_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimModelUnitsVersion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelUnitsVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimModelUnitsVersion" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelUnitsVersion_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimModelUnitsVersion" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelUnitsVersion_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimModelUnitsVersion_type * >(argp2);
  (arg1)->SimModelUnitsVersion((schema::simxml::Model::SimModel::SimModelUnitsVersion_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelUnitsVersion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimModelUnitsVersion_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimModelUnitsVersion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelUnitsVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimModelUnitsVersion" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelUnitsVersion_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimModelUnitsVersion" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelUnitsVersion_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimModelUnitsVersion_optional * >(argp2);
  (arg1)->SimModelUnitsVersion((schema::simxml::Model::SimModel::SimModelUnitsVersion_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelUnitsVersion__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  ::std::auto_ptr< schema::simxml::Model::SimModel::SimModelUnitsVersion_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimModelUnitsVersion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelUnitsVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimModelUnitsVersion" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::Model::SimModel::SimModelUnitsVersion_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimModelUnitsVersion" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::Model::SimModel::SimModelUnitsVersion_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::Model::SimModel::SimModelUnitsVersion_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::Model::SimModel::SimModelUnitsVersion_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SimModelUnitsVersion(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelUnitsVersion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimModelUnitsVersion__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimModelUnitsVersion__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimModelUnitsVersion__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimModelUnitsVersion__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimModelUnitsVersion__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimModelUnitsVersion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimModelUnitsVersion() const\n"
    "    schema::simxml::Model::SimModel::SimModelUnitsVersion()\n"
    "    schema::simxml::Model::SimModel::SimModelUnitsVersion(schema::simxml::Model::SimModel::SimModelUnitsVersion_type const &)\n"
    "    schema::simxml::Model::SimModel::SimModelUnitsVersion(schema::simxml::Model::SimModel::SimModelUnitsVersion_optional const &)\n"
    "    schema::simxml::Model::SimModel::SimModelUnitsVersion(::std::auto_ptr< schema::simxml::Model::SimModel::SimModelUnitsVersion_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelUnitDefaultsVersion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimModelUnitDefaultsVersion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelUnitDefaultsVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_optional *) &((schema::simxml::Model::SimModel const *)arg1)->SimModelUnitDefaultsVersion();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelUnitDefaultsVersion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimModelUnitDefaultsVersion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelUnitDefaultsVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_optional *) &(arg1)->SimModelUnitDefaultsVersion();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelUnitDefaultsVersion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimModelUnitDefaultsVersion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelUnitDefaultsVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimModelUnitDefaultsVersion" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimModelUnitDefaultsVersion" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_type * >(argp2);
  (arg1)->SimModelUnitDefaultsVersion((schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelUnitDefaultsVersion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimModelUnitDefaultsVersion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelUnitDefaultsVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimModelUnitDefaultsVersion" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimModelUnitDefaultsVersion" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_optional * >(argp2);
  (arg1)->SimModelUnitDefaultsVersion((schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelUnitDefaultsVersion__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  ::std::auto_ptr< schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimModelUnitDefaultsVersion",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelUnitDefaultsVersion" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimModelUnitDefaultsVersion" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimModelUnitDefaultsVersion" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SimModelUnitDefaultsVersion(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelUnitDefaultsVersion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimModelUnitDefaultsVersion__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimModelUnitDefaultsVersion__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimModelUnitDefaultsVersion__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimModelUnitDefaultsVersion__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimModelUnitDefaultsVersion__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimModelUnitDefaultsVersion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion() const\n"
    "    schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion()\n"
    "    schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion(schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_type const &)\n"
    "    schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion(schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_optional const &)\n"
    "    schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion(::std::auto_ptr< schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelSchemaIDKey__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimModelSchemaIDKey_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimModelSchemaIDKey",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelSchemaIDKey" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimModelSchemaIDKey_optional *) &((schema::simxml::Model::SimModel const *)arg1)->SimModelSchemaIDKey();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelSchemaIDKey__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel::SimModelSchemaIDKey_optional *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_SimModelSchemaIDKey",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelSchemaIDKey" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel::SimModelSchemaIDKey_optional *) &(arg1)->SimModelSchemaIDKey();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelSchemaIDKey__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimModelSchemaIDKey_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimModelSchemaIDKey",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelSchemaIDKey" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimModelSchemaIDKey" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelSchemaIDKey_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimModelSchemaIDKey" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelSchemaIDKey_type const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimModelSchemaIDKey_type * >(argp2);
  (arg1)->SimModelSchemaIDKey((schema::simxml::Model::SimModel::SimModelSchemaIDKey_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelSchemaIDKey__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  schema::simxml::Model::SimModel::SimModelSchemaIDKey_optional *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimModelSchemaIDKey",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelSchemaIDKey" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimModelSchemaIDKey" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelSchemaIDKey_optional const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimModelSchemaIDKey" "', argument " "2"" of type '" "schema::simxml::Model::SimModel::SimModelSchemaIDKey_optional const &""'"); 
  }
  arg2 = reinterpret_cast< schema::simxml::Model::SimModel::SimModelSchemaIDKey_optional * >(argp2);
  (arg1)->SimModelSchemaIDKey((schema::simxml::Model::SimModel::SimModelSchemaIDKey_optional const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelSchemaIDKey__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  ::std::auto_ptr< schema::simxml::Model::SimModel::SimModelSchemaIDKey_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_SimModelSchemaIDKey",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_SimModelSchemaIDKey" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_SimModelSchemaIDKey" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::Model::SimModel::SimModelSchemaIDKey_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_SimModelSchemaIDKey" "', argument " "2"" of type '" "::std::auto_ptr< schema::simxml::Model::SimModel::SimModelSchemaIDKey_type >""'");
    } else {
      ::std::auto_ptr< schema::simxml::Model::SimModel::SimModelSchemaIDKey_type > * temp = reinterpret_cast< ::std::auto_ptr< schema::simxml::Model::SimModel::SimModelSchemaIDKey_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SimModelSchemaIDKey(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_SimModelSchemaIDKey(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimModelSchemaIDKey__SWIG_1(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel_SimModelSchemaIDKey__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimModelSchemaIDKey__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimModelSchemaIDKey__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__auto_ptrT_xml_schema__string_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel_SimModelSchemaIDKey__SWIG_4(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_SimModelSchemaIDKey'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimModelSchemaIDKey() const\n"
    "    schema::simxml::Model::SimModel::SimModelSchemaIDKey()\n"
    "    schema::simxml::Model::SimModel::SimModelSchemaIDKey(schema::simxml::Model::SimModel::SimModelSchemaIDKey_type const &)\n"
    "    schema::simxml::Model::SimModel::SimModelSchemaIDKey(schema::simxml::Model::SimModel::SimModelSchemaIDKey_optional const &)\n"
    "    schema::simxml::Model::SimModel::SimModelSchemaIDKey(::std::auto_ptr< schema::simxml::Model::SimModel::SimModelSchemaIDKey_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SimModel__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SimModel")) SWIG_fail;
  result = (schema::simxml::Model::SimModel *)new schema::simxml::Model::SimModel();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimModel__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::Model::SimModel *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimModel",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimModel" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimModel" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimModel" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimModel" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimModel" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::Model::SimModel *)new schema::simxml::Model::SimModel((::xercesc::DOMElement const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimModel__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::Model::SimModel *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimModel",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimModel" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimModel" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimModel" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimModel" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::Model::SimModel *)new schema::simxml::Model::SimModel((::xercesc::DOMElement const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimModel__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMElement *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimModel",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimModel" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimModel" "', argument " "1"" of type '" "::xercesc::DOMElement const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMElement * >(argp1);
  result = (schema::simxml::Model::SimModel *)new schema::simxml::Model::SimModel((::xercesc::DOMElement const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimModel__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::Model::SimModel *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_SimModel",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__Model__SimModel,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimModel" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimModel" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimModel" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimModel" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SimModel" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::Model::SimModel *)new schema::simxml::Model::SimModel((schema::simxml::Model::SimModel const &)*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimModel__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::Model::SimModel *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SimModel",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__Model__SimModel,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimModel" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimModel" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SimModel" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimModel" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::Model::SimModel *)new schema::simxml::Model::SimModel((schema::simxml::Model::SimModel const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimModel__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SimModel",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_schema__simxml__Model__SimModel,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SimModel" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SimModel" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const &""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel *)new schema::simxml::Model::SimModel((schema::simxml::Model::SimModel const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SimModel(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SimModel__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimModel__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SimModel__SWIG_6(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimModel__SWIG_5(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SimModel__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMElement, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimModel__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_SimModel__SWIG_4(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SimModel'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::SimModel()\n"
    "    schema::simxml::Model::SimModel::SimModel(::xercesc::DOMElement const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::Model::SimModel::SimModel(::xercesc::DOMElement const &,::xml_schema::flags)\n"
    "    schema::simxml::Model::SimModel::SimModel(::xercesc::DOMElement const &)\n"
    "    schema::simxml::Model::SimModel::SimModel(schema::simxml::Model::SimModel const &,::xml_schema::flags,::xml_schema::container *)\n"
    "    schema::simxml::Model::SimModel::SimModel(schema::simxml::Model::SimModel const &,::xml_schema::flags)\n"
    "    schema::simxml::Model::SimModel::SimModel(schema::simxml::Model::SimModel const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SimModel__clone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::container *arg3 = (::xml_schema::container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  schema::simxml::Model::SimModel *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimModel__clone",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel__clone" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_xsd__cxx__tree___type, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel__clone" "', argument " "3"" of type '" "::xml_schema::container *""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::container * >(argp3);
  result = (schema::simxml::Model::SimModel *)((schema::simxml::Model::SimModel const *)arg1)->_clone(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel__clone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  schema::simxml::Model::SimModel *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel__clone",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel__clone" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel__clone" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel__clone" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (schema::simxml::Model::SimModel *)((schema::simxml::Model::SimModel const *)arg1)->_clone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel__clone__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  schema::simxml::Model::SimModel *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel__clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel__clone" "', argument " "1"" of type '" "schema::simxml::Model::SimModel const *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  result = (schema::simxml::Model::SimModel *)((schema::simxml::Model::SimModel const *)arg1)->_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_schema__simxml__Model__SimModel, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel__clone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel__clone__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel__clone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_schema__simxml__Model__SimModel, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__tree___type, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimModel__clone__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel__clone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel::_clone(::xml_schema::flags,::xml_schema::container *) const\n"
    "    schema::simxml::Model::SimModel::_clone(::xml_schema::flags) const\n"
    "    schema::simxml::Model::SimModel::_clone() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SimModel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  schema::simxml::Model::SimModel *arg1 = (schema::simxml::Model::SimModel *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimModel",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimModel" "', argument " "1"" of type '" "schema::simxml::Model::SimModel *""'"); 
  }
  arg1 = reinterpret_cast< schema::simxml::Model::SimModel * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimModel_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SimModel___SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::string *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::properties *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimModel_",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::properties const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::properties const &""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::properties * >(argp3);
  result = schema::simxml::Model::SimModel_((::std::string const &)*arg1,arg2,(::xsd::cxx::tree::properties< char > const &)*arg3);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::string *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_",&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = schema::simxml::Model::SimModel_((::std::string const &)*arg1,arg2);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_",&obj0)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::string const &""'"); 
    }
    arg1 = ptr;
  }
  result = schema::simxml::Model::SimModel_((::std::string const &)*arg1);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::string *arg1 = 0 ;
  ::xml_schema::error_handler *arg2 = 0 ;
  ::xml_schema::flags arg3 ;
  ::xml_schema::properties *arg4 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:SimModel_",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::error_handler &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::error_handler &""'"); 
  }
  arg2 = reinterpret_cast< ::xml_schema::error_handler * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::properties const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::properties const &""'"); 
  }
  arg4 = reinterpret_cast< ::xml_schema::properties * >(argp4);
  result = schema::simxml::Model::SimModel_((::std::string const &)*arg1,*arg2,arg3,(::xsd::cxx::tree::properties< char > const &)*arg4);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::string *arg1 = 0 ;
  ::xml_schema::error_handler *arg2 = 0 ;
  ::xml_schema::flags arg3 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimModel_",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::error_handler &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::error_handler &""'"); 
  }
  arg2 = reinterpret_cast< ::xml_schema::error_handler * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = schema::simxml::Model::SimModel_((::std::string const &)*arg1,*arg2,arg3);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::string *arg1 = 0 ;
  ::xml_schema::error_handler *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_",&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::error_handler &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::error_handler &""'"); 
  }
  arg2 = reinterpret_cast< ::xml_schema::error_handler * >(argp2);
  result = schema::simxml::Model::SimModel_((::std::string const &)*arg1,*arg2);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::string *arg1 = 0 ;
  ::xercesc::DOMErrorHandler *arg2 = 0 ;
  ::xml_schema::flags arg3 ;
  ::xml_schema::properties *arg4 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:SimModel_",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xercesc__DOMErrorHandler,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  arg2 = reinterpret_cast< ::xercesc::DOMErrorHandler * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::properties const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::properties const &""'"); 
  }
  arg4 = reinterpret_cast< ::xml_schema::properties * >(argp4);
  result = schema::simxml::Model::SimModel_((::std::string const &)*arg1,*arg2,arg3,(::xsd::cxx::tree::properties< char > const &)*arg4);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::string *arg1 = 0 ;
  ::xercesc::DOMErrorHandler *arg2 = 0 ;
  ::xml_schema::flags arg3 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimModel_",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xercesc__DOMErrorHandler,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  arg2 = reinterpret_cast< ::xercesc::DOMErrorHandler * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = schema::simxml::Model::SimModel_((::std::string const &)*arg1,*arg2,arg3);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::string *arg1 = 0 ;
  ::xercesc::DOMErrorHandler *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_",&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xercesc__DOMErrorHandler,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  arg2 = reinterpret_cast< ::xercesc::DOMErrorHandler * >(argp2);
  result = schema::simxml::Model::SimModel_((::std::string const &)*arg1,*arg2);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::istream *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::properties *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimModel_",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  arg1 = reinterpret_cast< ::std::istream * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::properties const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::properties const &""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::properties * >(argp3);
  result = schema::simxml::Model::SimModel_(*arg1,arg2,(::xsd::cxx::tree::properties< char > const &)*arg3);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::istream *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  arg1 = reinterpret_cast< ::std::istream * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = schema::simxml::Model::SimModel_(*arg1,arg2);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_11(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::istream *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  arg1 = reinterpret_cast< ::std::istream * >(argp1);
  result = schema::simxml::Model::SimModel_(*arg1);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_12(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::istream *arg1 = 0 ;
  ::xml_schema::error_handler *arg2 = 0 ;
  ::xml_schema::flags arg3 ;
  ::xml_schema::properties *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:SimModel_",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  arg1 = reinterpret_cast< ::std::istream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::error_handler &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::error_handler &""'"); 
  }
  arg2 = reinterpret_cast< ::xml_schema::error_handler * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::properties const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::properties const &""'"); 
  }
  arg4 = reinterpret_cast< ::xml_schema::properties * >(argp4);
  result = schema::simxml::Model::SimModel_(*arg1,*arg2,arg3,(::xsd::cxx::tree::properties< char > const &)*arg4);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_13(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::istream *arg1 = 0 ;
  ::xml_schema::error_handler *arg2 = 0 ;
  ::xml_schema::flags arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimModel_",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  arg1 = reinterpret_cast< ::std::istream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::error_handler &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::error_handler &""'"); 
  }
  arg2 = reinterpret_cast< ::xml_schema::error_handler * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = schema::simxml::Model::SimModel_(*arg1,*arg2,arg3);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_14(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::istream *arg1 = 0 ;
  ::xml_schema::error_handler *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  arg1 = reinterpret_cast< ::std::istream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::error_handler &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::error_handler &""'"); 
  }
  arg2 = reinterpret_cast< ::xml_schema::error_handler * >(argp2);
  result = schema::simxml::Model::SimModel_(*arg1,*arg2);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_15(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::istream *arg1 = 0 ;
  ::xercesc::DOMErrorHandler *arg2 = 0 ;
  ::xml_schema::flags arg3 ;
  ::xml_schema::properties *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:SimModel_",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  arg1 = reinterpret_cast< ::std::istream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xercesc__DOMErrorHandler,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  arg2 = reinterpret_cast< ::xercesc::DOMErrorHandler * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::properties const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::properties const &""'"); 
  }
  arg4 = reinterpret_cast< ::xml_schema::properties * >(argp4);
  result = schema::simxml::Model::SimModel_(*arg1,*arg2,arg3,(::xsd::cxx::tree::properties< char > const &)*arg4);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_16(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::istream *arg1 = 0 ;
  ::xercesc::DOMErrorHandler *arg2 = 0 ;
  ::xml_schema::flags arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimModel_",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  arg1 = reinterpret_cast< ::std::istream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xercesc__DOMErrorHandler,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  arg2 = reinterpret_cast< ::xercesc::DOMErrorHandler * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = schema::simxml::Model::SimModel_(*arg1,*arg2,arg3);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_17(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::istream *arg1 = 0 ;
  ::xercesc::DOMErrorHandler *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  arg1 = reinterpret_cast< ::std::istream * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xercesc__DOMErrorHandler,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  arg2 = reinterpret_cast< ::xercesc::DOMErrorHandler * >(argp2);
  result = schema::simxml::Model::SimModel_(*arg1,*arg2);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_18(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::istream *arg1 = 0 ;
  ::std::string *arg2 = 0 ;
  ::xml_schema::flags arg3 ;
  ::xml_schema::properties *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:SimModel_",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  arg1 = reinterpret_cast< ::std::istream * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::properties const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::properties const &""'"); 
  }
  arg4 = reinterpret_cast< ::xml_schema::properties * >(argp4);
  result = schema::simxml::Model::SimModel_(*arg1,(::std::string const &)*arg2,arg3,(::xsd::cxx::tree::properties< char > const &)*arg4);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_19(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::istream *arg1 = 0 ;
  ::std::string *arg2 = 0 ;
  ::xml_schema::flags arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimModel_",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  arg1 = reinterpret_cast< ::std::istream * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = schema::simxml::Model::SimModel_(*arg1,(::std::string const &)*arg2,arg3);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_20(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::istream *arg1 = 0 ;
  ::std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  arg1 = reinterpret_cast< ::std::istream * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::std::string const &""'"); 
    }
    arg2 = ptr;
  }
  result = schema::simxml::Model::SimModel_(*arg1,(::std::string const &)*arg2);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_21(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::istream *arg1 = 0 ;
  ::std::string *arg2 = 0 ;
  ::xml_schema::error_handler *arg3 = 0 ;
  ::xml_schema::flags arg4 ;
  ::xml_schema::properties *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:SimModel_",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  arg1 = reinterpret_cast< ::std::istream * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::error_handler &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::error_handler &""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::error_handler * >(argp3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "SimModel_" "', argument " "5"" of type '" "::xml_schema::properties const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "5"" of type '" "::xml_schema::properties const &""'"); 
  }
  arg5 = reinterpret_cast< ::xml_schema::properties * >(argp5);
  result = schema::simxml::Model::SimModel_(*arg1,(::std::string const &)*arg2,*arg3,arg4,(::xsd::cxx::tree::properties< char > const &)*arg5);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_22(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::istream *arg1 = 0 ;
  ::std::string *arg2 = 0 ;
  ::xml_schema::error_handler *arg3 = 0 ;
  ::xml_schema::flags arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:SimModel_",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  arg1 = reinterpret_cast< ::std::istream * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::error_handler &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::error_handler &""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::error_handler * >(argp3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  result = schema::simxml::Model::SimModel_(*arg1,(::std::string const &)*arg2,*arg3,arg4);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_23(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::istream *arg1 = 0 ;
  ::std::string *arg2 = 0 ;
  ::xml_schema::error_handler *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimModel_",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  arg1 = reinterpret_cast< ::std::istream * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::error_handler &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::error_handler &""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::error_handler * >(argp3);
  result = schema::simxml::Model::SimModel_(*arg1,(::std::string const &)*arg2,*arg3);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_24(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::istream *arg1 = 0 ;
  ::std::string *arg2 = 0 ;
  ::xercesc::DOMErrorHandler *arg3 = 0 ;
  ::xml_schema::flags arg4 ;
  ::xml_schema::properties *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:SimModel_",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  arg1 = reinterpret_cast< ::std::istream * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xercesc__DOMErrorHandler,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  arg3 = reinterpret_cast< ::xercesc::DOMErrorHandler * >(argp3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "SimModel_" "', argument " "5"" of type '" "::xml_schema::properties const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "5"" of type '" "::xml_schema::properties const &""'"); 
  }
  arg5 = reinterpret_cast< ::xml_schema::properties * >(argp5);
  result = schema::simxml::Model::SimModel_(*arg1,(::std::string const &)*arg2,*arg3,arg4,(::xsd::cxx::tree::properties< char > const &)*arg5);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_25(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::istream *arg1 = 0 ;
  ::std::string *arg2 = 0 ;
  ::xercesc::DOMErrorHandler *arg3 = 0 ;
  ::xml_schema::flags arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:SimModel_",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  arg1 = reinterpret_cast< ::std::istream * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xercesc__DOMErrorHandler,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  arg3 = reinterpret_cast< ::xercesc::DOMErrorHandler * >(argp3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  result = schema::simxml::Model::SimModel_(*arg1,(::std::string const &)*arg2,*arg3,arg4);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_26(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::std::istream *arg1 = 0 ;
  ::std::string *arg2 = 0 ;
  ::xercesc::DOMErrorHandler *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimModel_",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::std::istream &""'"); 
  }
  arg1 = reinterpret_cast< ::std::istream * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xercesc__DOMErrorHandler,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  arg3 = reinterpret_cast< ::xercesc::DOMErrorHandler * >(argp3);
  result = schema::simxml::Model::SimModel_(*arg1,(::std::string const &)*arg2,*arg3);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_27(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::InputSource *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::properties *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimModel_",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__InputSource,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::InputSource &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::InputSource &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::InputSource * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::properties const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::properties const &""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::properties * >(argp3);
  result = schema::simxml::Model::SimModel_(*arg1,arg2,(::xsd::cxx::tree::properties< char > const &)*arg3);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_28(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::InputSource *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__InputSource,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::InputSource &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::InputSource &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::InputSource * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = schema::simxml::Model::SimModel_(*arg1,arg2);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_29(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::InputSource *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__InputSource,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::InputSource &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::InputSource &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::InputSource * >(argp1);
  result = schema::simxml::Model::SimModel_(*arg1);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_30(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::InputSource *arg1 = 0 ;
  ::xml_schema::error_handler *arg2 = 0 ;
  ::xml_schema::flags arg3 ;
  ::xml_schema::properties *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:SimModel_",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__InputSource,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::InputSource &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::InputSource &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::InputSource * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::error_handler &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::error_handler &""'"); 
  }
  arg2 = reinterpret_cast< ::xml_schema::error_handler * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::properties const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::properties const &""'"); 
  }
  arg4 = reinterpret_cast< ::xml_schema::properties * >(argp4);
  result = schema::simxml::Model::SimModel_(*arg1,*arg2,arg3,(::xsd::cxx::tree::properties< char > const &)*arg4);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_31(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::InputSource *arg1 = 0 ;
  ::xml_schema::error_handler *arg2 = 0 ;
  ::xml_schema::flags arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimModel_",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__InputSource,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::InputSource &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::InputSource &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::InputSource * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::error_handler &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::error_handler &""'"); 
  }
  arg2 = reinterpret_cast< ::xml_schema::error_handler * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = schema::simxml::Model::SimModel_(*arg1,*arg2,arg3);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_32(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::InputSource *arg1 = 0 ;
  ::xml_schema::error_handler *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__InputSource,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::InputSource &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::InputSource &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::InputSource * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::error_handler &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::error_handler &""'"); 
  }
  arg2 = reinterpret_cast< ::xml_schema::error_handler * >(argp2);
  result = schema::simxml::Model::SimModel_(*arg1,*arg2);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_33(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::InputSource *arg1 = 0 ;
  ::xercesc::DOMErrorHandler *arg2 = 0 ;
  ::xml_schema::flags arg3 ;
  ::xml_schema::properties *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:SimModel_",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__InputSource,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::InputSource &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::InputSource &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::InputSource * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xercesc__DOMErrorHandler,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  arg2 = reinterpret_cast< ::xercesc::DOMErrorHandler * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::properties const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "4"" of type '" "::xml_schema::properties const &""'"); 
  }
  arg4 = reinterpret_cast< ::xml_schema::properties * >(argp4);
  result = schema::simxml::Model::SimModel_(*arg1,*arg2,arg3,(::xsd::cxx::tree::properties< char > const &)*arg4);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_34(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::InputSource *arg1 = 0 ;
  ::xercesc::DOMErrorHandler *arg2 = 0 ;
  ::xml_schema::flags arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimModel_",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__InputSource,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::InputSource &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::InputSource &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::InputSource * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xercesc__DOMErrorHandler,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  arg2 = reinterpret_cast< ::xercesc::DOMErrorHandler * >(argp2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = schema::simxml::Model::SimModel_(*arg1,*arg2,arg3);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_35(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::InputSource *arg1 = 0 ;
  ::xercesc::DOMErrorHandler *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__InputSource,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::InputSource &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::InputSource &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::InputSource * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xercesc__DOMErrorHandler,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xercesc::DOMErrorHandler &""'"); 
  }
  arg2 = reinterpret_cast< ::xercesc::DOMErrorHandler * >(argp2);
  result = schema::simxml::Model::SimModel_(*arg1,*arg2);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_36(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMDocument *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::properties *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimModel_",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMDocument,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::DOMDocument const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::DOMDocument const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMDocument * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::properties const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::properties const &""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::properties * >(argp3);
  result = schema::simxml::Model::SimModel_((::xercesc::DOMDocument const &)*arg1,arg2,(::xsd::cxx::tree::properties< char > const &)*arg3);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_37(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMDocument *arg1 = 0 ;
  ::xml_schema::flags arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMDocument,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::DOMDocument const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::DOMDocument const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMDocument * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = schema::simxml::Model::SimModel_((::xercesc::DOMDocument const &)*arg1,arg2);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_38(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xercesc::DOMDocument *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xercesc__DOMDocument,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::DOMDocument const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::xercesc::DOMDocument const &""'"); 
  }
  arg1 = reinterpret_cast< ::xercesc::DOMDocument * >(argp1);
  result = schema::simxml::Model::SimModel_((::xercesc::DOMDocument const &)*arg1);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_39(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument > arg1 ;
  ::xml_schema::flags arg2 ;
  ::xml_schema::properties *arg3 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SimModel_",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xml_schema__dom__auto_ptrT_xercesc__DOMDocument_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >""'");
    } else {
      ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument > * temp = reinterpret_cast< ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument > * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::properties const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "3"" of type '" "::xml_schema::properties const &""'"); 
  }
  arg3 = reinterpret_cast< ::xml_schema::properties * >(argp3);
  result = schema::simxml::Model::SimModel_(arg1,arg2,(::xsd::cxx::tree::properties< char > const &)*arg3);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_40(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument > arg1 ;
  ::xml_schema::flags arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimModel_",&obj0,&obj1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xml_schema__dom__auto_ptrT_xercesc__DOMDocument_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >""'");
    } else {
      ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument > * temp = reinterpret_cast< ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument > * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_xsd__cxx__tree__flags,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::flags""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "2"" of type '" "::xml_schema::flags""'");
    } else {
      ::xml_schema::flags * temp = reinterpret_cast< ::xml_schema::flags * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = schema::simxml::Model::SimModel_(arg1,arg2);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel___SWIG_41(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::std::auto_ptr< ::schema::simxml::Model::SimModel > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimModel_",&obj0)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_xml_schema__dom__auto_ptrT_xercesc__DOMDocument_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimModel_" "', argument " "1"" of type '" "::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimModel_" "', argument " "1"" of type '" "::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >""'");
    } else {
      ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument > * temp = reinterpret_cast< ::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument > * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = schema::simxml::Model::SimModel_(arg1);
  
  resultobj = SWIG_NewPointerObj((&result)->release(), SWIGTYPE_p_schema__simxml__Model__SimModel, SWIG_POINTER_OWN |  0 );
  
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimModel_(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6] = {
    0
  };
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel___SWIG_11(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xercesc__InputSource, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel___SWIG_29(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel___SWIG_38(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xml_schema__dom__auto_ptrT_xercesc__DOMDocument_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel___SWIG_41(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SimModel___SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel___SWIG_14(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xercesc__DOMErrorHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel___SWIG_17(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel___SWIG_10(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xercesc__InputSource, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel___SWIG_28(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xercesc__InputSource, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel___SWIG_32(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xercesc__InputSource, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xercesc__DOMErrorHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel___SWIG_35(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel___SWIG_37(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xml_schema__dom__auto_ptrT_xercesc__DOMDocument_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel___SWIG_40(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel___SWIG_20(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xercesc__DOMErrorHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel___SWIG_8(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel___SWIG_5(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SimModel___SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimModel___SWIG_13(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xercesc__InputSource, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimModel___SWIG_27(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xercesc__DOMErrorHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimModel___SWIG_16(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xercesc__InputSource, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimModel___SWIG_31(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xercesc__InputSource, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xercesc__DOMErrorHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimModel___SWIG_34(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimModel___SWIG_9(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xercesc__DOMDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimModel___SWIG_36(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xercesc__DOMErrorHandler, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimModel___SWIG_26(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimModel___SWIG_19(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_xml_schema__dom__auto_ptrT_xercesc__DOMDocument_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimModel___SWIG_39(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimModel___SWIG_23(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimModel___SWIG_4(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimModel___SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xercesc__DOMErrorHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SimModel___SWIG_7(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xercesc__InputSource, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xercesc__DOMErrorHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_SimModel___SWIG_33(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xercesc__DOMErrorHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_SimModel___SWIG_15(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_SimModel___SWIG_12(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xercesc__DOMErrorHandler, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_SimModel___SWIG_25(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_xercesc__InputSource, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_SimModel___SWIG_30(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_SimModel___SWIG_22(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_SimModel___SWIG_18(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xercesc__DOMErrorHandler, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_SimModel___SWIG_6(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_SimModel___SWIG_3(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xercesc__DOMErrorHandler, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_SimModel___SWIG_24(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_xsd__cxx__xml__error_handlerT_char_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_xsd__cxx__tree__flags, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_xsd__cxx__tree__propertiesT_char_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_SimModel___SWIG_21(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SimModel_'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    schema::simxml::Model::SimModel_(::std::string const &,::xml_schema::flags,::xml_schema::properties const &)\n"
    "    schema::simxml::Model::SimModel_(::std::string const &,::xml_schema::flags)\n"
    "    schema::simxml::Model::SimModel_(::std::string const &)\n"
    "    schema::simxml::Model::SimModel_(::std::string const &,::xml_schema::error_handler &,::xml_schema::flags,::xml_schema::properties const &)\n"
    "    schema::simxml::Model::SimModel_(::std::string const &,::xml_schema::error_handler &,::xml_schema::flags)\n"
    "    schema::simxml::Model::SimModel_(::std::string const &,::xml_schema::error_handler &)\n"
    "    schema::simxml::Model::SimModel_(::std::string const &,::xercesc::DOMErrorHandler &,::xml_schema::flags,::xml_schema::properties const &)\n"
    "    schema::simxml::Model::SimModel_(::std::string const &,::xercesc::DOMErrorHandler &,::xml_schema::flags)\n"
    "    schema::simxml::Model::SimModel_(::std::string const &,::xercesc::DOMErrorHandler &)\n"
    "    schema::simxml::Model::SimModel_(::std::istream &,::xml_schema::flags,::xml_schema::properties const &)\n"
    "    schema::simxml::Model::SimModel_(::std::istream &,::xml_schema::flags)\n"
    "    schema::simxml::Model::SimModel_(::std::istream &)\n"
    "    schema::simxml::Model::SimModel_(::std::istream &,::xml_schema::error_handler &,::xml_schema::flags,::xml_schema::properties const &)\n"
    "    schema::simxml::Model::SimModel_(::std::istream &,::xml_schema::error_handler &,::xml_schema::flags)\n"
    "    schema::simxml::Model::SimModel_(::std::istream &,::xml_schema::error_handler &)\n"
    "    schema::simxml::Model::SimModel_(::std::istream &,::xercesc::DOMErrorHandler &,::xml_schema::flags,::xml_schema::properties const &)\n"
    "    schema::simxml::Model::SimModel_(::std::istream &,::xercesc::DOMErrorHandler &,::xml_schema::flags)\n"
    "    schema::simxml::Model::SimModel_(::std::istream &,::xercesc::DOMErrorHandler &)\n"
    "    schema::simxml::Model::SimModel_(::std::istream &,::std::string const &,::xml_schema::flags,::xml_schema::properties const &)\n"
    "    schema::simxml::Model::SimModel_(::std::istream &,::std::string const &,::xml_schema::flags)\n"
    "    schema::simxml::Model::SimModel_(::std::istream &,::std::string const &)\n"
    "    schema::simxml::Model::SimModel_(::std::istream &,::std::string const &,::xml_schema::error_handler &,::xml_schema::flags,::xml_schema::properties const &)\n"
    "    schema::simxml::Model::SimModel_(::std::istream &,::std::string const &,::xml_schema::error_handler &,::xml_schema::flags)\n"
    "    schema::simxml::Model::SimModel_(::std::istream &,::std::string const &,::xml_schema::error_handler &)\n"
    "    schema::simxml::Model::SimModel_(::std::istream &,::std::string const &,::xercesc::DOMErrorHandler &,::xml_schema::flags,::xml_schema::properties const &)\n"
    "    schema::simxml::Model::SimModel_(::std::istream &,::std::string const &,::xercesc::DOMErrorHandler &,::xml_schema::flags)\n"
    "    schema::simxml::Model::SimModel_(::std::istream &,::std::string const &,::xercesc::DOMErrorHandler &)\n"
    "    schema::simxml::Model::SimModel_(::xercesc::InputSource &,::xml_schema::flags,::xml_schema::properties const &)\n"
    "    schema::simxml::Model::SimModel_(::xercesc::InputSource &,::xml_schema::flags)\n"
    "    schema::simxml::Model::SimModel_(::xercesc::InputSource &)\n"
    "    schema::simxml::Model::SimModel_(::xercesc::InputSource &,::xml_schema::error_handler &,::xml_schema::flags,::xml_schema::properties const &)\n"
    "    schema::simxml::Model::SimModel_(::xercesc::InputSource &,::xml_schema::error_handler &,::xml_schema::flags)\n"
    "    schema::simxml::Model::SimModel_(::xercesc::InputSource &,::xml_schema::error_handler &)\n"
    "    schema::simxml::Model::SimModel_(::xercesc::InputSource &,::xercesc::DOMErrorHandler &,::xml_schema::flags,::xml_schema::properties const &)\n"
    "    schema::simxml::Model::SimModel_(::xercesc::InputSource &,::xercesc::DOMErrorHandler &,::xml_schema::flags)\n"
    "    schema::simxml::Model::SimModel_(::xercesc::InputSource &,::xercesc::DOMErrorHandler &)\n"
    "    schema::simxml::Model::SimModel_(::xercesc::DOMDocument const &,::xml_schema::flags,::xml_schema::properties const &)\n"
    "    schema::simxml::Model::SimModel_(::xercesc::DOMDocument const &,::xml_schema::flags)\n"
    "    schema::simxml::Model::SimModel_(::xercesc::DOMDocument const &)\n"
    "    schema::simxml::Model::SimModel_(::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >,::xml_schema::flags,::xml_schema::properties const &)\n"
    "    schema::simxml::Model::SimModel_(::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >,::xml_schema::flags)\n"
    "    schema::simxml::Model::SimModel_(::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument >)\n");
  return 0;
}


static PyMethodDef SwigMethods[] = {
	 { (char *)"SWIG_PyInstanceMethod_New", (PyCFunction)SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { (char *)"delete_SwigPyIterator", _wrap_delete_SwigPyIterator, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_value", _wrap_SwigPyIterator_value, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_incr", _wrap_SwigPyIterator_incr, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_decr", _wrap_SwigPyIterator_decr, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_distance", _wrap_SwigPyIterator_distance, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_equal", _wrap_SwigPyIterator_equal, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_copy", _wrap_SwigPyIterator_copy, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_next", _wrap_SwigPyIterator_next, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___next__", _wrap_SwigPyIterator___next__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_previous", _wrap_SwigPyIterator_previous, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_advance", _wrap_SwigPyIterator_advance, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___eq__", _wrap_SwigPyIterator___eq__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___ne__", _wrap_SwigPyIterator___ne__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___iadd__", _wrap_SwigPyIterator___iadd__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___isub__", _wrap_SwigPyIterator___isub__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___add__", _wrap_SwigPyIterator___add__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___sub__", _wrap_SwigPyIterator___sub__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_swigregister", SwigPyIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAddress_Postal_Default", _wrap_SimModel_SimAddress_Postal_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary", _wrap_SimModel_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponent", _wrap_SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponent, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup", _wrap_SimModel_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_DistributionSystem_HvacAirLoop", _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacAirLoop, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop", _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop", _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop", _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop", _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop", _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop", _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerDemand", _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerDemand, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration", _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow", _wrap_SimModel_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_SiteContext_AdjacentSite", _wrap_SimModel_SimAppObjNameDefault_SiteContext_AdjacentSite, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_SiteContext_SolarObstruction", _wrap_SimModel_SimAppObjNameDefault_SiteContext_SolarObstruction, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_Space_Space", _wrap_SimModel_SimAppObjNameDefault_Space_Space, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_SpatialContainer_Building", _wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Building, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_SpatialContainer_BuildingStory", _wrap_SimModel_SimAppObjNameDefault_SpatialContainer_BuildingStory, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_SpatialContainer_Project", _wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Project, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_SpatialContainer_Site", _wrap_SimModel_SimAppObjNameDefault_SpatialContainer_Site, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone", _wrap_SimModel_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_SpatialZone_FloorPlenumZone", _wrap_SimModel_SimAppObjNameDefault_SpatialZone_FloorPlenumZone, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_SpatialZone_ThermalZone", _wrap_SimModel_SimAppObjNameDefault_SpatialZone_ThermalZone, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup", _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup", _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup", _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup", _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup", _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup", _wrap_SimModel_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppPreferences_AppPreferences_AutoSave", _wrap_SimModel_SimAppPreferences_AppPreferences_AutoSave, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppPreferences_AppPreferences_AutoSaveInterval", _wrap_SimModel_SimAppPreferences_AppPreferences_AutoSaveInterval, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppPreferences_AppPreferences_EPlusInstalPath", _wrap_SimModel_SimAppPreferences_AppPreferences_EPlusInstalPath, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppPreferences_AppPreferences_EPlusInstalVersion", _wrap_SimModel_SimAppPreferences_AppPreferences_EPlusInstalVersion, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppPreferences_AppPreferences_MinMonthlyChargeType", _wrap_SimModel_SimAppPreferences_AppPreferences_MinMonthlyChargeType, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimAppUnitDefault_AppUnitDefault_DatabaseDefault", _wrap_SimModel_SimAppUnitDefault_AppUnitDefault_DatabaseDefault, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimArbitraryProfileDef_ArbitraryProfile_Closed", _wrap_SimModel_SimArbitraryProfileDef_ArbitraryProfile_Closed, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimBldgSiteParams_BuildingSite_Default", _wrap_SimModel_SimBldgSiteParams_BuildingSite_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimBldgStoryParams_BuildingStory_Default", _wrap_SimModel_SimBldgStoryParams_BuildingStory_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimBuilding_Building_Default", _wrap_SimModel_SimBuilding_Building_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimBuildingStory_BuildingStory_Default", _wrap_SimModel_SimBuildingStory_BuildingStory_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimCartesianTransformOperator_3D_Uniform", _wrap_SimModel_SimCartesianTransformOperator_3D_Uniform, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimClassification_ClassificationReference_SpaceCategoryBoma", _wrap_SimModel_SimClassification_ClassificationReference_SpaceCategoryBoma, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimClassification_ClassificationReference_SpaceCategoryOwner", _wrap_SimModel_SimClassification_ClassificationReference_SpaceCategoryOwner, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimClassification_ClassificationReference_SpaceTypeOwner", _wrap_SimModel_SimClassification_ClassificationReference_SpaceTypeOwner, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimClassification_ClassificationSystem_Default", _wrap_SimModel_SimClassification_ClassificationSystem_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimClassification_ClassificationSystem_OmniClass", _wrap_SimModel_SimClassification_ClassificationSystem_OmniClass, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell", _wrap_SimModel_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimConnectedFaceSet_ConnectedFaceSet_Default", _wrap_SimModel_SimConnectedFaceSet_ConnectedFaceSet_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimConnection_HotWaterFlow_Default", _wrap_SimModel_SimConnection_HotWaterFlow_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimConnection_ZoneAirFlow_Default", _wrap_SimModel_SimConnection_ZoneAirFlow_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimController_SupplyWater_Temperature", _wrap_SimModel_SimController_SupplyWater_Temperature, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimController_ZoneControlTemperature_Thermostat", _wrap_SimModel_SimController_ZoneControlTemperature_Thermostat, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimControlScheme_AvailabilityManagerScheme_Scheduled", _wrap_SimModel_SimControlScheme_AvailabilityManagerScheme_Scheduled, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimControlScheme_ControlAndSequencingScheme_HeatingLoad", _wrap_SimModel_SimControlScheme_ControlAndSequencingScheme_HeatingLoad, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint", _wrap_SimModel_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimControlScheme_SetpointScheme_SingleHeating", _wrap_SimModel_SimControlScheme_SetpointScheme_SingleHeating, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimDerivedUnitType_DerivedUnit_Default", _wrap_SimModel_SimDerivedUnitType_DerivedUnit_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimDistributionPort_AirFlowPort_Air_In", _wrap_SimModel_SimDistributionPort_AirFlowPort_Air_In, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimDistributionPort_AirFlowPort_Air_Out", _wrap_SimModel_SimDistributionPort_AirFlowPort_Air_Out, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimDistributionPort_HotWaterFlowPort_Water_In", _wrap_SimModel_SimDistributionPort_HotWaterFlowPort_Water_In, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimDistributionPort_HotWaterFlowPort_Water_Out", _wrap_SimModel_SimDistributionPort_HotWaterFlowPort_Water_Out, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimFace_Face_Default", _wrap_SimModel_SimFace_Face_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimFaceBound_FaceBound_Default", _wrap_SimModel_SimFaceBound_FaceBound_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimFaceBound_FaceBound_FaceOuterBound", _wrap_SimModel_SimFaceBound_FaceBound_FaceOuterBound, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimFeatureElementSubtraction_Void_Opening", _wrap_SimModel_SimFeatureElementSubtraction_Void_Opening, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimFlowController_Valve_Default", _wrap_SimModel_SimFlowController_Valve_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimFlowController_Valve_TemperingValve", _wrap_SimModel_SimFlowController_Valve_TemperingValve, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water", _wrap_SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Water", _wrap_SimModel_SimFlowEnergyTransfer_ConvectiveHeater_Water, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Mixed", _wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Mixed, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Expansion", _wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_Expansion, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual", _wrap_SimModel_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimFlowFitting_Default_Default", _wrap_SimModel_SimFlowFitting_Default_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimFlowFitting_Mixer_DemandProxyMixerWater", _wrap_SimModel_SimFlowFitting_Mixer_DemandProxyMixerWater, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimFlowFitting_Splitter_DemandProxySplitterWater", _wrap_SimModel_SimFlowFitting_Splitter_DemandProxySplitterWater, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimFlowMover_Pump_VariableSpeedReturn", _wrap_SimModel_SimFlowMover_Pump_VariableSpeedReturn, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimFlowPlant_Boiler_BoilerHotWater", _wrap_SimModel_SimFlowPlant_Boiler_BoilerHotWater, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimFlowSegment_Pipe_Indoor", _wrap_SimModel_SimFlowSegment_Pipe_Indoor, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimGeomBooleanResult_BooleanClippingResult_Default", _wrap_SimModel_SimGeomBooleanResult_BooleanClippingResult_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimGeomCurve_Polyline_Default", _wrap_SimModel_SimGeomCurve_Polyline_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace", _wrap_SimModel_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimGeomPoint_Point_CartesianPoint", _wrap_SimModel_SimGeomPoint_Point_CartesianPoint, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimGeomSolidModel_FacetedBrep_Default", _wrap_SimModel_SimGeomSolidModel_FacetedBrep_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid", _wrap_SimModel_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimGeomSurface_BoundedSurface_CurveBoundedPlane", _wrap_SimModel_SimGeomSurface_BoundedSurface_CurveBoundedPlane, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimGeomSurface_ElementarySurface_Plane", _wrap_SimModel_SimGeomSurface_ElementarySurface_Plane, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default", _wrap_SimModel_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimGeomVector_Vector_Default", _wrap_SimModel_SimGeomVector_Vector_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimGeomVector_Vector_Direction", _wrap_SimModel_SimGeomVector_Vector_Direction, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimGroup_BldgCompGroup_ZoneEquipment", _wrap_SimModel_SimGroup_BldgCompGroup_ZoneEquipment, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimGroup_HvacDemandGroup_WaterSystem", _wrap_SimModel_SimGroup_HvacDemandGroup_WaterSystem, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimGroup_SpatialZoneGroup_ZoneGroup", _wrap_SimModel_SimGroup_SpatialZoneGroup_ZoneGroup, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimGroup_SpatialZoneGroup_ZoneHvacGroup", _wrap_SimModel_SimGroup_SpatialZoneGroup_ZoneHvacGroup, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimInternalLoad_Equipment_Electric", _wrap_SimModel_SimInternalLoad_Equipment_Electric, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimInternalLoad_Lights_Default", _wrap_SimModel_SimInternalLoad_Lights_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimInternalLoad_People_Default", _wrap_SimModel_SimInternalLoad_People_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimList_ConnectorList_SimConnections", _wrap_SimModel_SimList_ConnectorList_SimConnections, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimList_EquipmentList_ZoneHvac", _wrap_SimModel_SimList_EquipmentList_ZoneHvac, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimList_MaterialList_Default", _wrap_SimModel_SimList_MaterialList_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimList_SchemeList_AirLoopAvailabilityMgrScheme", _wrap_SimModel_SimList_SchemeList_AirLoopAvailabilityMgrScheme, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimList_SchemeList_DemandManagerScheme", _wrap_SimModel_SimList_SchemeList_DemandManagerScheme, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimList_SchemeList_PlantOperatingScheme", _wrap_SimModel_SimList_SchemeList_PlantOperatingScheme, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimList_SchemeList_WaterTempControlScheme", _wrap_SimModel_SimList_SchemeList_WaterTempControlScheme, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimLocalPlacement_LocalPlacement_AbsolutePlacement", _wrap_SimModel_SimLocalPlacement_LocalPlacement_AbsolutePlacement, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimLocalPlacement_LocalPlacement_RelativePlacement", _wrap_SimModel_SimLocalPlacement_LocalPlacement_RelativePlacement, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimLocationAndWeather_DesignDay_Default", _wrap_SimModel_SimLocationAndWeather_DesignDay_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimLocationAndWeather_Location_Default", _wrap_SimModel_SimLocationAndWeather_Location_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimLoop_Loop_PolyLoop", _wrap_SimModel_SimLoop_Loop_PolyLoop, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimMappedRepresentationItem_Default_Default", _wrap_SimModel_SimMappedRepresentationItem_Default_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimMaterial_Default_Default", _wrap_SimModel_SimMaterial_Default_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimMaterial_GlazingMaterial_Gas", _wrap_SimModel_SimMaterial_GlazingMaterial_Gas, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimMaterial_GlazingMaterial_Glazing", _wrap_SimModel_SimMaterial_GlazingMaterial_Glazing, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimMaterial_GlazingMaterial_SimpleGlazingSystem", _wrap_SimModel_SimMaterial_GlazingMaterial_SimpleGlazingSystem, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimMaterial_OpaqueMaterial_AirGap", _wrap_SimModel_SimMaterial_OpaqueMaterial_AirGap, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimMaterial_OpaqueMaterial_Default", _wrap_SimModel_SimMaterial_OpaqueMaterial_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimMaterialLayer_GlazingMaterialLayer_Default", _wrap_SimModel_SimMaterialLayer_GlazingMaterialLayer_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimMaterialLayer_GlazingMaterialLayer_Thermochromic", _wrap_SimModel_SimMaterialLayer_GlazingMaterialLayer_Thermochromic, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimMaterialLayer_OpaqueMaterialLayer_Default", _wrap_SimModel_SimMaterialLayer_OpaqueMaterialLayer_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimMaterialLayerSet_Default_Default", _wrap_SimModel_SimMaterialLayerSet_Default_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimMaterialLayerSet_GlazingLayerSet_Window", _wrap_SimModel_SimMaterialLayerSet_GlazingLayerSet_Window, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimMaterialLayerSet_OpaqueLayerSet_Ceiling", _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Ceiling, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimMaterialLayerSet_OpaqueLayerSet_Door", _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Door, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimMaterialLayerSet_OpaqueLayerSet_Floor", _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Floor, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimMaterialLayerSet_OpaqueLayerSet_InternalSource", _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_InternalSource, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimMaterialLayerSet_OpaqueLayerSet_Roof", _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Roof, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimMaterialLayerSet_OpaqueLayerSet_Wall", _wrap_SimModel_SimMaterialLayerSet_OpaqueLayerSet_Wall, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimModelRepresentationContext_GeometricRepresentationContext_Default", _wrap_SimModel_SimModelRepresentationContext_GeometricRepresentationContext_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimModelRepresentationContext_GeometricRepresentationSubContext_Default", _wrap_SimModel_SimModelRepresentationContext_GeometricRepresentationSubContext_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimNode_AirFlowPort_Air_In", _wrap_SimModel_SimNode_AirFlowPort_Air_In, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimNode_AirFlowPort_Air_Out", _wrap_SimModel_SimNode_AirFlowPort_Air_Out, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimNode_DigitalControl_AirLoop_DigitalSignal_In", _wrap_SimModel_SimNode_DigitalControl_AirLoop_DigitalSignal_In, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimNode_DigitalControl_HWLoop_DigitalSignal_In", _wrap_SimModel_SimNode_DigitalControl_HWLoop_DigitalSignal_In, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimNode_Docking_Default", _wrap_SimModel_SimNode_Docking_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimNode_HotWaterFlowPort_Water_In", _wrap_SimModel_SimNode_HotWaterFlowPort_Water_In, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimNode_HotWaterFlowPort_Water_Out", _wrap_SimModel_SimNode_HotWaterFlowPort_Water_Out, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimOrganization_Organization_Default", _wrap_SimModel_SimOrganization_Organization_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimOwnerHistory_Default_Default", _wrap_SimModel_SimOwnerHistory_Default_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimParameterizedProfileDef_ParameterizedProfile_Rectangle", _wrap_SimModel_SimParameterizedProfileDef_ParameterizedProfile_Rectangle, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimPerson_Person_Default", _wrap_SimModel_SimPerson_Person_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimPersonAndOrganization_PersonAndOrganization_Default", _wrap_SimModel_SimPersonAndOrganization_PersonAndOrganization_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimPlacement_Axis2Placement2D_Default", _wrap_SimModel_SimPlacement_Axis2Placement2D_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimPlacement_Axis2Placement3D_Default", _wrap_SimModel_SimPlacement_Axis2Placement3D_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimPresentationLayerAssignment_Default_Default", _wrap_SimModel_SimPresentationLayerAssignment_Default_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimProject_Project_DesignAlternative", _wrap_SimModel_SimProject_Project_DesignAlternative, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimRepresentationMap_RepresentationMap_Default", _wrap_SimModel_SimRepresentationMap_RepresentationMap_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSensor_TemperatureSensor_DryBulb", _wrap_SimModel_SimSensor_TemperatureSensor_DryBulb, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimShapeRepresentation_ShapeRepresentation_Default", _wrap_SimModel_SimShapeRepresentation_ShapeRepresentation_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSimulationConfiguration_SimulationConfiguration_Default", _wrap_SimModel_SimSimulationConfiguration_SimulationConfiguration_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSimulationParameters_HvacDesign_WaterLoopSizing", _wrap_SimModel_SimSimulationParameters_HvacDesign_WaterLoopSizing, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSite_BuildingSite_Default", _wrap_SimModel_SimSite_BuildingSite_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSIUnitType_SiUnit_Default", _wrap_SimModel_SimSIUnitType_SiUnit_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSlab_Default_Default", _wrap_SimModel_SimSlab_Default_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSlab_Floor_FloorOverEarth", _wrap_SimModel_SimSlab_Floor_FloorOverEarth, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSlab_Floor_InterzoneFloor", _wrap_SimModel_SimSlab_Floor_InterzoneFloor, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSlab_RoofSlab_RoofUnderAir", _wrap_SimModel_SimSlab_RoofSlab_RoofUnderAir, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSlabParams_Slab_Floor", _wrap_SimModel_SimSlabParams_Slab_Floor, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSoftwareApplication_Default_Default", _wrap_SimModel_SimSoftwareApplication_Default_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSolarShade_Fin_Default", _wrap_SimModel_SimSolarShade_Fin_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSolarShade_Overhang_Default", _wrap_SimModel_SimSolarShade_Overhang_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSpace_Occupied_Default", _wrap_SimModel_SimSpace_Occupied_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSpaceBoundary_SecondLevel_SubTypeA", _wrap_SimModel_SimSpaceBoundary_SecondLevel_SubTypeA, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSpaceParams_Space_Default", _wrap_SimModel_SimSpaceParams_Space_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSpatialZone_ThermalZone_Default", _wrap_SimModel_SimSpatialZone_ThermalZone_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSpatialZone_ThermalZone_TemplateForZoneGroup", _wrap_SimModel_SimSpatialZone_ThermalZone_TemplateForZoneGroup, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSystem_HvacHotWater_Control", _wrap_SimModel_SimSystem_HvacHotWater_Control, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSystem_HvacHotWater_Demand", _wrap_SimModel_SimSystem_HvacHotWater_Demand, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSystem_HvacHotWater_FullSystem", _wrap_SimModel_SimSystem_HvacHotWater_FullSystem, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSystem_HvacHotWater_Supply", _wrap_SimModel_SimSystem_HvacHotWater_Supply, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSystem_ZoneHvacGroup_Control", _wrap_SimModel_SimSystem_ZoneHvacGroup_Control, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSystem_ZoneHvacGroup_Demand", _wrap_SimModel_SimSystem_ZoneHvacGroup_Demand, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSystem_ZoneHvacGroup_FullSystem", _wrap_SimModel_SimSystem_ZoneHvacGroup_FullSystem, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimSystem_ZoneHvacGroup_Supply", _wrap_SimModel_SimSystem_ZoneHvacGroup_Supply, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimTemplateConstructions_Constructions_Default", _wrap_SimModel_SimTemplateConstructions_Constructions_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimTemplateLocation_Location_Default", _wrap_SimModel_SimTemplateLocation_Location_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimTemplateZoneConditions_ZoneConditions_Default", _wrap_SimModel_SimTemplateZoneConditions_ZoneConditions_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimTemplateZoneLoads_ZoneLoads_Default", _wrap_SimModel_SimTemplateZoneLoads_ZoneLoads_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimThermalZoneType_ThermalZone_Default", _wrap_SimModel_SimThermalZoneType_ThermalZone_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimTimeSeriesSchedule_Calendar_Configuration", _wrap_SimModel_SimTimeSeriesSchedule_Calendar_Configuration, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimTimeSeriesSchedule_Day_Interval", _wrap_SimModel_SimTimeSeriesSchedule_Day_Interval, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimTimeSeriesSchedule_Limits_Default", _wrap_SimModel_SimTimeSeriesSchedule_Limits_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimTimeSeriesSchedule_Week_Daily", _wrap_SimModel_SimTimeSeriesSchedule_Week_Daily, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimTimeSeriesSchedule_Year_Default", _wrap_SimModel_SimTimeSeriesSchedule_Year_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimWall_Wall_Default", _wrap_SimModel_SimWall_Wall_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimWall_Wall_ExteriorAboveGrade", _wrap_SimModel_SimWall_Wall_ExteriorAboveGrade, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimWall_Wall_Interior", _wrap_SimModel_SimWall_Wall_Interior, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimWallParams_Wall_Default", _wrap_SimModel_SimWallParams_Wall_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimWallType_Wall_Default", _wrap_SimModel_SimWallType_Wall_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimWindow_Window_Default", _wrap_SimModel_SimWindow_Window_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimWindow_Window_Exterior", _wrap_SimModel_SimWindow_Window_Exterior, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimWindow_Window_ExteriorDetailed", _wrap_SimModel_SimWindow_Window_ExteriorDetailed, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimWindowArrayParams_WindowArray_Default", _wrap_SimModel_SimWindowArrayParams_WindowArray_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimWindowLiningProps_WindowLiningProps_Default", _wrap_SimModel_SimWindowLiningProps_WindowLiningProps_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimWindowParams_Window_Default", _wrap_SimModel_SimWindowParams_Window_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimWindowType_Window_Default", _wrap_SimModel_SimWindowType_Window_Default, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimWindowType_Window_Exterior", _wrap_SimModel_SimWindowType_Window_Exterior, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimWindowType_Window_Interior", _wrap_SimModel_SimWindowType_Window_Interior, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimModelVersion", _wrap_SimModel_SimModelVersion, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimModelSchemaVersion", _wrap_SimModel_SimModelSchemaVersion, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimModelUnitsVersion", _wrap_SimModel_SimModelUnitsVersion, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimModelUnitDefaultsVersion", _wrap_SimModel_SimModelUnitDefaultsVersion, METH_VARARGS, NULL},
	 { (char *)"SimModel_SimModelSchemaIDKey", _wrap_SimModel_SimModelSchemaIDKey, METH_VARARGS, NULL},
	 { (char *)"new_SimModel", _wrap_new_SimModel, METH_VARARGS, NULL},
	 { (char *)"SimModel__clone", _wrap_SimModel__clone, METH_VARARGS, NULL},
	 { (char *)"delete_SimModel", _wrap_delete_SimModel, METH_VARARGS, NULL},
	 { (char *)"SimModel_swigregister", SimModel_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimModel_", _wrap_SimModel_, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree__type_t_tTo_p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > *)  ((xsd::cxx::tree::string< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::type > > *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectDefinitionTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *) ((schema::simxml::SimModelCore::SimObjectDefinition *) x));
}
static void *_p_schema__simxml__SimModelCore__SimRepresentationItemTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimRepresentationItem *) x));
}
static void *_p_schema__simxml__SimModelCore__SimActorDefinitionTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimActorDefinition *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimArrayParamsTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::SimModelCore::SimBldgModelParams *) ((schema::simxml::ResourcesGeneral::SimArrayParams *) x));
}
static void *_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItemTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::SimModelCore::SimRepresentationItem *) ((schema::simxml::SimModelCore::SimTopologicalRepresentationItem *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimNodeTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::ResourcesGeneral::SimNode *) x));
}
static void *_p_schema__simxml__SimModelCore__SimTemplateTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimTemplate *) x));
}
static void *_p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_tTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *)  ((xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > *) x));
}
static void *_p_schema__simxml__SimModelCore__SimBldgModelParamsTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimBldgModelParams *) x));
}
static void *_p_schema__simxml__SimModelCore__SimGeometricRepresentationItemTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::SimModelCore::SimRepresentationItem *) ((schema::simxml::SimModelCore::SimGeometricRepresentationItem *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectTypeDefinitionTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *) ((schema::simxml::SimModelCore::SimObjectTypeDefinition *) x));
}
static void *_p_schema__simxml__SimModelCore__SimAppDefaultTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimAppDefault *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionControlElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimSpatialStructureElementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *) ((schema::simxml::SimModelCore::SimSpatialStructureElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimPropertySetDefinitionTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimPropertySetDefinition *) x));
}
static void *_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree__type_t_tTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (xsd::cxx::tree::simple_type< char,xsd::cxx::tree::type > *) ((xsd::cxx::tree::string< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::type > > *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimPortTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::ResourcesGeneral::SimNode *) ((schema::simxml::ResourcesGeneral::SimPort *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionElementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *) ((schema::simxml::SimModelCore::SimDistributionElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimGroupTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *) ((schema::simxml::SimModelCore::SimGroup *) x));
}
static void *_p_schema__simxml__ResourcesGeneral__SimUnitTypeTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::ResourcesGeneral::SimUnitType *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectPlacementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimObjectPlacement *) x));
}
static void *_p_schema__simxml__Model__SimModelTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *)  ((schema::simxml::Model::SimModel *) x));
}
static void *_p_schema__simxml__SimModelCore__SimResourceObjectTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *) ((schema::simxml::SimModelCore::SimResourceObject *) x));
}
static void *_p_schema__simxml__SimModelCore__SimObjectTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *) ((schema::simxml::SimModelCore::SimObject *) x));
}
static void *_p_schema__simxml__SimModelCore__SimElementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *) ((schema::simxml::SimModelCore::SimElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimFeatureElementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimFeatureElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimBuildingElementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *) ((schema::simxml::SimModelCore::SimBuildingElement *) x));
}
static void *_p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *) ((schema::simxml::SimModelCore::SimDistributionFlowElement *) x));
}
static void *_p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimObjectDefinition *)(schema::simxml::SimModelCore::SimObject *)(schema::simxml::SimModelCore::SimElement *)(schema::simxml::SimModelCore::SimDistributionElement *)(schema::simxml::SimModelCore::SimDistributionFlowElement *) ((schema::simxml::MepModel::SimFlowEnergyConverter *) x));
}
static void *_p_schema__simxml__ResourcesGeometry__SimProfileDefinitionTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *)(schema::simxml::SimModelCore::SimRepresentationItem *) ((schema::simxml::ResourcesGeometry::SimProfileDefinition *) x));
}
static void *_p_schema__simxml__SimModelCore__SimRootTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *)  ((schema::simxml::SimModelCore::SimRoot *) x));
}
static void *_p_schema__simxml__SimModelCore__SimRepresentationTo_p_xsd__cxx__tree___type(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((xsd::cxx::tree::_type *) (schema::simxml::SimModelCore::SimRoot *)(schema::simxml::SimModelCore::SimResourceObject *) ((schema::simxml::SimModelCore::SimRepresentation *) x));
}
static swig_type_info _swigt__p_ApplicableOccurrence_optional = {"_p_ApplicableOccurrence_optional", "ApplicableOccurrence_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ApplicableOccurrence_traits = {"_p_ApplicableOccurrence_traits", "ApplicableOccurrence_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ApplicableOccurrence_type = {"_p_ApplicableOccurrence_type", "ApplicableOccurrence_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AssignedToFlowElement_optional = {"_p_AssignedToFlowElement_optional", "AssignedToFlowElement_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AssignedToFlowElement_traits = {"_p_AssignedToFlowElement_traits", "AssignedToFlowElement_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AssignedToFlowElement_type = {"_p_AssignedToFlowElement_type", "AssignedToFlowElement_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AssignedToGroups_optional = {"_p_AssignedToGroups_optional", "AssignedToGroups_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AssignedToGroups_traits = {"_p_AssignedToGroups_traits", "AssignedToGroups_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AssignedToGroups_type = {"_p_AssignedToGroups_type", "AssignedToGroups_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ChangeFromTemplate_optional = {"_p_ChangeFromTemplate_optional", "ChangeFromTemplate_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ChangeFromTemplate_traits = {"_p_ChangeFromTemplate_traits", "ChangeFromTemplate_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ChangeFromTemplate_type = {"_p_ChangeFromTemplate_type", "ChangeFromTemplate_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CompositionType_optional = {"_p_CompositionType_optional", "CompositionType_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CompositionType_traits = {"_p_CompositionType_traits", "CompositionType_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CompositionType_type = {"_p_CompositionType_type", "CompositionType_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContainingBuildings_optional = {"_p_ContainingBuildings_optional", "ContainingBuildings_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContainingBuildings_traits = {"_p_ContainingBuildings_traits", "ContainingBuildings_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContainingBuildings_type = {"_p_ContainingBuildings_type", "ContainingBuildings_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContainingSpatialStructure_optional = {"_p_ContainingSpatialStructure_optional", "ContainingSpatialStructure_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContainingSpatialStructure_traits = {"_p_ContainingSpatialStructure_traits", "ContainingSpatialStructure_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContainingSpatialStructure_type = {"_p_ContainingSpatialStructure_type", "ContainingSpatialStructure_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlElementID_optional = {"_p_ControlElementID_optional", "ControlElementID_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlElementID_traits = {"_p_ControlElementID_traits", "ControlElementID_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlElementID_type = {"_p_ControlElementID_type", "ControlElementID_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlledBy_optional = {"_p_ControlledBy_optional", "ControlledBy_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlledBy_traits = {"_p_ControlledBy_traits", "ControlledBy_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ControlledBy_type = {"_p_ControlledBy_type", "ControlledBy_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DecimalPrecision_optional = {"_p_DecimalPrecision_optional", "DecimalPrecision_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DecimalPrecision_traits = {"_p_DecimalPrecision_traits", "DecimalPrecision_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DecimalPrecision_type = {"_p_DecimalPrecision_type", "DecimalPrecision_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Decomposes_optional = {"_p_Decomposes_optional", "Decomposes_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Decomposes_traits = {"_p_Decomposes_traits", "Decomposes_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Decomposes_type = {"_p_Decomposes_type", "Decomposes_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Description_optional = {"_p_Description_optional", "Description_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Description_traits = {"_p_Description_traits", "Description_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Description_type = {"_p_Description_type", "Description_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DockedToPort_optional = {"_p_DockedToPort_optional", "DockedToPort_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DockedToPort_traits = {"_p_DockedToPort_traits", "DockedToPort_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DockedToPort_type = {"_p_DockedToPort_type", "DockedToPort_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GeometricRepresentations_optional = {"_p_GeometricRepresentations_optional", "GeometricRepresentations_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GeometricRepresentations_traits = {"_p_GeometricRepresentations_traits", "GeometricRepresentations_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GeometricRepresentations_type = {"_p_GeometricRepresentations_type", "GeometricRepresentations_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HasPropertySets_optional = {"_p_HasPropertySets_optional", "HasPropertySets_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HasPropertySets_traits = {"_p_HasPropertySets_traits", "HasPropertySets_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HasPropertySets_type = {"_p_HasPropertySets_type", "HasPropertySets_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HasTemplateChanged_optional = {"_p_HasTemplateChanged_optional", "HasTemplateChanged_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HasTemplateChanged_traits = {"_p_HasTemplateChanged_traits", "HasTemplateChanged_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HasTemplateChanged_type = {"_p_HasTemplateChanged_type", "HasTemplateChanged_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HostElement_optional = {"_p_HostElement_optional", "HostElement_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HostElement_traits = {"_p_HostElement_traits", "HostElement_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HostElement_type = {"_p_HostElement_type", "HostElement_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IfcGlobalID_optional = {"_p_IfcGlobalID_optional", "IfcGlobalID_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IfcGlobalID_traits = {"_p_IfcGlobalID_traits", "IfcGlobalID_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IfcGlobalID_type = {"_p_IfcGlobalID_type", "IfcGlobalID_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IfcName_optional = {"_p_IfcName_optional", "IfcName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IfcName_traits = {"_p_IfcName_traits", "IfcName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IfcName_type = {"_p_IfcName_type", "IfcName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IsAutoGenerated_optional = {"_p_IsAutoGenerated_optional", "IsAutoGenerated_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IsAutoGenerated_traits = {"_p_IsAutoGenerated_traits", "IsAutoGenerated_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IsAutoGenerated_type = {"_p_IsAutoGenerated_type", "IsAutoGenerated_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IsTemplateObject_optional = {"_p_IsTemplateObject_optional", "IsTemplateObject_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IsTemplateObject_traits = {"_p_IsTemplateObject_traits", "IsTemplateObject_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IsTemplateObject_type = {"_p_IsTemplateObject_type", "IsTemplateObject_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementCoordinates_optional = {"_p_LocalPlacementCoordinates_optional", "LocalPlacementCoordinates_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementCoordinates_traits = {"_p_LocalPlacementCoordinates_traits", "LocalPlacementCoordinates_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementCoordinates_type = {"_p_LocalPlacementCoordinates_type", "LocalPlacementCoordinates_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementRotation_optional = {"_p_LocalPlacementRotation_optional", "LocalPlacementRotation_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementRotation_traits = {"_p_LocalPlacementRotation_traits", "LocalPlacementRotation_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementRotation_type = {"_p_LocalPlacementRotation_type", "LocalPlacementRotation_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementX_optional = {"_p_LocalPlacementX_optional", "LocalPlacementX_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementX_traits = {"_p_LocalPlacementX_traits", "LocalPlacementX_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementX_type = {"_p_LocalPlacementX_type", "LocalPlacementX_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementY_optional = {"_p_LocalPlacementY_optional", "LocalPlacementY_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementY_traits = {"_p_LocalPlacementY_traits", "LocalPlacementY_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementY_type = {"_p_LocalPlacementY_type", "LocalPlacementY_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementZ_optional = {"_p_LocalPlacementZ_optional", "LocalPlacementZ_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementZ_traits = {"_p_LocalPlacementZ_traits", "LocalPlacementZ_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LocalPlacementZ_type = {"_p_LocalPlacementZ_type", "LocalPlacementZ_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LongName_optional = {"_p_LongName_optional", "LongName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LongName_traits = {"_p_LongName_traits", "LongName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LongName_type = {"_p_LongName_type", "LongName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MemberUsedForDiagrams_optional = {"_p_MemberUsedForDiagrams_optional", "MemberUsedForDiagrams_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MemberUsedForDiagrams_traits = {"_p_MemberUsedForDiagrams_traits", "MemberUsedForDiagrams_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MemberUsedForDiagrams_type = {"_p_MemberUsedForDiagrams_type", "MemberUsedForDiagrams_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Name_optional = {"_p_Name_optional", "Name_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Name_traits = {"_p_Name_traits", "Name_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Name_type = {"_p_Name_type", "Name_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NevronSchematicLayout_optional = {"_p_NevronSchematicLayout_optional", "NevronSchematicLayout_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NevronSchematicLayout_traits = {"_p_NevronSchematicLayout_traits", "NevronSchematicLayout_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NevronSchematicLayout_type = {"_p_NevronSchematicLayout_type", "NevronSchematicLayout_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectCreationParams_optional = {"_p_ObjectCreationParams_optional", "ObjectCreationParams_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectCreationParams_traits = {"_p_ObjectCreationParams_traits", "ObjectCreationParams_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectCreationParams_type = {"_p_ObjectCreationParams_type", "ObjectCreationParams_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectIndex_optional = {"_p_ObjectIndex_optional", "ObjectIndex_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectIndex_traits = {"_p_ObjectIndex_traits", "ObjectIndex_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectIndex_type = {"_p_ObjectIndex_type", "ObjectIndex_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectName_optional = {"_p_ObjectName_optional", "ObjectName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectName_traits = {"_p_ObjectName_traits", "ObjectName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectName_type = {"_p_ObjectName_type", "ObjectName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectOwnerHistory_optional = {"_p_ObjectOwnerHistory_optional", "ObjectOwnerHistory_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectOwnerHistory_traits = {"_p_ObjectOwnerHistory_traits", "ObjectOwnerHistory_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectOwnerHistory_type = {"_p_ObjectOwnerHistory_type", "ObjectOwnerHistory_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectType_optional = {"_p_ObjectType_optional", "ObjectType_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectType_traits = {"_p_ObjectType_traits", "ObjectType_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ObjectType_type = {"_p_ObjectType_type", "ObjectType_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ParentGroups_optional = {"_p_ParentGroups_optional", "ParentGroups_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ParentGroups_traits = {"_p_ParentGroups_traits", "ParentGroups_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ParentGroups_type = {"_p_ParentGroups_type", "ParentGroups_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PlacementRelToContainingTypeDef_optional = {"_p_PlacementRelToContainingTypeDef_optional", "PlacementRelToContainingTypeDef_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PlacementRelToContainingTypeDef_traits = {"_p_PlacementRelToContainingTypeDef_traits", "PlacementRelToContainingTypeDef_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PlacementRelToContainingTypeDef_type = {"_p_PlacementRelToContainingTypeDef_type", "PlacementRelToContainingTypeDef_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Placement_optional = {"_p_Placement_optional", "Placement_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Placement_traits = {"_p_Placement_traits", "Placement_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Placement_type = {"_p_Placement_type", "Placement_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ProfileName_optional = {"_p_ProfileName_optional", "ProfileName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ProfileName_traits = {"_p_ProfileName_traits", "ProfileName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ProfileName_type = {"_p_ProfileName_type", "ProfileName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ProfileType_optional = {"_p_ProfileType_optional", "ProfileType_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ProfileType_traits = {"_p_ProfileType_traits", "ProfileType_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ProfileType_type = {"_p_ProfileType_type", "ProfileType_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RefId_traits = {"_p_RefId_traits", "RefId_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RefId_type = {"_p_RefId_type", "RefId_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationContext_optional = {"_p_RepresentationContext_optional", "RepresentationContext_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationContext_traits = {"_p_RepresentationContext_traits", "RepresentationContext_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationContext_type = {"_p_RepresentationContext_type", "RepresentationContext_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationIdentifier_optional = {"_p_RepresentationIdentifier_optional", "RepresentationIdentifier_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationIdentifier_traits = {"_p_RepresentationIdentifier_traits", "RepresentationIdentifier_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationIdentifier_type = {"_p_RepresentationIdentifier_type", "RepresentationIdentifier_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationItems_optional = {"_p_RepresentationItems_optional", "RepresentationItems_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationItems_traits = {"_p_RepresentationItems_traits", "RepresentationItems_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationItems_type = {"_p_RepresentationItems_type", "RepresentationItems_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationType_optional = {"_p_RepresentationType_optional", "RepresentationType_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationType_traits = {"_p_RepresentationType_traits", "RepresentationType_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RepresentationType_type = {"_p_RepresentationType_type", "RepresentationType_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SelectedPropertyGroups_optional = {"_p_SelectedPropertyGroups_optional", "SelectedPropertyGroups_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SelectedPropertyGroups_traits = {"_p_SelectedPropertyGroups_traits", "SelectedPropertyGroups_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SelectedPropertyGroups_type = {"_p_SelectedPropertyGroups_type", "SelectedPropertyGroups_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAddress_Postal_Default_const_iterator = {"_p_SimAddress_Postal_Default_const_iterator", "SimAddress_Postal_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAddress_Postal_Default_iterator = {"_p_SimAddress_Postal_Default_iterator", "SimAddress_Postal_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAddress_Postal_Default_sequence = {"_p_SimAddress_Postal_Default_sequence", "SimAddress_Postal_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAddress_Postal_Default_traits = {"_p_SimAddress_Postal_Default_traits", "SimAddress_Postal_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAddress_Postal_Default_type = {"_p_SimAddress_Postal_Default_type", "SimAddress_Postal_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_const_iterator = {"_p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_const_iterator", "SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_iterator = {"_p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_iterator", "SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence = {"_p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence", "SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_traits = {"_p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_traits", "SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_type = {"_p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_type", "SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_const_iterator = {"_p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_const_iterator", "SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_iterator = {"_p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_iterator", "SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_sequence = {"_p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_sequence", "SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_traits = {"_p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_traits", "SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_type = {"_p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_type", "SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_const_iterator = {"_p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_const_iterator", "SimAppObjNameDefault_BldgComponentGroup_HvacComponent_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_iterator = {"_p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_iterator", "SimAppObjNameDefault_BldgComponentGroup_HvacComponent_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_sequence = {"_p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_sequence", "SimAppObjNameDefault_BldgComponentGroup_HvacComponent_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_traits = {"_p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_traits", "SimAppObjNameDefault_BldgComponentGroup_HvacComponent_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_type = {"_p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_type", "SimAppObjNameDefault_BldgComponentGroup_HvacComponent_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_const_iterator = {"_p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_const_iterator", "SimAppObjNameDefault_DistributionSystem_HvacAirLoop_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_iterator = {"_p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_iterator", "SimAppObjNameDefault_DistributionSystem_HvacAirLoop_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_sequence = {"_p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_sequence", "SimAppObjNameDefault_DistributionSystem_HvacAirLoop_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_traits = {"_p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_traits", "SimAppObjNameDefault_DistributionSystem_HvacAirLoop_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_type = {"_p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_type", "SimAppObjNameDefault_DistributionSystem_HvacAirLoop_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_const_iterator = {"_p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_const_iterator", "SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_iterator = {"_p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_iterator", "SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_sequence = {"_p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_sequence", "SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_traits = {"_p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_traits", "SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_type = {"_p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_type", "SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_const_iterator = {"_p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_const_iterator", "SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_iterator = {"_p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_iterator", "SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_sequence = {"_p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_sequence", "SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_traits = {"_p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_traits", "SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_type = {"_p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_type", "SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_const_iterator = {"_p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_const_iterator", "SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_iterator = {"_p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_iterator", "SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_sequence = {"_p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_sequence", "SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_traits = {"_p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_traits", "SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_type = {"_p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_type", "SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_const_iterator = {"_p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_const_iterator", "SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_iterator = {"_p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_iterator", "SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_sequence = {"_p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_sequence", "SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_traits = {"_p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_traits", "SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_type = {"_p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_type", "SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_const_iterator = {"_p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_const_iterator", "SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_iterator = {"_p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_iterator", "SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_sequence = {"_p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_sequence", "SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_traits = {"_p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_traits", "SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_type = {"_p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_type", "SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_const_iterator = {"_p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_const_iterator", "SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_iterator = {"_p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_iterator", "SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_sequence = {"_p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_sequence", "SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_traits = {"_p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_traits", "SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_type = {"_p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_type", "SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_const_iterator = {"_p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_const_iterator", "SimAppObjNameDefault_DistributionSystem_SitePowerDemand_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_iterator = {"_p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_iterator", "SimAppObjNameDefault_DistributionSystem_SitePowerDemand_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_sequence = {"_p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_sequence", "SimAppObjNameDefault_DistributionSystem_SitePowerDemand_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_traits = {"_p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_traits", "SimAppObjNameDefault_DistributionSystem_SitePowerDemand_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_type = {"_p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_type", "SimAppObjNameDefault_DistributionSystem_SitePowerDemand_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_const_iterator = {"_p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_const_iterator", "SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_iterator = {"_p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_iterator", "SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_sequence = {"_p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_sequence", "SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_traits = {"_p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_traits", "SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_type = {"_p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_type", "SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_const_iterator = {"_p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_const_iterator", "SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_iterator = {"_p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_iterator", "SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_sequence = {"_p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_sequence", "SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_traits = {"_p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_traits", "SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_type = {"_p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_type", "SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SiteContext_AdjacentSite_const_iterator = {"_p_SimAppObjNameDefault_SiteContext_AdjacentSite_const_iterator", "SimAppObjNameDefault_SiteContext_AdjacentSite_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SiteContext_AdjacentSite_iterator = {"_p_SimAppObjNameDefault_SiteContext_AdjacentSite_iterator", "SimAppObjNameDefault_SiteContext_AdjacentSite_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SiteContext_AdjacentSite_sequence = {"_p_SimAppObjNameDefault_SiteContext_AdjacentSite_sequence", "SimAppObjNameDefault_SiteContext_AdjacentSite_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SiteContext_AdjacentSite_traits = {"_p_SimAppObjNameDefault_SiteContext_AdjacentSite_traits", "SimAppObjNameDefault_SiteContext_AdjacentSite_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SiteContext_AdjacentSite_type = {"_p_SimAppObjNameDefault_SiteContext_AdjacentSite_type", "SimAppObjNameDefault_SiteContext_AdjacentSite_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SiteContext_SolarObstruction_const_iterator = {"_p_SimAppObjNameDefault_SiteContext_SolarObstruction_const_iterator", "SimAppObjNameDefault_SiteContext_SolarObstruction_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SiteContext_SolarObstruction_iterator = {"_p_SimAppObjNameDefault_SiteContext_SolarObstruction_iterator", "SimAppObjNameDefault_SiteContext_SolarObstruction_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SiteContext_SolarObstruction_sequence = {"_p_SimAppObjNameDefault_SiteContext_SolarObstruction_sequence", "SimAppObjNameDefault_SiteContext_SolarObstruction_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SiteContext_SolarObstruction_traits = {"_p_SimAppObjNameDefault_SiteContext_SolarObstruction_traits", "SimAppObjNameDefault_SiteContext_SolarObstruction_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SiteContext_SolarObstruction_type = {"_p_SimAppObjNameDefault_SiteContext_SolarObstruction_type", "SimAppObjNameDefault_SiteContext_SolarObstruction_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_Space_Space_const_iterator = {"_p_SimAppObjNameDefault_Space_Space_const_iterator", "SimAppObjNameDefault_Space_Space_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_Space_Space_iterator = {"_p_SimAppObjNameDefault_Space_Space_iterator", "SimAppObjNameDefault_Space_Space_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_Space_Space_sequence = {"_p_SimAppObjNameDefault_Space_Space_sequence", "SimAppObjNameDefault_Space_Space_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_Space_Space_traits = {"_p_SimAppObjNameDefault_Space_Space_traits", "SimAppObjNameDefault_Space_Space_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_Space_Space_type = {"_p_SimAppObjNameDefault_Space_Space_type", "SimAppObjNameDefault_Space_Space_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_const_iterator = {"_p_SimAppObjNameDefault_SpatialContainer_BuildingStory_const_iterator", "SimAppObjNameDefault_SpatialContainer_BuildingStory_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_iterator = {"_p_SimAppObjNameDefault_SpatialContainer_BuildingStory_iterator", "SimAppObjNameDefault_SpatialContainer_BuildingStory_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_sequence = {"_p_SimAppObjNameDefault_SpatialContainer_BuildingStory_sequence", "SimAppObjNameDefault_SpatialContainer_BuildingStory_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_traits = {"_p_SimAppObjNameDefault_SpatialContainer_BuildingStory_traits", "SimAppObjNameDefault_SpatialContainer_BuildingStory_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_type = {"_p_SimAppObjNameDefault_SpatialContainer_BuildingStory_type", "SimAppObjNameDefault_SpatialContainer_BuildingStory_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialContainer_Building_const_iterator = {"_p_SimAppObjNameDefault_SpatialContainer_Building_const_iterator", "SimAppObjNameDefault_SpatialContainer_Building_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialContainer_Building_iterator = {"_p_SimAppObjNameDefault_SpatialContainer_Building_iterator", "SimAppObjNameDefault_SpatialContainer_Building_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialContainer_Building_sequence = {"_p_SimAppObjNameDefault_SpatialContainer_Building_sequence", "SimAppObjNameDefault_SpatialContainer_Building_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialContainer_Building_traits = {"_p_SimAppObjNameDefault_SpatialContainer_Building_traits", "SimAppObjNameDefault_SpatialContainer_Building_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialContainer_Building_type = {"_p_SimAppObjNameDefault_SpatialContainer_Building_type", "SimAppObjNameDefault_SpatialContainer_Building_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialContainer_Project_const_iterator = {"_p_SimAppObjNameDefault_SpatialContainer_Project_const_iterator", "SimAppObjNameDefault_SpatialContainer_Project_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialContainer_Project_iterator = {"_p_SimAppObjNameDefault_SpatialContainer_Project_iterator", "SimAppObjNameDefault_SpatialContainer_Project_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialContainer_Project_sequence = {"_p_SimAppObjNameDefault_SpatialContainer_Project_sequence", "SimAppObjNameDefault_SpatialContainer_Project_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialContainer_Project_traits = {"_p_SimAppObjNameDefault_SpatialContainer_Project_traits", "SimAppObjNameDefault_SpatialContainer_Project_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialContainer_Project_type = {"_p_SimAppObjNameDefault_SpatialContainer_Project_type", "SimAppObjNameDefault_SpatialContainer_Project_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialContainer_Site_const_iterator = {"_p_SimAppObjNameDefault_SpatialContainer_Site_const_iterator", "SimAppObjNameDefault_SpatialContainer_Site_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialContainer_Site_iterator = {"_p_SimAppObjNameDefault_SpatialContainer_Site_iterator", "SimAppObjNameDefault_SpatialContainer_Site_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialContainer_Site_sequence = {"_p_SimAppObjNameDefault_SpatialContainer_Site_sequence", "SimAppObjNameDefault_SpatialContainer_Site_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialContainer_Site_traits = {"_p_SimAppObjNameDefault_SpatialContainer_Site_traits", "SimAppObjNameDefault_SpatialContainer_Site_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialContainer_Site_type = {"_p_SimAppObjNameDefault_SpatialContainer_Site_type", "SimAppObjNameDefault_SpatialContainer_Site_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_const_iterator = {"_p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_const_iterator", "SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_iterator = {"_p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_iterator", "SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_sequence = {"_p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_sequence", "SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_traits = {"_p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_traits", "SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_type = {"_p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_type", "SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_const_iterator = {"_p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_const_iterator", "SimAppObjNameDefault_SpatialZone_FloorPlenumZone_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_iterator = {"_p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_iterator", "SimAppObjNameDefault_SpatialZone_FloorPlenumZone_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_sequence = {"_p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_sequence", "SimAppObjNameDefault_SpatialZone_FloorPlenumZone_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_traits = {"_p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_traits", "SimAppObjNameDefault_SpatialZone_FloorPlenumZone_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_type = {"_p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_type", "SimAppObjNameDefault_SpatialZone_FloorPlenumZone_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialZone_ThermalZone_const_iterator = {"_p_SimAppObjNameDefault_SpatialZone_ThermalZone_const_iterator", "SimAppObjNameDefault_SpatialZone_ThermalZone_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialZone_ThermalZone_iterator = {"_p_SimAppObjNameDefault_SpatialZone_ThermalZone_iterator", "SimAppObjNameDefault_SpatialZone_ThermalZone_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialZone_ThermalZone_sequence = {"_p_SimAppObjNameDefault_SpatialZone_ThermalZone_sequence", "SimAppObjNameDefault_SpatialZone_ThermalZone_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialZone_ThermalZone_traits = {"_p_SimAppObjNameDefault_SpatialZone_ThermalZone_traits", "SimAppObjNameDefault_SpatialZone_ThermalZone_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_SpatialZone_ThermalZone_type = {"_p_SimAppObjNameDefault_SpatialZone_ThermalZone_type", "SimAppObjNameDefault_SpatialZone_ThermalZone_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_const_iterator = {"_p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_const_iterator", "SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_iterator = {"_p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_iterator", "SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_sequence = {"_p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_sequence", "SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_traits = {"_p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_traits", "SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_type = {"_p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_type", "SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_const_iterator = {"_p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_const_iterator", "SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_iterator = {"_p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_iterator", "SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_sequence = {"_p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_sequence", "SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_traits = {"_p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_traits", "SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_type = {"_p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_type", "SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_const_iterator = {"_p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_const_iterator", "SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_iterator = {"_p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_iterator", "SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_sequence = {"_p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_sequence", "SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_traits = {"_p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_traits", "SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_type = {"_p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_type", "SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_const_iterator = {"_p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_const_iterator", "SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_iterator = {"_p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_iterator", "SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_sequence = {"_p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_sequence", "SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_traits = {"_p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_traits", "SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_type = {"_p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_type", "SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_const_iterator = {"_p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_const_iterator", "SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_iterator = {"_p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_iterator", "SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_sequence = {"_p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_sequence", "SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_traits = {"_p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_traits", "SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_type = {"_p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_type", "SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_const_iterator = {"_p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_const_iterator", "SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_iterator = {"_p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_iterator", "SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_sequence = {"_p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_sequence", "SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_traits = {"_p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_traits", "SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_type = {"_p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_type", "SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_AutoSaveInterval_const_iterator = {"_p_SimAppPreferences_AppPreferences_AutoSaveInterval_const_iterator", "SimAppPreferences_AppPreferences_AutoSaveInterval_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_AutoSaveInterval_iterator = {"_p_SimAppPreferences_AppPreferences_AutoSaveInterval_iterator", "SimAppPreferences_AppPreferences_AutoSaveInterval_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_AutoSaveInterval_sequence = {"_p_SimAppPreferences_AppPreferences_AutoSaveInterval_sequence", "SimAppPreferences_AppPreferences_AutoSaveInterval_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_AutoSaveInterval_traits = {"_p_SimAppPreferences_AppPreferences_AutoSaveInterval_traits", "SimAppPreferences_AppPreferences_AutoSaveInterval_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_AutoSaveInterval_type = {"_p_SimAppPreferences_AppPreferences_AutoSaveInterval_type", "SimAppPreferences_AppPreferences_AutoSaveInterval_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_AutoSave_const_iterator = {"_p_SimAppPreferences_AppPreferences_AutoSave_const_iterator", "SimAppPreferences_AppPreferences_AutoSave_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_AutoSave_iterator = {"_p_SimAppPreferences_AppPreferences_AutoSave_iterator", "SimAppPreferences_AppPreferences_AutoSave_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_AutoSave_sequence = {"_p_SimAppPreferences_AppPreferences_AutoSave_sequence", "SimAppPreferences_AppPreferences_AutoSave_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_AutoSave_traits = {"_p_SimAppPreferences_AppPreferences_AutoSave_traits", "SimAppPreferences_AppPreferences_AutoSave_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_AutoSave_type = {"_p_SimAppPreferences_AppPreferences_AutoSave_type", "SimAppPreferences_AppPreferences_AutoSave_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_EPlusInstalPath_const_iterator = {"_p_SimAppPreferences_AppPreferences_EPlusInstalPath_const_iterator", "SimAppPreferences_AppPreferences_EPlusInstalPath_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_EPlusInstalPath_iterator = {"_p_SimAppPreferences_AppPreferences_EPlusInstalPath_iterator", "SimAppPreferences_AppPreferences_EPlusInstalPath_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_EPlusInstalPath_sequence = {"_p_SimAppPreferences_AppPreferences_EPlusInstalPath_sequence", "SimAppPreferences_AppPreferences_EPlusInstalPath_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_EPlusInstalPath_traits = {"_p_SimAppPreferences_AppPreferences_EPlusInstalPath_traits", "SimAppPreferences_AppPreferences_EPlusInstalPath_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_EPlusInstalPath_type = {"_p_SimAppPreferences_AppPreferences_EPlusInstalPath_type", "SimAppPreferences_AppPreferences_EPlusInstalPath_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_const_iterator = {"_p_SimAppPreferences_AppPreferences_EPlusInstalVersion_const_iterator", "SimAppPreferences_AppPreferences_EPlusInstalVersion_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_iterator = {"_p_SimAppPreferences_AppPreferences_EPlusInstalVersion_iterator", "SimAppPreferences_AppPreferences_EPlusInstalVersion_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence = {"_p_SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence", "SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_traits = {"_p_SimAppPreferences_AppPreferences_EPlusInstalVersion_traits", "SimAppPreferences_AppPreferences_EPlusInstalVersion_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_type = {"_p_SimAppPreferences_AppPreferences_EPlusInstalVersion_type", "SimAppPreferences_AppPreferences_EPlusInstalVersion_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_const_iterator = {"_p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_const_iterator", "SimAppPreferences_AppPreferences_MinMonthlyChargeType_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_iterator = {"_p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_iterator", "SimAppPreferences_AppPreferences_MinMonthlyChargeType_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence = {"_p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence", "SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_traits = {"_p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_traits", "SimAppPreferences_AppPreferences_MinMonthlyChargeType_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_type = {"_p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_type", "SimAppPreferences_AppPreferences_MinMonthlyChargeType_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_const_iterator = {"_p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_const_iterator", "SimAppUnitDefault_AppUnitDefault_DatabaseDefault_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_iterator = {"_p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_iterator", "SimAppUnitDefault_AppUnitDefault_DatabaseDefault_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence = {"_p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence", "SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_traits = {"_p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_traits", "SimAppUnitDefault_AppUnitDefault_DatabaseDefault_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_type = {"_p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_type", "SimAppUnitDefault_AppUnitDefault_DatabaseDefault_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_const_iterator = {"_p_SimArbitraryProfileDef_ArbitraryProfile_Closed_const_iterator", "SimArbitraryProfileDef_ArbitraryProfile_Closed_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_iterator = {"_p_SimArbitraryProfileDef_ArbitraryProfile_Closed_iterator", "SimArbitraryProfileDef_ArbitraryProfile_Closed_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence = {"_p_SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence", "SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_traits = {"_p_SimArbitraryProfileDef_ArbitraryProfile_Closed_traits", "SimArbitraryProfileDef_ArbitraryProfile_Closed_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_type = {"_p_SimArbitraryProfileDef_ArbitraryProfile_Closed_type", "SimArbitraryProfileDef_ArbitraryProfile_Closed_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimBldgSiteParams_BuildingSite_Default_const_iterator = {"_p_SimBldgSiteParams_BuildingSite_Default_const_iterator", "SimBldgSiteParams_BuildingSite_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimBldgSiteParams_BuildingSite_Default_iterator = {"_p_SimBldgSiteParams_BuildingSite_Default_iterator", "SimBldgSiteParams_BuildingSite_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimBldgSiteParams_BuildingSite_Default_sequence = {"_p_SimBldgSiteParams_BuildingSite_Default_sequence", "SimBldgSiteParams_BuildingSite_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimBldgSiteParams_BuildingSite_Default_traits = {"_p_SimBldgSiteParams_BuildingSite_Default_traits", "SimBldgSiteParams_BuildingSite_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimBldgSiteParams_BuildingSite_Default_type = {"_p_SimBldgSiteParams_BuildingSite_Default_type", "SimBldgSiteParams_BuildingSite_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimBldgStoryParams_BuildingStory_Default_const_iterator = {"_p_SimBldgStoryParams_BuildingStory_Default_const_iterator", "SimBldgStoryParams_BuildingStory_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimBldgStoryParams_BuildingStory_Default_iterator = {"_p_SimBldgStoryParams_BuildingStory_Default_iterator", "SimBldgStoryParams_BuildingStory_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimBldgStoryParams_BuildingStory_Default_sequence = {"_p_SimBldgStoryParams_BuildingStory_Default_sequence", "SimBldgStoryParams_BuildingStory_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimBldgStoryParams_BuildingStory_Default_traits = {"_p_SimBldgStoryParams_BuildingStory_Default_traits", "SimBldgStoryParams_BuildingStory_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimBldgStoryParams_BuildingStory_Default_type = {"_p_SimBldgStoryParams_BuildingStory_Default_type", "SimBldgStoryParams_BuildingStory_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimBuildingStory_BuildingStory_Default_const_iterator = {"_p_SimBuildingStory_BuildingStory_Default_const_iterator", "SimBuildingStory_BuildingStory_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimBuildingStory_BuildingStory_Default_iterator = {"_p_SimBuildingStory_BuildingStory_Default_iterator", "SimBuildingStory_BuildingStory_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimBuildingStory_BuildingStory_Default_sequence = {"_p_SimBuildingStory_BuildingStory_Default_sequence", "SimBuildingStory_BuildingStory_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimBuildingStory_BuildingStory_Default_traits = {"_p_SimBuildingStory_BuildingStory_Default_traits", "SimBuildingStory_BuildingStory_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimBuildingStory_BuildingStory_Default_type = {"_p_SimBuildingStory_BuildingStory_Default_type", "SimBuildingStory_BuildingStory_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimBuilding_Building_Default_const_iterator = {"_p_SimBuilding_Building_Default_const_iterator", "SimBuilding_Building_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimBuilding_Building_Default_iterator = {"_p_SimBuilding_Building_Default_iterator", "SimBuilding_Building_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimBuilding_Building_Default_sequence = {"_p_SimBuilding_Building_Default_sequence", "SimBuilding_Building_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimBuilding_Building_Default_traits = {"_p_SimBuilding_Building_Default_traits", "SimBuilding_Building_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimBuilding_Building_Default_type = {"_p_SimBuilding_Building_Default_type", "SimBuilding_Building_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimCartesianTransformOperator_3D_Uniform_const_iterator = {"_p_SimCartesianTransformOperator_3D_Uniform_const_iterator", "SimCartesianTransformOperator_3D_Uniform_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimCartesianTransformOperator_3D_Uniform_iterator = {"_p_SimCartesianTransformOperator_3D_Uniform_iterator", "SimCartesianTransformOperator_3D_Uniform_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimCartesianTransformOperator_3D_Uniform_sequence = {"_p_SimCartesianTransformOperator_3D_Uniform_sequence", "SimCartesianTransformOperator_3D_Uniform_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimCartesianTransformOperator_3D_Uniform_traits = {"_p_SimCartesianTransformOperator_3D_Uniform_traits", "SimCartesianTransformOperator_3D_Uniform_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimCartesianTransformOperator_3D_Uniform_type = {"_p_SimCartesianTransformOperator_3D_Uniform_type", "SimCartesianTransformOperator_3D_Uniform_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationReference_SpaceCategoryBoma_const_iterator = {"_p_SimClassification_ClassificationReference_SpaceCategoryBoma_const_iterator", "SimClassification_ClassificationReference_SpaceCategoryBoma_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationReference_SpaceCategoryBoma_iterator = {"_p_SimClassification_ClassificationReference_SpaceCategoryBoma_iterator", "SimClassification_ClassificationReference_SpaceCategoryBoma_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationReference_SpaceCategoryBoma_sequence = {"_p_SimClassification_ClassificationReference_SpaceCategoryBoma_sequence", "SimClassification_ClassificationReference_SpaceCategoryBoma_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationReference_SpaceCategoryBoma_traits = {"_p_SimClassification_ClassificationReference_SpaceCategoryBoma_traits", "SimClassification_ClassificationReference_SpaceCategoryBoma_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationReference_SpaceCategoryBoma_type = {"_p_SimClassification_ClassificationReference_SpaceCategoryBoma_type", "SimClassification_ClassificationReference_SpaceCategoryBoma_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationReference_SpaceCategoryOwner_const_iterator = {"_p_SimClassification_ClassificationReference_SpaceCategoryOwner_const_iterator", "SimClassification_ClassificationReference_SpaceCategoryOwner_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationReference_SpaceCategoryOwner_iterator = {"_p_SimClassification_ClassificationReference_SpaceCategoryOwner_iterator", "SimClassification_ClassificationReference_SpaceCategoryOwner_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationReference_SpaceCategoryOwner_sequence = {"_p_SimClassification_ClassificationReference_SpaceCategoryOwner_sequence", "SimClassification_ClassificationReference_SpaceCategoryOwner_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationReference_SpaceCategoryOwner_traits = {"_p_SimClassification_ClassificationReference_SpaceCategoryOwner_traits", "SimClassification_ClassificationReference_SpaceCategoryOwner_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationReference_SpaceCategoryOwner_type = {"_p_SimClassification_ClassificationReference_SpaceCategoryOwner_type", "SimClassification_ClassificationReference_SpaceCategoryOwner_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationReference_SpaceTypeOwner_const_iterator = {"_p_SimClassification_ClassificationReference_SpaceTypeOwner_const_iterator", "SimClassification_ClassificationReference_SpaceTypeOwner_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationReference_SpaceTypeOwner_iterator = {"_p_SimClassification_ClassificationReference_SpaceTypeOwner_iterator", "SimClassification_ClassificationReference_SpaceTypeOwner_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationReference_SpaceTypeOwner_sequence = {"_p_SimClassification_ClassificationReference_SpaceTypeOwner_sequence", "SimClassification_ClassificationReference_SpaceTypeOwner_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationReference_SpaceTypeOwner_traits = {"_p_SimClassification_ClassificationReference_SpaceTypeOwner_traits", "SimClassification_ClassificationReference_SpaceTypeOwner_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationReference_SpaceTypeOwner_type = {"_p_SimClassification_ClassificationReference_SpaceTypeOwner_type", "SimClassification_ClassificationReference_SpaceTypeOwner_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationSystem_Default_const_iterator = {"_p_SimClassification_ClassificationSystem_Default_const_iterator", "SimClassification_ClassificationSystem_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationSystem_Default_iterator = {"_p_SimClassification_ClassificationSystem_Default_iterator", "SimClassification_ClassificationSystem_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationSystem_Default_sequence = {"_p_SimClassification_ClassificationSystem_Default_sequence", "SimClassification_ClassificationSystem_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationSystem_Default_traits = {"_p_SimClassification_ClassificationSystem_Default_traits", "SimClassification_ClassificationSystem_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationSystem_Default_type = {"_p_SimClassification_ClassificationSystem_Default_type", "SimClassification_ClassificationSystem_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationSystem_OmniClass_const_iterator = {"_p_SimClassification_ClassificationSystem_OmniClass_const_iterator", "SimClassification_ClassificationSystem_OmniClass_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationSystem_OmniClass_iterator = {"_p_SimClassification_ClassificationSystem_OmniClass_iterator", "SimClassification_ClassificationSystem_OmniClass_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationSystem_OmniClass_sequence = {"_p_SimClassification_ClassificationSystem_OmniClass_sequence", "SimClassification_ClassificationSystem_OmniClass_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationSystem_OmniClass_traits = {"_p_SimClassification_ClassificationSystem_OmniClass_traits", "SimClassification_ClassificationSystem_OmniClass_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimClassification_ClassificationSystem_OmniClass_type = {"_p_SimClassification_ClassificationSystem_OmniClass_type", "SimClassification_ClassificationSystem_OmniClass_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_const_iterator = {"_p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_const_iterator", "SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_iterator = {"_p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_iterator", "SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence = {"_p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence", "SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_traits = {"_p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_traits", "SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_type = {"_p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_type", "SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimConnectedFaceSet_ConnectedFaceSet_Default_const_iterator = {"_p_SimConnectedFaceSet_ConnectedFaceSet_Default_const_iterator", "SimConnectedFaceSet_ConnectedFaceSet_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimConnectedFaceSet_ConnectedFaceSet_Default_iterator = {"_p_SimConnectedFaceSet_ConnectedFaceSet_Default_iterator", "SimConnectedFaceSet_ConnectedFaceSet_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimConnectedFaceSet_ConnectedFaceSet_Default_sequence = {"_p_SimConnectedFaceSet_ConnectedFaceSet_Default_sequence", "SimConnectedFaceSet_ConnectedFaceSet_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimConnectedFaceSet_ConnectedFaceSet_Default_traits = {"_p_SimConnectedFaceSet_ConnectedFaceSet_Default_traits", "SimConnectedFaceSet_ConnectedFaceSet_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimConnectedFaceSet_ConnectedFaceSet_Default_type = {"_p_SimConnectedFaceSet_ConnectedFaceSet_Default_type", "SimConnectedFaceSet_ConnectedFaceSet_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimConnection_HotWaterFlow_Default_const_iterator = {"_p_SimConnection_HotWaterFlow_Default_const_iterator", "SimConnection_HotWaterFlow_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimConnection_HotWaterFlow_Default_iterator = {"_p_SimConnection_HotWaterFlow_Default_iterator", "SimConnection_HotWaterFlow_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimConnection_HotWaterFlow_Default_sequence = {"_p_SimConnection_HotWaterFlow_Default_sequence", "SimConnection_HotWaterFlow_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimConnection_HotWaterFlow_Default_traits = {"_p_SimConnection_HotWaterFlow_Default_traits", "SimConnection_HotWaterFlow_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimConnection_HotWaterFlow_Default_type = {"_p_SimConnection_HotWaterFlow_Default_type", "SimConnection_HotWaterFlow_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimConnection_ZoneAirFlow_Default_const_iterator = {"_p_SimConnection_ZoneAirFlow_Default_const_iterator", "SimConnection_ZoneAirFlow_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimConnection_ZoneAirFlow_Default_iterator = {"_p_SimConnection_ZoneAirFlow_Default_iterator", "SimConnection_ZoneAirFlow_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimConnection_ZoneAirFlow_Default_sequence = {"_p_SimConnection_ZoneAirFlow_Default_sequence", "SimConnection_ZoneAirFlow_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimConnection_ZoneAirFlow_Default_traits = {"_p_SimConnection_ZoneAirFlow_Default_traits", "SimConnection_ZoneAirFlow_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimConnection_ZoneAirFlow_Default_type = {"_p_SimConnection_ZoneAirFlow_Default_type", "SimConnection_ZoneAirFlow_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_const_iterator = {"_p_SimControlScheme_AvailabilityManagerScheme_Scheduled_const_iterator", "SimControlScheme_AvailabilityManagerScheme_Scheduled_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_iterator = {"_p_SimControlScheme_AvailabilityManagerScheme_Scheduled_iterator", "SimControlScheme_AvailabilityManagerScheme_Scheduled_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence = {"_p_SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence", "SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_traits = {"_p_SimControlScheme_AvailabilityManagerScheme_Scheduled_traits", "SimControlScheme_AvailabilityManagerScheme_Scheduled_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_type = {"_p_SimControlScheme_AvailabilityManagerScheme_Scheduled_type", "SimControlScheme_AvailabilityManagerScheme_Scheduled_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_const_iterator = {"_p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_const_iterator", "SimControlScheme_ControlAndSequencingScheme_HeatingLoad_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_iterator = {"_p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_iterator", "SimControlScheme_ControlAndSequencingScheme_HeatingLoad_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence = {"_p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence", "SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_traits = {"_p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_traits", "SimControlScheme_ControlAndSequencingScheme_HeatingLoad_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_type = {"_p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_type", "SimControlScheme_ControlAndSequencingScheme_HeatingLoad_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_const_iterator = {"_p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_const_iterator", "SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_iterator = {"_p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_iterator", "SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence = {"_p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence", "SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_traits = {"_p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_traits", "SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_type = {"_p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_type", "SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimControlScheme_SetpointScheme_SingleHeating_const_iterator = {"_p_SimControlScheme_SetpointScheme_SingleHeating_const_iterator", "SimControlScheme_SetpointScheme_SingleHeating_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimControlScheme_SetpointScheme_SingleHeating_iterator = {"_p_SimControlScheme_SetpointScheme_SingleHeating_iterator", "SimControlScheme_SetpointScheme_SingleHeating_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimControlScheme_SetpointScheme_SingleHeating_sequence = {"_p_SimControlScheme_SetpointScheme_SingleHeating_sequence", "SimControlScheme_SetpointScheme_SingleHeating_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimControlScheme_SetpointScheme_SingleHeating_traits = {"_p_SimControlScheme_SetpointScheme_SingleHeating_traits", "SimControlScheme_SetpointScheme_SingleHeating_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimControlScheme_SetpointScheme_SingleHeating_type = {"_p_SimControlScheme_SetpointScheme_SingleHeating_type", "SimControlScheme_SetpointScheme_SingleHeating_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimController_SupplyWater_Temperature_const_iterator = {"_p_SimController_SupplyWater_Temperature_const_iterator", "SimController_SupplyWater_Temperature_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimController_SupplyWater_Temperature_iterator = {"_p_SimController_SupplyWater_Temperature_iterator", "SimController_SupplyWater_Temperature_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimController_SupplyWater_Temperature_sequence = {"_p_SimController_SupplyWater_Temperature_sequence", "SimController_SupplyWater_Temperature_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimController_SupplyWater_Temperature_traits = {"_p_SimController_SupplyWater_Temperature_traits", "SimController_SupplyWater_Temperature_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimController_SupplyWater_Temperature_type = {"_p_SimController_SupplyWater_Temperature_type", "SimController_SupplyWater_Temperature_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimController_ZoneControlTemperature_Thermostat_const_iterator = {"_p_SimController_ZoneControlTemperature_Thermostat_const_iterator", "SimController_ZoneControlTemperature_Thermostat_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimController_ZoneControlTemperature_Thermostat_iterator = {"_p_SimController_ZoneControlTemperature_Thermostat_iterator", "SimController_ZoneControlTemperature_Thermostat_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimController_ZoneControlTemperature_Thermostat_sequence = {"_p_SimController_ZoneControlTemperature_Thermostat_sequence", "SimController_ZoneControlTemperature_Thermostat_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimController_ZoneControlTemperature_Thermostat_traits = {"_p_SimController_ZoneControlTemperature_Thermostat_traits", "SimController_ZoneControlTemperature_Thermostat_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimController_ZoneControlTemperature_Thermostat_type = {"_p_SimController_ZoneControlTemperature_Thermostat_type", "SimController_ZoneControlTemperature_Thermostat_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDerivedUnitType_DerivedUnit_Default_const_iterator = {"_p_SimDerivedUnitType_DerivedUnit_Default_const_iterator", "SimDerivedUnitType_DerivedUnit_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDerivedUnitType_DerivedUnit_Default_iterator = {"_p_SimDerivedUnitType_DerivedUnit_Default_iterator", "SimDerivedUnitType_DerivedUnit_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDerivedUnitType_DerivedUnit_Default_sequence = {"_p_SimDerivedUnitType_DerivedUnit_Default_sequence", "SimDerivedUnitType_DerivedUnit_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDerivedUnitType_DerivedUnit_Default_traits = {"_p_SimDerivedUnitType_DerivedUnit_Default_traits", "SimDerivedUnitType_DerivedUnit_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDerivedUnitType_DerivedUnit_Default_type = {"_p_SimDerivedUnitType_DerivedUnit_Default_type", "SimDerivedUnitType_DerivedUnit_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDistributionPort_AirFlowPort_Air_In_const_iterator = {"_p_SimDistributionPort_AirFlowPort_Air_In_const_iterator", "SimDistributionPort_AirFlowPort_Air_In_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDistributionPort_AirFlowPort_Air_In_iterator = {"_p_SimDistributionPort_AirFlowPort_Air_In_iterator", "SimDistributionPort_AirFlowPort_Air_In_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDistributionPort_AirFlowPort_Air_In_sequence = {"_p_SimDistributionPort_AirFlowPort_Air_In_sequence", "SimDistributionPort_AirFlowPort_Air_In_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDistributionPort_AirFlowPort_Air_In_traits = {"_p_SimDistributionPort_AirFlowPort_Air_In_traits", "SimDistributionPort_AirFlowPort_Air_In_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDistributionPort_AirFlowPort_Air_In_type = {"_p_SimDistributionPort_AirFlowPort_Air_In_type", "SimDistributionPort_AirFlowPort_Air_In_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDistributionPort_AirFlowPort_Air_Out_const_iterator = {"_p_SimDistributionPort_AirFlowPort_Air_Out_const_iterator", "SimDistributionPort_AirFlowPort_Air_Out_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDistributionPort_AirFlowPort_Air_Out_iterator = {"_p_SimDistributionPort_AirFlowPort_Air_Out_iterator", "SimDistributionPort_AirFlowPort_Air_Out_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDistributionPort_AirFlowPort_Air_Out_sequence = {"_p_SimDistributionPort_AirFlowPort_Air_Out_sequence", "SimDistributionPort_AirFlowPort_Air_Out_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDistributionPort_AirFlowPort_Air_Out_traits = {"_p_SimDistributionPort_AirFlowPort_Air_Out_traits", "SimDistributionPort_AirFlowPort_Air_Out_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDistributionPort_AirFlowPort_Air_Out_type = {"_p_SimDistributionPort_AirFlowPort_Air_Out_type", "SimDistributionPort_AirFlowPort_Air_Out_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDistributionPort_HotWaterFlowPort_Water_In_const_iterator = {"_p_SimDistributionPort_HotWaterFlowPort_Water_In_const_iterator", "SimDistributionPort_HotWaterFlowPort_Water_In_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDistributionPort_HotWaterFlowPort_Water_In_iterator = {"_p_SimDistributionPort_HotWaterFlowPort_Water_In_iterator", "SimDistributionPort_HotWaterFlowPort_Water_In_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDistributionPort_HotWaterFlowPort_Water_In_sequence = {"_p_SimDistributionPort_HotWaterFlowPort_Water_In_sequence", "SimDistributionPort_HotWaterFlowPort_Water_In_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDistributionPort_HotWaterFlowPort_Water_In_traits = {"_p_SimDistributionPort_HotWaterFlowPort_Water_In_traits", "SimDistributionPort_HotWaterFlowPort_Water_In_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDistributionPort_HotWaterFlowPort_Water_In_type = {"_p_SimDistributionPort_HotWaterFlowPort_Water_In_type", "SimDistributionPort_HotWaterFlowPort_Water_In_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDistributionPort_HotWaterFlowPort_Water_Out_const_iterator = {"_p_SimDistributionPort_HotWaterFlowPort_Water_Out_const_iterator", "SimDistributionPort_HotWaterFlowPort_Water_Out_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDistributionPort_HotWaterFlowPort_Water_Out_iterator = {"_p_SimDistributionPort_HotWaterFlowPort_Water_Out_iterator", "SimDistributionPort_HotWaterFlowPort_Water_Out_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDistributionPort_HotWaterFlowPort_Water_Out_sequence = {"_p_SimDistributionPort_HotWaterFlowPort_Water_Out_sequence", "SimDistributionPort_HotWaterFlowPort_Water_Out_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDistributionPort_HotWaterFlowPort_Water_Out_traits = {"_p_SimDistributionPort_HotWaterFlowPort_Water_Out_traits", "SimDistributionPort_HotWaterFlowPort_Water_Out_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimDistributionPort_HotWaterFlowPort_Water_Out_type = {"_p_SimDistributionPort_HotWaterFlowPort_Water_Out_type", "SimDistributionPort_HotWaterFlowPort_Water_Out_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFaceBound_FaceBound_Default_const_iterator = {"_p_SimFaceBound_FaceBound_Default_const_iterator", "SimFaceBound_FaceBound_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFaceBound_FaceBound_Default_iterator = {"_p_SimFaceBound_FaceBound_Default_iterator", "SimFaceBound_FaceBound_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFaceBound_FaceBound_Default_sequence = {"_p_SimFaceBound_FaceBound_Default_sequence", "SimFaceBound_FaceBound_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFaceBound_FaceBound_Default_traits = {"_p_SimFaceBound_FaceBound_Default_traits", "SimFaceBound_FaceBound_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFaceBound_FaceBound_Default_type = {"_p_SimFaceBound_FaceBound_Default_type", "SimFaceBound_FaceBound_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFaceBound_FaceBound_FaceOuterBound_const_iterator = {"_p_SimFaceBound_FaceBound_FaceOuterBound_const_iterator", "SimFaceBound_FaceBound_FaceOuterBound_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFaceBound_FaceBound_FaceOuterBound_iterator = {"_p_SimFaceBound_FaceBound_FaceOuterBound_iterator", "SimFaceBound_FaceBound_FaceOuterBound_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFaceBound_FaceBound_FaceOuterBound_sequence = {"_p_SimFaceBound_FaceBound_FaceOuterBound_sequence", "SimFaceBound_FaceBound_FaceOuterBound_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFaceBound_FaceBound_FaceOuterBound_traits = {"_p_SimFaceBound_FaceBound_FaceOuterBound_traits", "SimFaceBound_FaceBound_FaceOuterBound_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFaceBound_FaceBound_FaceOuterBound_type = {"_p_SimFaceBound_FaceBound_FaceOuterBound_type", "SimFaceBound_FaceBound_FaceOuterBound_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFace_Face_Default_const_iterator = {"_p_SimFace_Face_Default_const_iterator", "SimFace_Face_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFace_Face_Default_iterator = {"_p_SimFace_Face_Default_iterator", "SimFace_Face_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFace_Face_Default_sequence = {"_p_SimFace_Face_Default_sequence", "SimFace_Face_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFace_Face_Default_traits = {"_p_SimFace_Face_Default_traits", "SimFace_Face_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFace_Face_Default_type = {"_p_SimFace_Face_Default_type", "SimFace_Face_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFeatureElementSubtraction_Void_Opening_const_iterator = {"_p_SimFeatureElementSubtraction_Void_Opening_const_iterator", "SimFeatureElementSubtraction_Void_Opening_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFeatureElementSubtraction_Void_Opening_iterator = {"_p_SimFeatureElementSubtraction_Void_Opening_iterator", "SimFeatureElementSubtraction_Void_Opening_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFeatureElementSubtraction_Void_Opening_sequence = {"_p_SimFeatureElementSubtraction_Void_Opening_sequence", "SimFeatureElementSubtraction_Void_Opening_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFeatureElementSubtraction_Void_Opening_traits = {"_p_SimFeatureElementSubtraction_Void_Opening_traits", "SimFeatureElementSubtraction_Void_Opening_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFeatureElementSubtraction_Void_Opening_type = {"_p_SimFeatureElementSubtraction_Void_Opening_type", "SimFeatureElementSubtraction_Void_Opening_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowController_Valve_Default_const_iterator = {"_p_SimFlowController_Valve_Default_const_iterator", "SimFlowController_Valve_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowController_Valve_Default_iterator = {"_p_SimFlowController_Valve_Default_iterator", "SimFlowController_Valve_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowController_Valve_Default_sequence = {"_p_SimFlowController_Valve_Default_sequence", "SimFlowController_Valve_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowController_Valve_Default_traits = {"_p_SimFlowController_Valve_Default_traits", "SimFlowController_Valve_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowController_Valve_Default_type = {"_p_SimFlowController_Valve_Default_type", "SimFlowController_Valve_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowController_Valve_TemperingValve_const_iterator = {"_p_SimFlowController_Valve_TemperingValve_const_iterator", "SimFlowController_Valve_TemperingValve_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowController_Valve_TemperingValve_iterator = {"_p_SimFlowController_Valve_TemperingValve_iterator", "SimFlowController_Valve_TemperingValve_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowController_Valve_TemperingValve_sequence = {"_p_SimFlowController_Valve_TemperingValve_sequence", "SimFlowController_Valve_TemperingValve_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowController_Valve_TemperingValve_traits = {"_p_SimFlowController_Valve_TemperingValve_traits", "SimFlowController_Valve_TemperingValve_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowController_Valve_TemperingValve_type = {"_p_SimFlowController_Valve_TemperingValve_type", "SimFlowController_Valve_TemperingValve_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_const_iterator = {"_p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_const_iterator", "SimFlowEnergyTransferStorage_HotWaterTank_Expansion_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_iterator = {"_p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_iterator", "SimFlowEnergyTransferStorage_HotWaterTank_Expansion_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_sequence = {"_p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_sequence", "SimFlowEnergyTransferStorage_HotWaterTank_Expansion_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_traits = {"_p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_traits", "SimFlowEnergyTransferStorage_HotWaterTank_Expansion_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_type = {"_p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_type", "SimFlowEnergyTransferStorage_HotWaterTank_Expansion_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_const_iterator = {"_p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_const_iterator", "SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_iterator = {"_p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_iterator", "SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_sequence = {"_p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_sequence", "SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_traits = {"_p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_traits", "SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_type = {"_p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_type", "SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_const_iterator = {"_p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_const_iterator", "SimFlowEnergyTransferStorage_HotWaterTank_Mixed_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_iterator = {"_p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_iterator", "SimFlowEnergyTransferStorage_HotWaterTank_Mixed_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence = {"_p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence", "SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_traits = {"_p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_traits", "SimFlowEnergyTransferStorage_HotWaterTank_Mixed_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_type = {"_p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_type", "SimFlowEnergyTransferStorage_HotWaterTank_Mixed_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_const_iterator = {"_p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_const_iterator", "SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_iterator = {"_p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_iterator", "SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence = {"_p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence", "SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_traits = {"_p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_traits", "SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_type = {"_p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_type", "SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_const_iterator = {"_p_SimFlowEnergyTransfer_ConvectiveHeater_Water_const_iterator", "SimFlowEnergyTransfer_ConvectiveHeater_Water_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_iterator = {"_p_SimFlowEnergyTransfer_ConvectiveHeater_Water_iterator", "SimFlowEnergyTransfer_ConvectiveHeater_Water_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence = {"_p_SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence", "SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_traits = {"_p_SimFlowEnergyTransfer_ConvectiveHeater_Water_traits", "SimFlowEnergyTransfer_ConvectiveHeater_Water_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_type = {"_p_SimFlowEnergyTransfer_ConvectiveHeater_Water_type", "SimFlowEnergyTransfer_ConvectiveHeater_Water_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowFitting_Default_Default_const_iterator = {"_p_SimFlowFitting_Default_Default_const_iterator", "SimFlowFitting_Default_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowFitting_Default_Default_iterator = {"_p_SimFlowFitting_Default_Default_iterator", "SimFlowFitting_Default_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowFitting_Default_Default_sequence = {"_p_SimFlowFitting_Default_Default_sequence", "SimFlowFitting_Default_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowFitting_Default_Default_traits = {"_p_SimFlowFitting_Default_Default_traits", "SimFlowFitting_Default_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowFitting_Default_Default_type = {"_p_SimFlowFitting_Default_Default_type", "SimFlowFitting_Default_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowFitting_Mixer_DemandProxyMixerWater_const_iterator = {"_p_SimFlowFitting_Mixer_DemandProxyMixerWater_const_iterator", "SimFlowFitting_Mixer_DemandProxyMixerWater_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowFitting_Mixer_DemandProxyMixerWater_iterator = {"_p_SimFlowFitting_Mixer_DemandProxyMixerWater_iterator", "SimFlowFitting_Mixer_DemandProxyMixerWater_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowFitting_Mixer_DemandProxyMixerWater_sequence = {"_p_SimFlowFitting_Mixer_DemandProxyMixerWater_sequence", "SimFlowFitting_Mixer_DemandProxyMixerWater_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowFitting_Mixer_DemandProxyMixerWater_traits = {"_p_SimFlowFitting_Mixer_DemandProxyMixerWater_traits", "SimFlowFitting_Mixer_DemandProxyMixerWater_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowFitting_Mixer_DemandProxyMixerWater_type = {"_p_SimFlowFitting_Mixer_DemandProxyMixerWater_type", "SimFlowFitting_Mixer_DemandProxyMixerWater_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowFitting_Splitter_DemandProxySplitterWater_const_iterator = {"_p_SimFlowFitting_Splitter_DemandProxySplitterWater_const_iterator", "SimFlowFitting_Splitter_DemandProxySplitterWater_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowFitting_Splitter_DemandProxySplitterWater_iterator = {"_p_SimFlowFitting_Splitter_DemandProxySplitterWater_iterator", "SimFlowFitting_Splitter_DemandProxySplitterWater_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowFitting_Splitter_DemandProxySplitterWater_sequence = {"_p_SimFlowFitting_Splitter_DemandProxySplitterWater_sequence", "SimFlowFitting_Splitter_DemandProxySplitterWater_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowFitting_Splitter_DemandProxySplitterWater_traits = {"_p_SimFlowFitting_Splitter_DemandProxySplitterWater_traits", "SimFlowFitting_Splitter_DemandProxySplitterWater_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowFitting_Splitter_DemandProxySplitterWater_type = {"_p_SimFlowFitting_Splitter_DemandProxySplitterWater_type", "SimFlowFitting_Splitter_DemandProxySplitterWater_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowMover_Pump_VariableSpeedReturn_const_iterator = {"_p_SimFlowMover_Pump_VariableSpeedReturn_const_iterator", "SimFlowMover_Pump_VariableSpeedReturn_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowMover_Pump_VariableSpeedReturn_iterator = {"_p_SimFlowMover_Pump_VariableSpeedReturn_iterator", "SimFlowMover_Pump_VariableSpeedReturn_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowMover_Pump_VariableSpeedReturn_sequence = {"_p_SimFlowMover_Pump_VariableSpeedReturn_sequence", "SimFlowMover_Pump_VariableSpeedReturn_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowMover_Pump_VariableSpeedReturn_traits = {"_p_SimFlowMover_Pump_VariableSpeedReturn_traits", "SimFlowMover_Pump_VariableSpeedReturn_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowMover_Pump_VariableSpeedReturn_type = {"_p_SimFlowMover_Pump_VariableSpeedReturn_type", "SimFlowMover_Pump_VariableSpeedReturn_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowPlant_Boiler_BoilerHotWater_const_iterator = {"_p_SimFlowPlant_Boiler_BoilerHotWater_const_iterator", "SimFlowPlant_Boiler_BoilerHotWater_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowPlant_Boiler_BoilerHotWater_iterator = {"_p_SimFlowPlant_Boiler_BoilerHotWater_iterator", "SimFlowPlant_Boiler_BoilerHotWater_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowPlant_Boiler_BoilerHotWater_sequence = {"_p_SimFlowPlant_Boiler_BoilerHotWater_sequence", "SimFlowPlant_Boiler_BoilerHotWater_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowPlant_Boiler_BoilerHotWater_traits = {"_p_SimFlowPlant_Boiler_BoilerHotWater_traits", "SimFlowPlant_Boiler_BoilerHotWater_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowPlant_Boiler_BoilerHotWater_type = {"_p_SimFlowPlant_Boiler_BoilerHotWater_type", "SimFlowPlant_Boiler_BoilerHotWater_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowSegment_Pipe_Indoor_const_iterator = {"_p_SimFlowSegment_Pipe_Indoor_const_iterator", "SimFlowSegment_Pipe_Indoor_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowSegment_Pipe_Indoor_iterator = {"_p_SimFlowSegment_Pipe_Indoor_iterator", "SimFlowSegment_Pipe_Indoor_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowSegment_Pipe_Indoor_sequence = {"_p_SimFlowSegment_Pipe_Indoor_sequence", "SimFlowSegment_Pipe_Indoor_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowSegment_Pipe_Indoor_traits = {"_p_SimFlowSegment_Pipe_Indoor_traits", "SimFlowSegment_Pipe_Indoor_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimFlowSegment_Pipe_Indoor_type = {"_p_SimFlowSegment_Pipe_Indoor_type", "SimFlowSegment_Pipe_Indoor_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomBooleanResult_BooleanClippingResult_Default_const_iterator = {"_p_SimGeomBooleanResult_BooleanClippingResult_Default_const_iterator", "SimGeomBooleanResult_BooleanClippingResult_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomBooleanResult_BooleanClippingResult_Default_iterator = {"_p_SimGeomBooleanResult_BooleanClippingResult_Default_iterator", "SimGeomBooleanResult_BooleanClippingResult_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomBooleanResult_BooleanClippingResult_Default_sequence = {"_p_SimGeomBooleanResult_BooleanClippingResult_Default_sequence", "SimGeomBooleanResult_BooleanClippingResult_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomBooleanResult_BooleanClippingResult_Default_traits = {"_p_SimGeomBooleanResult_BooleanClippingResult_Default_traits", "SimGeomBooleanResult_BooleanClippingResult_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomBooleanResult_BooleanClippingResult_Default_type = {"_p_SimGeomBooleanResult_BooleanClippingResult_Default_type", "SimGeomBooleanResult_BooleanClippingResult_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomCurve_Polyline_Default_const_iterator = {"_p_SimGeomCurve_Polyline_Default_const_iterator", "SimGeomCurve_Polyline_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomCurve_Polyline_Default_iterator = {"_p_SimGeomCurve_Polyline_Default_iterator", "SimGeomCurve_Polyline_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomCurve_Polyline_Default_sequence = {"_p_SimGeomCurve_Polyline_Default_sequence", "SimGeomCurve_Polyline_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomCurve_Polyline_Default_traits = {"_p_SimGeomCurve_Polyline_Default_traits", "SimGeomCurve_Polyline_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomCurve_Polyline_Default_type = {"_p_SimGeomCurve_Polyline_Default_type", "SimGeomCurve_Polyline_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_const_iterator = {"_p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_const_iterator", "SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_iterator = {"_p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_iterator", "SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence = {"_p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence", "SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_traits = {"_p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_traits", "SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_type = {"_p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_type", "SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomPoint_Point_CartesianPoint_const_iterator = {"_p_SimGeomPoint_Point_CartesianPoint_const_iterator", "SimGeomPoint_Point_CartesianPoint_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomPoint_Point_CartesianPoint_iterator = {"_p_SimGeomPoint_Point_CartesianPoint_iterator", "SimGeomPoint_Point_CartesianPoint_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomPoint_Point_CartesianPoint_sequence = {"_p_SimGeomPoint_Point_CartesianPoint_sequence", "SimGeomPoint_Point_CartesianPoint_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomPoint_Point_CartesianPoint_traits = {"_p_SimGeomPoint_Point_CartesianPoint_traits", "SimGeomPoint_Point_CartesianPoint_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomPoint_Point_CartesianPoint_type = {"_p_SimGeomPoint_Point_CartesianPoint_type", "SimGeomPoint_Point_CartesianPoint_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSolidModel_FacetedBrep_Default_const_iterator = {"_p_SimGeomSolidModel_FacetedBrep_Default_const_iterator", "SimGeomSolidModel_FacetedBrep_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSolidModel_FacetedBrep_Default_iterator = {"_p_SimGeomSolidModel_FacetedBrep_Default_iterator", "SimGeomSolidModel_FacetedBrep_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSolidModel_FacetedBrep_Default_sequence = {"_p_SimGeomSolidModel_FacetedBrep_Default_sequence", "SimGeomSolidModel_FacetedBrep_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSolidModel_FacetedBrep_Default_traits = {"_p_SimGeomSolidModel_FacetedBrep_Default_traits", "SimGeomSolidModel_FacetedBrep_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSolidModel_FacetedBrep_Default_type = {"_p_SimGeomSolidModel_FacetedBrep_Default_type", "SimGeomSolidModel_FacetedBrep_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_const_iterator = {"_p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_const_iterator", "SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_iterator = {"_p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_iterator", "SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence = {"_p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence", "SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_traits = {"_p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_traits", "SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_type = {"_p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_type", "SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_const_iterator = {"_p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_const_iterator", "SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_iterator = {"_p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_iterator", "SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence = {"_p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence", "SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_traits = {"_p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_traits", "SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_type = {"_p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_type", "SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_const_iterator = {"_p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_const_iterator", "SimGeomSurface_BoundedSurface_CurveBoundedPlane_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_iterator = {"_p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_iterator", "SimGeomSurface_BoundedSurface_CurveBoundedPlane_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence = {"_p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence", "SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_traits = {"_p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_traits", "SimGeomSurface_BoundedSurface_CurveBoundedPlane_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_type = {"_p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_type", "SimGeomSurface_BoundedSurface_CurveBoundedPlane_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSurface_ElementarySurface_Plane_const_iterator = {"_p_SimGeomSurface_ElementarySurface_Plane_const_iterator", "SimGeomSurface_ElementarySurface_Plane_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSurface_ElementarySurface_Plane_iterator = {"_p_SimGeomSurface_ElementarySurface_Plane_iterator", "SimGeomSurface_ElementarySurface_Plane_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSurface_ElementarySurface_Plane_sequence = {"_p_SimGeomSurface_ElementarySurface_Plane_sequence", "SimGeomSurface_ElementarySurface_Plane_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSurface_ElementarySurface_Plane_traits = {"_p_SimGeomSurface_ElementarySurface_Plane_traits", "SimGeomSurface_ElementarySurface_Plane_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomSurface_ElementarySurface_Plane_type = {"_p_SimGeomSurface_ElementarySurface_Plane_type", "SimGeomSurface_ElementarySurface_Plane_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomVector_Vector_Default_const_iterator = {"_p_SimGeomVector_Vector_Default_const_iterator", "SimGeomVector_Vector_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomVector_Vector_Default_iterator = {"_p_SimGeomVector_Vector_Default_iterator", "SimGeomVector_Vector_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomVector_Vector_Default_sequence = {"_p_SimGeomVector_Vector_Default_sequence", "SimGeomVector_Vector_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomVector_Vector_Default_traits = {"_p_SimGeomVector_Vector_Default_traits", "SimGeomVector_Vector_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomVector_Vector_Default_type = {"_p_SimGeomVector_Vector_Default_type", "SimGeomVector_Vector_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomVector_Vector_Direction_const_iterator = {"_p_SimGeomVector_Vector_Direction_const_iterator", "SimGeomVector_Vector_Direction_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomVector_Vector_Direction_iterator = {"_p_SimGeomVector_Vector_Direction_iterator", "SimGeomVector_Vector_Direction_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomVector_Vector_Direction_sequence = {"_p_SimGeomVector_Vector_Direction_sequence", "SimGeomVector_Vector_Direction_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomVector_Vector_Direction_traits = {"_p_SimGeomVector_Vector_Direction_traits", "SimGeomVector_Vector_Direction_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGeomVector_Vector_Direction_type = {"_p_SimGeomVector_Vector_Direction_type", "SimGeomVector_Vector_Direction_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGroup_BldgCompGroup_ZoneEquipment_const_iterator = {"_p_SimGroup_BldgCompGroup_ZoneEquipment_const_iterator", "SimGroup_BldgCompGroup_ZoneEquipment_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGroup_BldgCompGroup_ZoneEquipment_iterator = {"_p_SimGroup_BldgCompGroup_ZoneEquipment_iterator", "SimGroup_BldgCompGroup_ZoneEquipment_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGroup_BldgCompGroup_ZoneEquipment_sequence = {"_p_SimGroup_BldgCompGroup_ZoneEquipment_sequence", "SimGroup_BldgCompGroup_ZoneEquipment_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGroup_BldgCompGroup_ZoneEquipment_traits = {"_p_SimGroup_BldgCompGroup_ZoneEquipment_traits", "SimGroup_BldgCompGroup_ZoneEquipment_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGroup_BldgCompGroup_ZoneEquipment_type = {"_p_SimGroup_BldgCompGroup_ZoneEquipment_type", "SimGroup_BldgCompGroup_ZoneEquipment_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGroup_HvacDemandGroup_WaterSystem_const_iterator = {"_p_SimGroup_HvacDemandGroup_WaterSystem_const_iterator", "SimGroup_HvacDemandGroup_WaterSystem_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGroup_HvacDemandGroup_WaterSystem_iterator = {"_p_SimGroup_HvacDemandGroup_WaterSystem_iterator", "SimGroup_HvacDemandGroup_WaterSystem_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGroup_HvacDemandGroup_WaterSystem_sequence = {"_p_SimGroup_HvacDemandGroup_WaterSystem_sequence", "SimGroup_HvacDemandGroup_WaterSystem_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGroup_HvacDemandGroup_WaterSystem_traits = {"_p_SimGroup_HvacDemandGroup_WaterSystem_traits", "SimGroup_HvacDemandGroup_WaterSystem_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGroup_HvacDemandGroup_WaterSystem_type = {"_p_SimGroup_HvacDemandGroup_WaterSystem_type", "SimGroup_HvacDemandGroup_WaterSystem_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGroup_SpatialZoneGroup_ZoneGroup_const_iterator = {"_p_SimGroup_SpatialZoneGroup_ZoneGroup_const_iterator", "SimGroup_SpatialZoneGroup_ZoneGroup_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGroup_SpatialZoneGroup_ZoneGroup_iterator = {"_p_SimGroup_SpatialZoneGroup_ZoneGroup_iterator", "SimGroup_SpatialZoneGroup_ZoneGroup_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGroup_SpatialZoneGroup_ZoneGroup_sequence = {"_p_SimGroup_SpatialZoneGroup_ZoneGroup_sequence", "SimGroup_SpatialZoneGroup_ZoneGroup_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGroup_SpatialZoneGroup_ZoneGroup_traits = {"_p_SimGroup_SpatialZoneGroup_ZoneGroup_traits", "SimGroup_SpatialZoneGroup_ZoneGroup_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGroup_SpatialZoneGroup_ZoneGroup_type = {"_p_SimGroup_SpatialZoneGroup_ZoneGroup_type", "SimGroup_SpatialZoneGroup_ZoneGroup_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_const_iterator = {"_p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_const_iterator", "SimGroup_SpatialZoneGroup_ZoneHvacGroup_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_iterator = {"_p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_iterator", "SimGroup_SpatialZoneGroup_ZoneHvacGroup_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence = {"_p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence", "SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_traits = {"_p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_traits", "SimGroup_SpatialZoneGroup_ZoneHvacGroup_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_type = {"_p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_type", "SimGroup_SpatialZoneGroup_ZoneHvacGroup_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimInternalLoad_Equipment_Electric_const_iterator = {"_p_SimInternalLoad_Equipment_Electric_const_iterator", "SimInternalLoad_Equipment_Electric_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimInternalLoad_Equipment_Electric_iterator = {"_p_SimInternalLoad_Equipment_Electric_iterator", "SimInternalLoad_Equipment_Electric_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimInternalLoad_Equipment_Electric_sequence = {"_p_SimInternalLoad_Equipment_Electric_sequence", "SimInternalLoad_Equipment_Electric_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimInternalLoad_Equipment_Electric_traits = {"_p_SimInternalLoad_Equipment_Electric_traits", "SimInternalLoad_Equipment_Electric_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimInternalLoad_Equipment_Electric_type = {"_p_SimInternalLoad_Equipment_Electric_type", "SimInternalLoad_Equipment_Electric_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimInternalLoad_Lights_Default_const_iterator = {"_p_SimInternalLoad_Lights_Default_const_iterator", "SimInternalLoad_Lights_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimInternalLoad_Lights_Default_iterator = {"_p_SimInternalLoad_Lights_Default_iterator", "SimInternalLoad_Lights_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimInternalLoad_Lights_Default_sequence = {"_p_SimInternalLoad_Lights_Default_sequence", "SimInternalLoad_Lights_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimInternalLoad_Lights_Default_traits = {"_p_SimInternalLoad_Lights_Default_traits", "SimInternalLoad_Lights_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimInternalLoad_Lights_Default_type = {"_p_SimInternalLoad_Lights_Default_type", "SimInternalLoad_Lights_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimInternalLoad_People_Default_const_iterator = {"_p_SimInternalLoad_People_Default_const_iterator", "SimInternalLoad_People_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimInternalLoad_People_Default_iterator = {"_p_SimInternalLoad_People_Default_iterator", "SimInternalLoad_People_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimInternalLoad_People_Default_sequence = {"_p_SimInternalLoad_People_Default_sequence", "SimInternalLoad_People_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimInternalLoad_People_Default_traits = {"_p_SimInternalLoad_People_Default_traits", "SimInternalLoad_People_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimInternalLoad_People_Default_type = {"_p_SimInternalLoad_People_Default_type", "SimInternalLoad_People_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_ConnectorList_SimConnections_const_iterator = {"_p_SimList_ConnectorList_SimConnections_const_iterator", "SimList_ConnectorList_SimConnections_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_ConnectorList_SimConnections_iterator = {"_p_SimList_ConnectorList_SimConnections_iterator", "SimList_ConnectorList_SimConnections_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_ConnectorList_SimConnections_sequence = {"_p_SimList_ConnectorList_SimConnections_sequence", "SimList_ConnectorList_SimConnections_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_ConnectorList_SimConnections_traits = {"_p_SimList_ConnectorList_SimConnections_traits", "SimList_ConnectorList_SimConnections_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_ConnectorList_SimConnections_type = {"_p_SimList_ConnectorList_SimConnections_type", "SimList_ConnectorList_SimConnections_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_EquipmentList_ZoneHvac_const_iterator = {"_p_SimList_EquipmentList_ZoneHvac_const_iterator", "SimList_EquipmentList_ZoneHvac_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_EquipmentList_ZoneHvac_iterator = {"_p_SimList_EquipmentList_ZoneHvac_iterator", "SimList_EquipmentList_ZoneHvac_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_EquipmentList_ZoneHvac_sequence = {"_p_SimList_EquipmentList_ZoneHvac_sequence", "SimList_EquipmentList_ZoneHvac_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_EquipmentList_ZoneHvac_traits = {"_p_SimList_EquipmentList_ZoneHvac_traits", "SimList_EquipmentList_ZoneHvac_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_EquipmentList_ZoneHvac_type = {"_p_SimList_EquipmentList_ZoneHvac_type", "SimList_EquipmentList_ZoneHvac_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_MaterialList_Default_const_iterator = {"_p_SimList_MaterialList_Default_const_iterator", "SimList_MaterialList_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_MaterialList_Default_iterator = {"_p_SimList_MaterialList_Default_iterator", "SimList_MaterialList_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_MaterialList_Default_sequence = {"_p_SimList_MaterialList_Default_sequence", "SimList_MaterialList_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_MaterialList_Default_traits = {"_p_SimList_MaterialList_Default_traits", "SimList_MaterialList_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_MaterialList_Default_type = {"_p_SimList_MaterialList_Default_type", "SimList_MaterialList_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_const_iterator = {"_p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_const_iterator", "SimList_SchemeList_AirLoopAvailabilityMgrScheme_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_iterator = {"_p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_iterator", "SimList_SchemeList_AirLoopAvailabilityMgrScheme_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence = {"_p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence", "SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_traits = {"_p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_traits", "SimList_SchemeList_AirLoopAvailabilityMgrScheme_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_type = {"_p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_type", "SimList_SchemeList_AirLoopAvailabilityMgrScheme_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_SchemeList_DemandManagerScheme_const_iterator = {"_p_SimList_SchemeList_DemandManagerScheme_const_iterator", "SimList_SchemeList_DemandManagerScheme_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_SchemeList_DemandManagerScheme_iterator = {"_p_SimList_SchemeList_DemandManagerScheme_iterator", "SimList_SchemeList_DemandManagerScheme_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_SchemeList_DemandManagerScheme_sequence = {"_p_SimList_SchemeList_DemandManagerScheme_sequence", "SimList_SchemeList_DemandManagerScheme_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_SchemeList_DemandManagerScheme_traits = {"_p_SimList_SchemeList_DemandManagerScheme_traits", "SimList_SchemeList_DemandManagerScheme_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_SchemeList_DemandManagerScheme_type = {"_p_SimList_SchemeList_DemandManagerScheme_type", "SimList_SchemeList_DemandManagerScheme_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_SchemeList_PlantOperatingScheme_const_iterator = {"_p_SimList_SchemeList_PlantOperatingScheme_const_iterator", "SimList_SchemeList_PlantOperatingScheme_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_SchemeList_PlantOperatingScheme_iterator = {"_p_SimList_SchemeList_PlantOperatingScheme_iterator", "SimList_SchemeList_PlantOperatingScheme_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_SchemeList_PlantOperatingScheme_sequence = {"_p_SimList_SchemeList_PlantOperatingScheme_sequence", "SimList_SchemeList_PlantOperatingScheme_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_SchemeList_PlantOperatingScheme_traits = {"_p_SimList_SchemeList_PlantOperatingScheme_traits", "SimList_SchemeList_PlantOperatingScheme_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_SchemeList_PlantOperatingScheme_type = {"_p_SimList_SchemeList_PlantOperatingScheme_type", "SimList_SchemeList_PlantOperatingScheme_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_SchemeList_WaterTempControlScheme_const_iterator = {"_p_SimList_SchemeList_WaterTempControlScheme_const_iterator", "SimList_SchemeList_WaterTempControlScheme_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_SchemeList_WaterTempControlScheme_iterator = {"_p_SimList_SchemeList_WaterTempControlScheme_iterator", "SimList_SchemeList_WaterTempControlScheme_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_SchemeList_WaterTempControlScheme_sequence = {"_p_SimList_SchemeList_WaterTempControlScheme_sequence", "SimList_SchemeList_WaterTempControlScheme_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_SchemeList_WaterTempControlScheme_traits = {"_p_SimList_SchemeList_WaterTempControlScheme_traits", "SimList_SchemeList_WaterTempControlScheme_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimList_SchemeList_WaterTempControlScheme_type = {"_p_SimList_SchemeList_WaterTempControlScheme_type", "SimList_SchemeList_WaterTempControlScheme_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_const_iterator = {"_p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_const_iterator", "SimLocalPlacement_LocalPlacement_AbsolutePlacement_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_iterator = {"_p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_iterator", "SimLocalPlacement_LocalPlacement_AbsolutePlacement_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence = {"_p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence", "SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_traits = {"_p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_traits", "SimLocalPlacement_LocalPlacement_AbsolutePlacement_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_type = {"_p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_type", "SimLocalPlacement_LocalPlacement_AbsolutePlacement_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLocalPlacement_LocalPlacement_RelativePlacement_const_iterator = {"_p_SimLocalPlacement_LocalPlacement_RelativePlacement_const_iterator", "SimLocalPlacement_LocalPlacement_RelativePlacement_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLocalPlacement_LocalPlacement_RelativePlacement_iterator = {"_p_SimLocalPlacement_LocalPlacement_RelativePlacement_iterator", "SimLocalPlacement_LocalPlacement_RelativePlacement_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLocalPlacement_LocalPlacement_RelativePlacement_sequence = {"_p_SimLocalPlacement_LocalPlacement_RelativePlacement_sequence", "SimLocalPlacement_LocalPlacement_RelativePlacement_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLocalPlacement_LocalPlacement_RelativePlacement_traits = {"_p_SimLocalPlacement_LocalPlacement_RelativePlacement_traits", "SimLocalPlacement_LocalPlacement_RelativePlacement_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLocalPlacement_LocalPlacement_RelativePlacement_type = {"_p_SimLocalPlacement_LocalPlacement_RelativePlacement_type", "SimLocalPlacement_LocalPlacement_RelativePlacement_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLocationAndWeather_DesignDay_Default_const_iterator = {"_p_SimLocationAndWeather_DesignDay_Default_const_iterator", "SimLocationAndWeather_DesignDay_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLocationAndWeather_DesignDay_Default_iterator = {"_p_SimLocationAndWeather_DesignDay_Default_iterator", "SimLocationAndWeather_DesignDay_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLocationAndWeather_DesignDay_Default_sequence = {"_p_SimLocationAndWeather_DesignDay_Default_sequence", "SimLocationAndWeather_DesignDay_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLocationAndWeather_DesignDay_Default_traits = {"_p_SimLocationAndWeather_DesignDay_Default_traits", "SimLocationAndWeather_DesignDay_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLocationAndWeather_DesignDay_Default_type = {"_p_SimLocationAndWeather_DesignDay_Default_type", "SimLocationAndWeather_DesignDay_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLocationAndWeather_Location_Default_const_iterator = {"_p_SimLocationAndWeather_Location_Default_const_iterator", "SimLocationAndWeather_Location_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLocationAndWeather_Location_Default_iterator = {"_p_SimLocationAndWeather_Location_Default_iterator", "SimLocationAndWeather_Location_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLocationAndWeather_Location_Default_sequence = {"_p_SimLocationAndWeather_Location_Default_sequence", "SimLocationAndWeather_Location_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLocationAndWeather_Location_Default_traits = {"_p_SimLocationAndWeather_Location_Default_traits", "SimLocationAndWeather_Location_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLocationAndWeather_Location_Default_type = {"_p_SimLocationAndWeather_Location_Default_type", "SimLocationAndWeather_Location_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLoop_Loop_PolyLoop_const_iterator = {"_p_SimLoop_Loop_PolyLoop_const_iterator", "SimLoop_Loop_PolyLoop_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLoop_Loop_PolyLoop_iterator = {"_p_SimLoop_Loop_PolyLoop_iterator", "SimLoop_Loop_PolyLoop_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLoop_Loop_PolyLoop_sequence = {"_p_SimLoop_Loop_PolyLoop_sequence", "SimLoop_Loop_PolyLoop_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLoop_Loop_PolyLoop_traits = {"_p_SimLoop_Loop_PolyLoop_traits", "SimLoop_Loop_PolyLoop_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimLoop_Loop_PolyLoop_type = {"_p_SimLoop_Loop_PolyLoop_type", "SimLoop_Loop_PolyLoop_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMappedRepresentationItem_Default_Default_const_iterator = {"_p_SimMappedRepresentationItem_Default_Default_const_iterator", "SimMappedRepresentationItem_Default_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMappedRepresentationItem_Default_Default_iterator = {"_p_SimMappedRepresentationItem_Default_Default_iterator", "SimMappedRepresentationItem_Default_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMappedRepresentationItem_Default_Default_sequence = {"_p_SimMappedRepresentationItem_Default_Default_sequence", "SimMappedRepresentationItem_Default_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMappedRepresentationItem_Default_Default_traits = {"_p_SimMappedRepresentationItem_Default_Default_traits", "SimMappedRepresentationItem_Default_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMappedRepresentationItem_Default_Default_type = {"_p_SimMappedRepresentationItem_Default_Default_type", "SimMappedRepresentationItem_Default_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_Default_Default_const_iterator = {"_p_SimMaterialLayerSet_Default_Default_const_iterator", "SimMaterialLayerSet_Default_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_Default_Default_iterator = {"_p_SimMaterialLayerSet_Default_Default_iterator", "SimMaterialLayerSet_Default_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_Default_Default_sequence = {"_p_SimMaterialLayerSet_Default_Default_sequence", "SimMaterialLayerSet_Default_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_Default_Default_traits = {"_p_SimMaterialLayerSet_Default_Default_traits", "SimMaterialLayerSet_Default_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_Default_Default_type = {"_p_SimMaterialLayerSet_Default_Default_type", "SimMaterialLayerSet_Default_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_GlazingLayerSet_Window_const_iterator = {"_p_SimMaterialLayerSet_GlazingLayerSet_Window_const_iterator", "SimMaterialLayerSet_GlazingLayerSet_Window_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_GlazingLayerSet_Window_iterator = {"_p_SimMaterialLayerSet_GlazingLayerSet_Window_iterator", "SimMaterialLayerSet_GlazingLayerSet_Window_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_GlazingLayerSet_Window_sequence = {"_p_SimMaterialLayerSet_GlazingLayerSet_Window_sequence", "SimMaterialLayerSet_GlazingLayerSet_Window_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_GlazingLayerSet_Window_traits = {"_p_SimMaterialLayerSet_GlazingLayerSet_Window_traits", "SimMaterialLayerSet_GlazingLayerSet_Window_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_GlazingLayerSet_Window_type = {"_p_SimMaterialLayerSet_GlazingLayerSet_Window_type", "SimMaterialLayerSet_GlazingLayerSet_Window_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_const_iterator = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_const_iterator", "SimMaterialLayerSet_OpaqueLayerSet_Ceiling_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_iterator = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_iterator", "SimMaterialLayerSet_OpaqueLayerSet_Ceiling_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence", "SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_traits = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_traits", "SimMaterialLayerSet_OpaqueLayerSet_Ceiling_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_type = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_type", "SimMaterialLayerSet_OpaqueLayerSet_Ceiling_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Door_const_iterator = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Door_const_iterator", "SimMaterialLayerSet_OpaqueLayerSet_Door_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Door_iterator = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Door_iterator", "SimMaterialLayerSet_OpaqueLayerSet_Door_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Door_sequence = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Door_sequence", "SimMaterialLayerSet_OpaqueLayerSet_Door_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Door_traits = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Door_traits", "SimMaterialLayerSet_OpaqueLayerSet_Door_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Door_type = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Door_type", "SimMaterialLayerSet_OpaqueLayerSet_Door_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_const_iterator = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Floor_const_iterator", "SimMaterialLayerSet_OpaqueLayerSet_Floor_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_iterator = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Floor_iterator", "SimMaterialLayerSet_OpaqueLayerSet_Floor_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence", "SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_traits = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Floor_traits", "SimMaterialLayerSet_OpaqueLayerSet_Floor_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_type = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Floor_type", "SimMaterialLayerSet_OpaqueLayerSet_Floor_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_const_iterator = {"_p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_const_iterator", "SimMaterialLayerSet_OpaqueLayerSet_InternalSource_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_iterator = {"_p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_iterator", "SimMaterialLayerSet_OpaqueLayerSet_InternalSource_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence = {"_p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence", "SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_traits = {"_p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_traits", "SimMaterialLayerSet_OpaqueLayerSet_InternalSource_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_type = {"_p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_type", "SimMaterialLayerSet_OpaqueLayerSet_InternalSource_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_const_iterator = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Roof_const_iterator", "SimMaterialLayerSet_OpaqueLayerSet_Roof_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_iterator = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Roof_iterator", "SimMaterialLayerSet_OpaqueLayerSet_Roof_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence", "SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_traits = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Roof_traits", "SimMaterialLayerSet_OpaqueLayerSet_Roof_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_type = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Roof_type", "SimMaterialLayerSet_OpaqueLayerSet_Roof_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_const_iterator = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Wall_const_iterator", "SimMaterialLayerSet_OpaqueLayerSet_Wall_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_iterator = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Wall_iterator", "SimMaterialLayerSet_OpaqueLayerSet_Wall_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence", "SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_traits = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Wall_traits", "SimMaterialLayerSet_OpaqueLayerSet_Wall_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_type = {"_p_SimMaterialLayerSet_OpaqueLayerSet_Wall_type", "SimMaterialLayerSet_OpaqueLayerSet_Wall_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayer_GlazingMaterialLayer_Default_const_iterator = {"_p_SimMaterialLayer_GlazingMaterialLayer_Default_const_iterator", "SimMaterialLayer_GlazingMaterialLayer_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayer_GlazingMaterialLayer_Default_iterator = {"_p_SimMaterialLayer_GlazingMaterialLayer_Default_iterator", "SimMaterialLayer_GlazingMaterialLayer_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayer_GlazingMaterialLayer_Default_sequence = {"_p_SimMaterialLayer_GlazingMaterialLayer_Default_sequence", "SimMaterialLayer_GlazingMaterialLayer_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayer_GlazingMaterialLayer_Default_traits = {"_p_SimMaterialLayer_GlazingMaterialLayer_Default_traits", "SimMaterialLayer_GlazingMaterialLayer_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayer_GlazingMaterialLayer_Default_type = {"_p_SimMaterialLayer_GlazingMaterialLayer_Default_type", "SimMaterialLayer_GlazingMaterialLayer_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_const_iterator = {"_p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_const_iterator", "SimMaterialLayer_GlazingMaterialLayer_Thermochromic_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_iterator = {"_p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_iterator", "SimMaterialLayer_GlazingMaterialLayer_Thermochromic_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_sequence = {"_p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_sequence", "SimMaterialLayer_GlazingMaterialLayer_Thermochromic_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_traits = {"_p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_traits", "SimMaterialLayer_GlazingMaterialLayer_Thermochromic_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_type = {"_p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_type", "SimMaterialLayer_GlazingMaterialLayer_Thermochromic_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayer_OpaqueMaterialLayer_Default_const_iterator = {"_p_SimMaterialLayer_OpaqueMaterialLayer_Default_const_iterator", "SimMaterialLayer_OpaqueMaterialLayer_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayer_OpaqueMaterialLayer_Default_iterator = {"_p_SimMaterialLayer_OpaqueMaterialLayer_Default_iterator", "SimMaterialLayer_OpaqueMaterialLayer_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayer_OpaqueMaterialLayer_Default_sequence = {"_p_SimMaterialLayer_OpaqueMaterialLayer_Default_sequence", "SimMaterialLayer_OpaqueMaterialLayer_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayer_OpaqueMaterialLayer_Default_traits = {"_p_SimMaterialLayer_OpaqueMaterialLayer_Default_traits", "SimMaterialLayer_OpaqueMaterialLayer_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterialLayer_OpaqueMaterialLayer_Default_type = {"_p_SimMaterialLayer_OpaqueMaterialLayer_Default_type", "SimMaterialLayer_OpaqueMaterialLayer_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_Default_Default_const_iterator = {"_p_SimMaterial_Default_Default_const_iterator", "SimMaterial_Default_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_Default_Default_iterator = {"_p_SimMaterial_Default_Default_iterator", "SimMaterial_Default_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_Default_Default_sequence = {"_p_SimMaterial_Default_Default_sequence", "SimMaterial_Default_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_Default_Default_traits = {"_p_SimMaterial_Default_Default_traits", "SimMaterial_Default_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_Default_Default_type = {"_p_SimMaterial_Default_Default_type", "SimMaterial_Default_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_GlazingMaterial_Gas_const_iterator = {"_p_SimMaterial_GlazingMaterial_Gas_const_iterator", "SimMaterial_GlazingMaterial_Gas_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_GlazingMaterial_Gas_iterator = {"_p_SimMaterial_GlazingMaterial_Gas_iterator", "SimMaterial_GlazingMaterial_Gas_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_GlazingMaterial_Gas_sequence = {"_p_SimMaterial_GlazingMaterial_Gas_sequence", "SimMaterial_GlazingMaterial_Gas_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_GlazingMaterial_Gas_traits = {"_p_SimMaterial_GlazingMaterial_Gas_traits", "SimMaterial_GlazingMaterial_Gas_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_GlazingMaterial_Gas_type = {"_p_SimMaterial_GlazingMaterial_Gas_type", "SimMaterial_GlazingMaterial_Gas_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_GlazingMaterial_Glazing_const_iterator = {"_p_SimMaterial_GlazingMaterial_Glazing_const_iterator", "SimMaterial_GlazingMaterial_Glazing_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_GlazingMaterial_Glazing_iterator = {"_p_SimMaterial_GlazingMaterial_Glazing_iterator", "SimMaterial_GlazingMaterial_Glazing_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_GlazingMaterial_Glazing_sequence = {"_p_SimMaterial_GlazingMaterial_Glazing_sequence", "SimMaterial_GlazingMaterial_Glazing_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_GlazingMaterial_Glazing_traits = {"_p_SimMaterial_GlazingMaterial_Glazing_traits", "SimMaterial_GlazingMaterial_Glazing_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_GlazingMaterial_Glazing_type = {"_p_SimMaterial_GlazingMaterial_Glazing_type", "SimMaterial_GlazingMaterial_Glazing_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_const_iterator = {"_p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_const_iterator", "SimMaterial_GlazingMaterial_SimpleGlazingSystem_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_iterator = {"_p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_iterator", "SimMaterial_GlazingMaterial_SimpleGlazingSystem_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence = {"_p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence", "SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_traits = {"_p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_traits", "SimMaterial_GlazingMaterial_SimpleGlazingSystem_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_type = {"_p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_type", "SimMaterial_GlazingMaterial_SimpleGlazingSystem_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_OpaqueMaterial_AirGap_const_iterator = {"_p_SimMaterial_OpaqueMaterial_AirGap_const_iterator", "SimMaterial_OpaqueMaterial_AirGap_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_OpaqueMaterial_AirGap_iterator = {"_p_SimMaterial_OpaqueMaterial_AirGap_iterator", "SimMaterial_OpaqueMaterial_AirGap_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_OpaqueMaterial_AirGap_sequence = {"_p_SimMaterial_OpaqueMaterial_AirGap_sequence", "SimMaterial_OpaqueMaterial_AirGap_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_OpaqueMaterial_AirGap_traits = {"_p_SimMaterial_OpaqueMaterial_AirGap_traits", "SimMaterial_OpaqueMaterial_AirGap_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_OpaqueMaterial_AirGap_type = {"_p_SimMaterial_OpaqueMaterial_AirGap_type", "SimMaterial_OpaqueMaterial_AirGap_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_OpaqueMaterial_Default_const_iterator = {"_p_SimMaterial_OpaqueMaterial_Default_const_iterator", "SimMaterial_OpaqueMaterial_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_OpaqueMaterial_Default_iterator = {"_p_SimMaterial_OpaqueMaterial_Default_iterator", "SimMaterial_OpaqueMaterial_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_OpaqueMaterial_Default_sequence = {"_p_SimMaterial_OpaqueMaterial_Default_sequence", "SimMaterial_OpaqueMaterial_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_OpaqueMaterial_Default_traits = {"_p_SimMaterial_OpaqueMaterial_Default_traits", "SimMaterial_OpaqueMaterial_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimMaterial_OpaqueMaterial_Default_type = {"_p_SimMaterial_OpaqueMaterial_Default_type", "SimMaterial_OpaqueMaterial_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelName_optional = {"_p_SimModelName_optional", "SimModelName_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelName_traits = {"_p_SimModelName_traits", "SimModelName_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelName_type = {"_p_SimModelName_type", "SimModelName_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_const_iterator = {"_p_SimModelRepresentationContext_GeometricRepresentationContext_Default_const_iterator", "SimModelRepresentationContext_GeometricRepresentationContext_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_iterator = {"_p_SimModelRepresentationContext_GeometricRepresentationContext_Default_iterator", "SimModelRepresentationContext_GeometricRepresentationContext_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence = {"_p_SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence", "SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_traits = {"_p_SimModelRepresentationContext_GeometricRepresentationContext_Default_traits", "SimModelRepresentationContext_GeometricRepresentationContext_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_type = {"_p_SimModelRepresentationContext_GeometricRepresentationContext_Default_type", "SimModelRepresentationContext_GeometricRepresentationContext_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_const_iterator = {"_p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_const_iterator", "SimModelRepresentationContext_GeometricRepresentationSubContext_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_iterator = {"_p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_iterator", "SimModelRepresentationContext_GeometricRepresentationSubContext_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence = {"_p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence", "SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_traits = {"_p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_traits", "SimModelRepresentationContext_GeometricRepresentationSubContext_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_type = {"_p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_type", "SimModelRepresentationContext_GeometricRepresentationSubContext_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelSchemaIDKey_optional = {"_p_SimModelSchemaIDKey_optional", "SimModelSchemaIDKey_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelSchemaIDKey_traits = {"_p_SimModelSchemaIDKey_traits", "SimModelSchemaIDKey_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelSchemaIDKey_type = {"_p_SimModelSchemaIDKey_type", "SimModelSchemaIDKey_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelSchemaVersion_optional = {"_p_SimModelSchemaVersion_optional", "SimModelSchemaVersion_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelSchemaVersion_traits = {"_p_SimModelSchemaVersion_traits", "SimModelSchemaVersion_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelSchemaVersion_type = {"_p_SimModelSchemaVersion_type", "SimModelSchemaVersion_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelSubtype_optional = {"_p_SimModelSubtype_optional", "SimModelSubtype_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelSubtype_traits = {"_p_SimModelSubtype_traits", "SimModelSubtype_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelSubtype_type = {"_p_SimModelSubtype_type", "SimModelSubtype_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelType_optional = {"_p_SimModelType_optional", "SimModelType_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelType_traits = {"_p_SimModelType_traits", "SimModelType_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelType_type = {"_p_SimModelType_type", "SimModelType_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelUnitDefaultsVersion_optional = {"_p_SimModelUnitDefaultsVersion_optional", "SimModelUnitDefaultsVersion_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelUnitDefaultsVersion_traits = {"_p_SimModelUnitDefaultsVersion_traits", "SimModelUnitDefaultsVersion_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelUnitDefaultsVersion_type = {"_p_SimModelUnitDefaultsVersion_type", "SimModelUnitDefaultsVersion_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelUnitsVersion_optional = {"_p_SimModelUnitsVersion_optional", "SimModelUnitsVersion_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelUnitsVersion_traits = {"_p_SimModelUnitsVersion_traits", "SimModelUnitsVersion_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelUnitsVersion_type = {"_p_SimModelUnitsVersion_type", "SimModelUnitsVersion_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelVersion_optional = {"_p_SimModelVersion_optional", "SimModelVersion_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelVersion_traits = {"_p_SimModelVersion_traits", "SimModelVersion_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimModelVersion_type = {"_p_SimModelVersion_type", "SimModelVersion_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_AirFlowPort_Air_In_const_iterator = {"_p_SimNode_AirFlowPort_Air_In_const_iterator", "SimNode_AirFlowPort_Air_In_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_AirFlowPort_Air_In_iterator = {"_p_SimNode_AirFlowPort_Air_In_iterator", "SimNode_AirFlowPort_Air_In_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_AirFlowPort_Air_In_sequence = {"_p_SimNode_AirFlowPort_Air_In_sequence", "SimNode_AirFlowPort_Air_In_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_AirFlowPort_Air_In_traits = {"_p_SimNode_AirFlowPort_Air_In_traits", "SimNode_AirFlowPort_Air_In_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_AirFlowPort_Air_In_type = {"_p_SimNode_AirFlowPort_Air_In_type", "SimNode_AirFlowPort_Air_In_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_AirFlowPort_Air_Out_const_iterator = {"_p_SimNode_AirFlowPort_Air_Out_const_iterator", "SimNode_AirFlowPort_Air_Out_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_AirFlowPort_Air_Out_iterator = {"_p_SimNode_AirFlowPort_Air_Out_iterator", "SimNode_AirFlowPort_Air_Out_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_AirFlowPort_Air_Out_sequence = {"_p_SimNode_AirFlowPort_Air_Out_sequence", "SimNode_AirFlowPort_Air_Out_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_AirFlowPort_Air_Out_traits = {"_p_SimNode_AirFlowPort_Air_Out_traits", "SimNode_AirFlowPort_Air_Out_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_AirFlowPort_Air_Out_type = {"_p_SimNode_AirFlowPort_Air_Out_type", "SimNode_AirFlowPort_Air_Out_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_const_iterator = {"_p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_const_iterator", "SimNode_DigitalControl_AirLoop_DigitalSignal_In_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_iterator = {"_p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_iterator", "SimNode_DigitalControl_AirLoop_DigitalSignal_In_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence = {"_p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence", "SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_traits = {"_p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_traits", "SimNode_DigitalControl_AirLoop_DigitalSignal_In_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_type = {"_p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_type", "SimNode_DigitalControl_AirLoop_DigitalSignal_In_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_const_iterator = {"_p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_const_iterator", "SimNode_DigitalControl_HWLoop_DigitalSignal_In_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_iterator = {"_p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_iterator", "SimNode_DigitalControl_HWLoop_DigitalSignal_In_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence = {"_p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence", "SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_traits = {"_p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_traits", "SimNode_DigitalControl_HWLoop_DigitalSignal_In_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_type = {"_p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_type", "SimNode_DigitalControl_HWLoop_DigitalSignal_In_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_Docking_Default_const_iterator = {"_p_SimNode_Docking_Default_const_iterator", "SimNode_Docking_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_Docking_Default_iterator = {"_p_SimNode_Docking_Default_iterator", "SimNode_Docking_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_Docking_Default_sequence = {"_p_SimNode_Docking_Default_sequence", "SimNode_Docking_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_Docking_Default_traits = {"_p_SimNode_Docking_Default_traits", "SimNode_Docking_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_Docking_Default_type = {"_p_SimNode_Docking_Default_type", "SimNode_Docking_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_HotWaterFlowPort_Water_In_const_iterator = {"_p_SimNode_HotWaterFlowPort_Water_In_const_iterator", "SimNode_HotWaterFlowPort_Water_In_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_HotWaterFlowPort_Water_In_iterator = {"_p_SimNode_HotWaterFlowPort_Water_In_iterator", "SimNode_HotWaterFlowPort_Water_In_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_HotWaterFlowPort_Water_In_sequence = {"_p_SimNode_HotWaterFlowPort_Water_In_sequence", "SimNode_HotWaterFlowPort_Water_In_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_HotWaterFlowPort_Water_In_traits = {"_p_SimNode_HotWaterFlowPort_Water_In_traits", "SimNode_HotWaterFlowPort_Water_In_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_HotWaterFlowPort_Water_In_type = {"_p_SimNode_HotWaterFlowPort_Water_In_type", "SimNode_HotWaterFlowPort_Water_In_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_HotWaterFlowPort_Water_Out_const_iterator = {"_p_SimNode_HotWaterFlowPort_Water_Out_const_iterator", "SimNode_HotWaterFlowPort_Water_Out_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_HotWaterFlowPort_Water_Out_iterator = {"_p_SimNode_HotWaterFlowPort_Water_Out_iterator", "SimNode_HotWaterFlowPort_Water_Out_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_HotWaterFlowPort_Water_Out_sequence = {"_p_SimNode_HotWaterFlowPort_Water_Out_sequence", "SimNode_HotWaterFlowPort_Water_Out_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_HotWaterFlowPort_Water_Out_traits = {"_p_SimNode_HotWaterFlowPort_Water_Out_traits", "SimNode_HotWaterFlowPort_Water_Out_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimNode_HotWaterFlowPort_Water_Out_type = {"_p_SimNode_HotWaterFlowPort_Water_Out_type", "SimNode_HotWaterFlowPort_Water_Out_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimOrganization_Organization_Default_const_iterator = {"_p_SimOrganization_Organization_Default_const_iterator", "SimOrganization_Organization_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimOrganization_Organization_Default_iterator = {"_p_SimOrganization_Organization_Default_iterator", "SimOrganization_Organization_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimOrganization_Organization_Default_sequence = {"_p_SimOrganization_Organization_Default_sequence", "SimOrganization_Organization_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimOrganization_Organization_Default_traits = {"_p_SimOrganization_Organization_Default_traits", "SimOrganization_Organization_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimOrganization_Organization_Default_type = {"_p_SimOrganization_Organization_Default_type", "SimOrganization_Organization_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimOwnerHistory_Default_Default_const_iterator = {"_p_SimOwnerHistory_Default_Default_const_iterator", "SimOwnerHistory_Default_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimOwnerHistory_Default_Default_iterator = {"_p_SimOwnerHistory_Default_Default_iterator", "SimOwnerHistory_Default_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimOwnerHistory_Default_Default_sequence = {"_p_SimOwnerHistory_Default_Default_sequence", "SimOwnerHistory_Default_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimOwnerHistory_Default_Default_traits = {"_p_SimOwnerHistory_Default_Default_traits", "SimOwnerHistory_Default_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimOwnerHistory_Default_Default_type = {"_p_SimOwnerHistory_Default_Default_type", "SimOwnerHistory_Default_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_const_iterator = {"_p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_const_iterator", "SimParameterizedProfileDef_ParameterizedProfile_Rectangle_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_iterator = {"_p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_iterator", "SimParameterizedProfileDef_ParameterizedProfile_Rectangle_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence = {"_p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence", "SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_traits = {"_p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_traits", "SimParameterizedProfileDef_ParameterizedProfile_Rectangle_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_type = {"_p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_type", "SimParameterizedProfileDef_ParameterizedProfile_Rectangle_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPersonAndOrganization_PersonAndOrganization_Default_const_iterator = {"_p_SimPersonAndOrganization_PersonAndOrganization_Default_const_iterator", "SimPersonAndOrganization_PersonAndOrganization_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPersonAndOrganization_PersonAndOrganization_Default_iterator = {"_p_SimPersonAndOrganization_PersonAndOrganization_Default_iterator", "SimPersonAndOrganization_PersonAndOrganization_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPersonAndOrganization_PersonAndOrganization_Default_sequence = {"_p_SimPersonAndOrganization_PersonAndOrganization_Default_sequence", "SimPersonAndOrganization_PersonAndOrganization_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPersonAndOrganization_PersonAndOrganization_Default_traits = {"_p_SimPersonAndOrganization_PersonAndOrganization_Default_traits", "SimPersonAndOrganization_PersonAndOrganization_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPersonAndOrganization_PersonAndOrganization_Default_type = {"_p_SimPersonAndOrganization_PersonAndOrganization_Default_type", "SimPersonAndOrganization_PersonAndOrganization_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPerson_Person_Default_const_iterator = {"_p_SimPerson_Person_Default_const_iterator", "SimPerson_Person_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPerson_Person_Default_iterator = {"_p_SimPerson_Person_Default_iterator", "SimPerson_Person_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPerson_Person_Default_sequence = {"_p_SimPerson_Person_Default_sequence", "SimPerson_Person_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPerson_Person_Default_traits = {"_p_SimPerson_Person_Default_traits", "SimPerson_Person_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPerson_Person_Default_type = {"_p_SimPerson_Person_Default_type", "SimPerson_Person_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPlacement_Axis2Placement2D_Default_const_iterator = {"_p_SimPlacement_Axis2Placement2D_Default_const_iterator", "SimPlacement_Axis2Placement2D_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPlacement_Axis2Placement2D_Default_iterator = {"_p_SimPlacement_Axis2Placement2D_Default_iterator", "SimPlacement_Axis2Placement2D_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPlacement_Axis2Placement2D_Default_sequence = {"_p_SimPlacement_Axis2Placement2D_Default_sequence", "SimPlacement_Axis2Placement2D_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPlacement_Axis2Placement2D_Default_traits = {"_p_SimPlacement_Axis2Placement2D_Default_traits", "SimPlacement_Axis2Placement2D_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPlacement_Axis2Placement2D_Default_type = {"_p_SimPlacement_Axis2Placement2D_Default_type", "SimPlacement_Axis2Placement2D_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPlacement_Axis2Placement3D_Default_const_iterator = {"_p_SimPlacement_Axis2Placement3D_Default_const_iterator", "SimPlacement_Axis2Placement3D_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPlacement_Axis2Placement3D_Default_iterator = {"_p_SimPlacement_Axis2Placement3D_Default_iterator", "SimPlacement_Axis2Placement3D_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPlacement_Axis2Placement3D_Default_sequence = {"_p_SimPlacement_Axis2Placement3D_Default_sequence", "SimPlacement_Axis2Placement3D_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPlacement_Axis2Placement3D_Default_traits = {"_p_SimPlacement_Axis2Placement3D_Default_traits", "SimPlacement_Axis2Placement3D_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPlacement_Axis2Placement3D_Default_type = {"_p_SimPlacement_Axis2Placement3D_Default_type", "SimPlacement_Axis2Placement3D_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPresentationLayerAssignment_Default_Default_const_iterator = {"_p_SimPresentationLayerAssignment_Default_Default_const_iterator", "SimPresentationLayerAssignment_Default_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPresentationLayerAssignment_Default_Default_iterator = {"_p_SimPresentationLayerAssignment_Default_Default_iterator", "SimPresentationLayerAssignment_Default_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPresentationLayerAssignment_Default_Default_sequence = {"_p_SimPresentationLayerAssignment_Default_Default_sequence", "SimPresentationLayerAssignment_Default_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPresentationLayerAssignment_Default_Default_traits = {"_p_SimPresentationLayerAssignment_Default_Default_traits", "SimPresentationLayerAssignment_Default_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimPresentationLayerAssignment_Default_Default_type = {"_p_SimPresentationLayerAssignment_Default_Default_type", "SimPresentationLayerAssignment_Default_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimProject_Project_DesignAlternative_const_iterator = {"_p_SimProject_Project_DesignAlternative_const_iterator", "SimProject_Project_DesignAlternative_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimProject_Project_DesignAlternative_iterator = {"_p_SimProject_Project_DesignAlternative_iterator", "SimProject_Project_DesignAlternative_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimProject_Project_DesignAlternative_sequence = {"_p_SimProject_Project_DesignAlternative_sequence", "SimProject_Project_DesignAlternative_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimProject_Project_DesignAlternative_traits = {"_p_SimProject_Project_DesignAlternative_traits", "SimProject_Project_DesignAlternative_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimProject_Project_DesignAlternative_type = {"_p_SimProject_Project_DesignAlternative_type", "SimProject_Project_DesignAlternative_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimRepresentationMap_RepresentationMap_Default_const_iterator = {"_p_SimRepresentationMap_RepresentationMap_Default_const_iterator", "SimRepresentationMap_RepresentationMap_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimRepresentationMap_RepresentationMap_Default_iterator = {"_p_SimRepresentationMap_RepresentationMap_Default_iterator", "SimRepresentationMap_RepresentationMap_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimRepresentationMap_RepresentationMap_Default_sequence = {"_p_SimRepresentationMap_RepresentationMap_Default_sequence", "SimRepresentationMap_RepresentationMap_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimRepresentationMap_RepresentationMap_Default_traits = {"_p_SimRepresentationMap_RepresentationMap_Default_traits", "SimRepresentationMap_RepresentationMap_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimRepresentationMap_RepresentationMap_Default_type = {"_p_SimRepresentationMap_RepresentationMap_Default_type", "SimRepresentationMap_RepresentationMap_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSIUnitType_SiUnit_Default_const_iterator = {"_p_SimSIUnitType_SiUnit_Default_const_iterator", "SimSIUnitType_SiUnit_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSIUnitType_SiUnit_Default_iterator = {"_p_SimSIUnitType_SiUnit_Default_iterator", "SimSIUnitType_SiUnit_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSIUnitType_SiUnit_Default_sequence = {"_p_SimSIUnitType_SiUnit_Default_sequence", "SimSIUnitType_SiUnit_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSIUnitType_SiUnit_Default_traits = {"_p_SimSIUnitType_SiUnit_Default_traits", "SimSIUnitType_SiUnit_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSIUnitType_SiUnit_Default_type = {"_p_SimSIUnitType_SiUnit_Default_type", "SimSIUnitType_SiUnit_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSensor_TemperatureSensor_DryBulb_const_iterator = {"_p_SimSensor_TemperatureSensor_DryBulb_const_iterator", "SimSensor_TemperatureSensor_DryBulb_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSensor_TemperatureSensor_DryBulb_iterator = {"_p_SimSensor_TemperatureSensor_DryBulb_iterator", "SimSensor_TemperatureSensor_DryBulb_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSensor_TemperatureSensor_DryBulb_sequence = {"_p_SimSensor_TemperatureSensor_DryBulb_sequence", "SimSensor_TemperatureSensor_DryBulb_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSensor_TemperatureSensor_DryBulb_traits = {"_p_SimSensor_TemperatureSensor_DryBulb_traits", "SimSensor_TemperatureSensor_DryBulb_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSensor_TemperatureSensor_DryBulb_type = {"_p_SimSensor_TemperatureSensor_DryBulb_type", "SimSensor_TemperatureSensor_DryBulb_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimShapeRepresentation_ShapeRepresentation_Default_const_iterator = {"_p_SimShapeRepresentation_ShapeRepresentation_Default_const_iterator", "SimShapeRepresentation_ShapeRepresentation_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimShapeRepresentation_ShapeRepresentation_Default_iterator = {"_p_SimShapeRepresentation_ShapeRepresentation_Default_iterator", "SimShapeRepresentation_ShapeRepresentation_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimShapeRepresentation_ShapeRepresentation_Default_sequence = {"_p_SimShapeRepresentation_ShapeRepresentation_Default_sequence", "SimShapeRepresentation_ShapeRepresentation_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimShapeRepresentation_ShapeRepresentation_Default_traits = {"_p_SimShapeRepresentation_ShapeRepresentation_Default_traits", "SimShapeRepresentation_ShapeRepresentation_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimShapeRepresentation_ShapeRepresentation_Default_type = {"_p_SimShapeRepresentation_ShapeRepresentation_Default_type", "SimShapeRepresentation_ShapeRepresentation_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSimulationConfiguration_SimulationConfiguration_Default_const_iterator = {"_p_SimSimulationConfiguration_SimulationConfiguration_Default_const_iterator", "SimSimulationConfiguration_SimulationConfiguration_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSimulationConfiguration_SimulationConfiguration_Default_iterator = {"_p_SimSimulationConfiguration_SimulationConfiguration_Default_iterator", "SimSimulationConfiguration_SimulationConfiguration_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSimulationConfiguration_SimulationConfiguration_Default_sequence = {"_p_SimSimulationConfiguration_SimulationConfiguration_Default_sequence", "SimSimulationConfiguration_SimulationConfiguration_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSimulationConfiguration_SimulationConfiguration_Default_traits = {"_p_SimSimulationConfiguration_SimulationConfiguration_Default_traits", "SimSimulationConfiguration_SimulationConfiguration_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSimulationConfiguration_SimulationConfiguration_Default_type = {"_p_SimSimulationConfiguration_SimulationConfiguration_Default_type", "SimSimulationConfiguration_SimulationConfiguration_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_const_iterator = {"_p_SimSimulationParameters_HvacDesign_WaterLoopSizing_const_iterator", "SimSimulationParameters_HvacDesign_WaterLoopSizing_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_iterator = {"_p_SimSimulationParameters_HvacDesign_WaterLoopSizing_iterator", "SimSimulationParameters_HvacDesign_WaterLoopSizing_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence = {"_p_SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence", "SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_traits = {"_p_SimSimulationParameters_HvacDesign_WaterLoopSizing_traits", "SimSimulationParameters_HvacDesign_WaterLoopSizing_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_type = {"_p_SimSimulationParameters_HvacDesign_WaterLoopSizing_type", "SimSimulationParameters_HvacDesign_WaterLoopSizing_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSite_BuildingSite_Default_const_iterator = {"_p_SimSite_BuildingSite_Default_const_iterator", "SimSite_BuildingSite_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSite_BuildingSite_Default_iterator = {"_p_SimSite_BuildingSite_Default_iterator", "SimSite_BuildingSite_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSite_BuildingSite_Default_sequence = {"_p_SimSite_BuildingSite_Default_sequence", "SimSite_BuildingSite_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSite_BuildingSite_Default_traits = {"_p_SimSite_BuildingSite_Default_traits", "SimSite_BuildingSite_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSite_BuildingSite_Default_type = {"_p_SimSite_BuildingSite_Default_type", "SimSite_BuildingSite_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlabParams_Slab_Floor_const_iterator = {"_p_SimSlabParams_Slab_Floor_const_iterator", "SimSlabParams_Slab_Floor_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlabParams_Slab_Floor_iterator = {"_p_SimSlabParams_Slab_Floor_iterator", "SimSlabParams_Slab_Floor_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlabParams_Slab_Floor_sequence = {"_p_SimSlabParams_Slab_Floor_sequence", "SimSlabParams_Slab_Floor_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlabParams_Slab_Floor_traits = {"_p_SimSlabParams_Slab_Floor_traits", "SimSlabParams_Slab_Floor_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlabParams_Slab_Floor_type = {"_p_SimSlabParams_Slab_Floor_type", "SimSlabParams_Slab_Floor_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlab_Default_Default_const_iterator = {"_p_SimSlab_Default_Default_const_iterator", "SimSlab_Default_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlab_Default_Default_iterator = {"_p_SimSlab_Default_Default_iterator", "SimSlab_Default_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlab_Default_Default_sequence = {"_p_SimSlab_Default_Default_sequence", "SimSlab_Default_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlab_Default_Default_traits = {"_p_SimSlab_Default_Default_traits", "SimSlab_Default_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlab_Default_Default_type = {"_p_SimSlab_Default_Default_type", "SimSlab_Default_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlab_Floor_FloorOverEarth_const_iterator = {"_p_SimSlab_Floor_FloorOverEarth_const_iterator", "SimSlab_Floor_FloorOverEarth_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlab_Floor_FloorOverEarth_iterator = {"_p_SimSlab_Floor_FloorOverEarth_iterator", "SimSlab_Floor_FloorOverEarth_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlab_Floor_FloorOverEarth_sequence = {"_p_SimSlab_Floor_FloorOverEarth_sequence", "SimSlab_Floor_FloorOverEarth_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlab_Floor_FloorOverEarth_traits = {"_p_SimSlab_Floor_FloorOverEarth_traits", "SimSlab_Floor_FloorOverEarth_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlab_Floor_FloorOverEarth_type = {"_p_SimSlab_Floor_FloorOverEarth_type", "SimSlab_Floor_FloorOverEarth_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlab_Floor_InterzoneFloor_const_iterator = {"_p_SimSlab_Floor_InterzoneFloor_const_iterator", "SimSlab_Floor_InterzoneFloor_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlab_Floor_InterzoneFloor_iterator = {"_p_SimSlab_Floor_InterzoneFloor_iterator", "SimSlab_Floor_InterzoneFloor_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlab_Floor_InterzoneFloor_sequence = {"_p_SimSlab_Floor_InterzoneFloor_sequence", "SimSlab_Floor_InterzoneFloor_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlab_Floor_InterzoneFloor_traits = {"_p_SimSlab_Floor_InterzoneFloor_traits", "SimSlab_Floor_InterzoneFloor_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlab_Floor_InterzoneFloor_type = {"_p_SimSlab_Floor_InterzoneFloor_type", "SimSlab_Floor_InterzoneFloor_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlab_RoofSlab_RoofUnderAir_const_iterator = {"_p_SimSlab_RoofSlab_RoofUnderAir_const_iterator", "SimSlab_RoofSlab_RoofUnderAir_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlab_RoofSlab_RoofUnderAir_iterator = {"_p_SimSlab_RoofSlab_RoofUnderAir_iterator", "SimSlab_RoofSlab_RoofUnderAir_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlab_RoofSlab_RoofUnderAir_sequence = {"_p_SimSlab_RoofSlab_RoofUnderAir_sequence", "SimSlab_RoofSlab_RoofUnderAir_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlab_RoofSlab_RoofUnderAir_traits = {"_p_SimSlab_RoofSlab_RoofUnderAir_traits", "SimSlab_RoofSlab_RoofUnderAir_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSlab_RoofSlab_RoofUnderAir_type = {"_p_SimSlab_RoofSlab_RoofUnderAir_type", "SimSlab_RoofSlab_RoofUnderAir_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSoftwareApplication_Default_Default_const_iterator = {"_p_SimSoftwareApplication_Default_Default_const_iterator", "SimSoftwareApplication_Default_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSoftwareApplication_Default_Default_iterator = {"_p_SimSoftwareApplication_Default_Default_iterator", "SimSoftwareApplication_Default_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSoftwareApplication_Default_Default_sequence = {"_p_SimSoftwareApplication_Default_Default_sequence", "SimSoftwareApplication_Default_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSoftwareApplication_Default_Default_traits = {"_p_SimSoftwareApplication_Default_Default_traits", "SimSoftwareApplication_Default_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSoftwareApplication_Default_Default_type = {"_p_SimSoftwareApplication_Default_Default_type", "SimSoftwareApplication_Default_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSolarShade_Fin_Default_const_iterator = {"_p_SimSolarShade_Fin_Default_const_iterator", "SimSolarShade_Fin_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSolarShade_Fin_Default_iterator = {"_p_SimSolarShade_Fin_Default_iterator", "SimSolarShade_Fin_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSolarShade_Fin_Default_sequence = {"_p_SimSolarShade_Fin_Default_sequence", "SimSolarShade_Fin_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSolarShade_Fin_Default_traits = {"_p_SimSolarShade_Fin_Default_traits", "SimSolarShade_Fin_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSolarShade_Fin_Default_type = {"_p_SimSolarShade_Fin_Default_type", "SimSolarShade_Fin_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSolarShade_Overhang_Default_const_iterator = {"_p_SimSolarShade_Overhang_Default_const_iterator", "SimSolarShade_Overhang_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSolarShade_Overhang_Default_iterator = {"_p_SimSolarShade_Overhang_Default_iterator", "SimSolarShade_Overhang_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSolarShade_Overhang_Default_sequence = {"_p_SimSolarShade_Overhang_Default_sequence", "SimSolarShade_Overhang_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSolarShade_Overhang_Default_traits = {"_p_SimSolarShade_Overhang_Default_traits", "SimSolarShade_Overhang_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSolarShade_Overhang_Default_type = {"_p_SimSolarShade_Overhang_Default_type", "SimSolarShade_Overhang_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpaceBoundary_SecondLevel_SubTypeA_const_iterator = {"_p_SimSpaceBoundary_SecondLevel_SubTypeA_const_iterator", "SimSpaceBoundary_SecondLevel_SubTypeA_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpaceBoundary_SecondLevel_SubTypeA_iterator = {"_p_SimSpaceBoundary_SecondLevel_SubTypeA_iterator", "SimSpaceBoundary_SecondLevel_SubTypeA_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpaceBoundary_SecondLevel_SubTypeA_sequence = {"_p_SimSpaceBoundary_SecondLevel_SubTypeA_sequence", "SimSpaceBoundary_SecondLevel_SubTypeA_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpaceBoundary_SecondLevel_SubTypeA_traits = {"_p_SimSpaceBoundary_SecondLevel_SubTypeA_traits", "SimSpaceBoundary_SecondLevel_SubTypeA_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpaceBoundary_SecondLevel_SubTypeA_type = {"_p_SimSpaceBoundary_SecondLevel_SubTypeA_type", "SimSpaceBoundary_SecondLevel_SubTypeA_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpaceParams_Space_Default_const_iterator = {"_p_SimSpaceParams_Space_Default_const_iterator", "SimSpaceParams_Space_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpaceParams_Space_Default_iterator = {"_p_SimSpaceParams_Space_Default_iterator", "SimSpaceParams_Space_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpaceParams_Space_Default_sequence = {"_p_SimSpaceParams_Space_Default_sequence", "SimSpaceParams_Space_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpaceParams_Space_Default_traits = {"_p_SimSpaceParams_Space_Default_traits", "SimSpaceParams_Space_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpaceParams_Space_Default_type = {"_p_SimSpaceParams_Space_Default_type", "SimSpaceParams_Space_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpace_Occupied_Default_const_iterator = {"_p_SimSpace_Occupied_Default_const_iterator", "SimSpace_Occupied_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpace_Occupied_Default_iterator = {"_p_SimSpace_Occupied_Default_iterator", "SimSpace_Occupied_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpace_Occupied_Default_sequence = {"_p_SimSpace_Occupied_Default_sequence", "SimSpace_Occupied_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpace_Occupied_Default_traits = {"_p_SimSpace_Occupied_Default_traits", "SimSpace_Occupied_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpace_Occupied_Default_type = {"_p_SimSpace_Occupied_Default_type", "SimSpace_Occupied_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpatialZone_ThermalZone_Default_const_iterator = {"_p_SimSpatialZone_ThermalZone_Default_const_iterator", "SimSpatialZone_ThermalZone_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpatialZone_ThermalZone_Default_iterator = {"_p_SimSpatialZone_ThermalZone_Default_iterator", "SimSpatialZone_ThermalZone_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpatialZone_ThermalZone_Default_sequence = {"_p_SimSpatialZone_ThermalZone_Default_sequence", "SimSpatialZone_ThermalZone_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpatialZone_ThermalZone_Default_traits = {"_p_SimSpatialZone_ThermalZone_Default_traits", "SimSpatialZone_ThermalZone_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpatialZone_ThermalZone_Default_type = {"_p_SimSpatialZone_ThermalZone_Default_type", "SimSpatialZone_ThermalZone_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_const_iterator = {"_p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_const_iterator", "SimSpatialZone_ThermalZone_TemplateForZoneGroup_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_iterator = {"_p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_iterator", "SimSpatialZone_ThermalZone_TemplateForZoneGroup_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_sequence = {"_p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_sequence", "SimSpatialZone_ThermalZone_TemplateForZoneGroup_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_traits = {"_p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_traits", "SimSpatialZone_ThermalZone_TemplateForZoneGroup_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_type = {"_p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_type", "SimSpatialZone_ThermalZone_TemplateForZoneGroup_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_HvacHotWater_Control_const_iterator = {"_p_SimSystem_HvacHotWater_Control_const_iterator", "SimSystem_HvacHotWater_Control_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_HvacHotWater_Control_iterator = {"_p_SimSystem_HvacHotWater_Control_iterator", "SimSystem_HvacHotWater_Control_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_HvacHotWater_Control_sequence = {"_p_SimSystem_HvacHotWater_Control_sequence", "SimSystem_HvacHotWater_Control_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_HvacHotWater_Control_traits = {"_p_SimSystem_HvacHotWater_Control_traits", "SimSystem_HvacHotWater_Control_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_HvacHotWater_Control_type = {"_p_SimSystem_HvacHotWater_Control_type", "SimSystem_HvacHotWater_Control_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_HvacHotWater_Demand_const_iterator = {"_p_SimSystem_HvacHotWater_Demand_const_iterator", "SimSystem_HvacHotWater_Demand_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_HvacHotWater_Demand_iterator = {"_p_SimSystem_HvacHotWater_Demand_iterator", "SimSystem_HvacHotWater_Demand_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_HvacHotWater_Demand_sequence = {"_p_SimSystem_HvacHotWater_Demand_sequence", "SimSystem_HvacHotWater_Demand_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_HvacHotWater_Demand_traits = {"_p_SimSystem_HvacHotWater_Demand_traits", "SimSystem_HvacHotWater_Demand_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_HvacHotWater_Demand_type = {"_p_SimSystem_HvacHotWater_Demand_type", "SimSystem_HvacHotWater_Demand_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_HvacHotWater_FullSystem_const_iterator = {"_p_SimSystem_HvacHotWater_FullSystem_const_iterator", "SimSystem_HvacHotWater_FullSystem_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_HvacHotWater_FullSystem_iterator = {"_p_SimSystem_HvacHotWater_FullSystem_iterator", "SimSystem_HvacHotWater_FullSystem_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_HvacHotWater_FullSystem_sequence = {"_p_SimSystem_HvacHotWater_FullSystem_sequence", "SimSystem_HvacHotWater_FullSystem_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_HvacHotWater_FullSystem_traits = {"_p_SimSystem_HvacHotWater_FullSystem_traits", "SimSystem_HvacHotWater_FullSystem_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_HvacHotWater_FullSystem_type = {"_p_SimSystem_HvacHotWater_FullSystem_type", "SimSystem_HvacHotWater_FullSystem_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_HvacHotWater_Supply_const_iterator = {"_p_SimSystem_HvacHotWater_Supply_const_iterator", "SimSystem_HvacHotWater_Supply_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_HvacHotWater_Supply_iterator = {"_p_SimSystem_HvacHotWater_Supply_iterator", "SimSystem_HvacHotWater_Supply_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_HvacHotWater_Supply_sequence = {"_p_SimSystem_HvacHotWater_Supply_sequence", "SimSystem_HvacHotWater_Supply_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_HvacHotWater_Supply_traits = {"_p_SimSystem_HvacHotWater_Supply_traits", "SimSystem_HvacHotWater_Supply_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_HvacHotWater_Supply_type = {"_p_SimSystem_HvacHotWater_Supply_type", "SimSystem_HvacHotWater_Supply_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_ZoneHvacGroup_Control_const_iterator = {"_p_SimSystem_ZoneHvacGroup_Control_const_iterator", "SimSystem_ZoneHvacGroup_Control_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_ZoneHvacGroup_Control_iterator = {"_p_SimSystem_ZoneHvacGroup_Control_iterator", "SimSystem_ZoneHvacGroup_Control_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_ZoneHvacGroup_Control_sequence = {"_p_SimSystem_ZoneHvacGroup_Control_sequence", "SimSystem_ZoneHvacGroup_Control_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_ZoneHvacGroup_Control_traits = {"_p_SimSystem_ZoneHvacGroup_Control_traits", "SimSystem_ZoneHvacGroup_Control_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_ZoneHvacGroup_Control_type = {"_p_SimSystem_ZoneHvacGroup_Control_type", "SimSystem_ZoneHvacGroup_Control_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_ZoneHvacGroup_Demand_const_iterator = {"_p_SimSystem_ZoneHvacGroup_Demand_const_iterator", "SimSystem_ZoneHvacGroup_Demand_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_ZoneHvacGroup_Demand_iterator = {"_p_SimSystem_ZoneHvacGroup_Demand_iterator", "SimSystem_ZoneHvacGroup_Demand_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_ZoneHvacGroup_Demand_sequence = {"_p_SimSystem_ZoneHvacGroup_Demand_sequence", "SimSystem_ZoneHvacGroup_Demand_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_ZoneHvacGroup_Demand_traits = {"_p_SimSystem_ZoneHvacGroup_Demand_traits", "SimSystem_ZoneHvacGroup_Demand_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_ZoneHvacGroup_Demand_type = {"_p_SimSystem_ZoneHvacGroup_Demand_type", "SimSystem_ZoneHvacGroup_Demand_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_ZoneHvacGroup_FullSystem_const_iterator = {"_p_SimSystem_ZoneHvacGroup_FullSystem_const_iterator", "SimSystem_ZoneHvacGroup_FullSystem_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_ZoneHvacGroup_FullSystem_iterator = {"_p_SimSystem_ZoneHvacGroup_FullSystem_iterator", "SimSystem_ZoneHvacGroup_FullSystem_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_ZoneHvacGroup_FullSystem_sequence = {"_p_SimSystem_ZoneHvacGroup_FullSystem_sequence", "SimSystem_ZoneHvacGroup_FullSystem_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_ZoneHvacGroup_FullSystem_traits = {"_p_SimSystem_ZoneHvacGroup_FullSystem_traits", "SimSystem_ZoneHvacGroup_FullSystem_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_ZoneHvacGroup_FullSystem_type = {"_p_SimSystem_ZoneHvacGroup_FullSystem_type", "SimSystem_ZoneHvacGroup_FullSystem_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_ZoneHvacGroup_Supply_const_iterator = {"_p_SimSystem_ZoneHvacGroup_Supply_const_iterator", "SimSystem_ZoneHvacGroup_Supply_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_ZoneHvacGroup_Supply_iterator = {"_p_SimSystem_ZoneHvacGroup_Supply_iterator", "SimSystem_ZoneHvacGroup_Supply_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_ZoneHvacGroup_Supply_sequence = {"_p_SimSystem_ZoneHvacGroup_Supply_sequence", "SimSystem_ZoneHvacGroup_Supply_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_ZoneHvacGroup_Supply_traits = {"_p_SimSystem_ZoneHvacGroup_Supply_traits", "SimSystem_ZoneHvacGroup_Supply_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimSystem_ZoneHvacGroup_Supply_type = {"_p_SimSystem_ZoneHvacGroup_Supply_type", "SimSystem_ZoneHvacGroup_Supply_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTemplateConstructions_Constructions_Default_const_iterator = {"_p_SimTemplateConstructions_Constructions_Default_const_iterator", "SimTemplateConstructions_Constructions_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTemplateConstructions_Constructions_Default_iterator = {"_p_SimTemplateConstructions_Constructions_Default_iterator", "SimTemplateConstructions_Constructions_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTemplateConstructions_Constructions_Default_sequence = {"_p_SimTemplateConstructions_Constructions_Default_sequence", "SimTemplateConstructions_Constructions_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTemplateConstructions_Constructions_Default_traits = {"_p_SimTemplateConstructions_Constructions_Default_traits", "SimTemplateConstructions_Constructions_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTemplateConstructions_Constructions_Default_type = {"_p_SimTemplateConstructions_Constructions_Default_type", "SimTemplateConstructions_Constructions_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTemplateLocation_Location_Default_const_iterator = {"_p_SimTemplateLocation_Location_Default_const_iterator", "SimTemplateLocation_Location_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTemplateLocation_Location_Default_iterator = {"_p_SimTemplateLocation_Location_Default_iterator", "SimTemplateLocation_Location_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTemplateLocation_Location_Default_sequence = {"_p_SimTemplateLocation_Location_Default_sequence", "SimTemplateLocation_Location_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTemplateLocation_Location_Default_traits = {"_p_SimTemplateLocation_Location_Default_traits", "SimTemplateLocation_Location_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTemplateLocation_Location_Default_type = {"_p_SimTemplateLocation_Location_Default_type", "SimTemplateLocation_Location_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTemplateZoneConditions_ZoneConditions_Default_const_iterator = {"_p_SimTemplateZoneConditions_ZoneConditions_Default_const_iterator", "SimTemplateZoneConditions_ZoneConditions_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTemplateZoneConditions_ZoneConditions_Default_iterator = {"_p_SimTemplateZoneConditions_ZoneConditions_Default_iterator", "SimTemplateZoneConditions_ZoneConditions_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTemplateZoneConditions_ZoneConditions_Default_sequence = {"_p_SimTemplateZoneConditions_ZoneConditions_Default_sequence", "SimTemplateZoneConditions_ZoneConditions_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTemplateZoneConditions_ZoneConditions_Default_traits = {"_p_SimTemplateZoneConditions_ZoneConditions_Default_traits", "SimTemplateZoneConditions_ZoneConditions_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTemplateZoneConditions_ZoneConditions_Default_type = {"_p_SimTemplateZoneConditions_ZoneConditions_Default_type", "SimTemplateZoneConditions_ZoneConditions_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTemplateZoneLoads_ZoneLoads_Default_const_iterator = {"_p_SimTemplateZoneLoads_ZoneLoads_Default_const_iterator", "SimTemplateZoneLoads_ZoneLoads_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTemplateZoneLoads_ZoneLoads_Default_iterator = {"_p_SimTemplateZoneLoads_ZoneLoads_Default_iterator", "SimTemplateZoneLoads_ZoneLoads_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTemplateZoneLoads_ZoneLoads_Default_sequence = {"_p_SimTemplateZoneLoads_ZoneLoads_Default_sequence", "SimTemplateZoneLoads_ZoneLoads_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTemplateZoneLoads_ZoneLoads_Default_traits = {"_p_SimTemplateZoneLoads_ZoneLoads_Default_traits", "SimTemplateZoneLoads_ZoneLoads_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTemplateZoneLoads_ZoneLoads_Default_type = {"_p_SimTemplateZoneLoads_ZoneLoads_Default_type", "SimTemplateZoneLoads_ZoneLoads_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimThermalZoneType_ThermalZone_Default_const_iterator = {"_p_SimThermalZoneType_ThermalZone_Default_const_iterator", "SimThermalZoneType_ThermalZone_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimThermalZoneType_ThermalZone_Default_iterator = {"_p_SimThermalZoneType_ThermalZone_Default_iterator", "SimThermalZoneType_ThermalZone_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimThermalZoneType_ThermalZone_Default_sequence = {"_p_SimThermalZoneType_ThermalZone_Default_sequence", "SimThermalZoneType_ThermalZone_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimThermalZoneType_ThermalZone_Default_traits = {"_p_SimThermalZoneType_ThermalZone_Default_traits", "SimThermalZoneType_ThermalZone_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimThermalZoneType_ThermalZone_Default_type = {"_p_SimThermalZoneType_ThermalZone_Default_type", "SimThermalZoneType_ThermalZone_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Calendar_Configuration_const_iterator = {"_p_SimTimeSeriesSchedule_Calendar_Configuration_const_iterator", "SimTimeSeriesSchedule_Calendar_Configuration_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Calendar_Configuration_iterator = {"_p_SimTimeSeriesSchedule_Calendar_Configuration_iterator", "SimTimeSeriesSchedule_Calendar_Configuration_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Calendar_Configuration_sequence = {"_p_SimTimeSeriesSchedule_Calendar_Configuration_sequence", "SimTimeSeriesSchedule_Calendar_Configuration_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Calendar_Configuration_traits = {"_p_SimTimeSeriesSchedule_Calendar_Configuration_traits", "SimTimeSeriesSchedule_Calendar_Configuration_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Calendar_Configuration_type = {"_p_SimTimeSeriesSchedule_Calendar_Configuration_type", "SimTimeSeriesSchedule_Calendar_Configuration_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Day_Interval_const_iterator = {"_p_SimTimeSeriesSchedule_Day_Interval_const_iterator", "SimTimeSeriesSchedule_Day_Interval_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Day_Interval_iterator = {"_p_SimTimeSeriesSchedule_Day_Interval_iterator", "SimTimeSeriesSchedule_Day_Interval_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Day_Interval_sequence = {"_p_SimTimeSeriesSchedule_Day_Interval_sequence", "SimTimeSeriesSchedule_Day_Interval_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Day_Interval_traits = {"_p_SimTimeSeriesSchedule_Day_Interval_traits", "SimTimeSeriesSchedule_Day_Interval_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Day_Interval_type = {"_p_SimTimeSeriesSchedule_Day_Interval_type", "SimTimeSeriesSchedule_Day_Interval_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Limits_Default_const_iterator = {"_p_SimTimeSeriesSchedule_Limits_Default_const_iterator", "SimTimeSeriesSchedule_Limits_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Limits_Default_iterator = {"_p_SimTimeSeriesSchedule_Limits_Default_iterator", "SimTimeSeriesSchedule_Limits_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Limits_Default_sequence = {"_p_SimTimeSeriesSchedule_Limits_Default_sequence", "SimTimeSeriesSchedule_Limits_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Limits_Default_traits = {"_p_SimTimeSeriesSchedule_Limits_Default_traits", "SimTimeSeriesSchedule_Limits_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Limits_Default_type = {"_p_SimTimeSeriesSchedule_Limits_Default_type", "SimTimeSeriesSchedule_Limits_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Week_Daily_const_iterator = {"_p_SimTimeSeriesSchedule_Week_Daily_const_iterator", "SimTimeSeriesSchedule_Week_Daily_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Week_Daily_iterator = {"_p_SimTimeSeriesSchedule_Week_Daily_iterator", "SimTimeSeriesSchedule_Week_Daily_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Week_Daily_sequence = {"_p_SimTimeSeriesSchedule_Week_Daily_sequence", "SimTimeSeriesSchedule_Week_Daily_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Week_Daily_traits = {"_p_SimTimeSeriesSchedule_Week_Daily_traits", "SimTimeSeriesSchedule_Week_Daily_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Week_Daily_type = {"_p_SimTimeSeriesSchedule_Week_Daily_type", "SimTimeSeriesSchedule_Week_Daily_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Year_Default_const_iterator = {"_p_SimTimeSeriesSchedule_Year_Default_const_iterator", "SimTimeSeriesSchedule_Year_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Year_Default_iterator = {"_p_SimTimeSeriesSchedule_Year_Default_iterator", "SimTimeSeriesSchedule_Year_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Year_Default_sequence = {"_p_SimTimeSeriesSchedule_Year_Default_sequence", "SimTimeSeriesSchedule_Year_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Year_Default_traits = {"_p_SimTimeSeriesSchedule_Year_Default_traits", "SimTimeSeriesSchedule_Year_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimTimeSeriesSchedule_Year_Default_type = {"_p_SimTimeSeriesSchedule_Year_Default_type", "SimTimeSeriesSchedule_Year_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimUniqueID_optional = {"_p_SimUniqueID_optional", "SimUniqueID_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimUniqueID_traits = {"_p_SimUniqueID_traits", "SimUniqueID_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimUniqueID_type = {"_p_SimUniqueID_type", "SimUniqueID_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWallParams_Wall_Default_const_iterator = {"_p_SimWallParams_Wall_Default_const_iterator", "SimWallParams_Wall_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWallParams_Wall_Default_iterator = {"_p_SimWallParams_Wall_Default_iterator", "SimWallParams_Wall_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWallParams_Wall_Default_sequence = {"_p_SimWallParams_Wall_Default_sequence", "SimWallParams_Wall_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWallParams_Wall_Default_traits = {"_p_SimWallParams_Wall_Default_traits", "SimWallParams_Wall_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWallParams_Wall_Default_type = {"_p_SimWallParams_Wall_Default_type", "SimWallParams_Wall_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWallType_Wall_Default_const_iterator = {"_p_SimWallType_Wall_Default_const_iterator", "SimWallType_Wall_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWallType_Wall_Default_iterator = {"_p_SimWallType_Wall_Default_iterator", "SimWallType_Wall_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWallType_Wall_Default_sequence = {"_p_SimWallType_Wall_Default_sequence", "SimWallType_Wall_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWallType_Wall_Default_traits = {"_p_SimWallType_Wall_Default_traits", "SimWallType_Wall_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWallType_Wall_Default_type = {"_p_SimWallType_Wall_Default_type", "SimWallType_Wall_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWall_Wall_Default_const_iterator = {"_p_SimWall_Wall_Default_const_iterator", "SimWall_Wall_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWall_Wall_Default_iterator = {"_p_SimWall_Wall_Default_iterator", "SimWall_Wall_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWall_Wall_Default_sequence = {"_p_SimWall_Wall_Default_sequence", "SimWall_Wall_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWall_Wall_Default_traits = {"_p_SimWall_Wall_Default_traits", "SimWall_Wall_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWall_Wall_Default_type = {"_p_SimWall_Wall_Default_type", "SimWall_Wall_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWall_Wall_ExteriorAboveGrade_const_iterator = {"_p_SimWall_Wall_ExteriorAboveGrade_const_iterator", "SimWall_Wall_ExteriorAboveGrade_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWall_Wall_ExteriorAboveGrade_iterator = {"_p_SimWall_Wall_ExteriorAboveGrade_iterator", "SimWall_Wall_ExteriorAboveGrade_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWall_Wall_ExteriorAboveGrade_sequence = {"_p_SimWall_Wall_ExteriorAboveGrade_sequence", "SimWall_Wall_ExteriorAboveGrade_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWall_Wall_ExteriorAboveGrade_traits = {"_p_SimWall_Wall_ExteriorAboveGrade_traits", "SimWall_Wall_ExteriorAboveGrade_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWall_Wall_ExteriorAboveGrade_type = {"_p_SimWall_Wall_ExteriorAboveGrade_type", "SimWall_Wall_ExteriorAboveGrade_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWall_Wall_Interior_const_iterator = {"_p_SimWall_Wall_Interior_const_iterator", "SimWall_Wall_Interior_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWall_Wall_Interior_iterator = {"_p_SimWall_Wall_Interior_iterator", "SimWall_Wall_Interior_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWall_Wall_Interior_sequence = {"_p_SimWall_Wall_Interior_sequence", "SimWall_Wall_Interior_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWall_Wall_Interior_traits = {"_p_SimWall_Wall_Interior_traits", "SimWall_Wall_Interior_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWall_Wall_Interior_type = {"_p_SimWall_Wall_Interior_type", "SimWall_Wall_Interior_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowArrayParams_WindowArray_Default_const_iterator = {"_p_SimWindowArrayParams_WindowArray_Default_const_iterator", "SimWindowArrayParams_WindowArray_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowArrayParams_WindowArray_Default_iterator = {"_p_SimWindowArrayParams_WindowArray_Default_iterator", "SimWindowArrayParams_WindowArray_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowArrayParams_WindowArray_Default_sequence = {"_p_SimWindowArrayParams_WindowArray_Default_sequence", "SimWindowArrayParams_WindowArray_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowArrayParams_WindowArray_Default_traits = {"_p_SimWindowArrayParams_WindowArray_Default_traits", "SimWindowArrayParams_WindowArray_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowArrayParams_WindowArray_Default_type = {"_p_SimWindowArrayParams_WindowArray_Default_type", "SimWindowArrayParams_WindowArray_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowLiningProps_WindowLiningProps_Default_const_iterator = {"_p_SimWindowLiningProps_WindowLiningProps_Default_const_iterator", "SimWindowLiningProps_WindowLiningProps_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowLiningProps_WindowLiningProps_Default_iterator = {"_p_SimWindowLiningProps_WindowLiningProps_Default_iterator", "SimWindowLiningProps_WindowLiningProps_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowLiningProps_WindowLiningProps_Default_sequence = {"_p_SimWindowLiningProps_WindowLiningProps_Default_sequence", "SimWindowLiningProps_WindowLiningProps_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowLiningProps_WindowLiningProps_Default_traits = {"_p_SimWindowLiningProps_WindowLiningProps_Default_traits", "SimWindowLiningProps_WindowLiningProps_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowLiningProps_WindowLiningProps_Default_type = {"_p_SimWindowLiningProps_WindowLiningProps_Default_type", "SimWindowLiningProps_WindowLiningProps_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowParams_Window_Default_const_iterator = {"_p_SimWindowParams_Window_Default_const_iterator", "SimWindowParams_Window_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowParams_Window_Default_iterator = {"_p_SimWindowParams_Window_Default_iterator", "SimWindowParams_Window_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowParams_Window_Default_sequence = {"_p_SimWindowParams_Window_Default_sequence", "SimWindowParams_Window_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowParams_Window_Default_traits = {"_p_SimWindowParams_Window_Default_traits", "SimWindowParams_Window_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowParams_Window_Default_type = {"_p_SimWindowParams_Window_Default_type", "SimWindowParams_Window_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowType_Window_Default_const_iterator = {"_p_SimWindowType_Window_Default_const_iterator", "SimWindowType_Window_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowType_Window_Default_iterator = {"_p_SimWindowType_Window_Default_iterator", "SimWindowType_Window_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowType_Window_Default_sequence = {"_p_SimWindowType_Window_Default_sequence", "SimWindowType_Window_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowType_Window_Default_traits = {"_p_SimWindowType_Window_Default_traits", "SimWindowType_Window_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowType_Window_Default_type = {"_p_SimWindowType_Window_Default_type", "SimWindowType_Window_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowType_Window_Exterior_const_iterator = {"_p_SimWindowType_Window_Exterior_const_iterator", "SimWindowType_Window_Exterior_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowType_Window_Exterior_iterator = {"_p_SimWindowType_Window_Exterior_iterator", "SimWindowType_Window_Exterior_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowType_Window_Exterior_sequence = {"_p_SimWindowType_Window_Exterior_sequence", "SimWindowType_Window_Exterior_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowType_Window_Exterior_traits = {"_p_SimWindowType_Window_Exterior_traits", "SimWindowType_Window_Exterior_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowType_Window_Exterior_type = {"_p_SimWindowType_Window_Exterior_type", "SimWindowType_Window_Exterior_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowType_Window_Interior_const_iterator = {"_p_SimWindowType_Window_Interior_const_iterator", "SimWindowType_Window_Interior_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowType_Window_Interior_iterator = {"_p_SimWindowType_Window_Interior_iterator", "SimWindowType_Window_Interior_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowType_Window_Interior_sequence = {"_p_SimWindowType_Window_Interior_sequence", "SimWindowType_Window_Interior_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowType_Window_Interior_traits = {"_p_SimWindowType_Window_Interior_traits", "SimWindowType_Window_Interior_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindowType_Window_Interior_type = {"_p_SimWindowType_Window_Interior_type", "SimWindowType_Window_Interior_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindow_Window_Default_const_iterator = {"_p_SimWindow_Window_Default_const_iterator", "SimWindow_Window_Default_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindow_Window_Default_iterator = {"_p_SimWindow_Window_Default_iterator", "SimWindow_Window_Default_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindow_Window_Default_sequence = {"_p_SimWindow_Window_Default_sequence", "SimWindow_Window_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindow_Window_Default_traits = {"_p_SimWindow_Window_Default_traits", "SimWindow_Window_Default_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindow_Window_Default_type = {"_p_SimWindow_Window_Default_type", "SimWindow_Window_Default_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindow_Window_ExteriorDetailed_const_iterator = {"_p_SimWindow_Window_ExteriorDetailed_const_iterator", "SimWindow_Window_ExteriorDetailed_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindow_Window_ExteriorDetailed_iterator = {"_p_SimWindow_Window_ExteriorDetailed_iterator", "SimWindow_Window_ExteriorDetailed_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindow_Window_ExteriorDetailed_sequence = {"_p_SimWindow_Window_ExteriorDetailed_sequence", "SimWindow_Window_ExteriorDetailed_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindow_Window_ExteriorDetailed_traits = {"_p_SimWindow_Window_ExteriorDetailed_traits", "SimWindow_Window_ExteriorDetailed_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindow_Window_ExteriorDetailed_type = {"_p_SimWindow_Window_ExteriorDetailed_type", "SimWindow_Window_ExteriorDetailed_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindow_Window_Exterior_const_iterator = {"_p_SimWindow_Window_Exterior_const_iterator", "SimWindow_Window_Exterior_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindow_Window_Exterior_iterator = {"_p_SimWindow_Window_Exterior_iterator", "SimWindow_Window_Exterior_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindow_Window_Exterior_sequence = {"_p_SimWindow_Window_Exterior_sequence", "SimWindow_Window_Exterior_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindow_Window_Exterior_traits = {"_p_SimWindow_Window_Exterior_traits", "SimWindow_Window_Exterior_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SimWindow_Window_Exterior_type = {"_p_SimWindow_Window_Exterior_type", "SimWindow_Window_Exterior_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceLibraryEntryID_optional = {"_p_SourceLibraryEntryID_optional", "SourceLibraryEntryID_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceLibraryEntryID_traits = {"_p_SourceLibraryEntryID_traits", "SourceLibraryEntryID_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceLibraryEntryID_type = {"_p_SourceLibraryEntryID_type", "SourceLibraryEntryID_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceLibraryEntryRef_optional = {"_p_SourceLibraryEntryRef_optional", "SourceLibraryEntryRef_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceLibraryEntryRef_traits = {"_p_SourceLibraryEntryRef_traits", "SourceLibraryEntryRef_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceLibraryEntryRef_type = {"_p_SourceLibraryEntryRef_type", "SourceLibraryEntryRef_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceModelObjectType_optional = {"_p_SourceModelObjectType_optional", "SourceModelObjectType_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceModelObjectType_traits = {"_p_SourceModelObjectType_traits", "SourceModelObjectType_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceModelObjectType_type = {"_p_SourceModelObjectType_type", "SourceModelObjectType_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceModelSchema_optional = {"_p_SourceModelSchema_optional", "SourceModelSchema_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceModelSchema_traits = {"_p_SourceModelSchema_traits", "SourceModelSchema_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SourceModelSchema_type = {"_p_SourceModelSchema_type", "SourceModelSchema_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Tag_optional = {"_p_Tag_optional", "Tag_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Tag_traits = {"_p_Tag_traits", "Tag_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Tag_type = {"_p_Tag_type", "Tag_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TemplatesForMembers_optional = {"_p_TemplatesForMembers_optional", "TemplatesForMembers_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TemplatesForMembers_traits = {"_p_TemplatesForMembers_traits", "TemplatesForMembers_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TemplatesForMembers_type = {"_p_TemplatesForMembers_type", "TemplatesForMembers_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TypeDefCreationParams_optional = {"_p_TypeDefCreationParams_optional", "TypeDefCreationParams_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TypeDefCreationParams_traits = {"_p_TypeDefCreationParams_traits", "TypeDefCreationParams_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TypeDefCreationParams_type = {"_p_TypeDefCreationParams_type", "TypeDefCreationParams_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TypeDefinition_optional = {"_p_TypeDefinition_optional", "TypeDefinition_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TypeDefinition_traits = {"_p_TypeDefinition_traits", "TypeDefinition_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TypeDefinition_type = {"_p_TypeDefinition_type", "TypeDefinition_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UnitType_String_optional = {"_p_UnitType_String_optional", "UnitType_String_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UnitType_String_traits = {"_p_UnitType_String_traits", "UnitType_String_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UnitType_String_type = {"_p_UnitType_String_type", "UnitType_String_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionX_optional = {"_p_XDirectionX_optional", "XDirectionX_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionX_traits = {"_p_XDirectionX_traits", "XDirectionX_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionX_type = {"_p_XDirectionX_type", "XDirectionX_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionY_optional = {"_p_XDirectionY_optional", "XDirectionY_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionY_traits = {"_p_XDirectionY_traits", "XDirectionY_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionY_type = {"_p_XDirectionY_type", "XDirectionY_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionZ_optional = {"_p_XDirectionZ_optional", "XDirectionZ_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionZ_traits = {"_p_XDirectionZ_traits", "XDirectionZ_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XDirectionZ_type = {"_p_XDirectionZ_type", "XDirectionZ_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dHeight_optional = {"_p__3dHeight_optional", "_3dHeight_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dHeight_traits = {"_p__3dHeight_traits", "_3dHeight_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dHeight_type = {"_p__3dHeight_type", "_3dHeight_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dLength_optional = {"_p__3dLength_optional", "_3dLength_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dLength_traits = {"_p__3dLength_traits", "_3dLength_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dLength_type = {"_p__3dLength_type", "_3dLength_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dWidth_optional = {"_p__3dWidth_optional", "_3dWidth_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dWidth_traits = {"_p__3dWidth_traits", "_3dWidth_traits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__3dWidth_type = {"_p__3dWidth_type", "_3dWidth_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_allocator_type = {"_p_allocator_type", "allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_base_const_iterator = {"_p_base_const_iterator", "base_const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_base_iterator = {"_p_base_iterator", "base_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_base_sequence = {"_p_base_sequence", "base_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_base_type = {"_p_base_type", "base_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bool = {"_p_bool", "bool *|xml_schema::boolean *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bool_convertible = {"_p_bool_convertible", "bool_convertible *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_const_iterator = {"_p_const_iterator", "const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_const_reverse_iterator = {"_p_const_reverse_iterator", "const_reverse_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_difference_type = {"_p_difference_type", "difference_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dom_content_optional = {"_p_dom_content_optional", "dom_content_optional *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "xml_schema::double_ *|double *|xml_schema::decimal *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "float *|xml_schema::float_ *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *|xml_schema::int_ *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iterator = {"_p_iterator", "iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_long = {"_p_long_long", "long long *|xml_schema::long_ *|xml_schema::integer *|xml_schema::non_positive_integer *|xml_schema::negative_integer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ptr = {"_p_ptr", "ptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_reverse_iterator = {"_p_reverse_iterator", "reverse_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__Model__SimModel = {"_p_schema__simxml__Model__SimModel", "::schema::simxml::Model::SimModel *|schema::simxml::Model::SimModel *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SelectedPropertyGroups = {"_p_schema__simxml__SimModelCore__SelectedPropertyGroups", "::schema::simxml::SimModelCore::SelectedPropertyGroups *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__doubleList = {"_p_schema__simxml__SimModelCore__doubleList", "::schema::simxml::SimModelCore::doubleList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__integerList = {"_p_schema__simxml__SimModelCore__integerList", "::schema::simxml::SimModelCore::integerList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__logical = {"_p_schema__simxml__SimModelCore__logical", "::schema::simxml::SimModelCore::logical *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_self_ = {"_p_self_", "self_ *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_short = {"_p_short", "short *|xml_schema::short_ *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_signed_char = {"_p_signed_char", "signed char *|xml_schema::byte *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_type = {"_p_size_type", "size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__auto_ptrT_xml_schema__string_t = {"_p_std__auto_ptrT_xml_schema__string_t", "::std::auto_ptr< schema::simxml::Model::SimModel::SimModelVersion_type > *|::std::auto_ptr< schema::simxml::Model::SimModel::SimModelSchemaVersion_type > *|::std::auto_ptr< schema::simxml::Model::SimModel::SimModelUnitsVersion_type > *|::std::auto_ptr< schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_type > *|::std::auto_ptr< schema::simxml::Model::SimModel::SimModelSchemaIDKey_type > *|std::auto_ptr< ::xml_schema::string > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__invalid_argument = {"_p_std__invalid_argument", "std::invalid_argument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__istream = {"_p_std__istream", "::std::istream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_swig__SwigPyIterator = {"_p_swig__SwigPyIterator", "swig::SwigPyIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "unsigned char *|xml_schema::unsigned_byte *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "xml_schema::unsigned_int *|unsigned int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long_long = {"_p_unsigned_long_long", "xml_schema::unsigned_long *|unsigned long long *|xml_schema::non_negative_integer *|xml_schema::positive_integer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_short = {"_p_unsigned_short", "unsigned short *|xml_schema::unsigned_short *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_value_type = {"_p_value_type", "value_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xercesc__DOMDocument = {"_p_xercesc__DOMDocument", "::xercesc::DOMDocument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xercesc__DOMElement = {"_p_xercesc__DOMElement", "::xercesc::DOMElement *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xercesc__DOMErrorHandler = {"_p_xercesc__DOMErrorHandler", "::xercesc::DOMErrorHandler *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xercesc__InputSource = {"_p_xercesc__InputSource", "::xercesc::InputSource *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xml_schema__dom__auto_ptrT_xercesc__DOMDocument_t = {"_p_xml_schema__dom__auto_ptrT_xercesc__DOMDocument_t", "::xml_schema::dom::auto_ptr< ::xercesc::DOMDocument > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree___type = {"_p_xsd__cxx__tree___type", "xsd::cxx::tree::_type *|xsd::cxx::tree::type *|xml_schema::type *|xsd::cxx::tree::container *|xml_schema::container *|::xml_schema::container *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimObjectDefinition = {"_p_schema__simxml__SimModelCore__SimObjectDefinition", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimDistributionElement = {"_p_schema__simxml__SimModelCore__SimDistributionElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimSpatialStructureElement = {"_p_schema__simxml__SimModelCore__SimSpatialStructureElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimTemplate = {"_p_schema__simxml__SimModelCore__SimTemplate", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__ResourcesGeneral__SimNode = {"_p_schema__simxml__ResourcesGeneral__SimNode", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter = {"_p_schema__simxml__MepModel__SimFlowEnergyConverter", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimAppDefault = {"_p_schema__simxml__SimModelCore__SimAppDefault", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimActorDefinition = {"_p_schema__simxml__SimModelCore__SimActorDefinition", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__ResourcesGeometry__SimProfileDefinition = {"_p_schema__simxml__ResourcesGeometry__SimProfileDefinition", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__ResourcesGeneral__SimArrayParams = {"_p_schema__simxml__ResourcesGeneral__SimArrayParams", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimDistributionControlElement = {"_p_schema__simxml__SimModelCore__SimDistributionControlElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__ResourcesGeneral__SimPort = {"_p_schema__simxml__ResourcesGeneral__SimPort", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimPropertySetDefinition = {"_p_schema__simxml__SimModelCore__SimPropertySetDefinition", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimGroup = {"_p_schema__simxml__SimModelCore__SimGroup", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree__type_t_t = {"_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree__type_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__ResourcesGeneral__SimUnitType = {"_p_schema__simxml__ResourcesGeneral__SimUnitType", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimBuildingElement = {"_p_schema__simxml__SimModelCore__SimBuildingElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimObjectPlacement = {"_p_schema__simxml__SimModelCore__SimObjectPlacement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem = {"_p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimResourceObject = {"_p_schema__simxml__SimModelCore__SimResourceObject", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimObject = {"_p_schema__simxml__SimModelCore__SimObject", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimElement = {"_p_schema__simxml__SimModelCore__SimElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimFeatureElement = {"_p_schema__simxml__SimModelCore__SimFeatureElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem = {"_p_schema__simxml__SimModelCore__SimGeometricRepresentationItem", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimBldgModelParams = {"_p_schema__simxml__SimModelCore__SimBldgModelParams", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimObjectTypeDefinition = {"_p_schema__simxml__SimModelCore__SimObjectTypeDefinition", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimRepresentationItem = {"_p_schema__simxml__SimModelCore__SimRepresentationItem", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimDistributionFlowElement = {"_p_schema__simxml__SimModelCore__SimDistributionFlowElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimRoot = {"_p_schema__simxml__SimModelCore__SimRoot", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_schema__simxml__SimModelCore__SimRepresentation = {"_p_schema__simxml__SimModelCore__SimRepresentation", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__base64_binaryT_char_xsd__cxx__tree__simple_type_t = {"_p_xsd__cxx__tree__base64_binaryT_char_xsd__cxx__tree__simple_type_t", "xml_schema::base64_binary *|::xsd::cxx::tree::base64_binary< char,xsd::cxx::tree::simple_type > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__boundsT_char_t = {"_p_xsd__cxx__tree__boundsT_char_t", "::xsd::cxx::tree::bounds< char > *|xml_schema::bounds *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__bufferT_char_t = {"_p_xsd__cxx__tree__bufferT_char_t", "::xsd::cxx::tree::buffer< char > *|xml_schema::buffer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__content_order = {"_p_xsd__cxx__tree__content_order", "::xsd::cxx::tree::content_order *|xml_schema::content_order *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__dateT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__dateT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xsd::cxx::tree::date< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *|xml_schema::date *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__date_timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__date_timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xml_schema::date_time *|xsd::cxx::tree::date_time< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__diagnosticsT_char_t = {"_p_xsd__cxx__tree__diagnosticsT_char_t", "xml_schema::diagnostics *|::xsd::cxx::tree::diagnostics< char > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__duplicate_idT_char_t = {"_p_xsd__cxx__tree__duplicate_idT_char_t", "::xsd::cxx::tree::duplicate_id< char > *|xml_schema::duplicate_id *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__durationT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__durationT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xsd::cxx::tree::duration< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *|xml_schema::duration *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__entitiesT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__entity_t = {"_p_xsd__cxx__tree__entitiesT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__entity_t", "xml_schema::entities *|::xsd::cxx::tree::entities< char,xsd::cxx::tree::simple_type,xsd::cxx::tree::entity > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__entityT_char_xsd__cxx__tree__ncname_t = {"_p_xsd__cxx__tree__entityT_char_xsd__cxx__tree__ncname_t", "xml_schema::entity *|::xsd::cxx::tree::entity< char,xsd::cxx::tree::ncname > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__errorT_char_t = {"_p_xsd__cxx__tree__errorT_char_t", "xml_schema::error *|::xsd::cxx::tree::error< char > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__exceptionT_char_t = {"_p_xsd__cxx__tree__exceptionT_char_t", "::xsd::cxx::tree::exception< char > *|xml_schema::exception *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__expected_attributeT_char_t = {"_p_xsd__cxx__tree__expected_attributeT_char_t", "::xsd::cxx::tree::expected_attribute< char > *|xml_schema::expected_attribute *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__expected_elementT_char_t = {"_p_xsd__cxx__tree__expected_elementT_char_t", "::xsd::cxx::tree::expected_element< char > *|xml_schema::expected_element *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__expected_text_contentT_char_t = {"_p_xsd__cxx__tree__expected_text_contentT_char_t", "::xsd::cxx::tree::expected_text_content< char > *|xml_schema::expected_text_content *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__flags = {"_p_xsd__cxx__tree__flags", "::xsd::cxx::tree::flags *|xml_schema::flags *|::xml_schema::flags *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__gdayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__gdayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xsd::cxx::tree::gday< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *|xml_schema::gday *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__gmonthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__gmonthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xml_schema::gmonth *|xsd::cxx::tree::gmonth< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__gmonth_dayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__gmonth_dayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xsd::cxx::tree::gmonth_day< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *|xml_schema::gmonth_day *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__gyearT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__gyearT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xsd::cxx::tree::gyear< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *|xml_schema::gyear *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__gyear_monthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__gyear_monthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xsd::cxx::tree::gyear_month< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *|xml_schema::gyear_month *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__hex_binaryT_char_xsd__cxx__tree__simple_type_t = {"_p_xsd__cxx__tree__hex_binaryT_char_xsd__cxx__tree__simple_type_t", "::xsd::cxx::tree::hex_binary< char,xsd::cxx::tree::simple_type > *|xml_schema::hex_binary *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t = {"_p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t", "::xsd::cxx::tree::id< char,xsd::cxx::tree::ncname > *|::xml_schema::id *|xml_schema::id *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t = {"_p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t", "::xml_schema::idref *|xml_schema::idref *|xsd::cxx::tree::idref< char,xsd::cxx::tree::ncname,xsd::cxx::tree::_type > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t = {"_p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t", "::xsd::cxx::tree::idrefs< char,xsd::cxx::tree::simple_type,xsd::cxx::tree::idref > *|::xml_schema::idrefs *|xml_schema::idrefs *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__languageT_char_xsd__cxx__tree__token_t = {"_p_xsd__cxx__tree__languageT_char_xsd__cxx__tree__token_t", "xml_schema::language *|::xsd::cxx::tree::language< char,xsd::cxx::tree::token > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__nameT_char_xsd__cxx__tree__token_t = {"_p_xsd__cxx__tree__nameT_char_xsd__cxx__tree__token_t", "xml_schema::name *|::xsd::cxx::tree::name< char,xsd::cxx::tree::token > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__ncnameT_char_xsd__cxx__tree__name_t = {"_p_xsd__cxx__tree__ncnameT_char_xsd__cxx__tree__name_t", "xml_schema::ncname *|::xsd::cxx::tree::ncname< char,xsd::cxx::tree::name > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__nmtokenT_char_xsd__cxx__tree__token_t = {"_p_xsd__cxx__tree__nmtokenT_char_xsd__cxx__tree__token_t", "::xsd::cxx::tree::nmtoken< char,xsd::cxx::tree::token > *|xml_schema::nmtoken *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__nmtokensT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__nmtoken_t = {"_p_xsd__cxx__tree__nmtokensT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__nmtoken_t", "::xsd::cxx::tree::nmtokens< char,xsd::cxx::tree::simple_type,xsd::cxx::tree::nmtoken > *|xml_schema::nmtokens *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__no_prefix_mappingT_char_t = {"_p_xsd__cxx__tree__no_prefix_mappingT_char_t", "::xsd::cxx::tree::no_prefix_mapping< char > *|xml_schema::no_prefix_mapping *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__no_type_infoT_char_t = {"_p_xsd__cxx__tree__no_type_infoT_char_t", "xml_schema::no_type_info *|::xsd::cxx::tree::no_type_info< char > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__normalized_stringT_char_xsd__cxx__tree__string_t = {"_p_xsd__cxx__tree__normalized_stringT_char_xsd__cxx__tree__string_t", "::xsd::cxx::tree::normalized_string< char,xsd::cxx::tree::string > *|xml_schema::normalized_string *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__not_derivedT_char_t = {"_p_xsd__cxx__tree__not_derivedT_char_t", "::xsd::cxx::tree::not_derived< char > *|xml_schema::not_derived *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t = {"_p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t", "schema::simxml::Model::SimModel::SimModelVersion_optional *|schema::simxml::Model::SimModel::SimModelSchemaIDKey_optional *|schema::simxml::Model::SimModel::SimModelUnitsVersion_optional *|schema::simxml::Model::SimModel::SimModelSchemaVersion_optional *|schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_optional *|xsd::cxx::tree::optional< ::xsd::cxx::tree::string< char,xsd::cxx::tree::simple_type >,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__parsingT_char_t = {"_p_xsd__cxx__tree__parsingT_char_t", "xml_schema::parsing *|::xsd::cxx::tree::parsing< char > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__propertiesT_char_t = {"_p_xsd__cxx__tree__propertiesT_char_t", "::xsd::cxx::tree::properties< char > *|xml_schema::properties *|::xml_schema::properties *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__qnameT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__uri_xsd__cxx__tree__ncname_t = {"_p_xsd__cxx__tree__qnameT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__uri_xsd__cxx__tree__ncname_t", "xml_schema::qname *|::xsd::cxx::tree::qname< char,xsd::cxx::tree::simple_type,xsd::cxx::tree::uri,xsd::cxx::tree::ncname > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuildingStory_BuildingStory_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuildingStory_BuildingStory_Default_false_t", "schema::simxml::Model::SimModel::SimBuildingStory_BuildingStory_Default_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimBuildingStory_BuildingStory_Default,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuilding_Building_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuilding_Building_Default_false_t", "schema::simxml::Model::SimModel::SimBuilding_Building_Default_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimBuilding_Building_Default,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_ConnectorList_SimConnections_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_ConnectorList_SimConnections_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimList_ConnectorList_SimConnections,false > *|schema::simxml::Model::SimModel::SimList_ConnectorList_SimConnections_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_EquipmentList_ZoneHvac_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_EquipmentList_ZoneHvac_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimList_EquipmentList_ZoneHvac,false > *|schema::simxml::Model::SimModel::SimList_EquipmentList_ZoneHvac_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_MaterialList_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_MaterialList_Default_false_t", "schema::simxml::Model::SimModel::SimList_MaterialList_Default_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimList_MaterialList_Default,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_AirLoopAvailabilityMgrScheme_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_AirLoopAvailabilityMgrScheme_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimList_SchemeList_AirLoopAvailabilityMgrScheme,false > *|schema::simxml::Model::SimModel::SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_DemandManagerScheme_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_DemandManagerScheme_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimList_SchemeList_DemandManagerScheme,false > *|schema::simxml::Model::SimModel::SimList_SchemeList_DemandManagerScheme_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_PlantOperatingScheme_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_PlantOperatingScheme_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimList_SchemeList_PlantOperatingScheme,false > *|schema::simxml::Model::SimModel::SimList_SchemeList_PlantOperatingScheme_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_WaterTempControlScheme_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_WaterTempControlScheme_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimList_SchemeList_WaterTempControlScheme,false > *|schema::simxml::Model::SimModel::SimList_SchemeList_WaterTempControlScheme_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimProject_Project_DesignAlternative_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimProject_Project_DesignAlternative_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimProject_Project_DesignAlternative,false > *|schema::simxml::Model::SimModel::SimProject_Project_DesignAlternative_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSite_BuildingSite_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSite_BuildingSite_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimSite_BuildingSite_Default,false > *|schema::simxml::Model::SimModel::SimSite_BuildingSite_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Default_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Default_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimSlab_Default_Default,false > *|schema::simxml::Model::SimModel::SimSlab_Default_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_FloorOverEarth_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_FloorOverEarth_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimSlab_Floor_FloorOverEarth,false > *|schema::simxml::Model::SimModel::SimSlab_Floor_FloorOverEarth_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_InterzoneFloor_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_InterzoneFloor_false_t", "schema::simxml::Model::SimModel::SimSlab_Floor_InterzoneFloor_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimSlab_Floor_InterzoneFloor,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_RoofSlab_RoofUnderAir_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_RoofSlab_RoofUnderAir_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimSlab_RoofSlab_RoofUnderAir,false > *|schema::simxml::Model::SimModel::SimSlab_RoofSlab_RoofUnderAir_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Fin_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Fin_Default_false_t", "schema::simxml::Model::SimModel::SimSolarShade_Fin_Default_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimSolarShade_Fin_Default,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Overhang_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Overhang_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimSolarShade_Overhang_Default,false > *|schema::simxml::Model::SimModel::SimSolarShade_Overhang_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpace_Occupied_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpace_Occupied_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimSpace_Occupied_Default,false > *|schema::simxml::Model::SimModel::SimSpace_Occupied_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimSpatialZone_ThermalZone_Default,false > *|schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_TemplateForZoneGroup_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_TemplateForZoneGroup_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimSpatialZone_ThermalZone_TemplateForZoneGroup,false > *|schema::simxml::Model::SimModel::SimSpatialZone_ThermalZone_TemplateForZoneGroup_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Control_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Control_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimSystem_HvacHotWater_Control,false > *|schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Control_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Demand_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Demand_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimSystem_HvacHotWater_Demand,false > *|schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Demand_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_FullSystem_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_FullSystem_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimSystem_HvacHotWater_FullSystem,false > *|schema::simxml::Model::SimModel::SimSystem_HvacHotWater_FullSystem_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Supply_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Supply_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimSystem_HvacHotWater_Supply,false > *|schema::simxml::Model::SimModel::SimSystem_HvacHotWater_Supply_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Control_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Control_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimSystem_ZoneHvacGroup_Control,false > *|schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Control_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Demand_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Demand_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimSystem_ZoneHvacGroup_Demand,false > *|schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Demand_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_FullSystem_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_FullSystem_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimSystem_ZoneHvacGroup_FullSystem,false > *|schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_FullSystem_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Supply_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Supply_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimSystem_ZoneHvacGroup_Supply,false > *|schema::simxml::Model::SimModel::SimSystem_ZoneHvacGroup_Supply_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimThermalZoneType_ThermalZone_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimThermalZoneType_ThermalZone_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimThermalZoneType_ThermalZone_Default,false > *|schema::simxml::Model::SimModel::SimThermalZoneType_ThermalZone_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWallType_Wall_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWallType_Wall_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWallType_Wall_Default,false > *|schema::simxml::Model::SimModel::SimWallType_Wall_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWall_Wall_Default,false > *|schema::simxml::Model::SimModel::SimWall_Wall_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_ExteriorAboveGrade_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_ExteriorAboveGrade_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWall_Wall_ExteriorAboveGrade,false > *|schema::simxml::Model::SimModel::SimWall_Wall_ExteriorAboveGrade_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Interior_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Interior_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWall_Wall_Interior,false > *|schema::simxml::Model::SimModel::SimWall_Wall_Interior_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindowType_Window_Default,false > *|schema::simxml::Model::SimModel::SimWindowType_Window_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Exterior_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Exterior_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindowType_Window_Exterior,false > *|schema::simxml::Model::SimModel::SimWindowType_Window_Exterior_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Interior_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Interior_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindowType_Window_Interior,false > *|schema::simxml::Model::SimModel::SimWindowType_Window_Interior_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t", "schema::simxml::Model::SimModel::SimWindow_Window_Default_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Default,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_ExteriorDetailed_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_ExteriorDetailed_false_t", "schema::simxml::Model::SimModel::SimWindow_Window_ExteriorDetailed_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_ExteriorDetailed,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Exterior_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Exterior_false_t", "schema::simxml::Model::SimModel::SimWindow_Window_Exterior_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::BuildingModel::SimWindow_Window_Exterior,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_SupplyWater_Temperature_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_SupplyWater_Temperature_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::MepModel::SimController_SupplyWater_Temperature,false > *|schema::simxml::Model::SimModel::SimController_SupplyWater_Temperature_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_ZoneControlTemperature_Thermostat_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_ZoneControlTemperature_Thermostat_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::MepModel::SimController_ZoneControlTemperature_Thermostat,false > *|schema::simxml::Model::SimModel::SimController_ZoneControlTemperature_Thermostat_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_Default_false_t", "schema::simxml::Model::SimModel::SimFlowController_Valve_Default_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::MepModel::SimFlowController_Valve_Default,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_TemperingValve_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_TemperingValve_false_t", "schema::simxml::Model::SimModel::SimFlowController_Valve_TemperingValve_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::MepModel::SimFlowController_Valve_TemperingValve,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Expansion_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Expansion_false_t", "schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Expansion_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::MepModel::SimFlowEnergyTransferStorage_HotWaterTank_Expansion,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_false_t", "schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::MepModel::SimFlowEnergyTransferStorage_HotWaterTank_MixedDual,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Mixed_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Mixed_false_t", "schema::simxml::Model::SimModel::SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::MepModel::SimFlowEnergyTransferStorage_HotWaterTank_Mixed,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_false_t", "schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::MepModel::SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Water_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Water_false_t", "schema::simxml::Model::SimModel::SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::MepModel::SimFlowEnergyTransfer_ConvectiveHeater_Water,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Default_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Default_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::MepModel::SimFlowFitting_Default_Default,false > *|schema::simxml::Model::SimModel::SimFlowFitting_Default_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Mixer_DemandProxyMixerWater_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Mixer_DemandProxyMixerWater_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::MepModel::SimFlowFitting_Mixer_DemandProxyMixerWater,false > *|schema::simxml::Model::SimModel::SimFlowFitting_Mixer_DemandProxyMixerWater_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Splitter_DemandProxySplitterWater_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Splitter_DemandProxySplitterWater_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::MepModel::SimFlowFitting_Splitter_DemandProxySplitterWater,false > *|schema::simxml::Model::SimModel::SimFlowFitting_Splitter_DemandProxySplitterWater_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowMover_Pump_VariableSpeedReturn_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowMover_Pump_VariableSpeedReturn_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::MepModel::SimFlowMover_Pump_VariableSpeedReturn,false > *|schema::simxml::Model::SimModel::SimFlowMover_Pump_VariableSpeedReturn_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowPlant_Boiler_BoilerHotWater_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowPlant_Boiler_BoilerHotWater_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::MepModel::SimFlowPlant_Boiler_BoilerHotWater,false > *|schema::simxml::Model::SimModel::SimFlowPlant_Boiler_BoilerHotWater_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowSegment_Pipe_Indoor_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowSegment_Pipe_Indoor_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::MepModel::SimFlowSegment_Pipe_Indoor,false > *|schema::simxml::Model::SimModel::SimFlowSegment_Pipe_Indoor_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimSensor_TemperatureSensor_DryBulb_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimSensor_TemperatureSensor_DryBulb_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::MepModel::SimSensor_TemperatureSensor_DryBulb,false > *|schema::simxml::Model::SimModel::SimSensor_TemperatureSensor_DryBulb_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAddress_Postal_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAddress_Postal_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAddress_Postal_Default,false > *|schema::simxml::Model::SimModel::SimAddress_Postal_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_false_t", "schema::simxml::Model::SimModel::SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponent_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponent_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_BldgComponentGroup_HvacComponent,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_BldgComponentGroup_HvacComponent_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacAirLoop_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacAirLoop_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_DistributionSystem_HvacAirLoop,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacAirLoop_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_DistributionSystem_HvacSteamLoop,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_DistributionSystem_MixedWaterLoop,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_DistributionSystem_RefrigerationLoop,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerDemand_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerDemand_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_DistributionSystem_SitePowerDemand,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerDemand_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_DistributionSystem_SitePowerGeneration,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_AdjacentSite_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_AdjacentSite_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_SiteContext_AdjacentSite,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_AdjacentSite_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_SolarObstruction_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_SolarObstruction_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_SiteContext_SolarObstruction,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_SiteContext_SolarObstruction_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_Space_Space_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_Space_Space_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_Space_Space,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_Space_Space_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_BuildingStory_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_BuildingStory_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_SpatialContainer_BuildingStory,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_BuildingStory_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Building_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Building_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_SpatialContainer_Building,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Building_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Project_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Project_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_SpatialContainer_Project,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Project_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Site_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Site_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_SpatialContainer_Site,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialContainer_Site_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_SpatialZone_CeilingPlenumZone,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_FloorPlenumZone_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_FloorPlenumZone_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_SpatialZone_FloorPlenumZone,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_FloorPlenumZone_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_ThermalZone_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_ThermalZone_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_SpatialZone_ThermalZone,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_SpatialZone_ThermalZone_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup,false > *|schema::simxml::Model::SimModel::SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSaveInterval_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSaveInterval_false_t", "schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSaveInterval_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppPreferences_AppPreferences_AutoSaveInterval,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSave_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSave_false_t", "schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_AutoSave_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppPreferences_AppPreferences_AutoSave,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalPath_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalPath_false_t", "schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalPath_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppPreferences_AppPreferences_EPlusInstalPath,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalVersion_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalVersion_false_t", "schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppPreferences_AppPreferences_EPlusInstalVersion,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_MinMonthlyChargeType_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_MinMonthlyChargeType_false_t", "schema::simxml::Model::SimModel::SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppPreferences_AppPreferences_MinMonthlyChargeType,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppUnitDefault_AppUnitDefault_DatabaseDefault_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppUnitDefault_AppUnitDefault_DatabaseDefault_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimAppUnitDefault_AppUnitDefault_DatabaseDefault,false > *|schema::simxml::Model::SimModel::SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgSiteParams_BuildingSite_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgSiteParams_BuildingSite_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimBldgSiteParams_BuildingSite_Default,false > *|schema::simxml::Model::SimModel::SimBldgSiteParams_BuildingSite_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgStoryParams_BuildingStory_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgStoryParams_BuildingStory_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimBldgStoryParams_BuildingStory_Default,false > *|schema::simxml::Model::SimModel::SimBldgStoryParams_BuildingStory_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryBoma_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryBoma_false_t", "schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryBoma_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimClassification_ClassificationReference_SpaceCategoryBoma,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryOwner_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryOwner_false_t", "schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceCategoryOwner_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimClassification_ClassificationReference_SpaceCategoryOwner,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceTypeOwner_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceTypeOwner_false_t", "schema::simxml::Model::SimModel::SimClassification_ClassificationReference_SpaceTypeOwner_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimClassification_ClassificationReference_SpaceTypeOwner,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_Default_false_t", "schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_Default_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimClassification_ClassificationSystem_Default,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_OmniClass_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_OmniClass_false_t", "schema::simxml::Model::SimModel::SimClassification_ClassificationSystem_OmniClass_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimClassification_ClassificationSystem_OmniClass,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_HotWaterFlow_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_HotWaterFlow_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimConnection_HotWaterFlow_Default,false > *|schema::simxml::Model::SimModel::SimConnection_HotWaterFlow_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_ZoneAirFlow_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_ZoneAirFlow_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimConnection_ZoneAirFlow_Default,false > *|schema::simxml::Model::SimModel::SimConnection_ZoneAirFlow_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_AvailabilityManagerScheme_Scheduled_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_AvailabilityManagerScheme_Scheduled_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimControlScheme_AvailabilityManagerScheme_Scheduled,false > *|schema::simxml::Model::SimModel::SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_ControlAndSequencingScheme_HeatingLoad_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_ControlAndSequencingScheme_HeatingLoad_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimControlScheme_ControlAndSequencingScheme_HeatingLoad,false > *|schema::simxml::Model::SimModel::SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimControlScheme_SetpointManagerScheme_ScheduledSetpoint,false > *|schema::simxml::Model::SimModel::SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointScheme_SingleHeating_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointScheme_SingleHeating_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimControlScheme_SetpointScheme_SingleHeating,false > *|schema::simxml::Model::SimModel::SimControlScheme_SetpointScheme_SingleHeating_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDerivedUnitType_DerivedUnit_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDerivedUnitType_DerivedUnit_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimDerivedUnitType_DerivedUnit_Default,false > *|schema::simxml::Model::SimModel::SimDerivedUnitType_DerivedUnit_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_In_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_In_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimDistributionPort_AirFlowPort_Air_In,false > *|schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_In_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_Out_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_Out_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimDistributionPort_AirFlowPort_Air_Out,false > *|schema::simxml::Model::SimModel::SimDistributionPort_AirFlowPort_Air_Out_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_In_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_In_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimDistributionPort_HotWaterFlowPort_Water_In,false > *|schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_In_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_Out_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_Out_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimDistributionPort_HotWaterFlowPort_Water_Out,false > *|schema::simxml::Model::SimModel::SimDistributionPort_HotWaterFlowPort_Water_Out_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Equipment_Electric_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Equipment_Electric_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimInternalLoad_Equipment_Electric,false > *|schema::simxml::Model::SimModel::SimInternalLoad_Equipment_Electric_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Lights_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Lights_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimInternalLoad_Lights_Default,false > *|schema::simxml::Model::SimModel::SimInternalLoad_Lights_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_People_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_People_Default_false_t", "schema::simxml::Model::SimModel::SimInternalLoad_People_Default_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimInternalLoad_People_Default,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_DesignDay_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_DesignDay_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimLocationAndWeather_DesignDay_Default,false > *|schema::simxml::Model::SimModel::SimLocationAndWeather_DesignDay_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_Location_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_Location_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimLocationAndWeather_Location_Default,false > *|schema::simxml::Model::SimModel::SimLocationAndWeather_Location_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_Default_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_Default_Default_false_t", "schema::simxml::Model::SimModel::SimMaterialLayerSet_Default_Default_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimMaterialLayerSet_Default_Default,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_GlazingLayerSet_Window_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_GlazingLayerSet_Window_false_t", "schema::simxml::Model::SimModel::SimMaterialLayerSet_GlazingLayerSet_Window_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimMaterialLayerSet_GlazingLayerSet_Window,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Ceiling_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Ceiling_false_t", "schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimMaterialLayerSet_OpaqueLayerSet_Ceiling,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Door_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Door_false_t", "schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Door_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimMaterialLayerSet_OpaqueLayerSet_Door,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Floor_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Floor_false_t", "schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimMaterialLayerSet_OpaqueLayerSet_Floor,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_InternalSource_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_InternalSource_false_t", "schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimMaterialLayerSet_OpaqueLayerSet_InternalSource,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Roof_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Roof_false_t", "schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimMaterialLayerSet_OpaqueLayerSet_Roof,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Wall_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Wall_false_t", "schema::simxml::Model::SimModel::SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimMaterialLayerSet_OpaqueLayerSet_Wall,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimMaterialLayer_GlazingMaterialLayer_Default,false > *|schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Thermochromic_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Thermochromic_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimMaterialLayer_GlazingMaterialLayer_Thermochromic,false > *|schema::simxml::Model::SimModel::SimMaterialLayer_GlazingMaterialLayer_Thermochromic_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_OpaqueMaterialLayer_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_OpaqueMaterialLayer_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimMaterialLayer_OpaqueMaterialLayer_Default,false > *|schema::simxml::Model::SimModel::SimMaterialLayer_OpaqueMaterialLayer_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_Default_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_Default_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimMaterial_Default_Default,false > *|schema::simxml::Model::SimModel::SimMaterial_Default_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Gas_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Gas_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimMaterial_GlazingMaterial_Gas,false > *|schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Gas_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Glazing_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Glazing_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimMaterial_GlazingMaterial_Glazing,false > *|schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_Glazing_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_SimpleGlazingSystem_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_SimpleGlazingSystem_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimMaterial_GlazingMaterial_SimpleGlazingSystem,false > *|schema::simxml::Model::SimModel::SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_AirGap_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_AirGap_false_t", "schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_AirGap_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimMaterial_OpaqueMaterial_AirGap,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_Default_false_t", "schema::simxml::Model::SimModel::SimMaterial_OpaqueMaterial_Default_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimMaterial_OpaqueMaterial_Default,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationContext_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationContext_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimModelRepresentationContext_GeometricRepresentationContext_Default,false > *|schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationSubContext_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationSubContext_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimModelRepresentationContext_GeometricRepresentationSubContext_Default,false > *|schema::simxml::Model::SimModel::SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_In_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_In_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimNode_AirFlowPort_Air_In,false > *|schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_In_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_Out_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_Out_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimNode_AirFlowPort_Air_Out,false > *|schema::simxml::Model::SimModel::SimNode_AirFlowPort_Air_Out_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_AirLoop_DigitalSignal_In_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_AirLoop_DigitalSignal_In_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimNode_DigitalControl_AirLoop_DigitalSignal_In,false > *|schema::simxml::Model::SimModel::SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_HWLoop_DigitalSignal_In_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_HWLoop_DigitalSignal_In_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimNode_DigitalControl_HWLoop_DigitalSignal_In,false > *|schema::simxml::Model::SimModel::SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_Docking_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_Docking_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimNode_Docking_Default,false > *|schema::simxml::Model::SimModel::SimNode_Docking_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_In_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_In_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimNode_HotWaterFlowPort_Water_In,false > *|schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_In_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_Out_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_Out_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimNode_HotWaterFlowPort_Water_Out,false > *|schema::simxml::Model::SimModel::SimNode_HotWaterFlowPort_Water_Out_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOrganization_Organization_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOrganization_Organization_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimOrganization_Organization_Default,false > *|schema::simxml::Model::SimModel::SimOrganization_Organization_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOwnerHistory_Default_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOwnerHistory_Default_Default_false_t", "schema::simxml::Model::SimModel::SimOwnerHistory_Default_Default_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimOwnerHistory_Default_Default,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPersonAndOrganization_PersonAndOrganization_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPersonAndOrganization_PersonAndOrganization_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimPersonAndOrganization_PersonAndOrganization_Default,false > *|schema::simxml::Model::SimModel::SimPersonAndOrganization_PersonAndOrganization_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPerson_Person_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPerson_Person_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimPerson_Person_Default,false > *|schema::simxml::Model::SimModel::SimPerson_Person_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPresentationLayerAssignment_Default_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPresentationLayerAssignment_Default_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimPresentationLayerAssignment_Default_Default,false > *|schema::simxml::Model::SimModel::SimPresentationLayerAssignment_Default_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSIUnitType_SiUnit_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSIUnitType_SiUnit_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimSIUnitType_SiUnit_Default,false > *|schema::simxml::Model::SimModel::SimSIUnitType_SiUnit_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationConfiguration_SimulationConfiguration_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationConfiguration_SimulationConfiguration_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimSimulationConfiguration_SimulationConfiguration_Default,false > *|schema::simxml::Model::SimModel::SimSimulationConfiguration_SimulationConfiguration_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationParameters_HvacDesign_WaterLoopSizing_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationParameters_HvacDesign_WaterLoopSizing_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimSimulationParameters_HvacDesign_WaterLoopSizing,false > *|schema::simxml::Model::SimModel::SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSlabParams_Slab_Floor_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSlabParams_Slab_Floor_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimSlabParams_Slab_Floor,false > *|schema::simxml::Model::SimModel::SimSlabParams_Slab_Floor_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSoftwareApplication_Default_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSoftwareApplication_Default_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimSoftwareApplication_Default_Default,false > *|schema::simxml::Model::SimModel::SimSoftwareApplication_Default_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceBoundary_SecondLevel_SubTypeA_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceBoundary_SecondLevel_SubTypeA_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimSpaceBoundary_SecondLevel_SubTypeA,false > *|schema::simxml::Model::SimModel::SimSpaceBoundary_SecondLevel_SubTypeA_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceParams_Space_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceParams_Space_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimSpaceParams_Space_Default,false > *|schema::simxml::Model::SimModel::SimSpaceParams_Space_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateConstructions_Constructions_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateConstructions_Constructions_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimTemplateConstructions_Constructions_Default,false > *|schema::simxml::Model::SimModel::SimTemplateConstructions_Constructions_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateLocation_Location_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateLocation_Location_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimTemplateLocation_Location_Default,false > *|schema::simxml::Model::SimModel::SimTemplateLocation_Location_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneConditions_ZoneConditions_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneConditions_ZoneConditions_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimTemplateZoneConditions_ZoneConditions_Default,false > *|schema::simxml::Model::SimModel::SimTemplateZoneConditions_ZoneConditions_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneLoads_ZoneLoads_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneLoads_ZoneLoads_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimTemplateZoneLoads_ZoneLoads_Default,false > *|schema::simxml::Model::SimModel::SimTemplateZoneLoads_ZoneLoads_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Calendar_Configuration_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Calendar_Configuration_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimTimeSeriesSchedule_Calendar_Configuration,false > *|schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Calendar_Configuration_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Day_Interval_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Day_Interval_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimTimeSeriesSchedule_Day_Interval,false > *|schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Day_Interval_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Limits_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Limits_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimTimeSeriesSchedule_Limits_Default,false > *|schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Limits_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Week_Daily_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Week_Daily_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimTimeSeriesSchedule_Week_Daily,false > *|schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Week_Daily_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Year_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Year_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimTimeSeriesSchedule_Year_Default,false > *|schema::simxml::Model::SimModel::SimTimeSeriesSchedule_Year_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWallParams_Wall_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWallParams_Wall_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimWallParams_Wall_Default,false > *|schema::simxml::Model::SimModel::SimWallParams_Wall_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowArrayParams_WindowArray_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowArrayParams_WindowArray_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimWindowArrayParams_WindowArray_Default,false > *|schema::simxml::Model::SimModel::SimWindowArrayParams_WindowArray_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowLiningProps_WindowLiningProps_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowLiningProps_WindowLiningProps_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimWindowLiningProps_WindowLiningProps_Default,false > *|schema::simxml::Model::SimModel::SimWindowLiningProps_WindowLiningProps_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowParams_Window_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowParams_Window_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeneral::SimWindowParams_Window_Default,false > *|schema::simxml::Model::SimModel::SimWindowParams_Window_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimArbitraryProfileDef_ArbitraryProfile_Closed_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimArbitraryProfileDef_ArbitraryProfile_Closed_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimArbitraryProfileDef_ArbitraryProfile_Closed,false > *|schema::simxml::Model::SimModel::SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimCartesianTransformOperator_3D_Uniform_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimCartesianTransformOperator_3D_Uniform_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimCartesianTransformOperator_3D_Uniform,false > *|schema::simxml::Model::SimModel::SimCartesianTransformOperator_3D_Uniform_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimConnectedFaceSet_ConnectedFaceSet_ClosedShell,false > *|schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimConnectedFaceSet_ConnectedFaceSet_Default,false > *|schema::simxml::Model::SimModel::SimConnectedFaceSet_ConnectedFaceSet_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimFaceBound_FaceBound_Default,false > *|schema::simxml::Model::SimModel::SimFaceBound_FaceBound_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_FaceOuterBound_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_FaceOuterBound_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimFaceBound_FaceBound_FaceOuterBound,false > *|schema::simxml::Model::SimModel::SimFaceBound_FaceBound_FaceOuterBound_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFace_Face_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFace_Face_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimFace_Face_Default,false > *|schema::simxml::Model::SimModel::SimFace_Face_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFeatureElementSubtraction_Void_Opening_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFeatureElementSubtraction_Void_Opening_false_t", "schema::simxml::Model::SimModel::SimFeatureElementSubtraction_Void_Opening_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimFeatureElementSubtraction_Void_Opening,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomBooleanResult_BooleanClippingResult_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomBooleanResult_BooleanClippingResult_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimGeomBooleanResult_BooleanClippingResult_Default,false > *|schema::simxml::Model::SimModel::SimGeomBooleanResult_BooleanClippingResult_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomCurve_Polyline_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomCurve_Polyline_Default_false_t", "schema::simxml::Model::SimModel::SimGeomCurve_Polyline_Default_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimGeomCurve_Polyline_Default,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace,false > *|schema::simxml::Model::SimModel::SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomPoint_Point_CartesianPoint_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomPoint_Point_CartesianPoint_false_t", "schema::simxml::Model::SimModel::SimGeomPoint_Point_CartesianPoint_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimGeomPoint_Point_CartesianPoint,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_FacetedBrep_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_FacetedBrep_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimGeomSolidModel_FacetedBrep_Default,false > *|schema::simxml::Model::SimModel::SimGeomSolidModel_FacetedBrep_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid,false > *|schema::simxml::Model::SimModel::SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimGeomSurfaceModel_FaceBasedSurfaceModel_Default,false > *|schema::simxml::Model::SimModel::SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_BoundedSurface_CurveBoundedPlane_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_BoundedSurface_CurveBoundedPlane_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimGeomSurface_BoundedSurface_CurveBoundedPlane,false > *|schema::simxml::Model::SimModel::SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_ElementarySurface_Plane_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_ElementarySurface_Plane_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimGeomSurface_ElementarySurface_Plane,false > *|schema::simxml::Model::SimModel::SimGeomSurface_ElementarySurface_Plane_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimGeomVector_Vector_Default,false > *|schema::simxml::Model::SimModel::SimGeomVector_Vector_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Direction_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Direction_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimGeomVector_Vector_Direction,false > *|schema::simxml::Model::SimModel::SimGeomVector_Vector_Direction_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_AbsolutePlacement_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_AbsolutePlacement_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimLocalPlacement_LocalPlacement_AbsolutePlacement,false > *|schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_RelativePlacement_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_RelativePlacement_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimLocalPlacement_LocalPlacement_RelativePlacement,false > *|schema::simxml::Model::SimModel::SimLocalPlacement_LocalPlacement_RelativePlacement_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLoop_Loop_PolyLoop_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLoop_Loop_PolyLoop_false_t", "schema::simxml::Model::SimModel::SimLoop_Loop_PolyLoop_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimLoop_Loop_PolyLoop,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimMappedRepresentationItem_Default_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimMappedRepresentationItem_Default_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimMappedRepresentationItem_Default_Default,false > *|schema::simxml::Model::SimModel::SimMappedRepresentationItem_Default_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimParameterizedProfileDef_ParameterizedProfile_Rectangle_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimParameterizedProfileDef_ParameterizedProfile_Rectangle_false_t", "schema::simxml::Model::SimModel::SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimParameterizedProfileDef_ParameterizedProfile_Rectangle,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement2D_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement2D_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimPlacement_Axis2Placement2D_Default,false > *|schema::simxml::Model::SimModel::SimPlacement_Axis2Placement2D_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement3D_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement3D_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimPlacement_Axis2Placement3D_Default,false > *|schema::simxml::Model::SimModel::SimPlacement_Axis2Placement3D_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimRepresentationMap_RepresentationMap_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimRepresentationMap_RepresentationMap_Default_false_t", "schema::simxml::Model::SimModel::SimRepresentationMap_RepresentationMap_Default_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimRepresentationMap_RepresentationMap_Default,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimShapeRepresentation_ShapeRepresentation_Default_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimShapeRepresentation_ShapeRepresentation_Default_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::ResourcesGeometry::SimShapeRepresentation_ShapeRepresentation_Default,false > *|schema::simxml::Model::SimModel::SimShapeRepresentation_ShapeRepresentation_Default_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_BldgCompGroup_ZoneEquipment_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_BldgCompGroup_ZoneEquipment_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::SimModelCore::SimGroup_BldgCompGroup_ZoneEquipment,false > *|schema::simxml::Model::SimModel::SimGroup_BldgCompGroup_ZoneEquipment_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_HvacDemandGroup_WaterSystem_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_HvacDemandGroup_WaterSystem_false_t", "xsd::cxx::tree::sequence< ::schema::simxml::SimModelCore::SimGroup_HvacDemandGroup_WaterSystem,false > *|schema::simxml::Model::SimModel::SimGroup_HvacDemandGroup_WaterSystem_sequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneGroup_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneGroup_false_t", "schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneGroup_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::SimModelCore::SimGroup_SpatialZoneGroup_ZoneGroup,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneHvacGroup_false_t = {"_p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneHvacGroup_false_t", "schema::simxml::Model::SimModel::SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence *|xsd::cxx::tree::sequence< ::schema::simxml::SimModelCore::SimGroup_SpatialZoneGroup_ZoneHvacGroup,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__severity = {"_p_xsd__cxx__tree__severity", "::xsd::cxx::tree::severity *|xml_schema::severity *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t = {"_p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t", "xml_schema::simple_type *|xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t = {"_p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t", "schema::simxml::Model::SimModel::SimModelUnitsVersion_type *|schema::simxml::Model::SimModel::SimModelSchemaIDKey_type *|::xsd::cxx::tree::string< char,xsd::cxx::tree::simple_type > *|schema::simxml::Model::SimModel::SimModelSchemaVersion_type *|schema::simxml::Model::SimModel::SimModelUnitDefaultsVersion_type *|::xml_schema::string *|xml_schema::string *|schema::simxml::Model::SimModel::SimModelVersion_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t = {"_p_xsd__cxx__tree__timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t", "xsd::cxx::tree::time< char,xsd::cxx::tree::simple_type< char,xsd::cxx::tree::_type > > *|xml_schema::time *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__time_zone = {"_p_xsd__cxx__tree__time_zone", "::xsd::cxx::tree::time_zone *|xml_schema::time_zone *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__tokenT_char_xsd__cxx__tree__normalized_string_t = {"_p_xsd__cxx__tree__tokenT_char_xsd__cxx__tree__normalized_string_t", "::xsd::cxx::tree::token< char,xsd::cxx::tree::normalized_string > *|xml_schema::token *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__unexpected_elementT_char_t = {"_p_xsd__cxx__tree__unexpected_elementT_char_t", "::xsd::cxx::tree::unexpected_element< char > *|xml_schema::unexpected_element *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__unexpected_enumeratorT_char_t = {"_p_xsd__cxx__tree__unexpected_enumeratorT_char_t", "::xsd::cxx::tree::unexpected_enumerator< char > *|xml_schema::unexpected_enumerator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__uriT_char_xsd__cxx__tree__simple_type_t = {"_p_xsd__cxx__tree__uriT_char_xsd__cxx__tree__simple_type_t", "xml_schema::uri *|::xsd::cxx::tree::uri< char,xsd::cxx::tree::simple_type > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__tree__user_data_keys_templateT_0_t = {"_p_xsd__cxx__tree__user_data_keys_templateT_0_t", "xsd::cxx::tree::user_data_keys_template< 0 > *|xsd::cxx::tree::user_data_keys *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_xsd__cxx__xml__error_handlerT_char_t = {"_p_xsd__cxx__xml__error_handlerT_char_t", "::xsd::cxx::xml::error_handler< char > *|xml_schema::error_handler *|::xml_schema::error_handler *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_ApplicableOccurrence_optional,
  &_swigt__p_ApplicableOccurrence_traits,
  &_swigt__p_ApplicableOccurrence_type,
  &_swigt__p_AssignedToFlowElement_optional,
  &_swigt__p_AssignedToFlowElement_traits,
  &_swigt__p_AssignedToFlowElement_type,
  &_swigt__p_AssignedToGroups_optional,
  &_swigt__p_AssignedToGroups_traits,
  &_swigt__p_AssignedToGroups_type,
  &_swigt__p_ChangeFromTemplate_optional,
  &_swigt__p_ChangeFromTemplate_traits,
  &_swigt__p_ChangeFromTemplate_type,
  &_swigt__p_CompositionType_optional,
  &_swigt__p_CompositionType_traits,
  &_swigt__p_CompositionType_type,
  &_swigt__p_ContainingBuildings_optional,
  &_swigt__p_ContainingBuildings_traits,
  &_swigt__p_ContainingBuildings_type,
  &_swigt__p_ContainingSpatialStructure_optional,
  &_swigt__p_ContainingSpatialStructure_traits,
  &_swigt__p_ContainingSpatialStructure_type,
  &_swigt__p_ControlElementID_optional,
  &_swigt__p_ControlElementID_traits,
  &_swigt__p_ControlElementID_type,
  &_swigt__p_ControlledBy_optional,
  &_swigt__p_ControlledBy_traits,
  &_swigt__p_ControlledBy_type,
  &_swigt__p_DecimalPrecision_optional,
  &_swigt__p_DecimalPrecision_traits,
  &_swigt__p_DecimalPrecision_type,
  &_swigt__p_Decomposes_optional,
  &_swigt__p_Decomposes_traits,
  &_swigt__p_Decomposes_type,
  &_swigt__p_Description_optional,
  &_swigt__p_Description_traits,
  &_swigt__p_Description_type,
  &_swigt__p_DockedToPort_optional,
  &_swigt__p_DockedToPort_traits,
  &_swigt__p_DockedToPort_type,
  &_swigt__p_GeometricRepresentations_optional,
  &_swigt__p_GeometricRepresentations_traits,
  &_swigt__p_GeometricRepresentations_type,
  &_swigt__p_HasPropertySets_optional,
  &_swigt__p_HasPropertySets_traits,
  &_swigt__p_HasPropertySets_type,
  &_swigt__p_HasTemplateChanged_optional,
  &_swigt__p_HasTemplateChanged_traits,
  &_swigt__p_HasTemplateChanged_type,
  &_swigt__p_HostElement_optional,
  &_swigt__p_HostElement_traits,
  &_swigt__p_HostElement_type,
  &_swigt__p_IfcGlobalID_optional,
  &_swigt__p_IfcGlobalID_traits,
  &_swigt__p_IfcGlobalID_type,
  &_swigt__p_IfcName_optional,
  &_swigt__p_IfcName_traits,
  &_swigt__p_IfcName_type,
  &_swigt__p_IsAutoGenerated_optional,
  &_swigt__p_IsAutoGenerated_traits,
  &_swigt__p_IsAutoGenerated_type,
  &_swigt__p_IsTemplateObject_optional,
  &_swigt__p_IsTemplateObject_traits,
  &_swigt__p_IsTemplateObject_type,
  &_swigt__p_LocalPlacementCoordinates_optional,
  &_swigt__p_LocalPlacementCoordinates_traits,
  &_swigt__p_LocalPlacementCoordinates_type,
  &_swigt__p_LocalPlacementRotation_optional,
  &_swigt__p_LocalPlacementRotation_traits,
  &_swigt__p_LocalPlacementRotation_type,
  &_swigt__p_LocalPlacementX_optional,
  &_swigt__p_LocalPlacementX_traits,
  &_swigt__p_LocalPlacementX_type,
  &_swigt__p_LocalPlacementY_optional,
  &_swigt__p_LocalPlacementY_traits,
  &_swigt__p_LocalPlacementY_type,
  &_swigt__p_LocalPlacementZ_optional,
  &_swigt__p_LocalPlacementZ_traits,
  &_swigt__p_LocalPlacementZ_type,
  &_swigt__p_LongName_optional,
  &_swigt__p_LongName_traits,
  &_swigt__p_LongName_type,
  &_swigt__p_MemberUsedForDiagrams_optional,
  &_swigt__p_MemberUsedForDiagrams_traits,
  &_swigt__p_MemberUsedForDiagrams_type,
  &_swigt__p_Name_optional,
  &_swigt__p_Name_traits,
  &_swigt__p_Name_type,
  &_swigt__p_NevronSchematicLayout_optional,
  &_swigt__p_NevronSchematicLayout_traits,
  &_swigt__p_NevronSchematicLayout_type,
  &_swigt__p_ObjectCreationParams_optional,
  &_swigt__p_ObjectCreationParams_traits,
  &_swigt__p_ObjectCreationParams_type,
  &_swigt__p_ObjectIndex_optional,
  &_swigt__p_ObjectIndex_traits,
  &_swigt__p_ObjectIndex_type,
  &_swigt__p_ObjectName_optional,
  &_swigt__p_ObjectName_traits,
  &_swigt__p_ObjectName_type,
  &_swigt__p_ObjectOwnerHistory_optional,
  &_swigt__p_ObjectOwnerHistory_traits,
  &_swigt__p_ObjectOwnerHistory_type,
  &_swigt__p_ObjectType_optional,
  &_swigt__p_ObjectType_traits,
  &_swigt__p_ObjectType_type,
  &_swigt__p_ParentGroups_optional,
  &_swigt__p_ParentGroups_traits,
  &_swigt__p_ParentGroups_type,
  &_swigt__p_PlacementRelToContainingTypeDef_optional,
  &_swigt__p_PlacementRelToContainingTypeDef_traits,
  &_swigt__p_PlacementRelToContainingTypeDef_type,
  &_swigt__p_Placement_optional,
  &_swigt__p_Placement_traits,
  &_swigt__p_Placement_type,
  &_swigt__p_ProfileName_optional,
  &_swigt__p_ProfileName_traits,
  &_swigt__p_ProfileName_type,
  &_swigt__p_ProfileType_optional,
  &_swigt__p_ProfileType_traits,
  &_swigt__p_ProfileType_type,
  &_swigt__p_RefId_traits,
  &_swigt__p_RefId_type,
  &_swigt__p_RepresentationContext_optional,
  &_swigt__p_RepresentationContext_traits,
  &_swigt__p_RepresentationContext_type,
  &_swigt__p_RepresentationIdentifier_optional,
  &_swigt__p_RepresentationIdentifier_traits,
  &_swigt__p_RepresentationIdentifier_type,
  &_swigt__p_RepresentationItems_optional,
  &_swigt__p_RepresentationItems_traits,
  &_swigt__p_RepresentationItems_type,
  &_swigt__p_RepresentationType_optional,
  &_swigt__p_RepresentationType_traits,
  &_swigt__p_RepresentationType_type,
  &_swigt__p_SelectedPropertyGroups_optional,
  &_swigt__p_SelectedPropertyGroups_traits,
  &_swigt__p_SelectedPropertyGroups_type,
  &_swigt__p_SimAddress_Postal_Default_const_iterator,
  &_swigt__p_SimAddress_Postal_Default_iterator,
  &_swigt__p_SimAddress_Postal_Default_sequence,
  &_swigt__p_SimAddress_Postal_Default_traits,
  &_swigt__p_SimAddress_Postal_Default_type,
  &_swigt__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_const_iterator,
  &_swigt__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_iterator,
  &_swigt__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence,
  &_swigt__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_traits,
  &_swigt__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_type,
  &_swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_const_iterator,
  &_swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_iterator,
  &_swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_sequence,
  &_swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_traits,
  &_swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_type,
  &_swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_const_iterator,
  &_swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_iterator,
  &_swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_sequence,
  &_swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_traits,
  &_swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_type,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_const_iterator,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_iterator,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_sequence,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_traits,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_type,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_const_iterator,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_iterator,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_sequence,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_traits,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_type,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_const_iterator,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_iterator,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_sequence,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_traits,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_type,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_const_iterator,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_iterator,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_sequence,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_traits,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_type,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_const_iterator,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_iterator,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_sequence,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_traits,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_type,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_const_iterator,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_iterator,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_sequence,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_traits,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_type,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_const_iterator,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_iterator,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_sequence,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_traits,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_type,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_const_iterator,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_iterator,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_sequence,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_traits,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_type,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_const_iterator,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_iterator,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_sequence,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_traits,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_type,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_const_iterator,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_iterator,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_sequence,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_traits,
  &_swigt__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_type,
  &_swigt__p_SimAppObjNameDefault_SiteContext_AdjacentSite_const_iterator,
  &_swigt__p_SimAppObjNameDefault_SiteContext_AdjacentSite_iterator,
  &_swigt__p_SimAppObjNameDefault_SiteContext_AdjacentSite_sequence,
  &_swigt__p_SimAppObjNameDefault_SiteContext_AdjacentSite_traits,
  &_swigt__p_SimAppObjNameDefault_SiteContext_AdjacentSite_type,
  &_swigt__p_SimAppObjNameDefault_SiteContext_SolarObstruction_const_iterator,
  &_swigt__p_SimAppObjNameDefault_SiteContext_SolarObstruction_iterator,
  &_swigt__p_SimAppObjNameDefault_SiteContext_SolarObstruction_sequence,
  &_swigt__p_SimAppObjNameDefault_SiteContext_SolarObstruction_traits,
  &_swigt__p_SimAppObjNameDefault_SiteContext_SolarObstruction_type,
  &_swigt__p_SimAppObjNameDefault_Space_Space_const_iterator,
  &_swigt__p_SimAppObjNameDefault_Space_Space_iterator,
  &_swigt__p_SimAppObjNameDefault_Space_Space_sequence,
  &_swigt__p_SimAppObjNameDefault_Space_Space_traits,
  &_swigt__p_SimAppObjNameDefault_Space_Space_type,
  &_swigt__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_const_iterator,
  &_swigt__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_iterator,
  &_swigt__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_sequence,
  &_swigt__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_traits,
  &_swigt__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_type,
  &_swigt__p_SimAppObjNameDefault_SpatialContainer_Building_const_iterator,
  &_swigt__p_SimAppObjNameDefault_SpatialContainer_Building_iterator,
  &_swigt__p_SimAppObjNameDefault_SpatialContainer_Building_sequence,
  &_swigt__p_SimAppObjNameDefault_SpatialContainer_Building_traits,
  &_swigt__p_SimAppObjNameDefault_SpatialContainer_Building_type,
  &_swigt__p_SimAppObjNameDefault_SpatialContainer_Project_const_iterator,
  &_swigt__p_SimAppObjNameDefault_SpatialContainer_Project_iterator,
  &_swigt__p_SimAppObjNameDefault_SpatialContainer_Project_sequence,
  &_swigt__p_SimAppObjNameDefault_SpatialContainer_Project_traits,
  &_swigt__p_SimAppObjNameDefault_SpatialContainer_Project_type,
  &_swigt__p_SimAppObjNameDefault_SpatialContainer_Site_const_iterator,
  &_swigt__p_SimAppObjNameDefault_SpatialContainer_Site_iterator,
  &_swigt__p_SimAppObjNameDefault_SpatialContainer_Site_sequence,
  &_swigt__p_SimAppObjNameDefault_SpatialContainer_Site_traits,
  &_swigt__p_SimAppObjNameDefault_SpatialContainer_Site_type,
  &_swigt__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_const_iterator,
  &_swigt__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_iterator,
  &_swigt__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_sequence,
  &_swigt__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_traits,
  &_swigt__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_type,
  &_swigt__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_const_iterator,
  &_swigt__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_iterator,
  &_swigt__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_sequence,
  &_swigt__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_traits,
  &_swigt__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_type,
  &_swigt__p_SimAppObjNameDefault_SpatialZone_ThermalZone_const_iterator,
  &_swigt__p_SimAppObjNameDefault_SpatialZone_ThermalZone_iterator,
  &_swigt__p_SimAppObjNameDefault_SpatialZone_ThermalZone_sequence,
  &_swigt__p_SimAppObjNameDefault_SpatialZone_ThermalZone_traits,
  &_swigt__p_SimAppObjNameDefault_SpatialZone_ThermalZone_type,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_const_iterator,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_iterator,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_sequence,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_traits,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_type,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_const_iterator,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_iterator,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_sequence,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_traits,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_type,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_const_iterator,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_iterator,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_sequence,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_traits,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_type,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_const_iterator,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_iterator,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_sequence,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_traits,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_type,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_const_iterator,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_iterator,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_sequence,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_traits,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_type,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_const_iterator,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_iterator,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_sequence,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_traits,
  &_swigt__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_type,
  &_swigt__p_SimAppPreferences_AppPreferences_AutoSaveInterval_const_iterator,
  &_swigt__p_SimAppPreferences_AppPreferences_AutoSaveInterval_iterator,
  &_swigt__p_SimAppPreferences_AppPreferences_AutoSaveInterval_sequence,
  &_swigt__p_SimAppPreferences_AppPreferences_AutoSaveInterval_traits,
  &_swigt__p_SimAppPreferences_AppPreferences_AutoSaveInterval_type,
  &_swigt__p_SimAppPreferences_AppPreferences_AutoSave_const_iterator,
  &_swigt__p_SimAppPreferences_AppPreferences_AutoSave_iterator,
  &_swigt__p_SimAppPreferences_AppPreferences_AutoSave_sequence,
  &_swigt__p_SimAppPreferences_AppPreferences_AutoSave_traits,
  &_swigt__p_SimAppPreferences_AppPreferences_AutoSave_type,
  &_swigt__p_SimAppPreferences_AppPreferences_EPlusInstalPath_const_iterator,
  &_swigt__p_SimAppPreferences_AppPreferences_EPlusInstalPath_iterator,
  &_swigt__p_SimAppPreferences_AppPreferences_EPlusInstalPath_sequence,
  &_swigt__p_SimAppPreferences_AppPreferences_EPlusInstalPath_traits,
  &_swigt__p_SimAppPreferences_AppPreferences_EPlusInstalPath_type,
  &_swigt__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_const_iterator,
  &_swigt__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_iterator,
  &_swigt__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence,
  &_swigt__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_traits,
  &_swigt__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_type,
  &_swigt__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_const_iterator,
  &_swigt__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_iterator,
  &_swigt__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence,
  &_swigt__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_traits,
  &_swigt__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_type,
  &_swigt__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_const_iterator,
  &_swigt__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_iterator,
  &_swigt__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence,
  &_swigt__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_traits,
  &_swigt__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_type,
  &_swigt__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_const_iterator,
  &_swigt__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_iterator,
  &_swigt__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence,
  &_swigt__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_traits,
  &_swigt__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_type,
  &_swigt__p_SimBldgSiteParams_BuildingSite_Default_const_iterator,
  &_swigt__p_SimBldgSiteParams_BuildingSite_Default_iterator,
  &_swigt__p_SimBldgSiteParams_BuildingSite_Default_sequence,
  &_swigt__p_SimBldgSiteParams_BuildingSite_Default_traits,
  &_swigt__p_SimBldgSiteParams_BuildingSite_Default_type,
  &_swigt__p_SimBldgStoryParams_BuildingStory_Default_const_iterator,
  &_swigt__p_SimBldgStoryParams_BuildingStory_Default_iterator,
  &_swigt__p_SimBldgStoryParams_BuildingStory_Default_sequence,
  &_swigt__p_SimBldgStoryParams_BuildingStory_Default_traits,
  &_swigt__p_SimBldgStoryParams_BuildingStory_Default_type,
  &_swigt__p_SimBuildingStory_BuildingStory_Default_const_iterator,
  &_swigt__p_SimBuildingStory_BuildingStory_Default_iterator,
  &_swigt__p_SimBuildingStory_BuildingStory_Default_sequence,
  &_swigt__p_SimBuildingStory_BuildingStory_Default_traits,
  &_swigt__p_SimBuildingStory_BuildingStory_Default_type,
  &_swigt__p_SimBuilding_Building_Default_const_iterator,
  &_swigt__p_SimBuilding_Building_Default_iterator,
  &_swigt__p_SimBuilding_Building_Default_sequence,
  &_swigt__p_SimBuilding_Building_Default_traits,
  &_swigt__p_SimBuilding_Building_Default_type,
  &_swigt__p_SimCartesianTransformOperator_3D_Uniform_const_iterator,
  &_swigt__p_SimCartesianTransformOperator_3D_Uniform_iterator,
  &_swigt__p_SimCartesianTransformOperator_3D_Uniform_sequence,
  &_swigt__p_SimCartesianTransformOperator_3D_Uniform_traits,
  &_swigt__p_SimCartesianTransformOperator_3D_Uniform_type,
  &_swigt__p_SimClassification_ClassificationReference_SpaceCategoryBoma_const_iterator,
  &_swigt__p_SimClassification_ClassificationReference_SpaceCategoryBoma_iterator,
  &_swigt__p_SimClassification_ClassificationReference_SpaceCategoryBoma_sequence,
  &_swigt__p_SimClassification_ClassificationReference_SpaceCategoryBoma_traits,
  &_swigt__p_SimClassification_ClassificationReference_SpaceCategoryBoma_type,
  &_swigt__p_SimClassification_ClassificationReference_SpaceCategoryOwner_const_iterator,
  &_swigt__p_SimClassification_ClassificationReference_SpaceCategoryOwner_iterator,
  &_swigt__p_SimClassification_ClassificationReference_SpaceCategoryOwner_sequence,
  &_swigt__p_SimClassification_ClassificationReference_SpaceCategoryOwner_traits,
  &_swigt__p_SimClassification_ClassificationReference_SpaceCategoryOwner_type,
  &_swigt__p_SimClassification_ClassificationReference_SpaceTypeOwner_const_iterator,
  &_swigt__p_SimClassification_ClassificationReference_SpaceTypeOwner_iterator,
  &_swigt__p_SimClassification_ClassificationReference_SpaceTypeOwner_sequence,
  &_swigt__p_SimClassification_ClassificationReference_SpaceTypeOwner_traits,
  &_swigt__p_SimClassification_ClassificationReference_SpaceTypeOwner_type,
  &_swigt__p_SimClassification_ClassificationSystem_Default_const_iterator,
  &_swigt__p_SimClassification_ClassificationSystem_Default_iterator,
  &_swigt__p_SimClassification_ClassificationSystem_Default_sequence,
  &_swigt__p_SimClassification_ClassificationSystem_Default_traits,
  &_swigt__p_SimClassification_ClassificationSystem_Default_type,
  &_swigt__p_SimClassification_ClassificationSystem_OmniClass_const_iterator,
  &_swigt__p_SimClassification_ClassificationSystem_OmniClass_iterator,
  &_swigt__p_SimClassification_ClassificationSystem_OmniClass_sequence,
  &_swigt__p_SimClassification_ClassificationSystem_OmniClass_traits,
  &_swigt__p_SimClassification_ClassificationSystem_OmniClass_type,
  &_swigt__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_const_iterator,
  &_swigt__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_iterator,
  &_swigt__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence,
  &_swigt__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_traits,
  &_swigt__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_type,
  &_swigt__p_SimConnectedFaceSet_ConnectedFaceSet_Default_const_iterator,
  &_swigt__p_SimConnectedFaceSet_ConnectedFaceSet_Default_iterator,
  &_swigt__p_SimConnectedFaceSet_ConnectedFaceSet_Default_sequence,
  &_swigt__p_SimConnectedFaceSet_ConnectedFaceSet_Default_traits,
  &_swigt__p_SimConnectedFaceSet_ConnectedFaceSet_Default_type,
  &_swigt__p_SimConnection_HotWaterFlow_Default_const_iterator,
  &_swigt__p_SimConnection_HotWaterFlow_Default_iterator,
  &_swigt__p_SimConnection_HotWaterFlow_Default_sequence,
  &_swigt__p_SimConnection_HotWaterFlow_Default_traits,
  &_swigt__p_SimConnection_HotWaterFlow_Default_type,
  &_swigt__p_SimConnection_ZoneAirFlow_Default_const_iterator,
  &_swigt__p_SimConnection_ZoneAirFlow_Default_iterator,
  &_swigt__p_SimConnection_ZoneAirFlow_Default_sequence,
  &_swigt__p_SimConnection_ZoneAirFlow_Default_traits,
  &_swigt__p_SimConnection_ZoneAirFlow_Default_type,
  &_swigt__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_const_iterator,
  &_swigt__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_iterator,
  &_swigt__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence,
  &_swigt__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_traits,
  &_swigt__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_type,
  &_swigt__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_const_iterator,
  &_swigt__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_iterator,
  &_swigt__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence,
  &_swigt__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_traits,
  &_swigt__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_type,
  &_swigt__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_const_iterator,
  &_swigt__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_iterator,
  &_swigt__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence,
  &_swigt__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_traits,
  &_swigt__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_type,
  &_swigt__p_SimControlScheme_SetpointScheme_SingleHeating_const_iterator,
  &_swigt__p_SimControlScheme_SetpointScheme_SingleHeating_iterator,
  &_swigt__p_SimControlScheme_SetpointScheme_SingleHeating_sequence,
  &_swigt__p_SimControlScheme_SetpointScheme_SingleHeating_traits,
  &_swigt__p_SimControlScheme_SetpointScheme_SingleHeating_type,
  &_swigt__p_SimController_SupplyWater_Temperature_const_iterator,
  &_swigt__p_SimController_SupplyWater_Temperature_iterator,
  &_swigt__p_SimController_SupplyWater_Temperature_sequence,
  &_swigt__p_SimController_SupplyWater_Temperature_traits,
  &_swigt__p_SimController_SupplyWater_Temperature_type,
  &_swigt__p_SimController_ZoneControlTemperature_Thermostat_const_iterator,
  &_swigt__p_SimController_ZoneControlTemperature_Thermostat_iterator,
  &_swigt__p_SimController_ZoneControlTemperature_Thermostat_sequence,
  &_swigt__p_SimController_ZoneControlTemperature_Thermostat_traits,
  &_swigt__p_SimController_ZoneControlTemperature_Thermostat_type,
  &_swigt__p_SimDerivedUnitType_DerivedUnit_Default_const_iterator,
  &_swigt__p_SimDerivedUnitType_DerivedUnit_Default_iterator,
  &_swigt__p_SimDerivedUnitType_DerivedUnit_Default_sequence,
  &_swigt__p_SimDerivedUnitType_DerivedUnit_Default_traits,
  &_swigt__p_SimDerivedUnitType_DerivedUnit_Default_type,
  &_swigt__p_SimDistributionPort_AirFlowPort_Air_In_const_iterator,
  &_swigt__p_SimDistributionPort_AirFlowPort_Air_In_iterator,
  &_swigt__p_SimDistributionPort_AirFlowPort_Air_In_sequence,
  &_swigt__p_SimDistributionPort_AirFlowPort_Air_In_traits,
  &_swigt__p_SimDistributionPort_AirFlowPort_Air_In_type,
  &_swigt__p_SimDistributionPort_AirFlowPort_Air_Out_const_iterator,
  &_swigt__p_SimDistributionPort_AirFlowPort_Air_Out_iterator,
  &_swigt__p_SimDistributionPort_AirFlowPort_Air_Out_sequence,
  &_swigt__p_SimDistributionPort_AirFlowPort_Air_Out_traits,
  &_swigt__p_SimDistributionPort_AirFlowPort_Air_Out_type,
  &_swigt__p_SimDistributionPort_HotWaterFlowPort_Water_In_const_iterator,
  &_swigt__p_SimDistributionPort_HotWaterFlowPort_Water_In_iterator,
  &_swigt__p_SimDistributionPort_HotWaterFlowPort_Water_In_sequence,
  &_swigt__p_SimDistributionPort_HotWaterFlowPort_Water_In_traits,
  &_swigt__p_SimDistributionPort_HotWaterFlowPort_Water_In_type,
  &_swigt__p_SimDistributionPort_HotWaterFlowPort_Water_Out_const_iterator,
  &_swigt__p_SimDistributionPort_HotWaterFlowPort_Water_Out_iterator,
  &_swigt__p_SimDistributionPort_HotWaterFlowPort_Water_Out_sequence,
  &_swigt__p_SimDistributionPort_HotWaterFlowPort_Water_Out_traits,
  &_swigt__p_SimDistributionPort_HotWaterFlowPort_Water_Out_type,
  &_swigt__p_SimFaceBound_FaceBound_Default_const_iterator,
  &_swigt__p_SimFaceBound_FaceBound_Default_iterator,
  &_swigt__p_SimFaceBound_FaceBound_Default_sequence,
  &_swigt__p_SimFaceBound_FaceBound_Default_traits,
  &_swigt__p_SimFaceBound_FaceBound_Default_type,
  &_swigt__p_SimFaceBound_FaceBound_FaceOuterBound_const_iterator,
  &_swigt__p_SimFaceBound_FaceBound_FaceOuterBound_iterator,
  &_swigt__p_SimFaceBound_FaceBound_FaceOuterBound_sequence,
  &_swigt__p_SimFaceBound_FaceBound_FaceOuterBound_traits,
  &_swigt__p_SimFaceBound_FaceBound_FaceOuterBound_type,
  &_swigt__p_SimFace_Face_Default_const_iterator,
  &_swigt__p_SimFace_Face_Default_iterator,
  &_swigt__p_SimFace_Face_Default_sequence,
  &_swigt__p_SimFace_Face_Default_traits,
  &_swigt__p_SimFace_Face_Default_type,
  &_swigt__p_SimFeatureElementSubtraction_Void_Opening_const_iterator,
  &_swigt__p_SimFeatureElementSubtraction_Void_Opening_iterator,
  &_swigt__p_SimFeatureElementSubtraction_Void_Opening_sequence,
  &_swigt__p_SimFeatureElementSubtraction_Void_Opening_traits,
  &_swigt__p_SimFeatureElementSubtraction_Void_Opening_type,
  &_swigt__p_SimFlowController_Valve_Default_const_iterator,
  &_swigt__p_SimFlowController_Valve_Default_iterator,
  &_swigt__p_SimFlowController_Valve_Default_sequence,
  &_swigt__p_SimFlowController_Valve_Default_traits,
  &_swigt__p_SimFlowController_Valve_Default_type,
  &_swigt__p_SimFlowController_Valve_TemperingValve_const_iterator,
  &_swigt__p_SimFlowController_Valve_TemperingValve_iterator,
  &_swigt__p_SimFlowController_Valve_TemperingValve_sequence,
  &_swigt__p_SimFlowController_Valve_TemperingValve_traits,
  &_swigt__p_SimFlowController_Valve_TemperingValve_type,
  &_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_const_iterator,
  &_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_iterator,
  &_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_sequence,
  &_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_traits,
  &_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_type,
  &_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_const_iterator,
  &_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_iterator,
  &_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_sequence,
  &_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_traits,
  &_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_type,
  &_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_const_iterator,
  &_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_iterator,
  &_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence,
  &_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_traits,
  &_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_type,
  &_swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_const_iterator,
  &_swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_iterator,
  &_swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence,
  &_swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_traits,
  &_swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_type,
  &_swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_const_iterator,
  &_swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_iterator,
  &_swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence,
  &_swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_traits,
  &_swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_type,
  &_swigt__p_SimFlowFitting_Default_Default_const_iterator,
  &_swigt__p_SimFlowFitting_Default_Default_iterator,
  &_swigt__p_SimFlowFitting_Default_Default_sequence,
  &_swigt__p_SimFlowFitting_Default_Default_traits,
  &_swigt__p_SimFlowFitting_Default_Default_type,
  &_swigt__p_SimFlowFitting_Mixer_DemandProxyMixerWater_const_iterator,
  &_swigt__p_SimFlowFitting_Mixer_DemandProxyMixerWater_iterator,
  &_swigt__p_SimFlowFitting_Mixer_DemandProxyMixerWater_sequence,
  &_swigt__p_SimFlowFitting_Mixer_DemandProxyMixerWater_traits,
  &_swigt__p_SimFlowFitting_Mixer_DemandProxyMixerWater_type,
  &_swigt__p_SimFlowFitting_Splitter_DemandProxySplitterWater_const_iterator,
  &_swigt__p_SimFlowFitting_Splitter_DemandProxySplitterWater_iterator,
  &_swigt__p_SimFlowFitting_Splitter_DemandProxySplitterWater_sequence,
  &_swigt__p_SimFlowFitting_Splitter_DemandProxySplitterWater_traits,
  &_swigt__p_SimFlowFitting_Splitter_DemandProxySplitterWater_type,
  &_swigt__p_SimFlowMover_Pump_VariableSpeedReturn_const_iterator,
  &_swigt__p_SimFlowMover_Pump_VariableSpeedReturn_iterator,
  &_swigt__p_SimFlowMover_Pump_VariableSpeedReturn_sequence,
  &_swigt__p_SimFlowMover_Pump_VariableSpeedReturn_traits,
  &_swigt__p_SimFlowMover_Pump_VariableSpeedReturn_type,
  &_swigt__p_SimFlowPlant_Boiler_BoilerHotWater_const_iterator,
  &_swigt__p_SimFlowPlant_Boiler_BoilerHotWater_iterator,
  &_swigt__p_SimFlowPlant_Boiler_BoilerHotWater_sequence,
  &_swigt__p_SimFlowPlant_Boiler_BoilerHotWater_traits,
  &_swigt__p_SimFlowPlant_Boiler_BoilerHotWater_type,
  &_swigt__p_SimFlowSegment_Pipe_Indoor_const_iterator,
  &_swigt__p_SimFlowSegment_Pipe_Indoor_iterator,
  &_swigt__p_SimFlowSegment_Pipe_Indoor_sequence,
  &_swigt__p_SimFlowSegment_Pipe_Indoor_traits,
  &_swigt__p_SimFlowSegment_Pipe_Indoor_type,
  &_swigt__p_SimGeomBooleanResult_BooleanClippingResult_Default_const_iterator,
  &_swigt__p_SimGeomBooleanResult_BooleanClippingResult_Default_iterator,
  &_swigt__p_SimGeomBooleanResult_BooleanClippingResult_Default_sequence,
  &_swigt__p_SimGeomBooleanResult_BooleanClippingResult_Default_traits,
  &_swigt__p_SimGeomBooleanResult_BooleanClippingResult_Default_type,
  &_swigt__p_SimGeomCurve_Polyline_Default_const_iterator,
  &_swigt__p_SimGeomCurve_Polyline_Default_iterator,
  &_swigt__p_SimGeomCurve_Polyline_Default_sequence,
  &_swigt__p_SimGeomCurve_Polyline_Default_traits,
  &_swigt__p_SimGeomCurve_Polyline_Default_type,
  &_swigt__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_const_iterator,
  &_swigt__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_iterator,
  &_swigt__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence,
  &_swigt__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_traits,
  &_swigt__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_type,
  &_swigt__p_SimGeomPoint_Point_CartesianPoint_const_iterator,
  &_swigt__p_SimGeomPoint_Point_CartesianPoint_iterator,
  &_swigt__p_SimGeomPoint_Point_CartesianPoint_sequence,
  &_swigt__p_SimGeomPoint_Point_CartesianPoint_traits,
  &_swigt__p_SimGeomPoint_Point_CartesianPoint_type,
  &_swigt__p_SimGeomSolidModel_FacetedBrep_Default_const_iterator,
  &_swigt__p_SimGeomSolidModel_FacetedBrep_Default_iterator,
  &_swigt__p_SimGeomSolidModel_FacetedBrep_Default_sequence,
  &_swigt__p_SimGeomSolidModel_FacetedBrep_Default_traits,
  &_swigt__p_SimGeomSolidModel_FacetedBrep_Default_type,
  &_swigt__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_const_iterator,
  &_swigt__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_iterator,
  &_swigt__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence,
  &_swigt__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_traits,
  &_swigt__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_type,
  &_swigt__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_const_iterator,
  &_swigt__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_iterator,
  &_swigt__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence,
  &_swigt__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_traits,
  &_swigt__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_type,
  &_swigt__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_const_iterator,
  &_swigt__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_iterator,
  &_swigt__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence,
  &_swigt__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_traits,
  &_swigt__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_type,
  &_swigt__p_SimGeomSurface_ElementarySurface_Plane_const_iterator,
  &_swigt__p_SimGeomSurface_ElementarySurface_Plane_iterator,
  &_swigt__p_SimGeomSurface_ElementarySurface_Plane_sequence,
  &_swigt__p_SimGeomSurface_ElementarySurface_Plane_traits,
  &_swigt__p_SimGeomSurface_ElementarySurface_Plane_type,
  &_swigt__p_SimGeomVector_Vector_Default_const_iterator,
  &_swigt__p_SimGeomVector_Vector_Default_iterator,
  &_swigt__p_SimGeomVector_Vector_Default_sequence,
  &_swigt__p_SimGeomVector_Vector_Default_traits,
  &_swigt__p_SimGeomVector_Vector_Default_type,
  &_swigt__p_SimGeomVector_Vector_Direction_const_iterator,
  &_swigt__p_SimGeomVector_Vector_Direction_iterator,
  &_swigt__p_SimGeomVector_Vector_Direction_sequence,
  &_swigt__p_SimGeomVector_Vector_Direction_traits,
  &_swigt__p_SimGeomVector_Vector_Direction_type,
  &_swigt__p_SimGroup_BldgCompGroup_ZoneEquipment_const_iterator,
  &_swigt__p_SimGroup_BldgCompGroup_ZoneEquipment_iterator,
  &_swigt__p_SimGroup_BldgCompGroup_ZoneEquipment_sequence,
  &_swigt__p_SimGroup_BldgCompGroup_ZoneEquipment_traits,
  &_swigt__p_SimGroup_BldgCompGroup_ZoneEquipment_type,
  &_swigt__p_SimGroup_HvacDemandGroup_WaterSystem_const_iterator,
  &_swigt__p_SimGroup_HvacDemandGroup_WaterSystem_iterator,
  &_swigt__p_SimGroup_HvacDemandGroup_WaterSystem_sequence,
  &_swigt__p_SimGroup_HvacDemandGroup_WaterSystem_traits,
  &_swigt__p_SimGroup_HvacDemandGroup_WaterSystem_type,
  &_swigt__p_SimGroup_SpatialZoneGroup_ZoneGroup_const_iterator,
  &_swigt__p_SimGroup_SpatialZoneGroup_ZoneGroup_iterator,
  &_swigt__p_SimGroup_SpatialZoneGroup_ZoneGroup_sequence,
  &_swigt__p_SimGroup_SpatialZoneGroup_ZoneGroup_traits,
  &_swigt__p_SimGroup_SpatialZoneGroup_ZoneGroup_type,
  &_swigt__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_const_iterator,
  &_swigt__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_iterator,
  &_swigt__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence,
  &_swigt__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_traits,
  &_swigt__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_type,
  &_swigt__p_SimInternalLoad_Equipment_Electric_const_iterator,
  &_swigt__p_SimInternalLoad_Equipment_Electric_iterator,
  &_swigt__p_SimInternalLoad_Equipment_Electric_sequence,
  &_swigt__p_SimInternalLoad_Equipment_Electric_traits,
  &_swigt__p_SimInternalLoad_Equipment_Electric_type,
  &_swigt__p_SimInternalLoad_Lights_Default_const_iterator,
  &_swigt__p_SimInternalLoad_Lights_Default_iterator,
  &_swigt__p_SimInternalLoad_Lights_Default_sequence,
  &_swigt__p_SimInternalLoad_Lights_Default_traits,
  &_swigt__p_SimInternalLoad_Lights_Default_type,
  &_swigt__p_SimInternalLoad_People_Default_const_iterator,
  &_swigt__p_SimInternalLoad_People_Default_iterator,
  &_swigt__p_SimInternalLoad_People_Default_sequence,
  &_swigt__p_SimInternalLoad_People_Default_traits,
  &_swigt__p_SimInternalLoad_People_Default_type,
  &_swigt__p_SimList_ConnectorList_SimConnections_const_iterator,
  &_swigt__p_SimList_ConnectorList_SimConnections_iterator,
  &_swigt__p_SimList_ConnectorList_SimConnections_sequence,
  &_swigt__p_SimList_ConnectorList_SimConnections_traits,
  &_swigt__p_SimList_ConnectorList_SimConnections_type,
  &_swigt__p_SimList_EquipmentList_ZoneHvac_const_iterator,
  &_swigt__p_SimList_EquipmentList_ZoneHvac_iterator,
  &_swigt__p_SimList_EquipmentList_ZoneHvac_sequence,
  &_swigt__p_SimList_EquipmentList_ZoneHvac_traits,
  &_swigt__p_SimList_EquipmentList_ZoneHvac_type,
  &_swigt__p_SimList_MaterialList_Default_const_iterator,
  &_swigt__p_SimList_MaterialList_Default_iterator,
  &_swigt__p_SimList_MaterialList_Default_sequence,
  &_swigt__p_SimList_MaterialList_Default_traits,
  &_swigt__p_SimList_MaterialList_Default_type,
  &_swigt__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_const_iterator,
  &_swigt__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_iterator,
  &_swigt__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence,
  &_swigt__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_traits,
  &_swigt__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_type,
  &_swigt__p_SimList_SchemeList_DemandManagerScheme_const_iterator,
  &_swigt__p_SimList_SchemeList_DemandManagerScheme_iterator,
  &_swigt__p_SimList_SchemeList_DemandManagerScheme_sequence,
  &_swigt__p_SimList_SchemeList_DemandManagerScheme_traits,
  &_swigt__p_SimList_SchemeList_DemandManagerScheme_type,
  &_swigt__p_SimList_SchemeList_PlantOperatingScheme_const_iterator,
  &_swigt__p_SimList_SchemeList_PlantOperatingScheme_iterator,
  &_swigt__p_SimList_SchemeList_PlantOperatingScheme_sequence,
  &_swigt__p_SimList_SchemeList_PlantOperatingScheme_traits,
  &_swigt__p_SimList_SchemeList_PlantOperatingScheme_type,
  &_swigt__p_SimList_SchemeList_WaterTempControlScheme_const_iterator,
  &_swigt__p_SimList_SchemeList_WaterTempControlScheme_iterator,
  &_swigt__p_SimList_SchemeList_WaterTempControlScheme_sequence,
  &_swigt__p_SimList_SchemeList_WaterTempControlScheme_traits,
  &_swigt__p_SimList_SchemeList_WaterTempControlScheme_type,
  &_swigt__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_const_iterator,
  &_swigt__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_iterator,
  &_swigt__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence,
  &_swigt__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_traits,
  &_swigt__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_type,
  &_swigt__p_SimLocalPlacement_LocalPlacement_RelativePlacement_const_iterator,
  &_swigt__p_SimLocalPlacement_LocalPlacement_RelativePlacement_iterator,
  &_swigt__p_SimLocalPlacement_LocalPlacement_RelativePlacement_sequence,
  &_swigt__p_SimLocalPlacement_LocalPlacement_RelativePlacement_traits,
  &_swigt__p_SimLocalPlacement_LocalPlacement_RelativePlacement_type,
  &_swigt__p_SimLocationAndWeather_DesignDay_Default_const_iterator,
  &_swigt__p_SimLocationAndWeather_DesignDay_Default_iterator,
  &_swigt__p_SimLocationAndWeather_DesignDay_Default_sequence,
  &_swigt__p_SimLocationAndWeather_DesignDay_Default_traits,
  &_swigt__p_SimLocationAndWeather_DesignDay_Default_type,
  &_swigt__p_SimLocationAndWeather_Location_Default_const_iterator,
  &_swigt__p_SimLocationAndWeather_Location_Default_iterator,
  &_swigt__p_SimLocationAndWeather_Location_Default_sequence,
  &_swigt__p_SimLocationAndWeather_Location_Default_traits,
  &_swigt__p_SimLocationAndWeather_Location_Default_type,
  &_swigt__p_SimLoop_Loop_PolyLoop_const_iterator,
  &_swigt__p_SimLoop_Loop_PolyLoop_iterator,
  &_swigt__p_SimLoop_Loop_PolyLoop_sequence,
  &_swigt__p_SimLoop_Loop_PolyLoop_traits,
  &_swigt__p_SimLoop_Loop_PolyLoop_type,
  &_swigt__p_SimMappedRepresentationItem_Default_Default_const_iterator,
  &_swigt__p_SimMappedRepresentationItem_Default_Default_iterator,
  &_swigt__p_SimMappedRepresentationItem_Default_Default_sequence,
  &_swigt__p_SimMappedRepresentationItem_Default_Default_traits,
  &_swigt__p_SimMappedRepresentationItem_Default_Default_type,
  &_swigt__p_SimMaterialLayerSet_Default_Default_const_iterator,
  &_swigt__p_SimMaterialLayerSet_Default_Default_iterator,
  &_swigt__p_SimMaterialLayerSet_Default_Default_sequence,
  &_swigt__p_SimMaterialLayerSet_Default_Default_traits,
  &_swigt__p_SimMaterialLayerSet_Default_Default_type,
  &_swigt__p_SimMaterialLayerSet_GlazingLayerSet_Window_const_iterator,
  &_swigt__p_SimMaterialLayerSet_GlazingLayerSet_Window_iterator,
  &_swigt__p_SimMaterialLayerSet_GlazingLayerSet_Window_sequence,
  &_swigt__p_SimMaterialLayerSet_GlazingLayerSet_Window_traits,
  &_swigt__p_SimMaterialLayerSet_GlazingLayerSet_Window_type,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_const_iterator,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_iterator,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_traits,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_type,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Door_const_iterator,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Door_iterator,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Door_sequence,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Door_traits,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Door_type,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_const_iterator,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_iterator,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_traits,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_type,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_const_iterator,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_iterator,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_traits,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_type,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_const_iterator,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_iterator,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_traits,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_type,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_const_iterator,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_iterator,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_traits,
  &_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_type,
  &_swigt__p_SimMaterialLayer_GlazingMaterialLayer_Default_const_iterator,
  &_swigt__p_SimMaterialLayer_GlazingMaterialLayer_Default_iterator,
  &_swigt__p_SimMaterialLayer_GlazingMaterialLayer_Default_sequence,
  &_swigt__p_SimMaterialLayer_GlazingMaterialLayer_Default_traits,
  &_swigt__p_SimMaterialLayer_GlazingMaterialLayer_Default_type,
  &_swigt__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_const_iterator,
  &_swigt__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_iterator,
  &_swigt__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_sequence,
  &_swigt__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_traits,
  &_swigt__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_type,
  &_swigt__p_SimMaterialLayer_OpaqueMaterialLayer_Default_const_iterator,
  &_swigt__p_SimMaterialLayer_OpaqueMaterialLayer_Default_iterator,
  &_swigt__p_SimMaterialLayer_OpaqueMaterialLayer_Default_sequence,
  &_swigt__p_SimMaterialLayer_OpaqueMaterialLayer_Default_traits,
  &_swigt__p_SimMaterialLayer_OpaqueMaterialLayer_Default_type,
  &_swigt__p_SimMaterial_Default_Default_const_iterator,
  &_swigt__p_SimMaterial_Default_Default_iterator,
  &_swigt__p_SimMaterial_Default_Default_sequence,
  &_swigt__p_SimMaterial_Default_Default_traits,
  &_swigt__p_SimMaterial_Default_Default_type,
  &_swigt__p_SimMaterial_GlazingMaterial_Gas_const_iterator,
  &_swigt__p_SimMaterial_GlazingMaterial_Gas_iterator,
  &_swigt__p_SimMaterial_GlazingMaterial_Gas_sequence,
  &_swigt__p_SimMaterial_GlazingMaterial_Gas_traits,
  &_swigt__p_SimMaterial_GlazingMaterial_Gas_type,
  &_swigt__p_SimMaterial_GlazingMaterial_Glazing_const_iterator,
  &_swigt__p_SimMaterial_GlazingMaterial_Glazing_iterator,
  &_swigt__p_SimMaterial_GlazingMaterial_Glazing_sequence,
  &_swigt__p_SimMaterial_GlazingMaterial_Glazing_traits,
  &_swigt__p_SimMaterial_GlazingMaterial_Glazing_type,
  &_swigt__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_const_iterator,
  &_swigt__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_iterator,
  &_swigt__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence,
  &_swigt__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_traits,
  &_swigt__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_type,
  &_swigt__p_SimMaterial_OpaqueMaterial_AirGap_const_iterator,
  &_swigt__p_SimMaterial_OpaqueMaterial_AirGap_iterator,
  &_swigt__p_SimMaterial_OpaqueMaterial_AirGap_sequence,
  &_swigt__p_SimMaterial_OpaqueMaterial_AirGap_traits,
  &_swigt__p_SimMaterial_OpaqueMaterial_AirGap_type,
  &_swigt__p_SimMaterial_OpaqueMaterial_Default_const_iterator,
  &_swigt__p_SimMaterial_OpaqueMaterial_Default_iterator,
  &_swigt__p_SimMaterial_OpaqueMaterial_Default_sequence,
  &_swigt__p_SimMaterial_OpaqueMaterial_Default_traits,
  &_swigt__p_SimMaterial_OpaqueMaterial_Default_type,
  &_swigt__p_SimModelName_optional,
  &_swigt__p_SimModelName_traits,
  &_swigt__p_SimModelName_type,
  &_swigt__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_const_iterator,
  &_swigt__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_iterator,
  &_swigt__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence,
  &_swigt__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_traits,
  &_swigt__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_type,
  &_swigt__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_const_iterator,
  &_swigt__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_iterator,
  &_swigt__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence,
  &_swigt__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_traits,
  &_swigt__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_type,
  &_swigt__p_SimModelSchemaIDKey_optional,
  &_swigt__p_SimModelSchemaIDKey_traits,
  &_swigt__p_SimModelSchemaIDKey_type,
  &_swigt__p_SimModelSchemaVersion_optional,
  &_swigt__p_SimModelSchemaVersion_traits,
  &_swigt__p_SimModelSchemaVersion_type,
  &_swigt__p_SimModelSubtype_optional,
  &_swigt__p_SimModelSubtype_traits,
  &_swigt__p_SimModelSubtype_type,
  &_swigt__p_SimModelType_optional,
  &_swigt__p_SimModelType_traits,
  &_swigt__p_SimModelType_type,
  &_swigt__p_SimModelUnitDefaultsVersion_optional,
  &_swigt__p_SimModelUnitDefaultsVersion_traits,
  &_swigt__p_SimModelUnitDefaultsVersion_type,
  &_swigt__p_SimModelUnitsVersion_optional,
  &_swigt__p_SimModelUnitsVersion_traits,
  &_swigt__p_SimModelUnitsVersion_type,
  &_swigt__p_SimModelVersion_optional,
  &_swigt__p_SimModelVersion_traits,
  &_swigt__p_SimModelVersion_type,
  &_swigt__p_SimNode_AirFlowPort_Air_In_const_iterator,
  &_swigt__p_SimNode_AirFlowPort_Air_In_iterator,
  &_swigt__p_SimNode_AirFlowPort_Air_In_sequence,
  &_swigt__p_SimNode_AirFlowPort_Air_In_traits,
  &_swigt__p_SimNode_AirFlowPort_Air_In_type,
  &_swigt__p_SimNode_AirFlowPort_Air_Out_const_iterator,
  &_swigt__p_SimNode_AirFlowPort_Air_Out_iterator,
  &_swigt__p_SimNode_AirFlowPort_Air_Out_sequence,
  &_swigt__p_SimNode_AirFlowPort_Air_Out_traits,
  &_swigt__p_SimNode_AirFlowPort_Air_Out_type,
  &_swigt__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_const_iterator,
  &_swigt__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_iterator,
  &_swigt__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence,
  &_swigt__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_traits,
  &_swigt__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_type,
  &_swigt__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_const_iterator,
  &_swigt__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_iterator,
  &_swigt__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence,
  &_swigt__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_traits,
  &_swigt__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_type,
  &_swigt__p_SimNode_Docking_Default_const_iterator,
  &_swigt__p_SimNode_Docking_Default_iterator,
  &_swigt__p_SimNode_Docking_Default_sequence,
  &_swigt__p_SimNode_Docking_Default_traits,
  &_swigt__p_SimNode_Docking_Default_type,
  &_swigt__p_SimNode_HotWaterFlowPort_Water_In_const_iterator,
  &_swigt__p_SimNode_HotWaterFlowPort_Water_In_iterator,
  &_swigt__p_SimNode_HotWaterFlowPort_Water_In_sequence,
  &_swigt__p_SimNode_HotWaterFlowPort_Water_In_traits,
  &_swigt__p_SimNode_HotWaterFlowPort_Water_In_type,
  &_swigt__p_SimNode_HotWaterFlowPort_Water_Out_const_iterator,
  &_swigt__p_SimNode_HotWaterFlowPort_Water_Out_iterator,
  &_swigt__p_SimNode_HotWaterFlowPort_Water_Out_sequence,
  &_swigt__p_SimNode_HotWaterFlowPort_Water_Out_traits,
  &_swigt__p_SimNode_HotWaterFlowPort_Water_Out_type,
  &_swigt__p_SimOrganization_Organization_Default_const_iterator,
  &_swigt__p_SimOrganization_Organization_Default_iterator,
  &_swigt__p_SimOrganization_Organization_Default_sequence,
  &_swigt__p_SimOrganization_Organization_Default_traits,
  &_swigt__p_SimOrganization_Organization_Default_type,
  &_swigt__p_SimOwnerHistory_Default_Default_const_iterator,
  &_swigt__p_SimOwnerHistory_Default_Default_iterator,
  &_swigt__p_SimOwnerHistory_Default_Default_sequence,
  &_swigt__p_SimOwnerHistory_Default_Default_traits,
  &_swigt__p_SimOwnerHistory_Default_Default_type,
  &_swigt__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_const_iterator,
  &_swigt__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_iterator,
  &_swigt__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence,
  &_swigt__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_traits,
  &_swigt__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_type,
  &_swigt__p_SimPersonAndOrganization_PersonAndOrganization_Default_const_iterator,
  &_swigt__p_SimPersonAndOrganization_PersonAndOrganization_Default_iterator,
  &_swigt__p_SimPersonAndOrganization_PersonAndOrganization_Default_sequence,
  &_swigt__p_SimPersonAndOrganization_PersonAndOrganization_Default_traits,
  &_swigt__p_SimPersonAndOrganization_PersonAndOrganization_Default_type,
  &_swigt__p_SimPerson_Person_Default_const_iterator,
  &_swigt__p_SimPerson_Person_Default_iterator,
  &_swigt__p_SimPerson_Person_Default_sequence,
  &_swigt__p_SimPerson_Person_Default_traits,
  &_swigt__p_SimPerson_Person_Default_type,
  &_swigt__p_SimPlacement_Axis2Placement2D_Default_const_iterator,
  &_swigt__p_SimPlacement_Axis2Placement2D_Default_iterator,
  &_swigt__p_SimPlacement_Axis2Placement2D_Default_sequence,
  &_swigt__p_SimPlacement_Axis2Placement2D_Default_traits,
  &_swigt__p_SimPlacement_Axis2Placement2D_Default_type,
  &_swigt__p_SimPlacement_Axis2Placement3D_Default_const_iterator,
  &_swigt__p_SimPlacement_Axis2Placement3D_Default_iterator,
  &_swigt__p_SimPlacement_Axis2Placement3D_Default_sequence,
  &_swigt__p_SimPlacement_Axis2Placement3D_Default_traits,
  &_swigt__p_SimPlacement_Axis2Placement3D_Default_type,
  &_swigt__p_SimPresentationLayerAssignment_Default_Default_const_iterator,
  &_swigt__p_SimPresentationLayerAssignment_Default_Default_iterator,
  &_swigt__p_SimPresentationLayerAssignment_Default_Default_sequence,
  &_swigt__p_SimPresentationLayerAssignment_Default_Default_traits,
  &_swigt__p_SimPresentationLayerAssignment_Default_Default_type,
  &_swigt__p_SimProject_Project_DesignAlternative_const_iterator,
  &_swigt__p_SimProject_Project_DesignAlternative_iterator,
  &_swigt__p_SimProject_Project_DesignAlternative_sequence,
  &_swigt__p_SimProject_Project_DesignAlternative_traits,
  &_swigt__p_SimProject_Project_DesignAlternative_type,
  &_swigt__p_SimRepresentationMap_RepresentationMap_Default_const_iterator,
  &_swigt__p_SimRepresentationMap_RepresentationMap_Default_iterator,
  &_swigt__p_SimRepresentationMap_RepresentationMap_Default_sequence,
  &_swigt__p_SimRepresentationMap_RepresentationMap_Default_traits,
  &_swigt__p_SimRepresentationMap_RepresentationMap_Default_type,
  &_swigt__p_SimSIUnitType_SiUnit_Default_const_iterator,
  &_swigt__p_SimSIUnitType_SiUnit_Default_iterator,
  &_swigt__p_SimSIUnitType_SiUnit_Default_sequence,
  &_swigt__p_SimSIUnitType_SiUnit_Default_traits,
  &_swigt__p_SimSIUnitType_SiUnit_Default_type,
  &_swigt__p_SimSensor_TemperatureSensor_DryBulb_const_iterator,
  &_swigt__p_SimSensor_TemperatureSensor_DryBulb_iterator,
  &_swigt__p_SimSensor_TemperatureSensor_DryBulb_sequence,
  &_swigt__p_SimSensor_TemperatureSensor_DryBulb_traits,
  &_swigt__p_SimSensor_TemperatureSensor_DryBulb_type,
  &_swigt__p_SimShapeRepresentation_ShapeRepresentation_Default_const_iterator,
  &_swigt__p_SimShapeRepresentation_ShapeRepresentation_Default_iterator,
  &_swigt__p_SimShapeRepresentation_ShapeRepresentation_Default_sequence,
  &_swigt__p_SimShapeRepresentation_ShapeRepresentation_Default_traits,
  &_swigt__p_SimShapeRepresentation_ShapeRepresentation_Default_type,
  &_swigt__p_SimSimulationConfiguration_SimulationConfiguration_Default_const_iterator,
  &_swigt__p_SimSimulationConfiguration_SimulationConfiguration_Default_iterator,
  &_swigt__p_SimSimulationConfiguration_SimulationConfiguration_Default_sequence,
  &_swigt__p_SimSimulationConfiguration_SimulationConfiguration_Default_traits,
  &_swigt__p_SimSimulationConfiguration_SimulationConfiguration_Default_type,
  &_swigt__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_const_iterator,
  &_swigt__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_iterator,
  &_swigt__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence,
  &_swigt__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_traits,
  &_swigt__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_type,
  &_swigt__p_SimSite_BuildingSite_Default_const_iterator,
  &_swigt__p_SimSite_BuildingSite_Default_iterator,
  &_swigt__p_SimSite_BuildingSite_Default_sequence,
  &_swigt__p_SimSite_BuildingSite_Default_traits,
  &_swigt__p_SimSite_BuildingSite_Default_type,
  &_swigt__p_SimSlabParams_Slab_Floor_const_iterator,
  &_swigt__p_SimSlabParams_Slab_Floor_iterator,
  &_swigt__p_SimSlabParams_Slab_Floor_sequence,
  &_swigt__p_SimSlabParams_Slab_Floor_traits,
  &_swigt__p_SimSlabParams_Slab_Floor_type,
  &_swigt__p_SimSlab_Default_Default_const_iterator,
  &_swigt__p_SimSlab_Default_Default_iterator,
  &_swigt__p_SimSlab_Default_Default_sequence,
  &_swigt__p_SimSlab_Default_Default_traits,
  &_swigt__p_SimSlab_Default_Default_type,
  &_swigt__p_SimSlab_Floor_FloorOverEarth_const_iterator,
  &_swigt__p_SimSlab_Floor_FloorOverEarth_iterator,
  &_swigt__p_SimSlab_Floor_FloorOverEarth_sequence,
  &_swigt__p_SimSlab_Floor_FloorOverEarth_traits,
  &_swigt__p_SimSlab_Floor_FloorOverEarth_type,
  &_swigt__p_SimSlab_Floor_InterzoneFloor_const_iterator,
  &_swigt__p_SimSlab_Floor_InterzoneFloor_iterator,
  &_swigt__p_SimSlab_Floor_InterzoneFloor_sequence,
  &_swigt__p_SimSlab_Floor_InterzoneFloor_traits,
  &_swigt__p_SimSlab_Floor_InterzoneFloor_type,
  &_swigt__p_SimSlab_RoofSlab_RoofUnderAir_const_iterator,
  &_swigt__p_SimSlab_RoofSlab_RoofUnderAir_iterator,
  &_swigt__p_SimSlab_RoofSlab_RoofUnderAir_sequence,
  &_swigt__p_SimSlab_RoofSlab_RoofUnderAir_traits,
  &_swigt__p_SimSlab_RoofSlab_RoofUnderAir_type,
  &_swigt__p_SimSoftwareApplication_Default_Default_const_iterator,
  &_swigt__p_SimSoftwareApplication_Default_Default_iterator,
  &_swigt__p_SimSoftwareApplication_Default_Default_sequence,
  &_swigt__p_SimSoftwareApplication_Default_Default_traits,
  &_swigt__p_SimSoftwareApplication_Default_Default_type,
  &_swigt__p_SimSolarShade_Fin_Default_const_iterator,
  &_swigt__p_SimSolarShade_Fin_Default_iterator,
  &_swigt__p_SimSolarShade_Fin_Default_sequence,
  &_swigt__p_SimSolarShade_Fin_Default_traits,
  &_swigt__p_SimSolarShade_Fin_Default_type,
  &_swigt__p_SimSolarShade_Overhang_Default_const_iterator,
  &_swigt__p_SimSolarShade_Overhang_Default_iterator,
  &_swigt__p_SimSolarShade_Overhang_Default_sequence,
  &_swigt__p_SimSolarShade_Overhang_Default_traits,
  &_swigt__p_SimSolarShade_Overhang_Default_type,
  &_swigt__p_SimSpaceBoundary_SecondLevel_SubTypeA_const_iterator,
  &_swigt__p_SimSpaceBoundary_SecondLevel_SubTypeA_iterator,
  &_swigt__p_SimSpaceBoundary_SecondLevel_SubTypeA_sequence,
  &_swigt__p_SimSpaceBoundary_SecondLevel_SubTypeA_traits,
  &_swigt__p_SimSpaceBoundary_SecondLevel_SubTypeA_type,
  &_swigt__p_SimSpaceParams_Space_Default_const_iterator,
  &_swigt__p_SimSpaceParams_Space_Default_iterator,
  &_swigt__p_SimSpaceParams_Space_Default_sequence,
  &_swigt__p_SimSpaceParams_Space_Default_traits,
  &_swigt__p_SimSpaceParams_Space_Default_type,
  &_swigt__p_SimSpace_Occupied_Default_const_iterator,
  &_swigt__p_SimSpace_Occupied_Default_iterator,
  &_swigt__p_SimSpace_Occupied_Default_sequence,
  &_swigt__p_SimSpace_Occupied_Default_traits,
  &_swigt__p_SimSpace_Occupied_Default_type,
  &_swigt__p_SimSpatialZone_ThermalZone_Default_const_iterator,
  &_swigt__p_SimSpatialZone_ThermalZone_Default_iterator,
  &_swigt__p_SimSpatialZone_ThermalZone_Default_sequence,
  &_swigt__p_SimSpatialZone_ThermalZone_Default_traits,
  &_swigt__p_SimSpatialZone_ThermalZone_Default_type,
  &_swigt__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_const_iterator,
  &_swigt__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_iterator,
  &_swigt__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_sequence,
  &_swigt__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_traits,
  &_swigt__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_type,
  &_swigt__p_SimSystem_HvacHotWater_Control_const_iterator,
  &_swigt__p_SimSystem_HvacHotWater_Control_iterator,
  &_swigt__p_SimSystem_HvacHotWater_Control_sequence,
  &_swigt__p_SimSystem_HvacHotWater_Control_traits,
  &_swigt__p_SimSystem_HvacHotWater_Control_type,
  &_swigt__p_SimSystem_HvacHotWater_Demand_const_iterator,
  &_swigt__p_SimSystem_HvacHotWater_Demand_iterator,
  &_swigt__p_SimSystem_HvacHotWater_Demand_sequence,
  &_swigt__p_SimSystem_HvacHotWater_Demand_traits,
  &_swigt__p_SimSystem_HvacHotWater_Demand_type,
  &_swigt__p_SimSystem_HvacHotWater_FullSystem_const_iterator,
  &_swigt__p_SimSystem_HvacHotWater_FullSystem_iterator,
  &_swigt__p_SimSystem_HvacHotWater_FullSystem_sequence,
  &_swigt__p_SimSystem_HvacHotWater_FullSystem_traits,
  &_swigt__p_SimSystem_HvacHotWater_FullSystem_type,
  &_swigt__p_SimSystem_HvacHotWater_Supply_const_iterator,
  &_swigt__p_SimSystem_HvacHotWater_Supply_iterator,
  &_swigt__p_SimSystem_HvacHotWater_Supply_sequence,
  &_swigt__p_SimSystem_HvacHotWater_Supply_traits,
  &_swigt__p_SimSystem_HvacHotWater_Supply_type,
  &_swigt__p_SimSystem_ZoneHvacGroup_Control_const_iterator,
  &_swigt__p_SimSystem_ZoneHvacGroup_Control_iterator,
  &_swigt__p_SimSystem_ZoneHvacGroup_Control_sequence,
  &_swigt__p_SimSystem_ZoneHvacGroup_Control_traits,
  &_swigt__p_SimSystem_ZoneHvacGroup_Control_type,
  &_swigt__p_SimSystem_ZoneHvacGroup_Demand_const_iterator,
  &_swigt__p_SimSystem_ZoneHvacGroup_Demand_iterator,
  &_swigt__p_SimSystem_ZoneHvacGroup_Demand_sequence,
  &_swigt__p_SimSystem_ZoneHvacGroup_Demand_traits,
  &_swigt__p_SimSystem_ZoneHvacGroup_Demand_type,
  &_swigt__p_SimSystem_ZoneHvacGroup_FullSystem_const_iterator,
  &_swigt__p_SimSystem_ZoneHvacGroup_FullSystem_iterator,
  &_swigt__p_SimSystem_ZoneHvacGroup_FullSystem_sequence,
  &_swigt__p_SimSystem_ZoneHvacGroup_FullSystem_traits,
  &_swigt__p_SimSystem_ZoneHvacGroup_FullSystem_type,
  &_swigt__p_SimSystem_ZoneHvacGroup_Supply_const_iterator,
  &_swigt__p_SimSystem_ZoneHvacGroup_Supply_iterator,
  &_swigt__p_SimSystem_ZoneHvacGroup_Supply_sequence,
  &_swigt__p_SimSystem_ZoneHvacGroup_Supply_traits,
  &_swigt__p_SimSystem_ZoneHvacGroup_Supply_type,
  &_swigt__p_SimTemplateConstructions_Constructions_Default_const_iterator,
  &_swigt__p_SimTemplateConstructions_Constructions_Default_iterator,
  &_swigt__p_SimTemplateConstructions_Constructions_Default_sequence,
  &_swigt__p_SimTemplateConstructions_Constructions_Default_traits,
  &_swigt__p_SimTemplateConstructions_Constructions_Default_type,
  &_swigt__p_SimTemplateLocation_Location_Default_const_iterator,
  &_swigt__p_SimTemplateLocation_Location_Default_iterator,
  &_swigt__p_SimTemplateLocation_Location_Default_sequence,
  &_swigt__p_SimTemplateLocation_Location_Default_traits,
  &_swigt__p_SimTemplateLocation_Location_Default_type,
  &_swigt__p_SimTemplateZoneConditions_ZoneConditions_Default_const_iterator,
  &_swigt__p_SimTemplateZoneConditions_ZoneConditions_Default_iterator,
  &_swigt__p_SimTemplateZoneConditions_ZoneConditions_Default_sequence,
  &_swigt__p_SimTemplateZoneConditions_ZoneConditions_Default_traits,
  &_swigt__p_SimTemplateZoneConditions_ZoneConditions_Default_type,
  &_swigt__p_SimTemplateZoneLoads_ZoneLoads_Default_const_iterator,
  &_swigt__p_SimTemplateZoneLoads_ZoneLoads_Default_iterator,
  &_swigt__p_SimTemplateZoneLoads_ZoneLoads_Default_sequence,
  &_swigt__p_SimTemplateZoneLoads_ZoneLoads_Default_traits,
  &_swigt__p_SimTemplateZoneLoads_ZoneLoads_Default_type,
  &_swigt__p_SimThermalZoneType_ThermalZone_Default_const_iterator,
  &_swigt__p_SimThermalZoneType_ThermalZone_Default_iterator,
  &_swigt__p_SimThermalZoneType_ThermalZone_Default_sequence,
  &_swigt__p_SimThermalZoneType_ThermalZone_Default_traits,
  &_swigt__p_SimThermalZoneType_ThermalZone_Default_type,
  &_swigt__p_SimTimeSeriesSchedule_Calendar_Configuration_const_iterator,
  &_swigt__p_SimTimeSeriesSchedule_Calendar_Configuration_iterator,
  &_swigt__p_SimTimeSeriesSchedule_Calendar_Configuration_sequence,
  &_swigt__p_SimTimeSeriesSchedule_Calendar_Configuration_traits,
  &_swigt__p_SimTimeSeriesSchedule_Calendar_Configuration_type,
  &_swigt__p_SimTimeSeriesSchedule_Day_Interval_const_iterator,
  &_swigt__p_SimTimeSeriesSchedule_Day_Interval_iterator,
  &_swigt__p_SimTimeSeriesSchedule_Day_Interval_sequence,
  &_swigt__p_SimTimeSeriesSchedule_Day_Interval_traits,
  &_swigt__p_SimTimeSeriesSchedule_Day_Interval_type,
  &_swigt__p_SimTimeSeriesSchedule_Limits_Default_const_iterator,
  &_swigt__p_SimTimeSeriesSchedule_Limits_Default_iterator,
  &_swigt__p_SimTimeSeriesSchedule_Limits_Default_sequence,
  &_swigt__p_SimTimeSeriesSchedule_Limits_Default_traits,
  &_swigt__p_SimTimeSeriesSchedule_Limits_Default_type,
  &_swigt__p_SimTimeSeriesSchedule_Week_Daily_const_iterator,
  &_swigt__p_SimTimeSeriesSchedule_Week_Daily_iterator,
  &_swigt__p_SimTimeSeriesSchedule_Week_Daily_sequence,
  &_swigt__p_SimTimeSeriesSchedule_Week_Daily_traits,
  &_swigt__p_SimTimeSeriesSchedule_Week_Daily_type,
  &_swigt__p_SimTimeSeriesSchedule_Year_Default_const_iterator,
  &_swigt__p_SimTimeSeriesSchedule_Year_Default_iterator,
  &_swigt__p_SimTimeSeriesSchedule_Year_Default_sequence,
  &_swigt__p_SimTimeSeriesSchedule_Year_Default_traits,
  &_swigt__p_SimTimeSeriesSchedule_Year_Default_type,
  &_swigt__p_SimUniqueID_optional,
  &_swigt__p_SimUniqueID_traits,
  &_swigt__p_SimUniqueID_type,
  &_swigt__p_SimWallParams_Wall_Default_const_iterator,
  &_swigt__p_SimWallParams_Wall_Default_iterator,
  &_swigt__p_SimWallParams_Wall_Default_sequence,
  &_swigt__p_SimWallParams_Wall_Default_traits,
  &_swigt__p_SimWallParams_Wall_Default_type,
  &_swigt__p_SimWallType_Wall_Default_const_iterator,
  &_swigt__p_SimWallType_Wall_Default_iterator,
  &_swigt__p_SimWallType_Wall_Default_sequence,
  &_swigt__p_SimWallType_Wall_Default_traits,
  &_swigt__p_SimWallType_Wall_Default_type,
  &_swigt__p_SimWall_Wall_Default_const_iterator,
  &_swigt__p_SimWall_Wall_Default_iterator,
  &_swigt__p_SimWall_Wall_Default_sequence,
  &_swigt__p_SimWall_Wall_Default_traits,
  &_swigt__p_SimWall_Wall_Default_type,
  &_swigt__p_SimWall_Wall_ExteriorAboveGrade_const_iterator,
  &_swigt__p_SimWall_Wall_ExteriorAboveGrade_iterator,
  &_swigt__p_SimWall_Wall_ExteriorAboveGrade_sequence,
  &_swigt__p_SimWall_Wall_ExteriorAboveGrade_traits,
  &_swigt__p_SimWall_Wall_ExteriorAboveGrade_type,
  &_swigt__p_SimWall_Wall_Interior_const_iterator,
  &_swigt__p_SimWall_Wall_Interior_iterator,
  &_swigt__p_SimWall_Wall_Interior_sequence,
  &_swigt__p_SimWall_Wall_Interior_traits,
  &_swigt__p_SimWall_Wall_Interior_type,
  &_swigt__p_SimWindowArrayParams_WindowArray_Default_const_iterator,
  &_swigt__p_SimWindowArrayParams_WindowArray_Default_iterator,
  &_swigt__p_SimWindowArrayParams_WindowArray_Default_sequence,
  &_swigt__p_SimWindowArrayParams_WindowArray_Default_traits,
  &_swigt__p_SimWindowArrayParams_WindowArray_Default_type,
  &_swigt__p_SimWindowLiningProps_WindowLiningProps_Default_const_iterator,
  &_swigt__p_SimWindowLiningProps_WindowLiningProps_Default_iterator,
  &_swigt__p_SimWindowLiningProps_WindowLiningProps_Default_sequence,
  &_swigt__p_SimWindowLiningProps_WindowLiningProps_Default_traits,
  &_swigt__p_SimWindowLiningProps_WindowLiningProps_Default_type,
  &_swigt__p_SimWindowParams_Window_Default_const_iterator,
  &_swigt__p_SimWindowParams_Window_Default_iterator,
  &_swigt__p_SimWindowParams_Window_Default_sequence,
  &_swigt__p_SimWindowParams_Window_Default_traits,
  &_swigt__p_SimWindowParams_Window_Default_type,
  &_swigt__p_SimWindowType_Window_Default_const_iterator,
  &_swigt__p_SimWindowType_Window_Default_iterator,
  &_swigt__p_SimWindowType_Window_Default_sequence,
  &_swigt__p_SimWindowType_Window_Default_traits,
  &_swigt__p_SimWindowType_Window_Default_type,
  &_swigt__p_SimWindowType_Window_Exterior_const_iterator,
  &_swigt__p_SimWindowType_Window_Exterior_iterator,
  &_swigt__p_SimWindowType_Window_Exterior_sequence,
  &_swigt__p_SimWindowType_Window_Exterior_traits,
  &_swigt__p_SimWindowType_Window_Exterior_type,
  &_swigt__p_SimWindowType_Window_Interior_const_iterator,
  &_swigt__p_SimWindowType_Window_Interior_iterator,
  &_swigt__p_SimWindowType_Window_Interior_sequence,
  &_swigt__p_SimWindowType_Window_Interior_traits,
  &_swigt__p_SimWindowType_Window_Interior_type,
  &_swigt__p_SimWindow_Window_Default_const_iterator,
  &_swigt__p_SimWindow_Window_Default_iterator,
  &_swigt__p_SimWindow_Window_Default_sequence,
  &_swigt__p_SimWindow_Window_Default_traits,
  &_swigt__p_SimWindow_Window_Default_type,
  &_swigt__p_SimWindow_Window_ExteriorDetailed_const_iterator,
  &_swigt__p_SimWindow_Window_ExteriorDetailed_iterator,
  &_swigt__p_SimWindow_Window_ExteriorDetailed_sequence,
  &_swigt__p_SimWindow_Window_ExteriorDetailed_traits,
  &_swigt__p_SimWindow_Window_ExteriorDetailed_type,
  &_swigt__p_SimWindow_Window_Exterior_const_iterator,
  &_swigt__p_SimWindow_Window_Exterior_iterator,
  &_swigt__p_SimWindow_Window_Exterior_sequence,
  &_swigt__p_SimWindow_Window_Exterior_traits,
  &_swigt__p_SimWindow_Window_Exterior_type,
  &_swigt__p_SourceLibraryEntryID_optional,
  &_swigt__p_SourceLibraryEntryID_traits,
  &_swigt__p_SourceLibraryEntryID_type,
  &_swigt__p_SourceLibraryEntryRef_optional,
  &_swigt__p_SourceLibraryEntryRef_traits,
  &_swigt__p_SourceLibraryEntryRef_type,
  &_swigt__p_SourceModelObjectType_optional,
  &_swigt__p_SourceModelObjectType_traits,
  &_swigt__p_SourceModelObjectType_type,
  &_swigt__p_SourceModelSchema_optional,
  &_swigt__p_SourceModelSchema_traits,
  &_swigt__p_SourceModelSchema_type,
  &_swigt__p_Tag_optional,
  &_swigt__p_Tag_traits,
  &_swigt__p_Tag_type,
  &_swigt__p_TemplatesForMembers_optional,
  &_swigt__p_TemplatesForMembers_traits,
  &_swigt__p_TemplatesForMembers_type,
  &_swigt__p_TypeDefCreationParams_optional,
  &_swigt__p_TypeDefCreationParams_traits,
  &_swigt__p_TypeDefCreationParams_type,
  &_swigt__p_TypeDefinition_optional,
  &_swigt__p_TypeDefinition_traits,
  &_swigt__p_TypeDefinition_type,
  &_swigt__p_UnitType_String_optional,
  &_swigt__p_UnitType_String_traits,
  &_swigt__p_UnitType_String_type,
  &_swigt__p_XDirectionX_optional,
  &_swigt__p_XDirectionX_traits,
  &_swigt__p_XDirectionX_type,
  &_swigt__p_XDirectionY_optional,
  &_swigt__p_XDirectionY_traits,
  &_swigt__p_XDirectionY_type,
  &_swigt__p_XDirectionZ_optional,
  &_swigt__p_XDirectionZ_traits,
  &_swigt__p_XDirectionZ_type,
  &_swigt__p__3dHeight_optional,
  &_swigt__p__3dHeight_traits,
  &_swigt__p__3dHeight_type,
  &_swigt__p__3dLength_optional,
  &_swigt__p__3dLength_traits,
  &_swigt__p__3dLength_type,
  &_swigt__p__3dWidth_optional,
  &_swigt__p__3dWidth_traits,
  &_swigt__p__3dWidth_type,
  &_swigt__p_allocator_type,
  &_swigt__p_base_const_iterator,
  &_swigt__p_base_iterator,
  &_swigt__p_base_sequence,
  &_swigt__p_base_type,
  &_swigt__p_bool,
  &_swigt__p_bool_convertible,
  &_swigt__p_char,
  &_swigt__p_const_iterator,
  &_swigt__p_const_reverse_iterator,
  &_swigt__p_difference_type,
  &_swigt__p_dom_content_optional,
  &_swigt__p_double,
  &_swigt__p_float,
  &_swigt__p_int,
  &_swigt__p_iterator,
  &_swigt__p_long_long,
  &_swigt__p_ptr,
  &_swigt__p_reverse_iterator,
  &_swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter,
  &_swigt__p_schema__simxml__Model__SimModel,
  &_swigt__p_schema__simxml__ResourcesGeneral__SimArrayParams,
  &_swigt__p_schema__simxml__ResourcesGeneral__SimNode,
  &_swigt__p_schema__simxml__ResourcesGeneral__SimPort,
  &_swigt__p_schema__simxml__ResourcesGeneral__SimUnitType,
  &_swigt__p_schema__simxml__ResourcesGeometry__SimProfileDefinition,
  &_swigt__p_schema__simxml__SimModelCore__SelectedPropertyGroups,
  &_swigt__p_schema__simxml__SimModelCore__SimActorDefinition,
  &_swigt__p_schema__simxml__SimModelCore__SimAppDefault,
  &_swigt__p_schema__simxml__SimModelCore__SimBldgModelParams,
  &_swigt__p_schema__simxml__SimModelCore__SimBuildingElement,
  &_swigt__p_schema__simxml__SimModelCore__SimDistributionControlElement,
  &_swigt__p_schema__simxml__SimModelCore__SimDistributionElement,
  &_swigt__p_schema__simxml__SimModelCore__SimDistributionFlowElement,
  &_swigt__p_schema__simxml__SimModelCore__SimElement,
  &_swigt__p_schema__simxml__SimModelCore__SimFeatureElement,
  &_swigt__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem,
  &_swigt__p_schema__simxml__SimModelCore__SimGroup,
  &_swigt__p_schema__simxml__SimModelCore__SimObject,
  &_swigt__p_schema__simxml__SimModelCore__SimObjectDefinition,
  &_swigt__p_schema__simxml__SimModelCore__SimObjectPlacement,
  &_swigt__p_schema__simxml__SimModelCore__SimObjectTypeDefinition,
  &_swigt__p_schema__simxml__SimModelCore__SimPropertySetDefinition,
  &_swigt__p_schema__simxml__SimModelCore__SimRepresentation,
  &_swigt__p_schema__simxml__SimModelCore__SimRepresentationItem,
  &_swigt__p_schema__simxml__SimModelCore__SimResourceObject,
  &_swigt__p_schema__simxml__SimModelCore__SimRoot,
  &_swigt__p_schema__simxml__SimModelCore__SimSpatialStructureElement,
  &_swigt__p_schema__simxml__SimModelCore__SimTemplate,
  &_swigt__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem,
  &_swigt__p_schema__simxml__SimModelCore__doubleList,
  &_swigt__p_schema__simxml__SimModelCore__integerList,
  &_swigt__p_schema__simxml__SimModelCore__logical,
  &_swigt__p_self_,
  &_swigt__p_short,
  &_swigt__p_signed_char,
  &_swigt__p_size_type,
  &_swigt__p_std__auto_ptrT_xml_schema__string_t,
  &_swigt__p_std__invalid_argument,
  &_swigt__p_std__istream,
  &_swigt__p_swig__SwigPyIterator,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long_long,
  &_swigt__p_unsigned_short,
  &_swigt__p_value_type,
  &_swigt__p_xercesc__DOMDocument,
  &_swigt__p_xercesc__DOMElement,
  &_swigt__p_xercesc__DOMErrorHandler,
  &_swigt__p_xercesc__InputSource,
  &_swigt__p_xml_schema__dom__auto_ptrT_xercesc__DOMDocument_t,
  &_swigt__p_xsd__cxx__tree___type,
  &_swigt__p_xsd__cxx__tree__base64_binaryT_char_xsd__cxx__tree__simple_type_t,
  &_swigt__p_xsd__cxx__tree__boundsT_char_t,
  &_swigt__p_xsd__cxx__tree__bufferT_char_t,
  &_swigt__p_xsd__cxx__tree__content_order,
  &_swigt__p_xsd__cxx__tree__dateT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__date_timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__diagnosticsT_char_t,
  &_swigt__p_xsd__cxx__tree__duplicate_idT_char_t,
  &_swigt__p_xsd__cxx__tree__durationT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__entitiesT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__entity_t,
  &_swigt__p_xsd__cxx__tree__entityT_char_xsd__cxx__tree__ncname_t,
  &_swigt__p_xsd__cxx__tree__errorT_char_t,
  &_swigt__p_xsd__cxx__tree__exceptionT_char_t,
  &_swigt__p_xsd__cxx__tree__expected_attributeT_char_t,
  &_swigt__p_xsd__cxx__tree__expected_elementT_char_t,
  &_swigt__p_xsd__cxx__tree__expected_text_contentT_char_t,
  &_swigt__p_xsd__cxx__tree__flags,
  &_swigt__p_xsd__cxx__tree__gdayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__gmonthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__gmonth_dayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__gyearT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__gyear_monthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__hex_binaryT_char_xsd__cxx__tree__simple_type_t,
  &_swigt__p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,
  &_swigt__p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,
  &_swigt__p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t,
  &_swigt__p_xsd__cxx__tree__languageT_char_xsd__cxx__tree__token_t,
  &_swigt__p_xsd__cxx__tree__nameT_char_xsd__cxx__tree__token_t,
  &_swigt__p_xsd__cxx__tree__ncnameT_char_xsd__cxx__tree__name_t,
  &_swigt__p_xsd__cxx__tree__nmtokenT_char_xsd__cxx__tree__token_t,
  &_swigt__p_xsd__cxx__tree__nmtokensT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__nmtoken_t,
  &_swigt__p_xsd__cxx__tree__no_prefix_mappingT_char_t,
  &_swigt__p_xsd__cxx__tree__no_type_infoT_char_t,
  &_swigt__p_xsd__cxx__tree__normalized_stringT_char_xsd__cxx__tree__string_t,
  &_swigt__p_xsd__cxx__tree__not_derivedT_char_t,
  &_swigt__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,
  &_swigt__p_xsd__cxx__tree__parsingT_char_t,
  &_swigt__p_xsd__cxx__tree__propertiesT_char_t,
  &_swigt__p_xsd__cxx__tree__qnameT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__uri_xsd__cxx__tree__ncname_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuildingStory_BuildingStory_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuilding_Building_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_ConnectorList_SimConnections_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_EquipmentList_ZoneHvac_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_MaterialList_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_AirLoopAvailabilityMgrScheme_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_DemandManagerScheme_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_PlantOperatingScheme_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_WaterTempControlScheme_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimProject_Project_DesignAlternative_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSite_BuildingSite_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Default_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_FloorOverEarth_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_InterzoneFloor_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_RoofSlab_RoofUnderAir_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Fin_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Overhang_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpace_Occupied_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_TemplateForZoneGroup_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Control_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Demand_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_FullSystem_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Supply_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Control_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Demand_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_FullSystem_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Supply_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimThermalZoneType_ThermalZone_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWallType_Wall_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_ExteriorAboveGrade_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Interior_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Exterior_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Interior_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_ExteriorDetailed_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Exterior_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_SupplyWater_Temperature_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_ZoneControlTemperature_Thermostat_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_TemperingValve_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Expansion_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Mixed_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Water_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Default_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Mixer_DemandProxyMixerWater_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Splitter_DemandProxySplitterWater_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowMover_Pump_VariableSpeedReturn_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowPlant_Boiler_BoilerHotWater_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowSegment_Pipe_Indoor_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimSensor_TemperatureSensor_DryBulb_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAddress_Postal_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponent_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacAirLoop_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerDemand_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_AdjacentSite_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_SolarObstruction_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_Space_Space_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_BuildingStory_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Building_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Project_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Site_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_FloorPlenumZone_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_ThermalZone_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSaveInterval_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSave_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalPath_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalVersion_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_MinMonthlyChargeType_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppUnitDefault_AppUnitDefault_DatabaseDefault_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgSiteParams_BuildingSite_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgStoryParams_BuildingStory_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryBoma_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryOwner_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceTypeOwner_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_OmniClass_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_HotWaterFlow_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_ZoneAirFlow_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_AvailabilityManagerScheme_Scheduled_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_ControlAndSequencingScheme_HeatingLoad_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointScheme_SingleHeating_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDerivedUnitType_DerivedUnit_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_In_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_Out_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_In_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_Out_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Equipment_Electric_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Lights_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_People_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_DesignDay_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_Location_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_Default_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_GlazingLayerSet_Window_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Ceiling_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Door_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Floor_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_InternalSource_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Roof_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Wall_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Thermochromic_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_OpaqueMaterialLayer_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_Default_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Gas_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Glazing_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_SimpleGlazingSystem_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_AirGap_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationContext_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationSubContext_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_In_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_Out_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_AirLoop_DigitalSignal_In_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_HWLoop_DigitalSignal_In_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_Docking_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_In_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_Out_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOrganization_Organization_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOwnerHistory_Default_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPersonAndOrganization_PersonAndOrganization_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPerson_Person_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPresentationLayerAssignment_Default_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSIUnitType_SiUnit_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationConfiguration_SimulationConfiguration_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationParameters_HvacDesign_WaterLoopSizing_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSlabParams_Slab_Floor_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSoftwareApplication_Default_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceBoundary_SecondLevel_SubTypeA_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceParams_Space_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateConstructions_Constructions_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateLocation_Location_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneConditions_ZoneConditions_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneLoads_ZoneLoads_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Calendar_Configuration_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Day_Interval_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Limits_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Week_Daily_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Year_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWallParams_Wall_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowArrayParams_WindowArray_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowLiningProps_WindowLiningProps_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowParams_Window_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimArbitraryProfileDef_ArbitraryProfile_Closed_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimCartesianTransformOperator_3D_Uniform_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_FaceOuterBound_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFace_Face_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFeatureElementSubtraction_Void_Opening_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomBooleanResult_BooleanClippingResult_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomCurve_Polyline_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomPoint_Point_CartesianPoint_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_FacetedBrep_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_BoundedSurface_CurveBoundedPlane_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_ElementarySurface_Plane_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Direction_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_AbsolutePlacement_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_RelativePlacement_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLoop_Loop_PolyLoop_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimMappedRepresentationItem_Default_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimParameterizedProfileDef_ParameterizedProfile_Rectangle_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement2D_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement3D_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimRepresentationMap_RepresentationMap_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimShapeRepresentation_ShapeRepresentation_Default_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_BldgCompGroup_ZoneEquipment_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_HvacDemandGroup_WaterSystem_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneGroup_false_t,
  &_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneHvacGroup_false_t,
  &_swigt__p_xsd__cxx__tree__severity,
  &_swigt__p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t,
  &_swigt__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree__type_t_t,
  &_swigt__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,
  &_swigt__p_xsd__cxx__tree__timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  &_swigt__p_xsd__cxx__tree__time_zone,
  &_swigt__p_xsd__cxx__tree__tokenT_char_xsd__cxx__tree__normalized_string_t,
  &_swigt__p_xsd__cxx__tree__unexpected_elementT_char_t,
  &_swigt__p_xsd__cxx__tree__unexpected_enumeratorT_char_t,
  &_swigt__p_xsd__cxx__tree__uriT_char_xsd__cxx__tree__simple_type_t,
  &_swigt__p_xsd__cxx__tree__user_data_keys_templateT_0_t,
  &_swigt__p_xsd__cxx__xml__error_handlerT_char_t,
};

static swig_cast_info _swigc__p_ApplicableOccurrence_optional[] = {  {&_swigt__p_ApplicableOccurrence_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ApplicableOccurrence_traits[] = {  {&_swigt__p_ApplicableOccurrence_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ApplicableOccurrence_type[] = {  {&_swigt__p_ApplicableOccurrence_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AssignedToFlowElement_optional[] = {  {&_swigt__p_AssignedToFlowElement_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AssignedToFlowElement_traits[] = {  {&_swigt__p_AssignedToFlowElement_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AssignedToFlowElement_type[] = {  {&_swigt__p_AssignedToFlowElement_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AssignedToGroups_optional[] = {  {&_swigt__p_AssignedToGroups_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AssignedToGroups_traits[] = {  {&_swigt__p_AssignedToGroups_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AssignedToGroups_type[] = {  {&_swigt__p_AssignedToGroups_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ChangeFromTemplate_optional[] = {  {&_swigt__p_ChangeFromTemplate_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ChangeFromTemplate_traits[] = {  {&_swigt__p_ChangeFromTemplate_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ChangeFromTemplate_type[] = {  {&_swigt__p_ChangeFromTemplate_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CompositionType_optional[] = {  {&_swigt__p_CompositionType_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CompositionType_traits[] = {  {&_swigt__p_CompositionType_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CompositionType_type[] = {  {&_swigt__p_CompositionType_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContainingBuildings_optional[] = {  {&_swigt__p_ContainingBuildings_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContainingBuildings_traits[] = {  {&_swigt__p_ContainingBuildings_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContainingBuildings_type[] = {  {&_swigt__p_ContainingBuildings_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContainingSpatialStructure_optional[] = {  {&_swigt__p_ContainingSpatialStructure_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContainingSpatialStructure_traits[] = {  {&_swigt__p_ContainingSpatialStructure_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContainingSpatialStructure_type[] = {  {&_swigt__p_ContainingSpatialStructure_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlElementID_optional[] = {  {&_swigt__p_ControlElementID_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlElementID_traits[] = {  {&_swigt__p_ControlElementID_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlElementID_type[] = {  {&_swigt__p_ControlElementID_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlledBy_optional[] = {  {&_swigt__p_ControlledBy_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlledBy_traits[] = {  {&_swigt__p_ControlledBy_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ControlledBy_type[] = {  {&_swigt__p_ControlledBy_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DecimalPrecision_optional[] = {  {&_swigt__p_DecimalPrecision_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DecimalPrecision_traits[] = {  {&_swigt__p_DecimalPrecision_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DecimalPrecision_type[] = {  {&_swigt__p_DecimalPrecision_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Decomposes_optional[] = {  {&_swigt__p_Decomposes_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Decomposes_traits[] = {  {&_swigt__p_Decomposes_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Decomposes_type[] = {  {&_swigt__p_Decomposes_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Description_optional[] = {  {&_swigt__p_Description_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Description_traits[] = {  {&_swigt__p_Description_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Description_type[] = {  {&_swigt__p_Description_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DockedToPort_optional[] = {  {&_swigt__p_DockedToPort_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DockedToPort_traits[] = {  {&_swigt__p_DockedToPort_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DockedToPort_type[] = {  {&_swigt__p_DockedToPort_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GeometricRepresentations_optional[] = {  {&_swigt__p_GeometricRepresentations_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GeometricRepresentations_traits[] = {  {&_swigt__p_GeometricRepresentations_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GeometricRepresentations_type[] = {  {&_swigt__p_GeometricRepresentations_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HasPropertySets_optional[] = {  {&_swigt__p_HasPropertySets_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HasPropertySets_traits[] = {  {&_swigt__p_HasPropertySets_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HasPropertySets_type[] = {  {&_swigt__p_HasPropertySets_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HasTemplateChanged_optional[] = {  {&_swigt__p_HasTemplateChanged_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HasTemplateChanged_traits[] = {  {&_swigt__p_HasTemplateChanged_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HasTemplateChanged_type[] = {  {&_swigt__p_HasTemplateChanged_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HostElement_optional[] = {  {&_swigt__p_HostElement_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HostElement_traits[] = {  {&_swigt__p_HostElement_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HostElement_type[] = {  {&_swigt__p_HostElement_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IfcGlobalID_optional[] = {  {&_swigt__p_IfcGlobalID_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IfcGlobalID_traits[] = {  {&_swigt__p_IfcGlobalID_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IfcGlobalID_type[] = {  {&_swigt__p_IfcGlobalID_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IfcName_optional[] = {  {&_swigt__p_IfcName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IfcName_traits[] = {  {&_swigt__p_IfcName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IfcName_type[] = {  {&_swigt__p_IfcName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IsAutoGenerated_optional[] = {  {&_swigt__p_IsAutoGenerated_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IsAutoGenerated_traits[] = {  {&_swigt__p_IsAutoGenerated_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IsAutoGenerated_type[] = {  {&_swigt__p_IsAutoGenerated_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IsTemplateObject_optional[] = {  {&_swigt__p_IsTemplateObject_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IsTemplateObject_traits[] = {  {&_swigt__p_IsTemplateObject_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IsTemplateObject_type[] = {  {&_swigt__p_IsTemplateObject_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementCoordinates_optional[] = {  {&_swigt__p_LocalPlacementCoordinates_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementCoordinates_traits[] = {  {&_swigt__p_LocalPlacementCoordinates_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementCoordinates_type[] = {  {&_swigt__p_LocalPlacementCoordinates_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementRotation_optional[] = {  {&_swigt__p_LocalPlacementRotation_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementRotation_traits[] = {  {&_swigt__p_LocalPlacementRotation_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementRotation_type[] = {  {&_swigt__p_LocalPlacementRotation_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementX_optional[] = {  {&_swigt__p_LocalPlacementX_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementX_traits[] = {  {&_swigt__p_LocalPlacementX_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementX_type[] = {  {&_swigt__p_LocalPlacementX_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementY_optional[] = {  {&_swigt__p_LocalPlacementY_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementY_traits[] = {  {&_swigt__p_LocalPlacementY_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementY_type[] = {  {&_swigt__p_LocalPlacementY_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementZ_optional[] = {  {&_swigt__p_LocalPlacementZ_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementZ_traits[] = {  {&_swigt__p_LocalPlacementZ_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LocalPlacementZ_type[] = {  {&_swigt__p_LocalPlacementZ_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LongName_optional[] = {  {&_swigt__p_LongName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LongName_traits[] = {  {&_swigt__p_LongName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LongName_type[] = {  {&_swigt__p_LongName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MemberUsedForDiagrams_optional[] = {  {&_swigt__p_MemberUsedForDiagrams_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MemberUsedForDiagrams_traits[] = {  {&_swigt__p_MemberUsedForDiagrams_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MemberUsedForDiagrams_type[] = {  {&_swigt__p_MemberUsedForDiagrams_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Name_optional[] = {  {&_swigt__p_Name_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Name_traits[] = {  {&_swigt__p_Name_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Name_type[] = {  {&_swigt__p_Name_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NevronSchematicLayout_optional[] = {  {&_swigt__p_NevronSchematicLayout_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NevronSchematicLayout_traits[] = {  {&_swigt__p_NevronSchematicLayout_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NevronSchematicLayout_type[] = {  {&_swigt__p_NevronSchematicLayout_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectCreationParams_optional[] = {  {&_swigt__p_ObjectCreationParams_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectCreationParams_traits[] = {  {&_swigt__p_ObjectCreationParams_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectCreationParams_type[] = {  {&_swigt__p_ObjectCreationParams_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectIndex_optional[] = {  {&_swigt__p_ObjectIndex_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectIndex_traits[] = {  {&_swigt__p_ObjectIndex_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectIndex_type[] = {  {&_swigt__p_ObjectIndex_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectName_optional[] = {  {&_swigt__p_ObjectName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectName_traits[] = {  {&_swigt__p_ObjectName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectName_type[] = {  {&_swigt__p_ObjectName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectOwnerHistory_optional[] = {  {&_swigt__p_ObjectOwnerHistory_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectOwnerHistory_traits[] = {  {&_swigt__p_ObjectOwnerHistory_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectOwnerHistory_type[] = {  {&_swigt__p_ObjectOwnerHistory_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectType_optional[] = {  {&_swigt__p_ObjectType_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectType_traits[] = {  {&_swigt__p_ObjectType_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ObjectType_type[] = {  {&_swigt__p_ObjectType_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ParentGroups_optional[] = {  {&_swigt__p_ParentGroups_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ParentGroups_traits[] = {  {&_swigt__p_ParentGroups_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ParentGroups_type[] = {  {&_swigt__p_ParentGroups_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PlacementRelToContainingTypeDef_optional[] = {  {&_swigt__p_PlacementRelToContainingTypeDef_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PlacementRelToContainingTypeDef_traits[] = {  {&_swigt__p_PlacementRelToContainingTypeDef_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PlacementRelToContainingTypeDef_type[] = {  {&_swigt__p_PlacementRelToContainingTypeDef_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Placement_optional[] = {  {&_swigt__p_Placement_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Placement_traits[] = {  {&_swigt__p_Placement_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Placement_type[] = {  {&_swigt__p_Placement_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ProfileName_optional[] = {  {&_swigt__p_ProfileName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ProfileName_traits[] = {  {&_swigt__p_ProfileName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ProfileName_type[] = {  {&_swigt__p_ProfileName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ProfileType_optional[] = {  {&_swigt__p_ProfileType_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ProfileType_traits[] = {  {&_swigt__p_ProfileType_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ProfileType_type[] = {  {&_swigt__p_ProfileType_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RefId_traits[] = {  {&_swigt__p_RefId_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RefId_type[] = {  {&_swigt__p_RefId_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationContext_optional[] = {  {&_swigt__p_RepresentationContext_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationContext_traits[] = {  {&_swigt__p_RepresentationContext_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationContext_type[] = {  {&_swigt__p_RepresentationContext_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationIdentifier_optional[] = {  {&_swigt__p_RepresentationIdentifier_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationIdentifier_traits[] = {  {&_swigt__p_RepresentationIdentifier_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationIdentifier_type[] = {  {&_swigt__p_RepresentationIdentifier_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationItems_optional[] = {  {&_swigt__p_RepresentationItems_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationItems_traits[] = {  {&_swigt__p_RepresentationItems_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationItems_type[] = {  {&_swigt__p_RepresentationItems_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationType_optional[] = {  {&_swigt__p_RepresentationType_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationType_traits[] = {  {&_swigt__p_RepresentationType_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RepresentationType_type[] = {  {&_swigt__p_RepresentationType_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SelectedPropertyGroups_optional[] = {  {&_swigt__p_SelectedPropertyGroups_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SelectedPropertyGroups_traits[] = {  {&_swigt__p_SelectedPropertyGroups_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SelectedPropertyGroups_type[] = {  {&_swigt__p_SelectedPropertyGroups_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAddress_Postal_Default_const_iterator[] = {  {&_swigt__p_SimAddress_Postal_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAddress_Postal_Default_iterator[] = {  {&_swigt__p_SimAddress_Postal_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAddress_Postal_Default_sequence[] = {  {&_swigt__p_SimAddress_Postal_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAddress_Postal_Default_traits[] = {  {&_swigt__p_SimAddress_Postal_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAddress_Postal_Default_type[] = {  {&_swigt__p_SimAddress_Postal_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_const_iterator[] = {  {&_swigt__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_iterator[] = {  {&_swigt__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence[] = {  {&_swigt__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_traits[] = {  {&_swigt__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_type[] = {  {&_swigt__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_traits[] = {  {&_swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_type[] = {  {&_swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_traits[] = {  {&_swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_type[] = {  {&_swigt__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_traits[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_type[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_traits[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_type[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_traits[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_type[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_traits[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_type[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_traits[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_type[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_traits[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_type[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_traits[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_type[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_traits[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_type[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_traits[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_type[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_traits[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_type[] = {  {&_swigt__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SiteContext_AdjacentSite_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_SiteContext_AdjacentSite_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SiteContext_AdjacentSite_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_SiteContext_AdjacentSite_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SiteContext_AdjacentSite_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_SiteContext_AdjacentSite_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SiteContext_AdjacentSite_traits[] = {  {&_swigt__p_SimAppObjNameDefault_SiteContext_AdjacentSite_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SiteContext_AdjacentSite_type[] = {  {&_swigt__p_SimAppObjNameDefault_SiteContext_AdjacentSite_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SiteContext_SolarObstruction_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_SiteContext_SolarObstruction_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SiteContext_SolarObstruction_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_SiteContext_SolarObstruction_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SiteContext_SolarObstruction_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_SiteContext_SolarObstruction_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SiteContext_SolarObstruction_traits[] = {  {&_swigt__p_SimAppObjNameDefault_SiteContext_SolarObstruction_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SiteContext_SolarObstruction_type[] = {  {&_swigt__p_SimAppObjNameDefault_SiteContext_SolarObstruction_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_Space_Space_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_Space_Space_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_Space_Space_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_Space_Space_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_Space_Space_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_Space_Space_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_Space_Space_traits[] = {  {&_swigt__p_SimAppObjNameDefault_Space_Space_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_Space_Space_type[] = {  {&_swigt__p_SimAppObjNameDefault_Space_Space_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_traits[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_type[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialContainer_Building_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialContainer_Building_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialContainer_Building_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialContainer_Building_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialContainer_Building_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialContainer_Building_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialContainer_Building_traits[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialContainer_Building_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialContainer_Building_type[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialContainer_Building_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialContainer_Project_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialContainer_Project_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialContainer_Project_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialContainer_Project_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialContainer_Project_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialContainer_Project_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialContainer_Project_traits[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialContainer_Project_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialContainer_Project_type[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialContainer_Project_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialContainer_Site_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialContainer_Site_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialContainer_Site_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialContainer_Site_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialContainer_Site_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialContainer_Site_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialContainer_Site_traits[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialContainer_Site_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialContainer_Site_type[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialContainer_Site_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_traits[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_type[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_traits[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_type[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialZone_ThermalZone_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialZone_ThermalZone_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialZone_ThermalZone_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialZone_ThermalZone_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialZone_ThermalZone_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialZone_ThermalZone_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialZone_ThermalZone_traits[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialZone_ThermalZone_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_SpatialZone_ThermalZone_type[] = {  {&_swigt__p_SimAppObjNameDefault_SpatialZone_ThermalZone_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_traits[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_type[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_traits[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_type[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_traits[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_type[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_traits[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_type[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_traits[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_type[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_const_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_iterator[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_sequence[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_traits[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_type[] = {  {&_swigt__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_AutoSaveInterval_const_iterator[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_AutoSaveInterval_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_AutoSaveInterval_iterator[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_AutoSaveInterval_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_AutoSaveInterval_sequence[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_AutoSaveInterval_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_AutoSaveInterval_traits[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_AutoSaveInterval_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_AutoSaveInterval_type[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_AutoSaveInterval_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_AutoSave_const_iterator[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_AutoSave_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_AutoSave_iterator[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_AutoSave_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_AutoSave_sequence[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_AutoSave_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_AutoSave_traits[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_AutoSave_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_AutoSave_type[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_AutoSave_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_EPlusInstalPath_const_iterator[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_EPlusInstalPath_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_EPlusInstalPath_iterator[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_EPlusInstalPath_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_EPlusInstalPath_sequence[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_EPlusInstalPath_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_EPlusInstalPath_traits[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_EPlusInstalPath_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_EPlusInstalPath_type[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_EPlusInstalPath_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_const_iterator[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_iterator[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_traits[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_type[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_const_iterator[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_iterator[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_traits[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_type[] = {  {&_swigt__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_const_iterator[] = {  {&_swigt__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_iterator[] = {  {&_swigt__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence[] = {  {&_swigt__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_traits[] = {  {&_swigt__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_type[] = {  {&_swigt__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_const_iterator[] = {  {&_swigt__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_iterator[] = {  {&_swigt__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence[] = {  {&_swigt__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_traits[] = {  {&_swigt__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_type[] = {  {&_swigt__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimBldgSiteParams_BuildingSite_Default_const_iterator[] = {  {&_swigt__p_SimBldgSiteParams_BuildingSite_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimBldgSiteParams_BuildingSite_Default_iterator[] = {  {&_swigt__p_SimBldgSiteParams_BuildingSite_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimBldgSiteParams_BuildingSite_Default_sequence[] = {  {&_swigt__p_SimBldgSiteParams_BuildingSite_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimBldgSiteParams_BuildingSite_Default_traits[] = {  {&_swigt__p_SimBldgSiteParams_BuildingSite_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimBldgSiteParams_BuildingSite_Default_type[] = {  {&_swigt__p_SimBldgSiteParams_BuildingSite_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimBldgStoryParams_BuildingStory_Default_const_iterator[] = {  {&_swigt__p_SimBldgStoryParams_BuildingStory_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimBldgStoryParams_BuildingStory_Default_iterator[] = {  {&_swigt__p_SimBldgStoryParams_BuildingStory_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimBldgStoryParams_BuildingStory_Default_sequence[] = {  {&_swigt__p_SimBldgStoryParams_BuildingStory_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimBldgStoryParams_BuildingStory_Default_traits[] = {  {&_swigt__p_SimBldgStoryParams_BuildingStory_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimBldgStoryParams_BuildingStory_Default_type[] = {  {&_swigt__p_SimBldgStoryParams_BuildingStory_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimBuildingStory_BuildingStory_Default_const_iterator[] = {  {&_swigt__p_SimBuildingStory_BuildingStory_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimBuildingStory_BuildingStory_Default_iterator[] = {  {&_swigt__p_SimBuildingStory_BuildingStory_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimBuildingStory_BuildingStory_Default_sequence[] = {  {&_swigt__p_SimBuildingStory_BuildingStory_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimBuildingStory_BuildingStory_Default_traits[] = {  {&_swigt__p_SimBuildingStory_BuildingStory_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimBuildingStory_BuildingStory_Default_type[] = {  {&_swigt__p_SimBuildingStory_BuildingStory_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimBuilding_Building_Default_const_iterator[] = {  {&_swigt__p_SimBuilding_Building_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimBuilding_Building_Default_iterator[] = {  {&_swigt__p_SimBuilding_Building_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimBuilding_Building_Default_sequence[] = {  {&_swigt__p_SimBuilding_Building_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimBuilding_Building_Default_traits[] = {  {&_swigt__p_SimBuilding_Building_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimBuilding_Building_Default_type[] = {  {&_swigt__p_SimBuilding_Building_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimCartesianTransformOperator_3D_Uniform_const_iterator[] = {  {&_swigt__p_SimCartesianTransformOperator_3D_Uniform_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimCartesianTransformOperator_3D_Uniform_iterator[] = {  {&_swigt__p_SimCartesianTransformOperator_3D_Uniform_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimCartesianTransformOperator_3D_Uniform_sequence[] = {  {&_swigt__p_SimCartesianTransformOperator_3D_Uniform_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimCartesianTransformOperator_3D_Uniform_traits[] = {  {&_swigt__p_SimCartesianTransformOperator_3D_Uniform_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimCartesianTransformOperator_3D_Uniform_type[] = {  {&_swigt__p_SimCartesianTransformOperator_3D_Uniform_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationReference_SpaceCategoryBoma_const_iterator[] = {  {&_swigt__p_SimClassification_ClassificationReference_SpaceCategoryBoma_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationReference_SpaceCategoryBoma_iterator[] = {  {&_swigt__p_SimClassification_ClassificationReference_SpaceCategoryBoma_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationReference_SpaceCategoryBoma_sequence[] = {  {&_swigt__p_SimClassification_ClassificationReference_SpaceCategoryBoma_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationReference_SpaceCategoryBoma_traits[] = {  {&_swigt__p_SimClassification_ClassificationReference_SpaceCategoryBoma_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationReference_SpaceCategoryBoma_type[] = {  {&_swigt__p_SimClassification_ClassificationReference_SpaceCategoryBoma_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationReference_SpaceCategoryOwner_const_iterator[] = {  {&_swigt__p_SimClassification_ClassificationReference_SpaceCategoryOwner_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationReference_SpaceCategoryOwner_iterator[] = {  {&_swigt__p_SimClassification_ClassificationReference_SpaceCategoryOwner_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationReference_SpaceCategoryOwner_sequence[] = {  {&_swigt__p_SimClassification_ClassificationReference_SpaceCategoryOwner_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationReference_SpaceCategoryOwner_traits[] = {  {&_swigt__p_SimClassification_ClassificationReference_SpaceCategoryOwner_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationReference_SpaceCategoryOwner_type[] = {  {&_swigt__p_SimClassification_ClassificationReference_SpaceCategoryOwner_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationReference_SpaceTypeOwner_const_iterator[] = {  {&_swigt__p_SimClassification_ClassificationReference_SpaceTypeOwner_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationReference_SpaceTypeOwner_iterator[] = {  {&_swigt__p_SimClassification_ClassificationReference_SpaceTypeOwner_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationReference_SpaceTypeOwner_sequence[] = {  {&_swigt__p_SimClassification_ClassificationReference_SpaceTypeOwner_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationReference_SpaceTypeOwner_traits[] = {  {&_swigt__p_SimClassification_ClassificationReference_SpaceTypeOwner_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationReference_SpaceTypeOwner_type[] = {  {&_swigt__p_SimClassification_ClassificationReference_SpaceTypeOwner_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationSystem_Default_const_iterator[] = {  {&_swigt__p_SimClassification_ClassificationSystem_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationSystem_Default_iterator[] = {  {&_swigt__p_SimClassification_ClassificationSystem_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationSystem_Default_sequence[] = {  {&_swigt__p_SimClassification_ClassificationSystem_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationSystem_Default_traits[] = {  {&_swigt__p_SimClassification_ClassificationSystem_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationSystem_Default_type[] = {  {&_swigt__p_SimClassification_ClassificationSystem_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationSystem_OmniClass_const_iterator[] = {  {&_swigt__p_SimClassification_ClassificationSystem_OmniClass_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationSystem_OmniClass_iterator[] = {  {&_swigt__p_SimClassification_ClassificationSystem_OmniClass_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationSystem_OmniClass_sequence[] = {  {&_swigt__p_SimClassification_ClassificationSystem_OmniClass_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationSystem_OmniClass_traits[] = {  {&_swigt__p_SimClassification_ClassificationSystem_OmniClass_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimClassification_ClassificationSystem_OmniClass_type[] = {  {&_swigt__p_SimClassification_ClassificationSystem_OmniClass_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_const_iterator[] = {  {&_swigt__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_iterator[] = {  {&_swigt__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence[] = {  {&_swigt__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_traits[] = {  {&_swigt__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_type[] = {  {&_swigt__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimConnectedFaceSet_ConnectedFaceSet_Default_const_iterator[] = {  {&_swigt__p_SimConnectedFaceSet_ConnectedFaceSet_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimConnectedFaceSet_ConnectedFaceSet_Default_iterator[] = {  {&_swigt__p_SimConnectedFaceSet_ConnectedFaceSet_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimConnectedFaceSet_ConnectedFaceSet_Default_sequence[] = {  {&_swigt__p_SimConnectedFaceSet_ConnectedFaceSet_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimConnectedFaceSet_ConnectedFaceSet_Default_traits[] = {  {&_swigt__p_SimConnectedFaceSet_ConnectedFaceSet_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimConnectedFaceSet_ConnectedFaceSet_Default_type[] = {  {&_swigt__p_SimConnectedFaceSet_ConnectedFaceSet_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimConnection_HotWaterFlow_Default_const_iterator[] = {  {&_swigt__p_SimConnection_HotWaterFlow_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimConnection_HotWaterFlow_Default_iterator[] = {  {&_swigt__p_SimConnection_HotWaterFlow_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimConnection_HotWaterFlow_Default_sequence[] = {  {&_swigt__p_SimConnection_HotWaterFlow_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimConnection_HotWaterFlow_Default_traits[] = {  {&_swigt__p_SimConnection_HotWaterFlow_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimConnection_HotWaterFlow_Default_type[] = {  {&_swigt__p_SimConnection_HotWaterFlow_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimConnection_ZoneAirFlow_Default_const_iterator[] = {  {&_swigt__p_SimConnection_ZoneAirFlow_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimConnection_ZoneAirFlow_Default_iterator[] = {  {&_swigt__p_SimConnection_ZoneAirFlow_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimConnection_ZoneAirFlow_Default_sequence[] = {  {&_swigt__p_SimConnection_ZoneAirFlow_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimConnection_ZoneAirFlow_Default_traits[] = {  {&_swigt__p_SimConnection_ZoneAirFlow_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimConnection_ZoneAirFlow_Default_type[] = {  {&_swigt__p_SimConnection_ZoneAirFlow_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_const_iterator[] = {  {&_swigt__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_iterator[] = {  {&_swigt__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence[] = {  {&_swigt__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_traits[] = {  {&_swigt__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_type[] = {  {&_swigt__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_const_iterator[] = {  {&_swigt__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_iterator[] = {  {&_swigt__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence[] = {  {&_swigt__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_traits[] = {  {&_swigt__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_type[] = {  {&_swigt__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_const_iterator[] = {  {&_swigt__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_iterator[] = {  {&_swigt__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence[] = {  {&_swigt__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_traits[] = {  {&_swigt__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_type[] = {  {&_swigt__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimControlScheme_SetpointScheme_SingleHeating_const_iterator[] = {  {&_swigt__p_SimControlScheme_SetpointScheme_SingleHeating_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimControlScheme_SetpointScheme_SingleHeating_iterator[] = {  {&_swigt__p_SimControlScheme_SetpointScheme_SingleHeating_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimControlScheme_SetpointScheme_SingleHeating_sequence[] = {  {&_swigt__p_SimControlScheme_SetpointScheme_SingleHeating_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimControlScheme_SetpointScheme_SingleHeating_traits[] = {  {&_swigt__p_SimControlScheme_SetpointScheme_SingleHeating_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimControlScheme_SetpointScheme_SingleHeating_type[] = {  {&_swigt__p_SimControlScheme_SetpointScheme_SingleHeating_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimController_SupplyWater_Temperature_const_iterator[] = {  {&_swigt__p_SimController_SupplyWater_Temperature_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimController_SupplyWater_Temperature_iterator[] = {  {&_swigt__p_SimController_SupplyWater_Temperature_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimController_SupplyWater_Temperature_sequence[] = {  {&_swigt__p_SimController_SupplyWater_Temperature_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimController_SupplyWater_Temperature_traits[] = {  {&_swigt__p_SimController_SupplyWater_Temperature_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimController_SupplyWater_Temperature_type[] = {  {&_swigt__p_SimController_SupplyWater_Temperature_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimController_ZoneControlTemperature_Thermostat_const_iterator[] = {  {&_swigt__p_SimController_ZoneControlTemperature_Thermostat_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimController_ZoneControlTemperature_Thermostat_iterator[] = {  {&_swigt__p_SimController_ZoneControlTemperature_Thermostat_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimController_ZoneControlTemperature_Thermostat_sequence[] = {  {&_swigt__p_SimController_ZoneControlTemperature_Thermostat_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimController_ZoneControlTemperature_Thermostat_traits[] = {  {&_swigt__p_SimController_ZoneControlTemperature_Thermostat_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimController_ZoneControlTemperature_Thermostat_type[] = {  {&_swigt__p_SimController_ZoneControlTemperature_Thermostat_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDerivedUnitType_DerivedUnit_Default_const_iterator[] = {  {&_swigt__p_SimDerivedUnitType_DerivedUnit_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDerivedUnitType_DerivedUnit_Default_iterator[] = {  {&_swigt__p_SimDerivedUnitType_DerivedUnit_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDerivedUnitType_DerivedUnit_Default_sequence[] = {  {&_swigt__p_SimDerivedUnitType_DerivedUnit_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDerivedUnitType_DerivedUnit_Default_traits[] = {  {&_swigt__p_SimDerivedUnitType_DerivedUnit_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDerivedUnitType_DerivedUnit_Default_type[] = {  {&_swigt__p_SimDerivedUnitType_DerivedUnit_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDistributionPort_AirFlowPort_Air_In_const_iterator[] = {  {&_swigt__p_SimDistributionPort_AirFlowPort_Air_In_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDistributionPort_AirFlowPort_Air_In_iterator[] = {  {&_swigt__p_SimDistributionPort_AirFlowPort_Air_In_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDistributionPort_AirFlowPort_Air_In_sequence[] = {  {&_swigt__p_SimDistributionPort_AirFlowPort_Air_In_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDistributionPort_AirFlowPort_Air_In_traits[] = {  {&_swigt__p_SimDistributionPort_AirFlowPort_Air_In_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDistributionPort_AirFlowPort_Air_In_type[] = {  {&_swigt__p_SimDistributionPort_AirFlowPort_Air_In_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDistributionPort_AirFlowPort_Air_Out_const_iterator[] = {  {&_swigt__p_SimDistributionPort_AirFlowPort_Air_Out_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDistributionPort_AirFlowPort_Air_Out_iterator[] = {  {&_swigt__p_SimDistributionPort_AirFlowPort_Air_Out_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDistributionPort_AirFlowPort_Air_Out_sequence[] = {  {&_swigt__p_SimDistributionPort_AirFlowPort_Air_Out_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDistributionPort_AirFlowPort_Air_Out_traits[] = {  {&_swigt__p_SimDistributionPort_AirFlowPort_Air_Out_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDistributionPort_AirFlowPort_Air_Out_type[] = {  {&_swigt__p_SimDistributionPort_AirFlowPort_Air_Out_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDistributionPort_HotWaterFlowPort_Water_In_const_iterator[] = {  {&_swigt__p_SimDistributionPort_HotWaterFlowPort_Water_In_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDistributionPort_HotWaterFlowPort_Water_In_iterator[] = {  {&_swigt__p_SimDistributionPort_HotWaterFlowPort_Water_In_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDistributionPort_HotWaterFlowPort_Water_In_sequence[] = {  {&_swigt__p_SimDistributionPort_HotWaterFlowPort_Water_In_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDistributionPort_HotWaterFlowPort_Water_In_traits[] = {  {&_swigt__p_SimDistributionPort_HotWaterFlowPort_Water_In_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDistributionPort_HotWaterFlowPort_Water_In_type[] = {  {&_swigt__p_SimDistributionPort_HotWaterFlowPort_Water_In_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDistributionPort_HotWaterFlowPort_Water_Out_const_iterator[] = {  {&_swigt__p_SimDistributionPort_HotWaterFlowPort_Water_Out_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDistributionPort_HotWaterFlowPort_Water_Out_iterator[] = {  {&_swigt__p_SimDistributionPort_HotWaterFlowPort_Water_Out_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDistributionPort_HotWaterFlowPort_Water_Out_sequence[] = {  {&_swigt__p_SimDistributionPort_HotWaterFlowPort_Water_Out_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDistributionPort_HotWaterFlowPort_Water_Out_traits[] = {  {&_swigt__p_SimDistributionPort_HotWaterFlowPort_Water_Out_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimDistributionPort_HotWaterFlowPort_Water_Out_type[] = {  {&_swigt__p_SimDistributionPort_HotWaterFlowPort_Water_Out_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFaceBound_FaceBound_Default_const_iterator[] = {  {&_swigt__p_SimFaceBound_FaceBound_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFaceBound_FaceBound_Default_iterator[] = {  {&_swigt__p_SimFaceBound_FaceBound_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFaceBound_FaceBound_Default_sequence[] = {  {&_swigt__p_SimFaceBound_FaceBound_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFaceBound_FaceBound_Default_traits[] = {  {&_swigt__p_SimFaceBound_FaceBound_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFaceBound_FaceBound_Default_type[] = {  {&_swigt__p_SimFaceBound_FaceBound_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFaceBound_FaceBound_FaceOuterBound_const_iterator[] = {  {&_swigt__p_SimFaceBound_FaceBound_FaceOuterBound_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFaceBound_FaceBound_FaceOuterBound_iterator[] = {  {&_swigt__p_SimFaceBound_FaceBound_FaceOuterBound_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFaceBound_FaceBound_FaceOuterBound_sequence[] = {  {&_swigt__p_SimFaceBound_FaceBound_FaceOuterBound_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFaceBound_FaceBound_FaceOuterBound_traits[] = {  {&_swigt__p_SimFaceBound_FaceBound_FaceOuterBound_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFaceBound_FaceBound_FaceOuterBound_type[] = {  {&_swigt__p_SimFaceBound_FaceBound_FaceOuterBound_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFace_Face_Default_const_iterator[] = {  {&_swigt__p_SimFace_Face_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFace_Face_Default_iterator[] = {  {&_swigt__p_SimFace_Face_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFace_Face_Default_sequence[] = {  {&_swigt__p_SimFace_Face_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFace_Face_Default_traits[] = {  {&_swigt__p_SimFace_Face_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFace_Face_Default_type[] = {  {&_swigt__p_SimFace_Face_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFeatureElementSubtraction_Void_Opening_const_iterator[] = {  {&_swigt__p_SimFeatureElementSubtraction_Void_Opening_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFeatureElementSubtraction_Void_Opening_iterator[] = {  {&_swigt__p_SimFeatureElementSubtraction_Void_Opening_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFeatureElementSubtraction_Void_Opening_sequence[] = {  {&_swigt__p_SimFeatureElementSubtraction_Void_Opening_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFeatureElementSubtraction_Void_Opening_traits[] = {  {&_swigt__p_SimFeatureElementSubtraction_Void_Opening_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFeatureElementSubtraction_Void_Opening_type[] = {  {&_swigt__p_SimFeatureElementSubtraction_Void_Opening_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowController_Valve_Default_const_iterator[] = {  {&_swigt__p_SimFlowController_Valve_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowController_Valve_Default_iterator[] = {  {&_swigt__p_SimFlowController_Valve_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowController_Valve_Default_sequence[] = {  {&_swigt__p_SimFlowController_Valve_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowController_Valve_Default_traits[] = {  {&_swigt__p_SimFlowController_Valve_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowController_Valve_Default_type[] = {  {&_swigt__p_SimFlowController_Valve_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowController_Valve_TemperingValve_const_iterator[] = {  {&_swigt__p_SimFlowController_Valve_TemperingValve_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowController_Valve_TemperingValve_iterator[] = {  {&_swigt__p_SimFlowController_Valve_TemperingValve_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowController_Valve_TemperingValve_sequence[] = {  {&_swigt__p_SimFlowController_Valve_TemperingValve_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowController_Valve_TemperingValve_traits[] = {  {&_swigt__p_SimFlowController_Valve_TemperingValve_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowController_Valve_TemperingValve_type[] = {  {&_swigt__p_SimFlowController_Valve_TemperingValve_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_const_iterator[] = {  {&_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_iterator[] = {  {&_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_sequence[] = {  {&_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_traits[] = {  {&_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_type[] = {  {&_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_const_iterator[] = {  {&_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_iterator[] = {  {&_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_sequence[] = {  {&_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_traits[] = {  {&_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_type[] = {  {&_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_const_iterator[] = {  {&_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_iterator[] = {  {&_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence[] = {  {&_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_traits[] = {  {&_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_type[] = {  {&_swigt__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_const_iterator[] = {  {&_swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_iterator[] = {  {&_swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence[] = {  {&_swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_traits[] = {  {&_swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_type[] = {  {&_swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_const_iterator[] = {  {&_swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_iterator[] = {  {&_swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence[] = {  {&_swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_traits[] = {  {&_swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_type[] = {  {&_swigt__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowFitting_Default_Default_const_iterator[] = {  {&_swigt__p_SimFlowFitting_Default_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowFitting_Default_Default_iterator[] = {  {&_swigt__p_SimFlowFitting_Default_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowFitting_Default_Default_sequence[] = {  {&_swigt__p_SimFlowFitting_Default_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowFitting_Default_Default_traits[] = {  {&_swigt__p_SimFlowFitting_Default_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowFitting_Default_Default_type[] = {  {&_swigt__p_SimFlowFitting_Default_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowFitting_Mixer_DemandProxyMixerWater_const_iterator[] = {  {&_swigt__p_SimFlowFitting_Mixer_DemandProxyMixerWater_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowFitting_Mixer_DemandProxyMixerWater_iterator[] = {  {&_swigt__p_SimFlowFitting_Mixer_DemandProxyMixerWater_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowFitting_Mixer_DemandProxyMixerWater_sequence[] = {  {&_swigt__p_SimFlowFitting_Mixer_DemandProxyMixerWater_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowFitting_Mixer_DemandProxyMixerWater_traits[] = {  {&_swigt__p_SimFlowFitting_Mixer_DemandProxyMixerWater_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowFitting_Mixer_DemandProxyMixerWater_type[] = {  {&_swigt__p_SimFlowFitting_Mixer_DemandProxyMixerWater_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowFitting_Splitter_DemandProxySplitterWater_const_iterator[] = {  {&_swigt__p_SimFlowFitting_Splitter_DemandProxySplitterWater_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowFitting_Splitter_DemandProxySplitterWater_iterator[] = {  {&_swigt__p_SimFlowFitting_Splitter_DemandProxySplitterWater_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowFitting_Splitter_DemandProxySplitterWater_sequence[] = {  {&_swigt__p_SimFlowFitting_Splitter_DemandProxySplitterWater_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowFitting_Splitter_DemandProxySplitterWater_traits[] = {  {&_swigt__p_SimFlowFitting_Splitter_DemandProxySplitterWater_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowFitting_Splitter_DemandProxySplitterWater_type[] = {  {&_swigt__p_SimFlowFitting_Splitter_DemandProxySplitterWater_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowMover_Pump_VariableSpeedReturn_const_iterator[] = {  {&_swigt__p_SimFlowMover_Pump_VariableSpeedReturn_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowMover_Pump_VariableSpeedReturn_iterator[] = {  {&_swigt__p_SimFlowMover_Pump_VariableSpeedReturn_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowMover_Pump_VariableSpeedReturn_sequence[] = {  {&_swigt__p_SimFlowMover_Pump_VariableSpeedReturn_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowMover_Pump_VariableSpeedReturn_traits[] = {  {&_swigt__p_SimFlowMover_Pump_VariableSpeedReturn_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowMover_Pump_VariableSpeedReturn_type[] = {  {&_swigt__p_SimFlowMover_Pump_VariableSpeedReturn_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowPlant_Boiler_BoilerHotWater_const_iterator[] = {  {&_swigt__p_SimFlowPlant_Boiler_BoilerHotWater_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowPlant_Boiler_BoilerHotWater_iterator[] = {  {&_swigt__p_SimFlowPlant_Boiler_BoilerHotWater_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowPlant_Boiler_BoilerHotWater_sequence[] = {  {&_swigt__p_SimFlowPlant_Boiler_BoilerHotWater_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowPlant_Boiler_BoilerHotWater_traits[] = {  {&_swigt__p_SimFlowPlant_Boiler_BoilerHotWater_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowPlant_Boiler_BoilerHotWater_type[] = {  {&_swigt__p_SimFlowPlant_Boiler_BoilerHotWater_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowSegment_Pipe_Indoor_const_iterator[] = {  {&_swigt__p_SimFlowSegment_Pipe_Indoor_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowSegment_Pipe_Indoor_iterator[] = {  {&_swigt__p_SimFlowSegment_Pipe_Indoor_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowSegment_Pipe_Indoor_sequence[] = {  {&_swigt__p_SimFlowSegment_Pipe_Indoor_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowSegment_Pipe_Indoor_traits[] = {  {&_swigt__p_SimFlowSegment_Pipe_Indoor_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimFlowSegment_Pipe_Indoor_type[] = {  {&_swigt__p_SimFlowSegment_Pipe_Indoor_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomBooleanResult_BooleanClippingResult_Default_const_iterator[] = {  {&_swigt__p_SimGeomBooleanResult_BooleanClippingResult_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomBooleanResult_BooleanClippingResult_Default_iterator[] = {  {&_swigt__p_SimGeomBooleanResult_BooleanClippingResult_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomBooleanResult_BooleanClippingResult_Default_sequence[] = {  {&_swigt__p_SimGeomBooleanResult_BooleanClippingResult_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomBooleanResult_BooleanClippingResult_Default_traits[] = {  {&_swigt__p_SimGeomBooleanResult_BooleanClippingResult_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomBooleanResult_BooleanClippingResult_Default_type[] = {  {&_swigt__p_SimGeomBooleanResult_BooleanClippingResult_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomCurve_Polyline_Default_const_iterator[] = {  {&_swigt__p_SimGeomCurve_Polyline_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomCurve_Polyline_Default_iterator[] = {  {&_swigt__p_SimGeomCurve_Polyline_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomCurve_Polyline_Default_sequence[] = {  {&_swigt__p_SimGeomCurve_Polyline_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomCurve_Polyline_Default_traits[] = {  {&_swigt__p_SimGeomCurve_Polyline_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomCurve_Polyline_Default_type[] = {  {&_swigt__p_SimGeomCurve_Polyline_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_const_iterator[] = {  {&_swigt__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_iterator[] = {  {&_swigt__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence[] = {  {&_swigt__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_traits[] = {  {&_swigt__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_type[] = {  {&_swigt__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomPoint_Point_CartesianPoint_const_iterator[] = {  {&_swigt__p_SimGeomPoint_Point_CartesianPoint_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomPoint_Point_CartesianPoint_iterator[] = {  {&_swigt__p_SimGeomPoint_Point_CartesianPoint_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomPoint_Point_CartesianPoint_sequence[] = {  {&_swigt__p_SimGeomPoint_Point_CartesianPoint_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomPoint_Point_CartesianPoint_traits[] = {  {&_swigt__p_SimGeomPoint_Point_CartesianPoint_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomPoint_Point_CartesianPoint_type[] = {  {&_swigt__p_SimGeomPoint_Point_CartesianPoint_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSolidModel_FacetedBrep_Default_const_iterator[] = {  {&_swigt__p_SimGeomSolidModel_FacetedBrep_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSolidModel_FacetedBrep_Default_iterator[] = {  {&_swigt__p_SimGeomSolidModel_FacetedBrep_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSolidModel_FacetedBrep_Default_sequence[] = {  {&_swigt__p_SimGeomSolidModel_FacetedBrep_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSolidModel_FacetedBrep_Default_traits[] = {  {&_swigt__p_SimGeomSolidModel_FacetedBrep_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSolidModel_FacetedBrep_Default_type[] = {  {&_swigt__p_SimGeomSolidModel_FacetedBrep_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_const_iterator[] = {  {&_swigt__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_iterator[] = {  {&_swigt__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence[] = {  {&_swigt__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_traits[] = {  {&_swigt__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_type[] = {  {&_swigt__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_const_iterator[] = {  {&_swigt__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_iterator[] = {  {&_swigt__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence[] = {  {&_swigt__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_traits[] = {  {&_swigt__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_type[] = {  {&_swigt__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_const_iterator[] = {  {&_swigt__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_iterator[] = {  {&_swigt__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence[] = {  {&_swigt__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_traits[] = {  {&_swigt__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_type[] = {  {&_swigt__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSurface_ElementarySurface_Plane_const_iterator[] = {  {&_swigt__p_SimGeomSurface_ElementarySurface_Plane_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSurface_ElementarySurface_Plane_iterator[] = {  {&_swigt__p_SimGeomSurface_ElementarySurface_Plane_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSurface_ElementarySurface_Plane_sequence[] = {  {&_swigt__p_SimGeomSurface_ElementarySurface_Plane_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSurface_ElementarySurface_Plane_traits[] = {  {&_swigt__p_SimGeomSurface_ElementarySurface_Plane_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomSurface_ElementarySurface_Plane_type[] = {  {&_swigt__p_SimGeomSurface_ElementarySurface_Plane_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomVector_Vector_Default_const_iterator[] = {  {&_swigt__p_SimGeomVector_Vector_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomVector_Vector_Default_iterator[] = {  {&_swigt__p_SimGeomVector_Vector_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomVector_Vector_Default_sequence[] = {  {&_swigt__p_SimGeomVector_Vector_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomVector_Vector_Default_traits[] = {  {&_swigt__p_SimGeomVector_Vector_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomVector_Vector_Default_type[] = {  {&_swigt__p_SimGeomVector_Vector_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomVector_Vector_Direction_const_iterator[] = {  {&_swigt__p_SimGeomVector_Vector_Direction_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomVector_Vector_Direction_iterator[] = {  {&_swigt__p_SimGeomVector_Vector_Direction_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomVector_Vector_Direction_sequence[] = {  {&_swigt__p_SimGeomVector_Vector_Direction_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomVector_Vector_Direction_traits[] = {  {&_swigt__p_SimGeomVector_Vector_Direction_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGeomVector_Vector_Direction_type[] = {  {&_swigt__p_SimGeomVector_Vector_Direction_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGroup_BldgCompGroup_ZoneEquipment_const_iterator[] = {  {&_swigt__p_SimGroup_BldgCompGroup_ZoneEquipment_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGroup_BldgCompGroup_ZoneEquipment_iterator[] = {  {&_swigt__p_SimGroup_BldgCompGroup_ZoneEquipment_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGroup_BldgCompGroup_ZoneEquipment_sequence[] = {  {&_swigt__p_SimGroup_BldgCompGroup_ZoneEquipment_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGroup_BldgCompGroup_ZoneEquipment_traits[] = {  {&_swigt__p_SimGroup_BldgCompGroup_ZoneEquipment_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGroup_BldgCompGroup_ZoneEquipment_type[] = {  {&_swigt__p_SimGroup_BldgCompGroup_ZoneEquipment_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGroup_HvacDemandGroup_WaterSystem_const_iterator[] = {  {&_swigt__p_SimGroup_HvacDemandGroup_WaterSystem_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGroup_HvacDemandGroup_WaterSystem_iterator[] = {  {&_swigt__p_SimGroup_HvacDemandGroup_WaterSystem_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGroup_HvacDemandGroup_WaterSystem_sequence[] = {  {&_swigt__p_SimGroup_HvacDemandGroup_WaterSystem_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGroup_HvacDemandGroup_WaterSystem_traits[] = {  {&_swigt__p_SimGroup_HvacDemandGroup_WaterSystem_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGroup_HvacDemandGroup_WaterSystem_type[] = {  {&_swigt__p_SimGroup_HvacDemandGroup_WaterSystem_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGroup_SpatialZoneGroup_ZoneGroup_const_iterator[] = {  {&_swigt__p_SimGroup_SpatialZoneGroup_ZoneGroup_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGroup_SpatialZoneGroup_ZoneGroup_iterator[] = {  {&_swigt__p_SimGroup_SpatialZoneGroup_ZoneGroup_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGroup_SpatialZoneGroup_ZoneGroup_sequence[] = {  {&_swigt__p_SimGroup_SpatialZoneGroup_ZoneGroup_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGroup_SpatialZoneGroup_ZoneGroup_traits[] = {  {&_swigt__p_SimGroup_SpatialZoneGroup_ZoneGroup_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGroup_SpatialZoneGroup_ZoneGroup_type[] = {  {&_swigt__p_SimGroup_SpatialZoneGroup_ZoneGroup_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_const_iterator[] = {  {&_swigt__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_iterator[] = {  {&_swigt__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence[] = {  {&_swigt__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_traits[] = {  {&_swigt__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_type[] = {  {&_swigt__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimInternalLoad_Equipment_Electric_const_iterator[] = {  {&_swigt__p_SimInternalLoad_Equipment_Electric_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimInternalLoad_Equipment_Electric_iterator[] = {  {&_swigt__p_SimInternalLoad_Equipment_Electric_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimInternalLoad_Equipment_Electric_sequence[] = {  {&_swigt__p_SimInternalLoad_Equipment_Electric_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimInternalLoad_Equipment_Electric_traits[] = {  {&_swigt__p_SimInternalLoad_Equipment_Electric_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimInternalLoad_Equipment_Electric_type[] = {  {&_swigt__p_SimInternalLoad_Equipment_Electric_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimInternalLoad_Lights_Default_const_iterator[] = {  {&_swigt__p_SimInternalLoad_Lights_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimInternalLoad_Lights_Default_iterator[] = {  {&_swigt__p_SimInternalLoad_Lights_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimInternalLoad_Lights_Default_sequence[] = {  {&_swigt__p_SimInternalLoad_Lights_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimInternalLoad_Lights_Default_traits[] = {  {&_swigt__p_SimInternalLoad_Lights_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimInternalLoad_Lights_Default_type[] = {  {&_swigt__p_SimInternalLoad_Lights_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimInternalLoad_People_Default_const_iterator[] = {  {&_swigt__p_SimInternalLoad_People_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimInternalLoad_People_Default_iterator[] = {  {&_swigt__p_SimInternalLoad_People_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimInternalLoad_People_Default_sequence[] = {  {&_swigt__p_SimInternalLoad_People_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimInternalLoad_People_Default_traits[] = {  {&_swigt__p_SimInternalLoad_People_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimInternalLoad_People_Default_type[] = {  {&_swigt__p_SimInternalLoad_People_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_ConnectorList_SimConnections_const_iterator[] = {  {&_swigt__p_SimList_ConnectorList_SimConnections_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_ConnectorList_SimConnections_iterator[] = {  {&_swigt__p_SimList_ConnectorList_SimConnections_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_ConnectorList_SimConnections_sequence[] = {  {&_swigt__p_SimList_ConnectorList_SimConnections_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_ConnectorList_SimConnections_traits[] = {  {&_swigt__p_SimList_ConnectorList_SimConnections_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_ConnectorList_SimConnections_type[] = {  {&_swigt__p_SimList_ConnectorList_SimConnections_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_EquipmentList_ZoneHvac_const_iterator[] = {  {&_swigt__p_SimList_EquipmentList_ZoneHvac_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_EquipmentList_ZoneHvac_iterator[] = {  {&_swigt__p_SimList_EquipmentList_ZoneHvac_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_EquipmentList_ZoneHvac_sequence[] = {  {&_swigt__p_SimList_EquipmentList_ZoneHvac_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_EquipmentList_ZoneHvac_traits[] = {  {&_swigt__p_SimList_EquipmentList_ZoneHvac_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_EquipmentList_ZoneHvac_type[] = {  {&_swigt__p_SimList_EquipmentList_ZoneHvac_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_MaterialList_Default_const_iterator[] = {  {&_swigt__p_SimList_MaterialList_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_MaterialList_Default_iterator[] = {  {&_swigt__p_SimList_MaterialList_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_MaterialList_Default_sequence[] = {  {&_swigt__p_SimList_MaterialList_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_MaterialList_Default_traits[] = {  {&_swigt__p_SimList_MaterialList_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_MaterialList_Default_type[] = {  {&_swigt__p_SimList_MaterialList_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_const_iterator[] = {  {&_swigt__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_iterator[] = {  {&_swigt__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence[] = {  {&_swigt__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_traits[] = {  {&_swigt__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_type[] = {  {&_swigt__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_SchemeList_DemandManagerScheme_const_iterator[] = {  {&_swigt__p_SimList_SchemeList_DemandManagerScheme_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_SchemeList_DemandManagerScheme_iterator[] = {  {&_swigt__p_SimList_SchemeList_DemandManagerScheme_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_SchemeList_DemandManagerScheme_sequence[] = {  {&_swigt__p_SimList_SchemeList_DemandManagerScheme_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_SchemeList_DemandManagerScheme_traits[] = {  {&_swigt__p_SimList_SchemeList_DemandManagerScheme_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_SchemeList_DemandManagerScheme_type[] = {  {&_swigt__p_SimList_SchemeList_DemandManagerScheme_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_SchemeList_PlantOperatingScheme_const_iterator[] = {  {&_swigt__p_SimList_SchemeList_PlantOperatingScheme_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_SchemeList_PlantOperatingScheme_iterator[] = {  {&_swigt__p_SimList_SchemeList_PlantOperatingScheme_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_SchemeList_PlantOperatingScheme_sequence[] = {  {&_swigt__p_SimList_SchemeList_PlantOperatingScheme_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_SchemeList_PlantOperatingScheme_traits[] = {  {&_swigt__p_SimList_SchemeList_PlantOperatingScheme_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_SchemeList_PlantOperatingScheme_type[] = {  {&_swigt__p_SimList_SchemeList_PlantOperatingScheme_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_SchemeList_WaterTempControlScheme_const_iterator[] = {  {&_swigt__p_SimList_SchemeList_WaterTempControlScheme_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_SchemeList_WaterTempControlScheme_iterator[] = {  {&_swigt__p_SimList_SchemeList_WaterTempControlScheme_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_SchemeList_WaterTempControlScheme_sequence[] = {  {&_swigt__p_SimList_SchemeList_WaterTempControlScheme_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_SchemeList_WaterTempControlScheme_traits[] = {  {&_swigt__p_SimList_SchemeList_WaterTempControlScheme_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimList_SchemeList_WaterTempControlScheme_type[] = {  {&_swigt__p_SimList_SchemeList_WaterTempControlScheme_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_const_iterator[] = {  {&_swigt__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_iterator[] = {  {&_swigt__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence[] = {  {&_swigt__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_traits[] = {  {&_swigt__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_type[] = {  {&_swigt__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLocalPlacement_LocalPlacement_RelativePlacement_const_iterator[] = {  {&_swigt__p_SimLocalPlacement_LocalPlacement_RelativePlacement_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLocalPlacement_LocalPlacement_RelativePlacement_iterator[] = {  {&_swigt__p_SimLocalPlacement_LocalPlacement_RelativePlacement_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLocalPlacement_LocalPlacement_RelativePlacement_sequence[] = {  {&_swigt__p_SimLocalPlacement_LocalPlacement_RelativePlacement_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLocalPlacement_LocalPlacement_RelativePlacement_traits[] = {  {&_swigt__p_SimLocalPlacement_LocalPlacement_RelativePlacement_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLocalPlacement_LocalPlacement_RelativePlacement_type[] = {  {&_swigt__p_SimLocalPlacement_LocalPlacement_RelativePlacement_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLocationAndWeather_DesignDay_Default_const_iterator[] = {  {&_swigt__p_SimLocationAndWeather_DesignDay_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLocationAndWeather_DesignDay_Default_iterator[] = {  {&_swigt__p_SimLocationAndWeather_DesignDay_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLocationAndWeather_DesignDay_Default_sequence[] = {  {&_swigt__p_SimLocationAndWeather_DesignDay_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLocationAndWeather_DesignDay_Default_traits[] = {  {&_swigt__p_SimLocationAndWeather_DesignDay_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLocationAndWeather_DesignDay_Default_type[] = {  {&_swigt__p_SimLocationAndWeather_DesignDay_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLocationAndWeather_Location_Default_const_iterator[] = {  {&_swigt__p_SimLocationAndWeather_Location_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLocationAndWeather_Location_Default_iterator[] = {  {&_swigt__p_SimLocationAndWeather_Location_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLocationAndWeather_Location_Default_sequence[] = {  {&_swigt__p_SimLocationAndWeather_Location_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLocationAndWeather_Location_Default_traits[] = {  {&_swigt__p_SimLocationAndWeather_Location_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLocationAndWeather_Location_Default_type[] = {  {&_swigt__p_SimLocationAndWeather_Location_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLoop_Loop_PolyLoop_const_iterator[] = {  {&_swigt__p_SimLoop_Loop_PolyLoop_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLoop_Loop_PolyLoop_iterator[] = {  {&_swigt__p_SimLoop_Loop_PolyLoop_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLoop_Loop_PolyLoop_sequence[] = {  {&_swigt__p_SimLoop_Loop_PolyLoop_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLoop_Loop_PolyLoop_traits[] = {  {&_swigt__p_SimLoop_Loop_PolyLoop_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimLoop_Loop_PolyLoop_type[] = {  {&_swigt__p_SimLoop_Loop_PolyLoop_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMappedRepresentationItem_Default_Default_const_iterator[] = {  {&_swigt__p_SimMappedRepresentationItem_Default_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMappedRepresentationItem_Default_Default_iterator[] = {  {&_swigt__p_SimMappedRepresentationItem_Default_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMappedRepresentationItem_Default_Default_sequence[] = {  {&_swigt__p_SimMappedRepresentationItem_Default_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMappedRepresentationItem_Default_Default_traits[] = {  {&_swigt__p_SimMappedRepresentationItem_Default_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMappedRepresentationItem_Default_Default_type[] = {  {&_swigt__p_SimMappedRepresentationItem_Default_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_Default_Default_const_iterator[] = {  {&_swigt__p_SimMaterialLayerSet_Default_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_Default_Default_iterator[] = {  {&_swigt__p_SimMaterialLayerSet_Default_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_Default_Default_sequence[] = {  {&_swigt__p_SimMaterialLayerSet_Default_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_Default_Default_traits[] = {  {&_swigt__p_SimMaterialLayerSet_Default_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_Default_Default_type[] = {  {&_swigt__p_SimMaterialLayerSet_Default_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_GlazingLayerSet_Window_const_iterator[] = {  {&_swigt__p_SimMaterialLayerSet_GlazingLayerSet_Window_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_GlazingLayerSet_Window_iterator[] = {  {&_swigt__p_SimMaterialLayerSet_GlazingLayerSet_Window_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_GlazingLayerSet_Window_sequence[] = {  {&_swigt__p_SimMaterialLayerSet_GlazingLayerSet_Window_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_GlazingLayerSet_Window_traits[] = {  {&_swigt__p_SimMaterialLayerSet_GlazingLayerSet_Window_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_GlazingLayerSet_Window_type[] = {  {&_swigt__p_SimMaterialLayerSet_GlazingLayerSet_Window_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_const_iterator[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_iterator[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_traits[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_type[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Door_const_iterator[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Door_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Door_iterator[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Door_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Door_sequence[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Door_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Door_traits[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Door_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Door_type[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Door_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_const_iterator[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_iterator[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_traits[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_type[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_const_iterator[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_iterator[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_traits[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_type[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_const_iterator[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_iterator[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_traits[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_type[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_const_iterator[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_iterator[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_traits[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_type[] = {  {&_swigt__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayer_GlazingMaterialLayer_Default_const_iterator[] = {  {&_swigt__p_SimMaterialLayer_GlazingMaterialLayer_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayer_GlazingMaterialLayer_Default_iterator[] = {  {&_swigt__p_SimMaterialLayer_GlazingMaterialLayer_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayer_GlazingMaterialLayer_Default_sequence[] = {  {&_swigt__p_SimMaterialLayer_GlazingMaterialLayer_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayer_GlazingMaterialLayer_Default_traits[] = {  {&_swigt__p_SimMaterialLayer_GlazingMaterialLayer_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayer_GlazingMaterialLayer_Default_type[] = {  {&_swigt__p_SimMaterialLayer_GlazingMaterialLayer_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_const_iterator[] = {  {&_swigt__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_iterator[] = {  {&_swigt__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_sequence[] = {  {&_swigt__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_traits[] = {  {&_swigt__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_type[] = {  {&_swigt__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayer_OpaqueMaterialLayer_Default_const_iterator[] = {  {&_swigt__p_SimMaterialLayer_OpaqueMaterialLayer_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayer_OpaqueMaterialLayer_Default_iterator[] = {  {&_swigt__p_SimMaterialLayer_OpaqueMaterialLayer_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayer_OpaqueMaterialLayer_Default_sequence[] = {  {&_swigt__p_SimMaterialLayer_OpaqueMaterialLayer_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayer_OpaqueMaterialLayer_Default_traits[] = {  {&_swigt__p_SimMaterialLayer_OpaqueMaterialLayer_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterialLayer_OpaqueMaterialLayer_Default_type[] = {  {&_swigt__p_SimMaterialLayer_OpaqueMaterialLayer_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_Default_Default_const_iterator[] = {  {&_swigt__p_SimMaterial_Default_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_Default_Default_iterator[] = {  {&_swigt__p_SimMaterial_Default_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_Default_Default_sequence[] = {  {&_swigt__p_SimMaterial_Default_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_Default_Default_traits[] = {  {&_swigt__p_SimMaterial_Default_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_Default_Default_type[] = {  {&_swigt__p_SimMaterial_Default_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_GlazingMaterial_Gas_const_iterator[] = {  {&_swigt__p_SimMaterial_GlazingMaterial_Gas_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_GlazingMaterial_Gas_iterator[] = {  {&_swigt__p_SimMaterial_GlazingMaterial_Gas_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_GlazingMaterial_Gas_sequence[] = {  {&_swigt__p_SimMaterial_GlazingMaterial_Gas_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_GlazingMaterial_Gas_traits[] = {  {&_swigt__p_SimMaterial_GlazingMaterial_Gas_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_GlazingMaterial_Gas_type[] = {  {&_swigt__p_SimMaterial_GlazingMaterial_Gas_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_GlazingMaterial_Glazing_const_iterator[] = {  {&_swigt__p_SimMaterial_GlazingMaterial_Glazing_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_GlazingMaterial_Glazing_iterator[] = {  {&_swigt__p_SimMaterial_GlazingMaterial_Glazing_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_GlazingMaterial_Glazing_sequence[] = {  {&_swigt__p_SimMaterial_GlazingMaterial_Glazing_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_GlazingMaterial_Glazing_traits[] = {  {&_swigt__p_SimMaterial_GlazingMaterial_Glazing_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_GlazingMaterial_Glazing_type[] = {  {&_swigt__p_SimMaterial_GlazingMaterial_Glazing_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_const_iterator[] = {  {&_swigt__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_iterator[] = {  {&_swigt__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence[] = {  {&_swigt__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_traits[] = {  {&_swigt__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_type[] = {  {&_swigt__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_OpaqueMaterial_AirGap_const_iterator[] = {  {&_swigt__p_SimMaterial_OpaqueMaterial_AirGap_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_OpaqueMaterial_AirGap_iterator[] = {  {&_swigt__p_SimMaterial_OpaqueMaterial_AirGap_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_OpaqueMaterial_AirGap_sequence[] = {  {&_swigt__p_SimMaterial_OpaqueMaterial_AirGap_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_OpaqueMaterial_AirGap_traits[] = {  {&_swigt__p_SimMaterial_OpaqueMaterial_AirGap_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_OpaqueMaterial_AirGap_type[] = {  {&_swigt__p_SimMaterial_OpaqueMaterial_AirGap_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_OpaqueMaterial_Default_const_iterator[] = {  {&_swigt__p_SimMaterial_OpaqueMaterial_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_OpaqueMaterial_Default_iterator[] = {  {&_swigt__p_SimMaterial_OpaqueMaterial_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_OpaqueMaterial_Default_sequence[] = {  {&_swigt__p_SimMaterial_OpaqueMaterial_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_OpaqueMaterial_Default_traits[] = {  {&_swigt__p_SimMaterial_OpaqueMaterial_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimMaterial_OpaqueMaterial_Default_type[] = {  {&_swigt__p_SimMaterial_OpaqueMaterial_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelName_optional[] = {  {&_swigt__p_SimModelName_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelName_traits[] = {  {&_swigt__p_SimModelName_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelName_type[] = {  {&_swigt__p_SimModelName_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_const_iterator[] = {  {&_swigt__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_iterator[] = {  {&_swigt__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence[] = {  {&_swigt__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_traits[] = {  {&_swigt__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_type[] = {  {&_swigt__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_const_iterator[] = {  {&_swigt__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_iterator[] = {  {&_swigt__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence[] = {  {&_swigt__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_traits[] = {  {&_swigt__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_type[] = {  {&_swigt__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelSchemaIDKey_optional[] = {  {&_swigt__p_SimModelSchemaIDKey_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelSchemaIDKey_traits[] = {  {&_swigt__p_SimModelSchemaIDKey_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelSchemaIDKey_type[] = {  {&_swigt__p_SimModelSchemaIDKey_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelSchemaVersion_optional[] = {  {&_swigt__p_SimModelSchemaVersion_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelSchemaVersion_traits[] = {  {&_swigt__p_SimModelSchemaVersion_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelSchemaVersion_type[] = {  {&_swigt__p_SimModelSchemaVersion_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelSubtype_optional[] = {  {&_swigt__p_SimModelSubtype_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelSubtype_traits[] = {  {&_swigt__p_SimModelSubtype_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelSubtype_type[] = {  {&_swigt__p_SimModelSubtype_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelType_optional[] = {  {&_swigt__p_SimModelType_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelType_traits[] = {  {&_swigt__p_SimModelType_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelType_type[] = {  {&_swigt__p_SimModelType_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelUnitDefaultsVersion_optional[] = {  {&_swigt__p_SimModelUnitDefaultsVersion_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelUnitDefaultsVersion_traits[] = {  {&_swigt__p_SimModelUnitDefaultsVersion_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelUnitDefaultsVersion_type[] = {  {&_swigt__p_SimModelUnitDefaultsVersion_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelUnitsVersion_optional[] = {  {&_swigt__p_SimModelUnitsVersion_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelUnitsVersion_traits[] = {  {&_swigt__p_SimModelUnitsVersion_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelUnitsVersion_type[] = {  {&_swigt__p_SimModelUnitsVersion_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelVersion_optional[] = {  {&_swigt__p_SimModelVersion_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelVersion_traits[] = {  {&_swigt__p_SimModelVersion_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimModelVersion_type[] = {  {&_swigt__p_SimModelVersion_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_AirFlowPort_Air_In_const_iterator[] = {  {&_swigt__p_SimNode_AirFlowPort_Air_In_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_AirFlowPort_Air_In_iterator[] = {  {&_swigt__p_SimNode_AirFlowPort_Air_In_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_AirFlowPort_Air_In_sequence[] = {  {&_swigt__p_SimNode_AirFlowPort_Air_In_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_AirFlowPort_Air_In_traits[] = {  {&_swigt__p_SimNode_AirFlowPort_Air_In_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_AirFlowPort_Air_In_type[] = {  {&_swigt__p_SimNode_AirFlowPort_Air_In_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_AirFlowPort_Air_Out_const_iterator[] = {  {&_swigt__p_SimNode_AirFlowPort_Air_Out_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_AirFlowPort_Air_Out_iterator[] = {  {&_swigt__p_SimNode_AirFlowPort_Air_Out_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_AirFlowPort_Air_Out_sequence[] = {  {&_swigt__p_SimNode_AirFlowPort_Air_Out_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_AirFlowPort_Air_Out_traits[] = {  {&_swigt__p_SimNode_AirFlowPort_Air_Out_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_AirFlowPort_Air_Out_type[] = {  {&_swigt__p_SimNode_AirFlowPort_Air_Out_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_const_iterator[] = {  {&_swigt__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_iterator[] = {  {&_swigt__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence[] = {  {&_swigt__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_traits[] = {  {&_swigt__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_type[] = {  {&_swigt__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_const_iterator[] = {  {&_swigt__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_iterator[] = {  {&_swigt__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence[] = {  {&_swigt__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_traits[] = {  {&_swigt__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_type[] = {  {&_swigt__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_Docking_Default_const_iterator[] = {  {&_swigt__p_SimNode_Docking_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_Docking_Default_iterator[] = {  {&_swigt__p_SimNode_Docking_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_Docking_Default_sequence[] = {  {&_swigt__p_SimNode_Docking_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_Docking_Default_traits[] = {  {&_swigt__p_SimNode_Docking_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_Docking_Default_type[] = {  {&_swigt__p_SimNode_Docking_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_HotWaterFlowPort_Water_In_const_iterator[] = {  {&_swigt__p_SimNode_HotWaterFlowPort_Water_In_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_HotWaterFlowPort_Water_In_iterator[] = {  {&_swigt__p_SimNode_HotWaterFlowPort_Water_In_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_HotWaterFlowPort_Water_In_sequence[] = {  {&_swigt__p_SimNode_HotWaterFlowPort_Water_In_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_HotWaterFlowPort_Water_In_traits[] = {  {&_swigt__p_SimNode_HotWaterFlowPort_Water_In_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_HotWaterFlowPort_Water_In_type[] = {  {&_swigt__p_SimNode_HotWaterFlowPort_Water_In_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_HotWaterFlowPort_Water_Out_const_iterator[] = {  {&_swigt__p_SimNode_HotWaterFlowPort_Water_Out_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_HotWaterFlowPort_Water_Out_iterator[] = {  {&_swigt__p_SimNode_HotWaterFlowPort_Water_Out_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_HotWaterFlowPort_Water_Out_sequence[] = {  {&_swigt__p_SimNode_HotWaterFlowPort_Water_Out_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_HotWaterFlowPort_Water_Out_traits[] = {  {&_swigt__p_SimNode_HotWaterFlowPort_Water_Out_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimNode_HotWaterFlowPort_Water_Out_type[] = {  {&_swigt__p_SimNode_HotWaterFlowPort_Water_Out_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimOrganization_Organization_Default_const_iterator[] = {  {&_swigt__p_SimOrganization_Organization_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimOrganization_Organization_Default_iterator[] = {  {&_swigt__p_SimOrganization_Organization_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimOrganization_Organization_Default_sequence[] = {  {&_swigt__p_SimOrganization_Organization_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimOrganization_Organization_Default_traits[] = {  {&_swigt__p_SimOrganization_Organization_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimOrganization_Organization_Default_type[] = {  {&_swigt__p_SimOrganization_Organization_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimOwnerHistory_Default_Default_const_iterator[] = {  {&_swigt__p_SimOwnerHistory_Default_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimOwnerHistory_Default_Default_iterator[] = {  {&_swigt__p_SimOwnerHistory_Default_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimOwnerHistory_Default_Default_sequence[] = {  {&_swigt__p_SimOwnerHistory_Default_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimOwnerHistory_Default_Default_traits[] = {  {&_swigt__p_SimOwnerHistory_Default_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimOwnerHistory_Default_Default_type[] = {  {&_swigt__p_SimOwnerHistory_Default_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_const_iterator[] = {  {&_swigt__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_iterator[] = {  {&_swigt__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence[] = {  {&_swigt__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_traits[] = {  {&_swigt__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_type[] = {  {&_swigt__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPersonAndOrganization_PersonAndOrganization_Default_const_iterator[] = {  {&_swigt__p_SimPersonAndOrganization_PersonAndOrganization_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPersonAndOrganization_PersonAndOrganization_Default_iterator[] = {  {&_swigt__p_SimPersonAndOrganization_PersonAndOrganization_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPersonAndOrganization_PersonAndOrganization_Default_sequence[] = {  {&_swigt__p_SimPersonAndOrganization_PersonAndOrganization_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPersonAndOrganization_PersonAndOrganization_Default_traits[] = {  {&_swigt__p_SimPersonAndOrganization_PersonAndOrganization_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPersonAndOrganization_PersonAndOrganization_Default_type[] = {  {&_swigt__p_SimPersonAndOrganization_PersonAndOrganization_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPerson_Person_Default_const_iterator[] = {  {&_swigt__p_SimPerson_Person_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPerson_Person_Default_iterator[] = {  {&_swigt__p_SimPerson_Person_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPerson_Person_Default_sequence[] = {  {&_swigt__p_SimPerson_Person_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPerson_Person_Default_traits[] = {  {&_swigt__p_SimPerson_Person_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPerson_Person_Default_type[] = {  {&_swigt__p_SimPerson_Person_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPlacement_Axis2Placement2D_Default_const_iterator[] = {  {&_swigt__p_SimPlacement_Axis2Placement2D_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPlacement_Axis2Placement2D_Default_iterator[] = {  {&_swigt__p_SimPlacement_Axis2Placement2D_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPlacement_Axis2Placement2D_Default_sequence[] = {  {&_swigt__p_SimPlacement_Axis2Placement2D_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPlacement_Axis2Placement2D_Default_traits[] = {  {&_swigt__p_SimPlacement_Axis2Placement2D_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPlacement_Axis2Placement2D_Default_type[] = {  {&_swigt__p_SimPlacement_Axis2Placement2D_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPlacement_Axis2Placement3D_Default_const_iterator[] = {  {&_swigt__p_SimPlacement_Axis2Placement3D_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPlacement_Axis2Placement3D_Default_iterator[] = {  {&_swigt__p_SimPlacement_Axis2Placement3D_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPlacement_Axis2Placement3D_Default_sequence[] = {  {&_swigt__p_SimPlacement_Axis2Placement3D_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPlacement_Axis2Placement3D_Default_traits[] = {  {&_swigt__p_SimPlacement_Axis2Placement3D_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPlacement_Axis2Placement3D_Default_type[] = {  {&_swigt__p_SimPlacement_Axis2Placement3D_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPresentationLayerAssignment_Default_Default_const_iterator[] = {  {&_swigt__p_SimPresentationLayerAssignment_Default_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPresentationLayerAssignment_Default_Default_iterator[] = {  {&_swigt__p_SimPresentationLayerAssignment_Default_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPresentationLayerAssignment_Default_Default_sequence[] = {  {&_swigt__p_SimPresentationLayerAssignment_Default_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPresentationLayerAssignment_Default_Default_traits[] = {  {&_swigt__p_SimPresentationLayerAssignment_Default_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimPresentationLayerAssignment_Default_Default_type[] = {  {&_swigt__p_SimPresentationLayerAssignment_Default_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimProject_Project_DesignAlternative_const_iterator[] = {  {&_swigt__p_SimProject_Project_DesignAlternative_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimProject_Project_DesignAlternative_iterator[] = {  {&_swigt__p_SimProject_Project_DesignAlternative_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimProject_Project_DesignAlternative_sequence[] = {  {&_swigt__p_SimProject_Project_DesignAlternative_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimProject_Project_DesignAlternative_traits[] = {  {&_swigt__p_SimProject_Project_DesignAlternative_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimProject_Project_DesignAlternative_type[] = {  {&_swigt__p_SimProject_Project_DesignAlternative_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimRepresentationMap_RepresentationMap_Default_const_iterator[] = {  {&_swigt__p_SimRepresentationMap_RepresentationMap_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimRepresentationMap_RepresentationMap_Default_iterator[] = {  {&_swigt__p_SimRepresentationMap_RepresentationMap_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimRepresentationMap_RepresentationMap_Default_sequence[] = {  {&_swigt__p_SimRepresentationMap_RepresentationMap_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimRepresentationMap_RepresentationMap_Default_traits[] = {  {&_swigt__p_SimRepresentationMap_RepresentationMap_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimRepresentationMap_RepresentationMap_Default_type[] = {  {&_swigt__p_SimRepresentationMap_RepresentationMap_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSIUnitType_SiUnit_Default_const_iterator[] = {  {&_swigt__p_SimSIUnitType_SiUnit_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSIUnitType_SiUnit_Default_iterator[] = {  {&_swigt__p_SimSIUnitType_SiUnit_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSIUnitType_SiUnit_Default_sequence[] = {  {&_swigt__p_SimSIUnitType_SiUnit_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSIUnitType_SiUnit_Default_traits[] = {  {&_swigt__p_SimSIUnitType_SiUnit_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSIUnitType_SiUnit_Default_type[] = {  {&_swigt__p_SimSIUnitType_SiUnit_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSensor_TemperatureSensor_DryBulb_const_iterator[] = {  {&_swigt__p_SimSensor_TemperatureSensor_DryBulb_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSensor_TemperatureSensor_DryBulb_iterator[] = {  {&_swigt__p_SimSensor_TemperatureSensor_DryBulb_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSensor_TemperatureSensor_DryBulb_sequence[] = {  {&_swigt__p_SimSensor_TemperatureSensor_DryBulb_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSensor_TemperatureSensor_DryBulb_traits[] = {  {&_swigt__p_SimSensor_TemperatureSensor_DryBulb_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSensor_TemperatureSensor_DryBulb_type[] = {  {&_swigt__p_SimSensor_TemperatureSensor_DryBulb_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimShapeRepresentation_ShapeRepresentation_Default_const_iterator[] = {  {&_swigt__p_SimShapeRepresentation_ShapeRepresentation_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimShapeRepresentation_ShapeRepresentation_Default_iterator[] = {  {&_swigt__p_SimShapeRepresentation_ShapeRepresentation_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimShapeRepresentation_ShapeRepresentation_Default_sequence[] = {  {&_swigt__p_SimShapeRepresentation_ShapeRepresentation_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimShapeRepresentation_ShapeRepresentation_Default_traits[] = {  {&_swigt__p_SimShapeRepresentation_ShapeRepresentation_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimShapeRepresentation_ShapeRepresentation_Default_type[] = {  {&_swigt__p_SimShapeRepresentation_ShapeRepresentation_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSimulationConfiguration_SimulationConfiguration_Default_const_iterator[] = {  {&_swigt__p_SimSimulationConfiguration_SimulationConfiguration_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSimulationConfiguration_SimulationConfiguration_Default_iterator[] = {  {&_swigt__p_SimSimulationConfiguration_SimulationConfiguration_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSimulationConfiguration_SimulationConfiguration_Default_sequence[] = {  {&_swigt__p_SimSimulationConfiguration_SimulationConfiguration_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSimulationConfiguration_SimulationConfiguration_Default_traits[] = {  {&_swigt__p_SimSimulationConfiguration_SimulationConfiguration_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSimulationConfiguration_SimulationConfiguration_Default_type[] = {  {&_swigt__p_SimSimulationConfiguration_SimulationConfiguration_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_const_iterator[] = {  {&_swigt__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_iterator[] = {  {&_swigt__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence[] = {  {&_swigt__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_traits[] = {  {&_swigt__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_type[] = {  {&_swigt__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSite_BuildingSite_Default_const_iterator[] = {  {&_swigt__p_SimSite_BuildingSite_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSite_BuildingSite_Default_iterator[] = {  {&_swigt__p_SimSite_BuildingSite_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSite_BuildingSite_Default_sequence[] = {  {&_swigt__p_SimSite_BuildingSite_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSite_BuildingSite_Default_traits[] = {  {&_swigt__p_SimSite_BuildingSite_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSite_BuildingSite_Default_type[] = {  {&_swigt__p_SimSite_BuildingSite_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlabParams_Slab_Floor_const_iterator[] = {  {&_swigt__p_SimSlabParams_Slab_Floor_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlabParams_Slab_Floor_iterator[] = {  {&_swigt__p_SimSlabParams_Slab_Floor_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlabParams_Slab_Floor_sequence[] = {  {&_swigt__p_SimSlabParams_Slab_Floor_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlabParams_Slab_Floor_traits[] = {  {&_swigt__p_SimSlabParams_Slab_Floor_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlabParams_Slab_Floor_type[] = {  {&_swigt__p_SimSlabParams_Slab_Floor_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlab_Default_Default_const_iterator[] = {  {&_swigt__p_SimSlab_Default_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlab_Default_Default_iterator[] = {  {&_swigt__p_SimSlab_Default_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlab_Default_Default_sequence[] = {  {&_swigt__p_SimSlab_Default_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlab_Default_Default_traits[] = {  {&_swigt__p_SimSlab_Default_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlab_Default_Default_type[] = {  {&_swigt__p_SimSlab_Default_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlab_Floor_FloorOverEarth_const_iterator[] = {  {&_swigt__p_SimSlab_Floor_FloorOverEarth_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlab_Floor_FloorOverEarth_iterator[] = {  {&_swigt__p_SimSlab_Floor_FloorOverEarth_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlab_Floor_FloorOverEarth_sequence[] = {  {&_swigt__p_SimSlab_Floor_FloorOverEarth_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlab_Floor_FloorOverEarth_traits[] = {  {&_swigt__p_SimSlab_Floor_FloorOverEarth_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlab_Floor_FloorOverEarth_type[] = {  {&_swigt__p_SimSlab_Floor_FloorOverEarth_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlab_Floor_InterzoneFloor_const_iterator[] = {  {&_swigt__p_SimSlab_Floor_InterzoneFloor_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlab_Floor_InterzoneFloor_iterator[] = {  {&_swigt__p_SimSlab_Floor_InterzoneFloor_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlab_Floor_InterzoneFloor_sequence[] = {  {&_swigt__p_SimSlab_Floor_InterzoneFloor_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlab_Floor_InterzoneFloor_traits[] = {  {&_swigt__p_SimSlab_Floor_InterzoneFloor_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlab_Floor_InterzoneFloor_type[] = {  {&_swigt__p_SimSlab_Floor_InterzoneFloor_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlab_RoofSlab_RoofUnderAir_const_iterator[] = {  {&_swigt__p_SimSlab_RoofSlab_RoofUnderAir_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlab_RoofSlab_RoofUnderAir_iterator[] = {  {&_swigt__p_SimSlab_RoofSlab_RoofUnderAir_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlab_RoofSlab_RoofUnderAir_sequence[] = {  {&_swigt__p_SimSlab_RoofSlab_RoofUnderAir_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlab_RoofSlab_RoofUnderAir_traits[] = {  {&_swigt__p_SimSlab_RoofSlab_RoofUnderAir_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSlab_RoofSlab_RoofUnderAir_type[] = {  {&_swigt__p_SimSlab_RoofSlab_RoofUnderAir_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSoftwareApplication_Default_Default_const_iterator[] = {  {&_swigt__p_SimSoftwareApplication_Default_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSoftwareApplication_Default_Default_iterator[] = {  {&_swigt__p_SimSoftwareApplication_Default_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSoftwareApplication_Default_Default_sequence[] = {  {&_swigt__p_SimSoftwareApplication_Default_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSoftwareApplication_Default_Default_traits[] = {  {&_swigt__p_SimSoftwareApplication_Default_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSoftwareApplication_Default_Default_type[] = {  {&_swigt__p_SimSoftwareApplication_Default_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSolarShade_Fin_Default_const_iterator[] = {  {&_swigt__p_SimSolarShade_Fin_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSolarShade_Fin_Default_iterator[] = {  {&_swigt__p_SimSolarShade_Fin_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSolarShade_Fin_Default_sequence[] = {  {&_swigt__p_SimSolarShade_Fin_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSolarShade_Fin_Default_traits[] = {  {&_swigt__p_SimSolarShade_Fin_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSolarShade_Fin_Default_type[] = {  {&_swigt__p_SimSolarShade_Fin_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSolarShade_Overhang_Default_const_iterator[] = {  {&_swigt__p_SimSolarShade_Overhang_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSolarShade_Overhang_Default_iterator[] = {  {&_swigt__p_SimSolarShade_Overhang_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSolarShade_Overhang_Default_sequence[] = {  {&_swigt__p_SimSolarShade_Overhang_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSolarShade_Overhang_Default_traits[] = {  {&_swigt__p_SimSolarShade_Overhang_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSolarShade_Overhang_Default_type[] = {  {&_swigt__p_SimSolarShade_Overhang_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpaceBoundary_SecondLevel_SubTypeA_const_iterator[] = {  {&_swigt__p_SimSpaceBoundary_SecondLevel_SubTypeA_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpaceBoundary_SecondLevel_SubTypeA_iterator[] = {  {&_swigt__p_SimSpaceBoundary_SecondLevel_SubTypeA_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpaceBoundary_SecondLevel_SubTypeA_sequence[] = {  {&_swigt__p_SimSpaceBoundary_SecondLevel_SubTypeA_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpaceBoundary_SecondLevel_SubTypeA_traits[] = {  {&_swigt__p_SimSpaceBoundary_SecondLevel_SubTypeA_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpaceBoundary_SecondLevel_SubTypeA_type[] = {  {&_swigt__p_SimSpaceBoundary_SecondLevel_SubTypeA_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpaceParams_Space_Default_const_iterator[] = {  {&_swigt__p_SimSpaceParams_Space_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpaceParams_Space_Default_iterator[] = {  {&_swigt__p_SimSpaceParams_Space_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpaceParams_Space_Default_sequence[] = {  {&_swigt__p_SimSpaceParams_Space_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpaceParams_Space_Default_traits[] = {  {&_swigt__p_SimSpaceParams_Space_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpaceParams_Space_Default_type[] = {  {&_swigt__p_SimSpaceParams_Space_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpace_Occupied_Default_const_iterator[] = {  {&_swigt__p_SimSpace_Occupied_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpace_Occupied_Default_iterator[] = {  {&_swigt__p_SimSpace_Occupied_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpace_Occupied_Default_sequence[] = {  {&_swigt__p_SimSpace_Occupied_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpace_Occupied_Default_traits[] = {  {&_swigt__p_SimSpace_Occupied_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpace_Occupied_Default_type[] = {  {&_swigt__p_SimSpace_Occupied_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpatialZone_ThermalZone_Default_const_iterator[] = {  {&_swigt__p_SimSpatialZone_ThermalZone_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpatialZone_ThermalZone_Default_iterator[] = {  {&_swigt__p_SimSpatialZone_ThermalZone_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpatialZone_ThermalZone_Default_sequence[] = {  {&_swigt__p_SimSpatialZone_ThermalZone_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpatialZone_ThermalZone_Default_traits[] = {  {&_swigt__p_SimSpatialZone_ThermalZone_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpatialZone_ThermalZone_Default_type[] = {  {&_swigt__p_SimSpatialZone_ThermalZone_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_const_iterator[] = {  {&_swigt__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_iterator[] = {  {&_swigt__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_sequence[] = {  {&_swigt__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_traits[] = {  {&_swigt__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_type[] = {  {&_swigt__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_HvacHotWater_Control_const_iterator[] = {  {&_swigt__p_SimSystem_HvacHotWater_Control_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_HvacHotWater_Control_iterator[] = {  {&_swigt__p_SimSystem_HvacHotWater_Control_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_HvacHotWater_Control_sequence[] = {  {&_swigt__p_SimSystem_HvacHotWater_Control_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_HvacHotWater_Control_traits[] = {  {&_swigt__p_SimSystem_HvacHotWater_Control_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_HvacHotWater_Control_type[] = {  {&_swigt__p_SimSystem_HvacHotWater_Control_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_HvacHotWater_Demand_const_iterator[] = {  {&_swigt__p_SimSystem_HvacHotWater_Demand_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_HvacHotWater_Demand_iterator[] = {  {&_swigt__p_SimSystem_HvacHotWater_Demand_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_HvacHotWater_Demand_sequence[] = {  {&_swigt__p_SimSystem_HvacHotWater_Demand_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_HvacHotWater_Demand_traits[] = {  {&_swigt__p_SimSystem_HvacHotWater_Demand_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_HvacHotWater_Demand_type[] = {  {&_swigt__p_SimSystem_HvacHotWater_Demand_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_HvacHotWater_FullSystem_const_iterator[] = {  {&_swigt__p_SimSystem_HvacHotWater_FullSystem_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_HvacHotWater_FullSystem_iterator[] = {  {&_swigt__p_SimSystem_HvacHotWater_FullSystem_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_HvacHotWater_FullSystem_sequence[] = {  {&_swigt__p_SimSystem_HvacHotWater_FullSystem_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_HvacHotWater_FullSystem_traits[] = {  {&_swigt__p_SimSystem_HvacHotWater_FullSystem_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_HvacHotWater_FullSystem_type[] = {  {&_swigt__p_SimSystem_HvacHotWater_FullSystem_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_HvacHotWater_Supply_const_iterator[] = {  {&_swigt__p_SimSystem_HvacHotWater_Supply_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_HvacHotWater_Supply_iterator[] = {  {&_swigt__p_SimSystem_HvacHotWater_Supply_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_HvacHotWater_Supply_sequence[] = {  {&_swigt__p_SimSystem_HvacHotWater_Supply_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_HvacHotWater_Supply_traits[] = {  {&_swigt__p_SimSystem_HvacHotWater_Supply_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_HvacHotWater_Supply_type[] = {  {&_swigt__p_SimSystem_HvacHotWater_Supply_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_ZoneHvacGroup_Control_const_iterator[] = {  {&_swigt__p_SimSystem_ZoneHvacGroup_Control_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_ZoneHvacGroup_Control_iterator[] = {  {&_swigt__p_SimSystem_ZoneHvacGroup_Control_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_ZoneHvacGroup_Control_sequence[] = {  {&_swigt__p_SimSystem_ZoneHvacGroup_Control_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_ZoneHvacGroup_Control_traits[] = {  {&_swigt__p_SimSystem_ZoneHvacGroup_Control_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_ZoneHvacGroup_Control_type[] = {  {&_swigt__p_SimSystem_ZoneHvacGroup_Control_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_ZoneHvacGroup_Demand_const_iterator[] = {  {&_swigt__p_SimSystem_ZoneHvacGroup_Demand_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_ZoneHvacGroup_Demand_iterator[] = {  {&_swigt__p_SimSystem_ZoneHvacGroup_Demand_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_ZoneHvacGroup_Demand_sequence[] = {  {&_swigt__p_SimSystem_ZoneHvacGroup_Demand_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_ZoneHvacGroup_Demand_traits[] = {  {&_swigt__p_SimSystem_ZoneHvacGroup_Demand_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_ZoneHvacGroup_Demand_type[] = {  {&_swigt__p_SimSystem_ZoneHvacGroup_Demand_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_ZoneHvacGroup_FullSystem_const_iterator[] = {  {&_swigt__p_SimSystem_ZoneHvacGroup_FullSystem_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_ZoneHvacGroup_FullSystem_iterator[] = {  {&_swigt__p_SimSystem_ZoneHvacGroup_FullSystem_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_ZoneHvacGroup_FullSystem_sequence[] = {  {&_swigt__p_SimSystem_ZoneHvacGroup_FullSystem_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_ZoneHvacGroup_FullSystem_traits[] = {  {&_swigt__p_SimSystem_ZoneHvacGroup_FullSystem_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_ZoneHvacGroup_FullSystem_type[] = {  {&_swigt__p_SimSystem_ZoneHvacGroup_FullSystem_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_ZoneHvacGroup_Supply_const_iterator[] = {  {&_swigt__p_SimSystem_ZoneHvacGroup_Supply_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_ZoneHvacGroup_Supply_iterator[] = {  {&_swigt__p_SimSystem_ZoneHvacGroup_Supply_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_ZoneHvacGroup_Supply_sequence[] = {  {&_swigt__p_SimSystem_ZoneHvacGroup_Supply_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_ZoneHvacGroup_Supply_traits[] = {  {&_swigt__p_SimSystem_ZoneHvacGroup_Supply_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimSystem_ZoneHvacGroup_Supply_type[] = {  {&_swigt__p_SimSystem_ZoneHvacGroup_Supply_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTemplateConstructions_Constructions_Default_const_iterator[] = {  {&_swigt__p_SimTemplateConstructions_Constructions_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTemplateConstructions_Constructions_Default_iterator[] = {  {&_swigt__p_SimTemplateConstructions_Constructions_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTemplateConstructions_Constructions_Default_sequence[] = {  {&_swigt__p_SimTemplateConstructions_Constructions_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTemplateConstructions_Constructions_Default_traits[] = {  {&_swigt__p_SimTemplateConstructions_Constructions_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTemplateConstructions_Constructions_Default_type[] = {  {&_swigt__p_SimTemplateConstructions_Constructions_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTemplateLocation_Location_Default_const_iterator[] = {  {&_swigt__p_SimTemplateLocation_Location_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTemplateLocation_Location_Default_iterator[] = {  {&_swigt__p_SimTemplateLocation_Location_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTemplateLocation_Location_Default_sequence[] = {  {&_swigt__p_SimTemplateLocation_Location_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTemplateLocation_Location_Default_traits[] = {  {&_swigt__p_SimTemplateLocation_Location_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTemplateLocation_Location_Default_type[] = {  {&_swigt__p_SimTemplateLocation_Location_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTemplateZoneConditions_ZoneConditions_Default_const_iterator[] = {  {&_swigt__p_SimTemplateZoneConditions_ZoneConditions_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTemplateZoneConditions_ZoneConditions_Default_iterator[] = {  {&_swigt__p_SimTemplateZoneConditions_ZoneConditions_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTemplateZoneConditions_ZoneConditions_Default_sequence[] = {  {&_swigt__p_SimTemplateZoneConditions_ZoneConditions_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTemplateZoneConditions_ZoneConditions_Default_traits[] = {  {&_swigt__p_SimTemplateZoneConditions_ZoneConditions_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTemplateZoneConditions_ZoneConditions_Default_type[] = {  {&_swigt__p_SimTemplateZoneConditions_ZoneConditions_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTemplateZoneLoads_ZoneLoads_Default_const_iterator[] = {  {&_swigt__p_SimTemplateZoneLoads_ZoneLoads_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTemplateZoneLoads_ZoneLoads_Default_iterator[] = {  {&_swigt__p_SimTemplateZoneLoads_ZoneLoads_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTemplateZoneLoads_ZoneLoads_Default_sequence[] = {  {&_swigt__p_SimTemplateZoneLoads_ZoneLoads_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTemplateZoneLoads_ZoneLoads_Default_traits[] = {  {&_swigt__p_SimTemplateZoneLoads_ZoneLoads_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTemplateZoneLoads_ZoneLoads_Default_type[] = {  {&_swigt__p_SimTemplateZoneLoads_ZoneLoads_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimThermalZoneType_ThermalZone_Default_const_iterator[] = {  {&_swigt__p_SimThermalZoneType_ThermalZone_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimThermalZoneType_ThermalZone_Default_iterator[] = {  {&_swigt__p_SimThermalZoneType_ThermalZone_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimThermalZoneType_ThermalZone_Default_sequence[] = {  {&_swigt__p_SimThermalZoneType_ThermalZone_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimThermalZoneType_ThermalZone_Default_traits[] = {  {&_swigt__p_SimThermalZoneType_ThermalZone_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimThermalZoneType_ThermalZone_Default_type[] = {  {&_swigt__p_SimThermalZoneType_ThermalZone_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Calendar_Configuration_const_iterator[] = {  {&_swigt__p_SimTimeSeriesSchedule_Calendar_Configuration_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Calendar_Configuration_iterator[] = {  {&_swigt__p_SimTimeSeriesSchedule_Calendar_Configuration_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Calendar_Configuration_sequence[] = {  {&_swigt__p_SimTimeSeriesSchedule_Calendar_Configuration_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Calendar_Configuration_traits[] = {  {&_swigt__p_SimTimeSeriesSchedule_Calendar_Configuration_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Calendar_Configuration_type[] = {  {&_swigt__p_SimTimeSeriesSchedule_Calendar_Configuration_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Day_Interval_const_iterator[] = {  {&_swigt__p_SimTimeSeriesSchedule_Day_Interval_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Day_Interval_iterator[] = {  {&_swigt__p_SimTimeSeriesSchedule_Day_Interval_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Day_Interval_sequence[] = {  {&_swigt__p_SimTimeSeriesSchedule_Day_Interval_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Day_Interval_traits[] = {  {&_swigt__p_SimTimeSeriesSchedule_Day_Interval_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Day_Interval_type[] = {  {&_swigt__p_SimTimeSeriesSchedule_Day_Interval_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Limits_Default_const_iterator[] = {  {&_swigt__p_SimTimeSeriesSchedule_Limits_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Limits_Default_iterator[] = {  {&_swigt__p_SimTimeSeriesSchedule_Limits_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Limits_Default_sequence[] = {  {&_swigt__p_SimTimeSeriesSchedule_Limits_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Limits_Default_traits[] = {  {&_swigt__p_SimTimeSeriesSchedule_Limits_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Limits_Default_type[] = {  {&_swigt__p_SimTimeSeriesSchedule_Limits_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Week_Daily_const_iterator[] = {  {&_swigt__p_SimTimeSeriesSchedule_Week_Daily_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Week_Daily_iterator[] = {  {&_swigt__p_SimTimeSeriesSchedule_Week_Daily_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Week_Daily_sequence[] = {  {&_swigt__p_SimTimeSeriesSchedule_Week_Daily_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Week_Daily_traits[] = {  {&_swigt__p_SimTimeSeriesSchedule_Week_Daily_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Week_Daily_type[] = {  {&_swigt__p_SimTimeSeriesSchedule_Week_Daily_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Year_Default_const_iterator[] = {  {&_swigt__p_SimTimeSeriesSchedule_Year_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Year_Default_iterator[] = {  {&_swigt__p_SimTimeSeriesSchedule_Year_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Year_Default_sequence[] = {  {&_swigt__p_SimTimeSeriesSchedule_Year_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Year_Default_traits[] = {  {&_swigt__p_SimTimeSeriesSchedule_Year_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimTimeSeriesSchedule_Year_Default_type[] = {  {&_swigt__p_SimTimeSeriesSchedule_Year_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimUniqueID_optional[] = {  {&_swigt__p_SimUniqueID_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimUniqueID_traits[] = {  {&_swigt__p_SimUniqueID_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimUniqueID_type[] = {  {&_swigt__p_SimUniqueID_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWallParams_Wall_Default_const_iterator[] = {  {&_swigt__p_SimWallParams_Wall_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWallParams_Wall_Default_iterator[] = {  {&_swigt__p_SimWallParams_Wall_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWallParams_Wall_Default_sequence[] = {  {&_swigt__p_SimWallParams_Wall_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWallParams_Wall_Default_traits[] = {  {&_swigt__p_SimWallParams_Wall_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWallParams_Wall_Default_type[] = {  {&_swigt__p_SimWallParams_Wall_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWallType_Wall_Default_const_iterator[] = {  {&_swigt__p_SimWallType_Wall_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWallType_Wall_Default_iterator[] = {  {&_swigt__p_SimWallType_Wall_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWallType_Wall_Default_sequence[] = {  {&_swigt__p_SimWallType_Wall_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWallType_Wall_Default_traits[] = {  {&_swigt__p_SimWallType_Wall_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWallType_Wall_Default_type[] = {  {&_swigt__p_SimWallType_Wall_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWall_Wall_Default_const_iterator[] = {  {&_swigt__p_SimWall_Wall_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWall_Wall_Default_iterator[] = {  {&_swigt__p_SimWall_Wall_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWall_Wall_Default_sequence[] = {  {&_swigt__p_SimWall_Wall_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWall_Wall_Default_traits[] = {  {&_swigt__p_SimWall_Wall_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWall_Wall_Default_type[] = {  {&_swigt__p_SimWall_Wall_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWall_Wall_ExteriorAboveGrade_const_iterator[] = {  {&_swigt__p_SimWall_Wall_ExteriorAboveGrade_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWall_Wall_ExteriorAboveGrade_iterator[] = {  {&_swigt__p_SimWall_Wall_ExteriorAboveGrade_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWall_Wall_ExteriorAboveGrade_sequence[] = {  {&_swigt__p_SimWall_Wall_ExteriorAboveGrade_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWall_Wall_ExteriorAboveGrade_traits[] = {  {&_swigt__p_SimWall_Wall_ExteriorAboveGrade_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWall_Wall_ExteriorAboveGrade_type[] = {  {&_swigt__p_SimWall_Wall_ExteriorAboveGrade_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWall_Wall_Interior_const_iterator[] = {  {&_swigt__p_SimWall_Wall_Interior_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWall_Wall_Interior_iterator[] = {  {&_swigt__p_SimWall_Wall_Interior_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWall_Wall_Interior_sequence[] = {  {&_swigt__p_SimWall_Wall_Interior_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWall_Wall_Interior_traits[] = {  {&_swigt__p_SimWall_Wall_Interior_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWall_Wall_Interior_type[] = {  {&_swigt__p_SimWall_Wall_Interior_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowArrayParams_WindowArray_Default_const_iterator[] = {  {&_swigt__p_SimWindowArrayParams_WindowArray_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowArrayParams_WindowArray_Default_iterator[] = {  {&_swigt__p_SimWindowArrayParams_WindowArray_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowArrayParams_WindowArray_Default_sequence[] = {  {&_swigt__p_SimWindowArrayParams_WindowArray_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowArrayParams_WindowArray_Default_traits[] = {  {&_swigt__p_SimWindowArrayParams_WindowArray_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowArrayParams_WindowArray_Default_type[] = {  {&_swigt__p_SimWindowArrayParams_WindowArray_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowLiningProps_WindowLiningProps_Default_const_iterator[] = {  {&_swigt__p_SimWindowLiningProps_WindowLiningProps_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowLiningProps_WindowLiningProps_Default_iterator[] = {  {&_swigt__p_SimWindowLiningProps_WindowLiningProps_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowLiningProps_WindowLiningProps_Default_sequence[] = {  {&_swigt__p_SimWindowLiningProps_WindowLiningProps_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowLiningProps_WindowLiningProps_Default_traits[] = {  {&_swigt__p_SimWindowLiningProps_WindowLiningProps_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowLiningProps_WindowLiningProps_Default_type[] = {  {&_swigt__p_SimWindowLiningProps_WindowLiningProps_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowParams_Window_Default_const_iterator[] = {  {&_swigt__p_SimWindowParams_Window_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowParams_Window_Default_iterator[] = {  {&_swigt__p_SimWindowParams_Window_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowParams_Window_Default_sequence[] = {  {&_swigt__p_SimWindowParams_Window_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowParams_Window_Default_traits[] = {  {&_swigt__p_SimWindowParams_Window_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowParams_Window_Default_type[] = {  {&_swigt__p_SimWindowParams_Window_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowType_Window_Default_const_iterator[] = {  {&_swigt__p_SimWindowType_Window_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowType_Window_Default_iterator[] = {  {&_swigt__p_SimWindowType_Window_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowType_Window_Default_sequence[] = {  {&_swigt__p_SimWindowType_Window_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowType_Window_Default_traits[] = {  {&_swigt__p_SimWindowType_Window_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowType_Window_Default_type[] = {  {&_swigt__p_SimWindowType_Window_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowType_Window_Exterior_const_iterator[] = {  {&_swigt__p_SimWindowType_Window_Exterior_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowType_Window_Exterior_iterator[] = {  {&_swigt__p_SimWindowType_Window_Exterior_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowType_Window_Exterior_sequence[] = {  {&_swigt__p_SimWindowType_Window_Exterior_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowType_Window_Exterior_traits[] = {  {&_swigt__p_SimWindowType_Window_Exterior_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowType_Window_Exterior_type[] = {  {&_swigt__p_SimWindowType_Window_Exterior_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowType_Window_Interior_const_iterator[] = {  {&_swigt__p_SimWindowType_Window_Interior_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowType_Window_Interior_iterator[] = {  {&_swigt__p_SimWindowType_Window_Interior_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowType_Window_Interior_sequence[] = {  {&_swigt__p_SimWindowType_Window_Interior_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowType_Window_Interior_traits[] = {  {&_swigt__p_SimWindowType_Window_Interior_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindowType_Window_Interior_type[] = {  {&_swigt__p_SimWindowType_Window_Interior_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindow_Window_Default_const_iterator[] = {  {&_swigt__p_SimWindow_Window_Default_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindow_Window_Default_iterator[] = {  {&_swigt__p_SimWindow_Window_Default_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindow_Window_Default_sequence[] = {  {&_swigt__p_SimWindow_Window_Default_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindow_Window_Default_traits[] = {  {&_swigt__p_SimWindow_Window_Default_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindow_Window_Default_type[] = {  {&_swigt__p_SimWindow_Window_Default_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindow_Window_ExteriorDetailed_const_iterator[] = {  {&_swigt__p_SimWindow_Window_ExteriorDetailed_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindow_Window_ExteriorDetailed_iterator[] = {  {&_swigt__p_SimWindow_Window_ExteriorDetailed_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindow_Window_ExteriorDetailed_sequence[] = {  {&_swigt__p_SimWindow_Window_ExteriorDetailed_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindow_Window_ExteriorDetailed_traits[] = {  {&_swigt__p_SimWindow_Window_ExteriorDetailed_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindow_Window_ExteriorDetailed_type[] = {  {&_swigt__p_SimWindow_Window_ExteriorDetailed_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindow_Window_Exterior_const_iterator[] = {  {&_swigt__p_SimWindow_Window_Exterior_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindow_Window_Exterior_iterator[] = {  {&_swigt__p_SimWindow_Window_Exterior_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindow_Window_Exterior_sequence[] = {  {&_swigt__p_SimWindow_Window_Exterior_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindow_Window_Exterior_traits[] = {  {&_swigt__p_SimWindow_Window_Exterior_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SimWindow_Window_Exterior_type[] = {  {&_swigt__p_SimWindow_Window_Exterior_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceLibraryEntryID_optional[] = {  {&_swigt__p_SourceLibraryEntryID_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceLibraryEntryID_traits[] = {  {&_swigt__p_SourceLibraryEntryID_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceLibraryEntryID_type[] = {  {&_swigt__p_SourceLibraryEntryID_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceLibraryEntryRef_optional[] = {  {&_swigt__p_SourceLibraryEntryRef_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceLibraryEntryRef_traits[] = {  {&_swigt__p_SourceLibraryEntryRef_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceLibraryEntryRef_type[] = {  {&_swigt__p_SourceLibraryEntryRef_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceModelObjectType_optional[] = {  {&_swigt__p_SourceModelObjectType_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceModelObjectType_traits[] = {  {&_swigt__p_SourceModelObjectType_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceModelObjectType_type[] = {  {&_swigt__p_SourceModelObjectType_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceModelSchema_optional[] = {  {&_swigt__p_SourceModelSchema_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceModelSchema_traits[] = {  {&_swigt__p_SourceModelSchema_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SourceModelSchema_type[] = {  {&_swigt__p_SourceModelSchema_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Tag_optional[] = {  {&_swigt__p_Tag_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Tag_traits[] = {  {&_swigt__p_Tag_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Tag_type[] = {  {&_swigt__p_Tag_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TemplatesForMembers_optional[] = {  {&_swigt__p_TemplatesForMembers_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TemplatesForMembers_traits[] = {  {&_swigt__p_TemplatesForMembers_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TemplatesForMembers_type[] = {  {&_swigt__p_TemplatesForMembers_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TypeDefCreationParams_optional[] = {  {&_swigt__p_TypeDefCreationParams_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TypeDefCreationParams_traits[] = {  {&_swigt__p_TypeDefCreationParams_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TypeDefCreationParams_type[] = {  {&_swigt__p_TypeDefCreationParams_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TypeDefinition_optional[] = {  {&_swigt__p_TypeDefinition_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TypeDefinition_traits[] = {  {&_swigt__p_TypeDefinition_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TypeDefinition_type[] = {  {&_swigt__p_TypeDefinition_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UnitType_String_optional[] = {  {&_swigt__p_UnitType_String_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UnitType_String_traits[] = {  {&_swigt__p_UnitType_String_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UnitType_String_type[] = {  {&_swigt__p_UnitType_String_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionX_optional[] = {  {&_swigt__p_XDirectionX_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionX_traits[] = {  {&_swigt__p_XDirectionX_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionX_type[] = {  {&_swigt__p_XDirectionX_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionY_optional[] = {  {&_swigt__p_XDirectionY_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionY_traits[] = {  {&_swigt__p_XDirectionY_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionY_type[] = {  {&_swigt__p_XDirectionY_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionZ_optional[] = {  {&_swigt__p_XDirectionZ_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionZ_traits[] = {  {&_swigt__p_XDirectionZ_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XDirectionZ_type[] = {  {&_swigt__p_XDirectionZ_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dHeight_optional[] = {  {&_swigt__p__3dHeight_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dHeight_traits[] = {  {&_swigt__p__3dHeight_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dHeight_type[] = {  {&_swigt__p__3dHeight_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dLength_optional[] = {  {&_swigt__p__3dLength_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dLength_traits[] = {  {&_swigt__p__3dLength_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dLength_type[] = {  {&_swigt__p__3dLength_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dWidth_optional[] = {  {&_swigt__p__3dWidth_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dWidth_traits[] = {  {&_swigt__p__3dWidth_traits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__3dWidth_type[] = {  {&_swigt__p__3dWidth_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_allocator_type[] = {  {&_swigt__p_allocator_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_base_const_iterator[] = {  {&_swigt__p_base_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_base_iterator[] = {  {&_swigt__p_base_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_base_sequence[] = {  {&_swigt__p_base_sequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_base_type[] = {  {&_swigt__p_base_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bool[] = {  {&_swigt__p_bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bool_convertible[] = {  {&_swigt__p_bool_convertible, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_const_iterator[] = {  {&_swigt__p_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_const_reverse_iterator[] = {  {&_swigt__p_const_reverse_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_difference_type[] = {  {&_swigt__p_difference_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dom_content_optional[] = {  {&_swigt__p_dom_content_optional, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iterator[] = {  {&_swigt__p_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_long[] = {  {&_swigt__p_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ptr[] = {  {&_swigt__p_ptr, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_reverse_iterator[] = {  {&_swigt__p_reverse_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__Model__SimModel[] = {  {&_swigt__p_schema__simxml__Model__SimModel, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SelectedPropertyGroups[] = {  {&_swigt__p_schema__simxml__SimModelCore__SelectedPropertyGroups, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__doubleList[] = {  {&_swigt__p_schema__simxml__SimModelCore__doubleList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__integerList[] = {  {&_swigt__p_schema__simxml__SimModelCore__integerList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__logical[] = {  {&_swigt__p_schema__simxml__SimModelCore__logical, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_self_[] = {  {&_swigt__p_self_, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_short[] = {  {&_swigt__p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_signed_char[] = {  {&_swigt__p_signed_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_type[] = {  {&_swigt__p_size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__auto_ptrT_xml_schema__string_t[] = {  {&_swigt__p_std__auto_ptrT_xml_schema__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__invalid_argument[] = {  {&_swigt__p_std__invalid_argument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__istream[] = {  {&_swigt__p_std__istream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_swig__SwigPyIterator[] = {  {&_swigt__p_swig__SwigPyIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long_long[] = {  {&_swigt__p_unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_short[] = {  {&_swigt__p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_value_type[] = {  {&_swigt__p_value_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xercesc__DOMDocument[] = {  {&_swigt__p_xercesc__DOMDocument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xercesc__DOMElement[] = {  {&_swigt__p_xercesc__DOMElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xercesc__DOMErrorHandler[] = {  {&_swigt__p_xercesc__DOMErrorHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xercesc__InputSource[] = {  {&_swigt__p_xercesc__InputSource, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xml_schema__dom__auto_ptrT_xercesc__DOMDocument_t[] = {  {&_swigt__p_xml_schema__dom__auto_ptrT_xercesc__DOMDocument_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimObjectDefinition[] = {{&_swigt__p_schema__simxml__SimModelCore__SimObjectDefinition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimDistributionElement[] = {{&_swigt__p_schema__simxml__SimModelCore__SimDistributionElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimSpatialStructureElement[] = {{&_swigt__p_schema__simxml__SimModelCore__SimSpatialStructureElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimTemplate[] = {{&_swigt__p_schema__simxml__SimModelCore__SimTemplate, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__ResourcesGeneral__SimNode[] = {{&_swigt__p_schema__simxml__ResourcesGeneral__SimNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__MepModel__SimFlowEnergyConverter[] = {{&_swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimAppDefault[] = {{&_swigt__p_schema__simxml__SimModelCore__SimAppDefault, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimActorDefinition[] = {{&_swigt__p_schema__simxml__SimModelCore__SimActorDefinition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__ResourcesGeometry__SimProfileDefinition[] = {{&_swigt__p_schema__simxml__ResourcesGeometry__SimProfileDefinition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__ResourcesGeneral__SimArrayParams[] = {{&_swigt__p_schema__simxml__ResourcesGeneral__SimArrayParams, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimDistributionControlElement[] = {{&_swigt__p_schema__simxml__SimModelCore__SimDistributionControlElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__ResourcesGeneral__SimPort[] = {{&_swigt__p_schema__simxml__ResourcesGeneral__SimPort, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimPropertySetDefinition[] = {{&_swigt__p_schema__simxml__SimModelCore__SimPropertySetDefinition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimGroup[] = {{&_swigt__p_schema__simxml__SimModelCore__SimGroup, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree__type_t_t[] = {{&_swigt__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree__type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__ResourcesGeneral__SimUnitType[] = {{&_swigt__p_schema__simxml__ResourcesGeneral__SimUnitType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimBuildingElement[] = {{&_swigt__p_schema__simxml__SimModelCore__SimBuildingElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimObjectPlacement[] = {{&_swigt__p_schema__simxml__SimModelCore__SimObjectPlacement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem[] = {{&_swigt__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimResourceObject[] = {{&_swigt__p_schema__simxml__SimModelCore__SimResourceObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimObject[] = {{&_swigt__p_schema__simxml__SimModelCore__SimObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimElement[] = {{&_swigt__p_schema__simxml__SimModelCore__SimElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimFeatureElement[] = {{&_swigt__p_schema__simxml__SimModelCore__SimFeatureElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem[] = {{&_swigt__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimBldgModelParams[] = {{&_swigt__p_schema__simxml__SimModelCore__SimBldgModelParams, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimObjectTypeDefinition[] = {{&_swigt__p_schema__simxml__SimModelCore__SimObjectTypeDefinition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimRepresentationItem[] = {{&_swigt__p_schema__simxml__SimModelCore__SimRepresentationItem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimDistributionFlowElement[] = {{&_swigt__p_schema__simxml__SimModelCore__SimDistributionFlowElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimRoot[] = {{&_swigt__p_schema__simxml__SimModelCore__SimRoot, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_schema__simxml__SimModelCore__SimRepresentation[] = {{&_swigt__p_schema__simxml__SimModelCore__SimRepresentation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree___type[] = {  {&_swigt__p_schema__simxml__SimModelCore__SimObjectDefinition, _p_schema__simxml__SimModelCore__SimObjectDefinitionTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionElement, _p_schema__simxml__SimModelCore__SimDistributionElementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimSpatialStructureElement, _p_schema__simxml__SimModelCore__SimSpatialStructureElementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t, _p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_tTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimTemplate, _p_schema__simxml__SimModelCore__SimTemplateTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimNode, _p_schema__simxml__ResourcesGeneral__SimNodeTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__MepModel__SimFlowEnergyConverter, _p_schema__simxml__MepModel__SimFlowEnergyConverterTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimAppDefault, _p_schema__simxml__SimModelCore__SimAppDefaultTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimActorDefinition, _p_schema__simxml__SimModelCore__SimActorDefinitionTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeometry__SimProfileDefinition, _p_schema__simxml__ResourcesGeometry__SimProfileDefinitionTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimArrayParams, _p_schema__simxml__ResourcesGeneral__SimArrayParamsTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionControlElement, _p_schema__simxml__SimModelCore__SimDistributionControlElementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimPort, _p_schema__simxml__ResourcesGeneral__SimPortTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimPropertySetDefinition, _p_schema__simxml__SimModelCore__SimPropertySetDefinitionTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimGroup, _p_schema__simxml__SimModelCore__SimGroupTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree__type_t_t, _p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree__type_t_tTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__ResourcesGeneral__SimUnitType, _p_schema__simxml__ResourcesGeneral__SimUnitTypeTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimBuildingElement, _p_schema__simxml__SimModelCore__SimBuildingElementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObjectPlacement, _p_schema__simxml__SimModelCore__SimObjectPlacementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__Model__SimModel, _p_schema__simxml__Model__SimModelTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem, _p_schema__simxml__SimModelCore__SimTopologicalRepresentationItemTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimResourceObject, _p_schema__simxml__SimModelCore__SimResourceObjectTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObject, _p_schema__simxml__SimModelCore__SimObjectTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimElement, _p_schema__simxml__SimModelCore__SimElementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimFeatureElement, _p_schema__simxml__SimModelCore__SimFeatureElementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem, _p_schema__simxml__SimModelCore__SimGeometricRepresentationItemTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimBldgModelParams, _p_schema__simxml__SimModelCore__SimBldgModelParamsTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimObjectTypeDefinition, _p_schema__simxml__SimModelCore__SimObjectTypeDefinitionTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_xsd__cxx__tree___type, 0, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimRepresentationItem, _p_schema__simxml__SimModelCore__SimRepresentationItemTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimDistributionFlowElement, _p_schema__simxml__SimModelCore__SimDistributionFlowElementTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimRoot, _p_schema__simxml__SimModelCore__SimRootTo_p_xsd__cxx__tree___type, 0, 0},  {&_swigt__p_schema__simxml__SimModelCore__SimRepresentation, _p_schema__simxml__SimModelCore__SimRepresentationTo_p_xsd__cxx__tree___type, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__base64_binaryT_char_xsd__cxx__tree__simple_type_t[] = {  {&_swigt__p_xsd__cxx__tree__base64_binaryT_char_xsd__cxx__tree__simple_type_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__boundsT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__boundsT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__bufferT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__bufferT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__content_order[] = {  {&_swigt__p_xsd__cxx__tree__content_order, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__dateT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__dateT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__date_timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__date_timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__diagnosticsT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__diagnosticsT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__duplicate_idT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__duplicate_idT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__durationT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__durationT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__entitiesT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__entity_t[] = {  {&_swigt__p_xsd__cxx__tree__entitiesT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__entity_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__entityT_char_xsd__cxx__tree__ncname_t[] = {  {&_swigt__p_xsd__cxx__tree__entityT_char_xsd__cxx__tree__ncname_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__errorT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__errorT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__exceptionT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__exceptionT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__expected_attributeT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__expected_attributeT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__expected_elementT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__expected_elementT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__expected_text_contentT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__expected_text_contentT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__flags[] = {  {&_swigt__p_xsd__cxx__tree__flags, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__gdayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__gdayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__gmonthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__gmonthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__gmonth_dayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__gmonth_dayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__gyearT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__gyearT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__gyear_monthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__gyear_monthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__hex_binaryT_char_xsd__cxx__tree__simple_type_t[] = {  {&_swigt__p_xsd__cxx__tree__hex_binaryT_char_xsd__cxx__tree__simple_type_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t[] = {  {&_swigt__p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t[] = {  {&_swigt__p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t[] = {  {&_swigt__p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__languageT_char_xsd__cxx__tree__token_t[] = {  {&_swigt__p_xsd__cxx__tree__languageT_char_xsd__cxx__tree__token_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__nameT_char_xsd__cxx__tree__token_t[] = {  {&_swigt__p_xsd__cxx__tree__nameT_char_xsd__cxx__tree__token_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__ncnameT_char_xsd__cxx__tree__name_t[] = {  {&_swigt__p_xsd__cxx__tree__ncnameT_char_xsd__cxx__tree__name_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__nmtokenT_char_xsd__cxx__tree__token_t[] = {  {&_swigt__p_xsd__cxx__tree__nmtokenT_char_xsd__cxx__tree__token_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__nmtokensT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__nmtoken_t[] = {  {&_swigt__p_xsd__cxx__tree__nmtokensT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__nmtoken_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__no_prefix_mappingT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__no_prefix_mappingT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__no_type_infoT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__no_type_infoT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__normalized_stringT_char_xsd__cxx__tree__string_t[] = {  {&_swigt__p_xsd__cxx__tree__normalized_stringT_char_xsd__cxx__tree__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__not_derivedT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__not_derivedT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t[] = {  {&_swigt__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__parsingT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__parsingT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__propertiesT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__propertiesT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__qnameT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__uri_xsd__cxx__tree__ncname_t[] = {  {&_swigt__p_xsd__cxx__tree__qnameT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__uri_xsd__cxx__tree__ncname_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuildingStory_BuildingStory_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuildingStory_BuildingStory_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuilding_Building_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuilding_Building_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_ConnectorList_SimConnections_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_ConnectorList_SimConnections_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_EquipmentList_ZoneHvac_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_EquipmentList_ZoneHvac_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_MaterialList_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_MaterialList_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_AirLoopAvailabilityMgrScheme_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_AirLoopAvailabilityMgrScheme_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_DemandManagerScheme_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_DemandManagerScheme_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_PlantOperatingScheme_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_PlantOperatingScheme_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_WaterTempControlScheme_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_WaterTempControlScheme_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimProject_Project_DesignAlternative_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimProject_Project_DesignAlternative_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSite_BuildingSite_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSite_BuildingSite_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Default_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Default_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_FloorOverEarth_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_FloorOverEarth_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_InterzoneFloor_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_InterzoneFloor_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_RoofSlab_RoofUnderAir_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_RoofSlab_RoofUnderAir_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Fin_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Fin_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Overhang_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Overhang_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpace_Occupied_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpace_Occupied_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_TemplateForZoneGroup_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_TemplateForZoneGroup_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Control_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Control_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Demand_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Demand_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_FullSystem_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_FullSystem_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Supply_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Supply_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Control_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Control_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Demand_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Demand_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_FullSystem_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_FullSystem_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Supply_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Supply_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimThermalZoneType_ThermalZone_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimThermalZoneType_ThermalZone_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWallType_Wall_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWallType_Wall_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_ExteriorAboveGrade_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_ExteriorAboveGrade_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Interior_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Interior_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Exterior_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Exterior_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Interior_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Interior_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_ExteriorDetailed_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_ExteriorDetailed_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Exterior_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Exterior_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_SupplyWater_Temperature_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_SupplyWater_Temperature_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_ZoneControlTemperature_Thermostat_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_ZoneControlTemperature_Thermostat_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_TemperingValve_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_TemperingValve_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Expansion_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Expansion_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Mixed_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Mixed_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Water_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Water_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Default_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Default_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Mixer_DemandProxyMixerWater_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Mixer_DemandProxyMixerWater_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Splitter_DemandProxySplitterWater_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Splitter_DemandProxySplitterWater_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowMover_Pump_VariableSpeedReturn_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowMover_Pump_VariableSpeedReturn_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowPlant_Boiler_BoilerHotWater_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowPlant_Boiler_BoilerHotWater_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowSegment_Pipe_Indoor_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowSegment_Pipe_Indoor_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimSensor_TemperatureSensor_DryBulb_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimSensor_TemperatureSensor_DryBulb_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAddress_Postal_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAddress_Postal_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponent_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponent_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacAirLoop_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacAirLoop_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerDemand_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerDemand_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_AdjacentSite_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_AdjacentSite_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_SolarObstruction_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_SolarObstruction_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_Space_Space_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_Space_Space_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_BuildingStory_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_BuildingStory_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Building_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Building_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Project_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Project_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Site_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Site_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_FloorPlenumZone_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_FloorPlenumZone_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_ThermalZone_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_ThermalZone_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSaveInterval_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSaveInterval_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSave_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSave_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalPath_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalPath_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalVersion_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalVersion_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_MinMonthlyChargeType_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_MinMonthlyChargeType_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppUnitDefault_AppUnitDefault_DatabaseDefault_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppUnitDefault_AppUnitDefault_DatabaseDefault_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgSiteParams_BuildingSite_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgSiteParams_BuildingSite_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgStoryParams_BuildingStory_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgStoryParams_BuildingStory_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryBoma_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryBoma_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryOwner_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryOwner_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceTypeOwner_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceTypeOwner_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_OmniClass_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_OmniClass_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_HotWaterFlow_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_HotWaterFlow_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_ZoneAirFlow_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_ZoneAirFlow_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_AvailabilityManagerScheme_Scheduled_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_AvailabilityManagerScheme_Scheduled_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_ControlAndSequencingScheme_HeatingLoad_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_ControlAndSequencingScheme_HeatingLoad_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointScheme_SingleHeating_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointScheme_SingleHeating_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDerivedUnitType_DerivedUnit_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDerivedUnitType_DerivedUnit_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_In_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_In_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_Out_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_Out_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_In_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_In_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_Out_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_Out_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Equipment_Electric_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Equipment_Electric_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Lights_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Lights_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_People_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_People_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_DesignDay_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_DesignDay_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_Location_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_Location_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_Default_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_Default_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_GlazingLayerSet_Window_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_GlazingLayerSet_Window_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Ceiling_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Ceiling_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Door_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Door_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Floor_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Floor_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_InternalSource_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_InternalSource_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Roof_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Roof_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Wall_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Wall_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Thermochromic_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Thermochromic_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_OpaqueMaterialLayer_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_OpaqueMaterialLayer_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_Default_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_Default_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Gas_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Gas_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Glazing_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Glazing_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_SimpleGlazingSystem_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_SimpleGlazingSystem_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_AirGap_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_AirGap_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationContext_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationContext_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationSubContext_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationSubContext_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_In_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_In_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_Out_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_Out_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_AirLoop_DigitalSignal_In_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_AirLoop_DigitalSignal_In_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_HWLoop_DigitalSignal_In_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_HWLoop_DigitalSignal_In_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_Docking_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_Docking_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_In_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_In_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_Out_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_Out_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOrganization_Organization_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOrganization_Organization_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOwnerHistory_Default_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOwnerHistory_Default_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPersonAndOrganization_PersonAndOrganization_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPersonAndOrganization_PersonAndOrganization_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPerson_Person_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPerson_Person_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPresentationLayerAssignment_Default_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPresentationLayerAssignment_Default_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSIUnitType_SiUnit_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSIUnitType_SiUnit_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationConfiguration_SimulationConfiguration_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationConfiguration_SimulationConfiguration_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationParameters_HvacDesign_WaterLoopSizing_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationParameters_HvacDesign_WaterLoopSizing_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSlabParams_Slab_Floor_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSlabParams_Slab_Floor_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSoftwareApplication_Default_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSoftwareApplication_Default_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceBoundary_SecondLevel_SubTypeA_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceBoundary_SecondLevel_SubTypeA_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceParams_Space_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceParams_Space_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateConstructions_Constructions_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateConstructions_Constructions_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateLocation_Location_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateLocation_Location_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneConditions_ZoneConditions_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneConditions_ZoneConditions_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneLoads_ZoneLoads_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneLoads_ZoneLoads_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Calendar_Configuration_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Calendar_Configuration_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Day_Interval_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Day_Interval_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Limits_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Limits_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Week_Daily_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Week_Daily_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Year_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Year_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWallParams_Wall_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWallParams_Wall_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowArrayParams_WindowArray_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowArrayParams_WindowArray_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowLiningProps_WindowLiningProps_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowLiningProps_WindowLiningProps_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowParams_Window_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowParams_Window_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimArbitraryProfileDef_ArbitraryProfile_Closed_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimArbitraryProfileDef_ArbitraryProfile_Closed_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimCartesianTransformOperator_3D_Uniform_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimCartesianTransformOperator_3D_Uniform_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_FaceOuterBound_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_FaceOuterBound_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFace_Face_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFace_Face_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFeatureElementSubtraction_Void_Opening_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFeatureElementSubtraction_Void_Opening_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomBooleanResult_BooleanClippingResult_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomBooleanResult_BooleanClippingResult_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomCurve_Polyline_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomCurve_Polyline_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomPoint_Point_CartesianPoint_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomPoint_Point_CartesianPoint_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_FacetedBrep_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_FacetedBrep_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_BoundedSurface_CurveBoundedPlane_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_BoundedSurface_CurveBoundedPlane_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_ElementarySurface_Plane_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_ElementarySurface_Plane_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Direction_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Direction_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_AbsolutePlacement_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_AbsolutePlacement_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_RelativePlacement_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_RelativePlacement_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLoop_Loop_PolyLoop_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLoop_Loop_PolyLoop_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimMappedRepresentationItem_Default_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimMappedRepresentationItem_Default_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimParameterizedProfileDef_ParameterizedProfile_Rectangle_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimParameterizedProfileDef_ParameterizedProfile_Rectangle_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement2D_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement2D_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement3D_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement3D_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimRepresentationMap_RepresentationMap_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimRepresentationMap_RepresentationMap_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimShapeRepresentation_ShapeRepresentation_Default_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimShapeRepresentation_ShapeRepresentation_Default_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_BldgCompGroup_ZoneEquipment_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_BldgCompGroup_ZoneEquipment_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_HvacDemandGroup_WaterSystem_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_HvacDemandGroup_WaterSystem_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneGroup_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneGroup_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneHvacGroup_false_t[] = {  {&_swigt__p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneHvacGroup_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__severity[] = {  {&_swigt__p_xsd__cxx__tree__severity, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t[] = {  {&_swigt__p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t, 0, 0, 0},  {&_swigt__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree__type_t_t, _p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree__type_t_tTo_p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t[] = {  {&_swigt__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t[] = {  {&_swigt__p_xsd__cxx__tree__timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__time_zone[] = {  {&_swigt__p_xsd__cxx__tree__time_zone, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__tokenT_char_xsd__cxx__tree__normalized_string_t[] = {  {&_swigt__p_xsd__cxx__tree__tokenT_char_xsd__cxx__tree__normalized_string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__unexpected_elementT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__unexpected_elementT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__unexpected_enumeratorT_char_t[] = {  {&_swigt__p_xsd__cxx__tree__unexpected_enumeratorT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__uriT_char_xsd__cxx__tree__simple_type_t[] = {  {&_swigt__p_xsd__cxx__tree__uriT_char_xsd__cxx__tree__simple_type_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__tree__user_data_keys_templateT_0_t[] = {  {&_swigt__p_xsd__cxx__tree__user_data_keys_templateT_0_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_xsd__cxx__xml__error_handlerT_char_t[] = {  {&_swigt__p_xsd__cxx__xml__error_handlerT_char_t, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_ApplicableOccurrence_optional,
  _swigc__p_ApplicableOccurrence_traits,
  _swigc__p_ApplicableOccurrence_type,
  _swigc__p_AssignedToFlowElement_optional,
  _swigc__p_AssignedToFlowElement_traits,
  _swigc__p_AssignedToFlowElement_type,
  _swigc__p_AssignedToGroups_optional,
  _swigc__p_AssignedToGroups_traits,
  _swigc__p_AssignedToGroups_type,
  _swigc__p_ChangeFromTemplate_optional,
  _swigc__p_ChangeFromTemplate_traits,
  _swigc__p_ChangeFromTemplate_type,
  _swigc__p_CompositionType_optional,
  _swigc__p_CompositionType_traits,
  _swigc__p_CompositionType_type,
  _swigc__p_ContainingBuildings_optional,
  _swigc__p_ContainingBuildings_traits,
  _swigc__p_ContainingBuildings_type,
  _swigc__p_ContainingSpatialStructure_optional,
  _swigc__p_ContainingSpatialStructure_traits,
  _swigc__p_ContainingSpatialStructure_type,
  _swigc__p_ControlElementID_optional,
  _swigc__p_ControlElementID_traits,
  _swigc__p_ControlElementID_type,
  _swigc__p_ControlledBy_optional,
  _swigc__p_ControlledBy_traits,
  _swigc__p_ControlledBy_type,
  _swigc__p_DecimalPrecision_optional,
  _swigc__p_DecimalPrecision_traits,
  _swigc__p_DecimalPrecision_type,
  _swigc__p_Decomposes_optional,
  _swigc__p_Decomposes_traits,
  _swigc__p_Decomposes_type,
  _swigc__p_Description_optional,
  _swigc__p_Description_traits,
  _swigc__p_Description_type,
  _swigc__p_DockedToPort_optional,
  _swigc__p_DockedToPort_traits,
  _swigc__p_DockedToPort_type,
  _swigc__p_GeometricRepresentations_optional,
  _swigc__p_GeometricRepresentations_traits,
  _swigc__p_GeometricRepresentations_type,
  _swigc__p_HasPropertySets_optional,
  _swigc__p_HasPropertySets_traits,
  _swigc__p_HasPropertySets_type,
  _swigc__p_HasTemplateChanged_optional,
  _swigc__p_HasTemplateChanged_traits,
  _swigc__p_HasTemplateChanged_type,
  _swigc__p_HostElement_optional,
  _swigc__p_HostElement_traits,
  _swigc__p_HostElement_type,
  _swigc__p_IfcGlobalID_optional,
  _swigc__p_IfcGlobalID_traits,
  _swigc__p_IfcGlobalID_type,
  _swigc__p_IfcName_optional,
  _swigc__p_IfcName_traits,
  _swigc__p_IfcName_type,
  _swigc__p_IsAutoGenerated_optional,
  _swigc__p_IsAutoGenerated_traits,
  _swigc__p_IsAutoGenerated_type,
  _swigc__p_IsTemplateObject_optional,
  _swigc__p_IsTemplateObject_traits,
  _swigc__p_IsTemplateObject_type,
  _swigc__p_LocalPlacementCoordinates_optional,
  _swigc__p_LocalPlacementCoordinates_traits,
  _swigc__p_LocalPlacementCoordinates_type,
  _swigc__p_LocalPlacementRotation_optional,
  _swigc__p_LocalPlacementRotation_traits,
  _swigc__p_LocalPlacementRotation_type,
  _swigc__p_LocalPlacementX_optional,
  _swigc__p_LocalPlacementX_traits,
  _swigc__p_LocalPlacementX_type,
  _swigc__p_LocalPlacementY_optional,
  _swigc__p_LocalPlacementY_traits,
  _swigc__p_LocalPlacementY_type,
  _swigc__p_LocalPlacementZ_optional,
  _swigc__p_LocalPlacementZ_traits,
  _swigc__p_LocalPlacementZ_type,
  _swigc__p_LongName_optional,
  _swigc__p_LongName_traits,
  _swigc__p_LongName_type,
  _swigc__p_MemberUsedForDiagrams_optional,
  _swigc__p_MemberUsedForDiagrams_traits,
  _swigc__p_MemberUsedForDiagrams_type,
  _swigc__p_Name_optional,
  _swigc__p_Name_traits,
  _swigc__p_Name_type,
  _swigc__p_NevronSchematicLayout_optional,
  _swigc__p_NevronSchematicLayout_traits,
  _swigc__p_NevronSchematicLayout_type,
  _swigc__p_ObjectCreationParams_optional,
  _swigc__p_ObjectCreationParams_traits,
  _swigc__p_ObjectCreationParams_type,
  _swigc__p_ObjectIndex_optional,
  _swigc__p_ObjectIndex_traits,
  _swigc__p_ObjectIndex_type,
  _swigc__p_ObjectName_optional,
  _swigc__p_ObjectName_traits,
  _swigc__p_ObjectName_type,
  _swigc__p_ObjectOwnerHistory_optional,
  _swigc__p_ObjectOwnerHistory_traits,
  _swigc__p_ObjectOwnerHistory_type,
  _swigc__p_ObjectType_optional,
  _swigc__p_ObjectType_traits,
  _swigc__p_ObjectType_type,
  _swigc__p_ParentGroups_optional,
  _swigc__p_ParentGroups_traits,
  _swigc__p_ParentGroups_type,
  _swigc__p_PlacementRelToContainingTypeDef_optional,
  _swigc__p_PlacementRelToContainingTypeDef_traits,
  _swigc__p_PlacementRelToContainingTypeDef_type,
  _swigc__p_Placement_optional,
  _swigc__p_Placement_traits,
  _swigc__p_Placement_type,
  _swigc__p_ProfileName_optional,
  _swigc__p_ProfileName_traits,
  _swigc__p_ProfileName_type,
  _swigc__p_ProfileType_optional,
  _swigc__p_ProfileType_traits,
  _swigc__p_ProfileType_type,
  _swigc__p_RefId_traits,
  _swigc__p_RefId_type,
  _swigc__p_RepresentationContext_optional,
  _swigc__p_RepresentationContext_traits,
  _swigc__p_RepresentationContext_type,
  _swigc__p_RepresentationIdentifier_optional,
  _swigc__p_RepresentationIdentifier_traits,
  _swigc__p_RepresentationIdentifier_type,
  _swigc__p_RepresentationItems_optional,
  _swigc__p_RepresentationItems_traits,
  _swigc__p_RepresentationItems_type,
  _swigc__p_RepresentationType_optional,
  _swigc__p_RepresentationType_traits,
  _swigc__p_RepresentationType_type,
  _swigc__p_SelectedPropertyGroups_optional,
  _swigc__p_SelectedPropertyGroups_traits,
  _swigc__p_SelectedPropertyGroups_type,
  _swigc__p_SimAddress_Postal_Default_const_iterator,
  _swigc__p_SimAddress_Postal_Default_iterator,
  _swigc__p_SimAddress_Postal_Default_sequence,
  _swigc__p_SimAddress_Postal_Default_traits,
  _swigc__p_SimAddress_Postal_Default_type,
  _swigc__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_const_iterator,
  _swigc__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_iterator,
  _swigc__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_sequence,
  _swigc__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_traits,
  _swigc__p_SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_type,
  _swigc__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_const_iterator,
  _swigc__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_iterator,
  _swigc__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_sequence,
  _swigc__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_traits,
  _swigc__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_type,
  _swigc__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_const_iterator,
  _swigc__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_iterator,
  _swigc__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_sequence,
  _swigc__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_traits,
  _swigc__p_SimAppObjNameDefault_BldgComponentGroup_HvacComponent_type,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_const_iterator,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_iterator,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_sequence,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_traits,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacAirLoop_type,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_const_iterator,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_iterator,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_sequence,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_traits,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_type,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_const_iterator,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_iterator,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_sequence,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_traits,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_type,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_const_iterator,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_iterator,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_sequence,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_traits,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_type,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_const_iterator,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_iterator,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_sequence,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_traits,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_type,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_const_iterator,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_iterator,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_sequence,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_traits,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_type,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_const_iterator,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_iterator,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_sequence,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_traits,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_type,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_const_iterator,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_iterator,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_sequence,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_traits,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_SitePowerDemand_type,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_const_iterator,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_iterator,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_sequence,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_traits,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_type,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_const_iterator,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_iterator,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_sequence,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_traits,
  _swigc__p_SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_type,
  _swigc__p_SimAppObjNameDefault_SiteContext_AdjacentSite_const_iterator,
  _swigc__p_SimAppObjNameDefault_SiteContext_AdjacentSite_iterator,
  _swigc__p_SimAppObjNameDefault_SiteContext_AdjacentSite_sequence,
  _swigc__p_SimAppObjNameDefault_SiteContext_AdjacentSite_traits,
  _swigc__p_SimAppObjNameDefault_SiteContext_AdjacentSite_type,
  _swigc__p_SimAppObjNameDefault_SiteContext_SolarObstruction_const_iterator,
  _swigc__p_SimAppObjNameDefault_SiteContext_SolarObstruction_iterator,
  _swigc__p_SimAppObjNameDefault_SiteContext_SolarObstruction_sequence,
  _swigc__p_SimAppObjNameDefault_SiteContext_SolarObstruction_traits,
  _swigc__p_SimAppObjNameDefault_SiteContext_SolarObstruction_type,
  _swigc__p_SimAppObjNameDefault_Space_Space_const_iterator,
  _swigc__p_SimAppObjNameDefault_Space_Space_iterator,
  _swigc__p_SimAppObjNameDefault_Space_Space_sequence,
  _swigc__p_SimAppObjNameDefault_Space_Space_traits,
  _swigc__p_SimAppObjNameDefault_Space_Space_type,
  _swigc__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_const_iterator,
  _swigc__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_iterator,
  _swigc__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_sequence,
  _swigc__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_traits,
  _swigc__p_SimAppObjNameDefault_SpatialContainer_BuildingStory_type,
  _swigc__p_SimAppObjNameDefault_SpatialContainer_Building_const_iterator,
  _swigc__p_SimAppObjNameDefault_SpatialContainer_Building_iterator,
  _swigc__p_SimAppObjNameDefault_SpatialContainer_Building_sequence,
  _swigc__p_SimAppObjNameDefault_SpatialContainer_Building_traits,
  _swigc__p_SimAppObjNameDefault_SpatialContainer_Building_type,
  _swigc__p_SimAppObjNameDefault_SpatialContainer_Project_const_iterator,
  _swigc__p_SimAppObjNameDefault_SpatialContainer_Project_iterator,
  _swigc__p_SimAppObjNameDefault_SpatialContainer_Project_sequence,
  _swigc__p_SimAppObjNameDefault_SpatialContainer_Project_traits,
  _swigc__p_SimAppObjNameDefault_SpatialContainer_Project_type,
  _swigc__p_SimAppObjNameDefault_SpatialContainer_Site_const_iterator,
  _swigc__p_SimAppObjNameDefault_SpatialContainer_Site_iterator,
  _swigc__p_SimAppObjNameDefault_SpatialContainer_Site_sequence,
  _swigc__p_SimAppObjNameDefault_SpatialContainer_Site_traits,
  _swigc__p_SimAppObjNameDefault_SpatialContainer_Site_type,
  _swigc__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_const_iterator,
  _swigc__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_iterator,
  _swigc__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_sequence,
  _swigc__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_traits,
  _swigc__p_SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_type,
  _swigc__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_const_iterator,
  _swigc__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_iterator,
  _swigc__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_sequence,
  _swigc__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_traits,
  _swigc__p_SimAppObjNameDefault_SpatialZone_FloorPlenumZone_type,
  _swigc__p_SimAppObjNameDefault_SpatialZone_ThermalZone_const_iterator,
  _swigc__p_SimAppObjNameDefault_SpatialZone_ThermalZone_iterator,
  _swigc__p_SimAppObjNameDefault_SpatialZone_ThermalZone_sequence,
  _swigc__p_SimAppObjNameDefault_SpatialZone_ThermalZone_traits,
  _swigc__p_SimAppObjNameDefault_SpatialZone_ThermalZone_type,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_const_iterator,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_iterator,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_sequence,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_traits,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_type,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_const_iterator,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_iterator,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_sequence,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_traits,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_type,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_const_iterator,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_iterator,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_sequence,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_traits,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_type,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_const_iterator,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_iterator,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_sequence,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_traits,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_type,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_const_iterator,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_iterator,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_sequence,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_traits,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_type,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_const_iterator,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_iterator,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_sequence,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_traits,
  _swigc__p_SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_type,
  _swigc__p_SimAppPreferences_AppPreferences_AutoSaveInterval_const_iterator,
  _swigc__p_SimAppPreferences_AppPreferences_AutoSaveInterval_iterator,
  _swigc__p_SimAppPreferences_AppPreferences_AutoSaveInterval_sequence,
  _swigc__p_SimAppPreferences_AppPreferences_AutoSaveInterval_traits,
  _swigc__p_SimAppPreferences_AppPreferences_AutoSaveInterval_type,
  _swigc__p_SimAppPreferences_AppPreferences_AutoSave_const_iterator,
  _swigc__p_SimAppPreferences_AppPreferences_AutoSave_iterator,
  _swigc__p_SimAppPreferences_AppPreferences_AutoSave_sequence,
  _swigc__p_SimAppPreferences_AppPreferences_AutoSave_traits,
  _swigc__p_SimAppPreferences_AppPreferences_AutoSave_type,
  _swigc__p_SimAppPreferences_AppPreferences_EPlusInstalPath_const_iterator,
  _swigc__p_SimAppPreferences_AppPreferences_EPlusInstalPath_iterator,
  _swigc__p_SimAppPreferences_AppPreferences_EPlusInstalPath_sequence,
  _swigc__p_SimAppPreferences_AppPreferences_EPlusInstalPath_traits,
  _swigc__p_SimAppPreferences_AppPreferences_EPlusInstalPath_type,
  _swigc__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_const_iterator,
  _swigc__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_iterator,
  _swigc__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_sequence,
  _swigc__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_traits,
  _swigc__p_SimAppPreferences_AppPreferences_EPlusInstalVersion_type,
  _swigc__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_const_iterator,
  _swigc__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_iterator,
  _swigc__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_sequence,
  _swigc__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_traits,
  _swigc__p_SimAppPreferences_AppPreferences_MinMonthlyChargeType_type,
  _swigc__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_const_iterator,
  _swigc__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_iterator,
  _swigc__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_sequence,
  _swigc__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_traits,
  _swigc__p_SimAppUnitDefault_AppUnitDefault_DatabaseDefault_type,
  _swigc__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_const_iterator,
  _swigc__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_iterator,
  _swigc__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_sequence,
  _swigc__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_traits,
  _swigc__p_SimArbitraryProfileDef_ArbitraryProfile_Closed_type,
  _swigc__p_SimBldgSiteParams_BuildingSite_Default_const_iterator,
  _swigc__p_SimBldgSiteParams_BuildingSite_Default_iterator,
  _swigc__p_SimBldgSiteParams_BuildingSite_Default_sequence,
  _swigc__p_SimBldgSiteParams_BuildingSite_Default_traits,
  _swigc__p_SimBldgSiteParams_BuildingSite_Default_type,
  _swigc__p_SimBldgStoryParams_BuildingStory_Default_const_iterator,
  _swigc__p_SimBldgStoryParams_BuildingStory_Default_iterator,
  _swigc__p_SimBldgStoryParams_BuildingStory_Default_sequence,
  _swigc__p_SimBldgStoryParams_BuildingStory_Default_traits,
  _swigc__p_SimBldgStoryParams_BuildingStory_Default_type,
  _swigc__p_SimBuildingStory_BuildingStory_Default_const_iterator,
  _swigc__p_SimBuildingStory_BuildingStory_Default_iterator,
  _swigc__p_SimBuildingStory_BuildingStory_Default_sequence,
  _swigc__p_SimBuildingStory_BuildingStory_Default_traits,
  _swigc__p_SimBuildingStory_BuildingStory_Default_type,
  _swigc__p_SimBuilding_Building_Default_const_iterator,
  _swigc__p_SimBuilding_Building_Default_iterator,
  _swigc__p_SimBuilding_Building_Default_sequence,
  _swigc__p_SimBuilding_Building_Default_traits,
  _swigc__p_SimBuilding_Building_Default_type,
  _swigc__p_SimCartesianTransformOperator_3D_Uniform_const_iterator,
  _swigc__p_SimCartesianTransformOperator_3D_Uniform_iterator,
  _swigc__p_SimCartesianTransformOperator_3D_Uniform_sequence,
  _swigc__p_SimCartesianTransformOperator_3D_Uniform_traits,
  _swigc__p_SimCartesianTransformOperator_3D_Uniform_type,
  _swigc__p_SimClassification_ClassificationReference_SpaceCategoryBoma_const_iterator,
  _swigc__p_SimClassification_ClassificationReference_SpaceCategoryBoma_iterator,
  _swigc__p_SimClassification_ClassificationReference_SpaceCategoryBoma_sequence,
  _swigc__p_SimClassification_ClassificationReference_SpaceCategoryBoma_traits,
  _swigc__p_SimClassification_ClassificationReference_SpaceCategoryBoma_type,
  _swigc__p_SimClassification_ClassificationReference_SpaceCategoryOwner_const_iterator,
  _swigc__p_SimClassification_ClassificationReference_SpaceCategoryOwner_iterator,
  _swigc__p_SimClassification_ClassificationReference_SpaceCategoryOwner_sequence,
  _swigc__p_SimClassification_ClassificationReference_SpaceCategoryOwner_traits,
  _swigc__p_SimClassification_ClassificationReference_SpaceCategoryOwner_type,
  _swigc__p_SimClassification_ClassificationReference_SpaceTypeOwner_const_iterator,
  _swigc__p_SimClassification_ClassificationReference_SpaceTypeOwner_iterator,
  _swigc__p_SimClassification_ClassificationReference_SpaceTypeOwner_sequence,
  _swigc__p_SimClassification_ClassificationReference_SpaceTypeOwner_traits,
  _swigc__p_SimClassification_ClassificationReference_SpaceTypeOwner_type,
  _swigc__p_SimClassification_ClassificationSystem_Default_const_iterator,
  _swigc__p_SimClassification_ClassificationSystem_Default_iterator,
  _swigc__p_SimClassification_ClassificationSystem_Default_sequence,
  _swigc__p_SimClassification_ClassificationSystem_Default_traits,
  _swigc__p_SimClassification_ClassificationSystem_Default_type,
  _swigc__p_SimClassification_ClassificationSystem_OmniClass_const_iterator,
  _swigc__p_SimClassification_ClassificationSystem_OmniClass_iterator,
  _swigc__p_SimClassification_ClassificationSystem_OmniClass_sequence,
  _swigc__p_SimClassification_ClassificationSystem_OmniClass_traits,
  _swigc__p_SimClassification_ClassificationSystem_OmniClass_type,
  _swigc__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_const_iterator,
  _swigc__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_iterator,
  _swigc__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_sequence,
  _swigc__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_traits,
  _swigc__p_SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_type,
  _swigc__p_SimConnectedFaceSet_ConnectedFaceSet_Default_const_iterator,
  _swigc__p_SimConnectedFaceSet_ConnectedFaceSet_Default_iterator,
  _swigc__p_SimConnectedFaceSet_ConnectedFaceSet_Default_sequence,
  _swigc__p_SimConnectedFaceSet_ConnectedFaceSet_Default_traits,
  _swigc__p_SimConnectedFaceSet_ConnectedFaceSet_Default_type,
  _swigc__p_SimConnection_HotWaterFlow_Default_const_iterator,
  _swigc__p_SimConnection_HotWaterFlow_Default_iterator,
  _swigc__p_SimConnection_HotWaterFlow_Default_sequence,
  _swigc__p_SimConnection_HotWaterFlow_Default_traits,
  _swigc__p_SimConnection_HotWaterFlow_Default_type,
  _swigc__p_SimConnection_ZoneAirFlow_Default_const_iterator,
  _swigc__p_SimConnection_ZoneAirFlow_Default_iterator,
  _swigc__p_SimConnection_ZoneAirFlow_Default_sequence,
  _swigc__p_SimConnection_ZoneAirFlow_Default_traits,
  _swigc__p_SimConnection_ZoneAirFlow_Default_type,
  _swigc__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_const_iterator,
  _swigc__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_iterator,
  _swigc__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_sequence,
  _swigc__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_traits,
  _swigc__p_SimControlScheme_AvailabilityManagerScheme_Scheduled_type,
  _swigc__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_const_iterator,
  _swigc__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_iterator,
  _swigc__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_sequence,
  _swigc__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_traits,
  _swigc__p_SimControlScheme_ControlAndSequencingScheme_HeatingLoad_type,
  _swigc__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_const_iterator,
  _swigc__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_iterator,
  _swigc__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_sequence,
  _swigc__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_traits,
  _swigc__p_SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_type,
  _swigc__p_SimControlScheme_SetpointScheme_SingleHeating_const_iterator,
  _swigc__p_SimControlScheme_SetpointScheme_SingleHeating_iterator,
  _swigc__p_SimControlScheme_SetpointScheme_SingleHeating_sequence,
  _swigc__p_SimControlScheme_SetpointScheme_SingleHeating_traits,
  _swigc__p_SimControlScheme_SetpointScheme_SingleHeating_type,
  _swigc__p_SimController_SupplyWater_Temperature_const_iterator,
  _swigc__p_SimController_SupplyWater_Temperature_iterator,
  _swigc__p_SimController_SupplyWater_Temperature_sequence,
  _swigc__p_SimController_SupplyWater_Temperature_traits,
  _swigc__p_SimController_SupplyWater_Temperature_type,
  _swigc__p_SimController_ZoneControlTemperature_Thermostat_const_iterator,
  _swigc__p_SimController_ZoneControlTemperature_Thermostat_iterator,
  _swigc__p_SimController_ZoneControlTemperature_Thermostat_sequence,
  _swigc__p_SimController_ZoneControlTemperature_Thermostat_traits,
  _swigc__p_SimController_ZoneControlTemperature_Thermostat_type,
  _swigc__p_SimDerivedUnitType_DerivedUnit_Default_const_iterator,
  _swigc__p_SimDerivedUnitType_DerivedUnit_Default_iterator,
  _swigc__p_SimDerivedUnitType_DerivedUnit_Default_sequence,
  _swigc__p_SimDerivedUnitType_DerivedUnit_Default_traits,
  _swigc__p_SimDerivedUnitType_DerivedUnit_Default_type,
  _swigc__p_SimDistributionPort_AirFlowPort_Air_In_const_iterator,
  _swigc__p_SimDistributionPort_AirFlowPort_Air_In_iterator,
  _swigc__p_SimDistributionPort_AirFlowPort_Air_In_sequence,
  _swigc__p_SimDistributionPort_AirFlowPort_Air_In_traits,
  _swigc__p_SimDistributionPort_AirFlowPort_Air_In_type,
  _swigc__p_SimDistributionPort_AirFlowPort_Air_Out_const_iterator,
  _swigc__p_SimDistributionPort_AirFlowPort_Air_Out_iterator,
  _swigc__p_SimDistributionPort_AirFlowPort_Air_Out_sequence,
  _swigc__p_SimDistributionPort_AirFlowPort_Air_Out_traits,
  _swigc__p_SimDistributionPort_AirFlowPort_Air_Out_type,
  _swigc__p_SimDistributionPort_HotWaterFlowPort_Water_In_const_iterator,
  _swigc__p_SimDistributionPort_HotWaterFlowPort_Water_In_iterator,
  _swigc__p_SimDistributionPort_HotWaterFlowPort_Water_In_sequence,
  _swigc__p_SimDistributionPort_HotWaterFlowPort_Water_In_traits,
  _swigc__p_SimDistributionPort_HotWaterFlowPort_Water_In_type,
  _swigc__p_SimDistributionPort_HotWaterFlowPort_Water_Out_const_iterator,
  _swigc__p_SimDistributionPort_HotWaterFlowPort_Water_Out_iterator,
  _swigc__p_SimDistributionPort_HotWaterFlowPort_Water_Out_sequence,
  _swigc__p_SimDistributionPort_HotWaterFlowPort_Water_Out_traits,
  _swigc__p_SimDistributionPort_HotWaterFlowPort_Water_Out_type,
  _swigc__p_SimFaceBound_FaceBound_Default_const_iterator,
  _swigc__p_SimFaceBound_FaceBound_Default_iterator,
  _swigc__p_SimFaceBound_FaceBound_Default_sequence,
  _swigc__p_SimFaceBound_FaceBound_Default_traits,
  _swigc__p_SimFaceBound_FaceBound_Default_type,
  _swigc__p_SimFaceBound_FaceBound_FaceOuterBound_const_iterator,
  _swigc__p_SimFaceBound_FaceBound_FaceOuterBound_iterator,
  _swigc__p_SimFaceBound_FaceBound_FaceOuterBound_sequence,
  _swigc__p_SimFaceBound_FaceBound_FaceOuterBound_traits,
  _swigc__p_SimFaceBound_FaceBound_FaceOuterBound_type,
  _swigc__p_SimFace_Face_Default_const_iterator,
  _swigc__p_SimFace_Face_Default_iterator,
  _swigc__p_SimFace_Face_Default_sequence,
  _swigc__p_SimFace_Face_Default_traits,
  _swigc__p_SimFace_Face_Default_type,
  _swigc__p_SimFeatureElementSubtraction_Void_Opening_const_iterator,
  _swigc__p_SimFeatureElementSubtraction_Void_Opening_iterator,
  _swigc__p_SimFeatureElementSubtraction_Void_Opening_sequence,
  _swigc__p_SimFeatureElementSubtraction_Void_Opening_traits,
  _swigc__p_SimFeatureElementSubtraction_Void_Opening_type,
  _swigc__p_SimFlowController_Valve_Default_const_iterator,
  _swigc__p_SimFlowController_Valve_Default_iterator,
  _swigc__p_SimFlowController_Valve_Default_sequence,
  _swigc__p_SimFlowController_Valve_Default_traits,
  _swigc__p_SimFlowController_Valve_Default_type,
  _swigc__p_SimFlowController_Valve_TemperingValve_const_iterator,
  _swigc__p_SimFlowController_Valve_TemperingValve_iterator,
  _swigc__p_SimFlowController_Valve_TemperingValve_sequence,
  _swigc__p_SimFlowController_Valve_TemperingValve_traits,
  _swigc__p_SimFlowController_Valve_TemperingValve_type,
  _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_const_iterator,
  _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_iterator,
  _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_sequence,
  _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_traits,
  _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_Expansion_type,
  _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_const_iterator,
  _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_iterator,
  _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_sequence,
  _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_traits,
  _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_type,
  _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_const_iterator,
  _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_iterator,
  _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence,
  _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_traits,
  _swigc__p_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_type,
  _swigc__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_const_iterator,
  _swigc__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_iterator,
  _swigc__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_sequence,
  _swigc__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_traits,
  _swigc__p_SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_type,
  _swigc__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_const_iterator,
  _swigc__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_iterator,
  _swigc__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_sequence,
  _swigc__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_traits,
  _swigc__p_SimFlowEnergyTransfer_ConvectiveHeater_Water_type,
  _swigc__p_SimFlowFitting_Default_Default_const_iterator,
  _swigc__p_SimFlowFitting_Default_Default_iterator,
  _swigc__p_SimFlowFitting_Default_Default_sequence,
  _swigc__p_SimFlowFitting_Default_Default_traits,
  _swigc__p_SimFlowFitting_Default_Default_type,
  _swigc__p_SimFlowFitting_Mixer_DemandProxyMixerWater_const_iterator,
  _swigc__p_SimFlowFitting_Mixer_DemandProxyMixerWater_iterator,
  _swigc__p_SimFlowFitting_Mixer_DemandProxyMixerWater_sequence,
  _swigc__p_SimFlowFitting_Mixer_DemandProxyMixerWater_traits,
  _swigc__p_SimFlowFitting_Mixer_DemandProxyMixerWater_type,
  _swigc__p_SimFlowFitting_Splitter_DemandProxySplitterWater_const_iterator,
  _swigc__p_SimFlowFitting_Splitter_DemandProxySplitterWater_iterator,
  _swigc__p_SimFlowFitting_Splitter_DemandProxySplitterWater_sequence,
  _swigc__p_SimFlowFitting_Splitter_DemandProxySplitterWater_traits,
  _swigc__p_SimFlowFitting_Splitter_DemandProxySplitterWater_type,
  _swigc__p_SimFlowMover_Pump_VariableSpeedReturn_const_iterator,
  _swigc__p_SimFlowMover_Pump_VariableSpeedReturn_iterator,
  _swigc__p_SimFlowMover_Pump_VariableSpeedReturn_sequence,
  _swigc__p_SimFlowMover_Pump_VariableSpeedReturn_traits,
  _swigc__p_SimFlowMover_Pump_VariableSpeedReturn_type,
  _swigc__p_SimFlowPlant_Boiler_BoilerHotWater_const_iterator,
  _swigc__p_SimFlowPlant_Boiler_BoilerHotWater_iterator,
  _swigc__p_SimFlowPlant_Boiler_BoilerHotWater_sequence,
  _swigc__p_SimFlowPlant_Boiler_BoilerHotWater_traits,
  _swigc__p_SimFlowPlant_Boiler_BoilerHotWater_type,
  _swigc__p_SimFlowSegment_Pipe_Indoor_const_iterator,
  _swigc__p_SimFlowSegment_Pipe_Indoor_iterator,
  _swigc__p_SimFlowSegment_Pipe_Indoor_sequence,
  _swigc__p_SimFlowSegment_Pipe_Indoor_traits,
  _swigc__p_SimFlowSegment_Pipe_Indoor_type,
  _swigc__p_SimGeomBooleanResult_BooleanClippingResult_Default_const_iterator,
  _swigc__p_SimGeomBooleanResult_BooleanClippingResult_Default_iterator,
  _swigc__p_SimGeomBooleanResult_BooleanClippingResult_Default_sequence,
  _swigc__p_SimGeomBooleanResult_BooleanClippingResult_Default_traits,
  _swigc__p_SimGeomBooleanResult_BooleanClippingResult_Default_type,
  _swigc__p_SimGeomCurve_Polyline_Default_const_iterator,
  _swigc__p_SimGeomCurve_Polyline_Default_iterator,
  _swigc__p_SimGeomCurve_Polyline_Default_sequence,
  _swigc__p_SimGeomCurve_Polyline_Default_traits,
  _swigc__p_SimGeomCurve_Polyline_Default_type,
  _swigc__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_const_iterator,
  _swigc__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_iterator,
  _swigc__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_sequence,
  _swigc__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_traits,
  _swigc__p_SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_type,
  _swigc__p_SimGeomPoint_Point_CartesianPoint_const_iterator,
  _swigc__p_SimGeomPoint_Point_CartesianPoint_iterator,
  _swigc__p_SimGeomPoint_Point_CartesianPoint_sequence,
  _swigc__p_SimGeomPoint_Point_CartesianPoint_traits,
  _swigc__p_SimGeomPoint_Point_CartesianPoint_type,
  _swigc__p_SimGeomSolidModel_FacetedBrep_Default_const_iterator,
  _swigc__p_SimGeomSolidModel_FacetedBrep_Default_iterator,
  _swigc__p_SimGeomSolidModel_FacetedBrep_Default_sequence,
  _swigc__p_SimGeomSolidModel_FacetedBrep_Default_traits,
  _swigc__p_SimGeomSolidModel_FacetedBrep_Default_type,
  _swigc__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_const_iterator,
  _swigc__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_iterator,
  _swigc__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_sequence,
  _swigc__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_traits,
  _swigc__p_SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_type,
  _swigc__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_const_iterator,
  _swigc__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_iterator,
  _swigc__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_sequence,
  _swigc__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_traits,
  _swigc__p_SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_type,
  _swigc__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_const_iterator,
  _swigc__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_iterator,
  _swigc__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_sequence,
  _swigc__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_traits,
  _swigc__p_SimGeomSurface_BoundedSurface_CurveBoundedPlane_type,
  _swigc__p_SimGeomSurface_ElementarySurface_Plane_const_iterator,
  _swigc__p_SimGeomSurface_ElementarySurface_Plane_iterator,
  _swigc__p_SimGeomSurface_ElementarySurface_Plane_sequence,
  _swigc__p_SimGeomSurface_ElementarySurface_Plane_traits,
  _swigc__p_SimGeomSurface_ElementarySurface_Plane_type,
  _swigc__p_SimGeomVector_Vector_Default_const_iterator,
  _swigc__p_SimGeomVector_Vector_Default_iterator,
  _swigc__p_SimGeomVector_Vector_Default_sequence,
  _swigc__p_SimGeomVector_Vector_Default_traits,
  _swigc__p_SimGeomVector_Vector_Default_type,
  _swigc__p_SimGeomVector_Vector_Direction_const_iterator,
  _swigc__p_SimGeomVector_Vector_Direction_iterator,
  _swigc__p_SimGeomVector_Vector_Direction_sequence,
  _swigc__p_SimGeomVector_Vector_Direction_traits,
  _swigc__p_SimGeomVector_Vector_Direction_type,
  _swigc__p_SimGroup_BldgCompGroup_ZoneEquipment_const_iterator,
  _swigc__p_SimGroup_BldgCompGroup_ZoneEquipment_iterator,
  _swigc__p_SimGroup_BldgCompGroup_ZoneEquipment_sequence,
  _swigc__p_SimGroup_BldgCompGroup_ZoneEquipment_traits,
  _swigc__p_SimGroup_BldgCompGroup_ZoneEquipment_type,
  _swigc__p_SimGroup_HvacDemandGroup_WaterSystem_const_iterator,
  _swigc__p_SimGroup_HvacDemandGroup_WaterSystem_iterator,
  _swigc__p_SimGroup_HvacDemandGroup_WaterSystem_sequence,
  _swigc__p_SimGroup_HvacDemandGroup_WaterSystem_traits,
  _swigc__p_SimGroup_HvacDemandGroup_WaterSystem_type,
  _swigc__p_SimGroup_SpatialZoneGroup_ZoneGroup_const_iterator,
  _swigc__p_SimGroup_SpatialZoneGroup_ZoneGroup_iterator,
  _swigc__p_SimGroup_SpatialZoneGroup_ZoneGroup_sequence,
  _swigc__p_SimGroup_SpatialZoneGroup_ZoneGroup_traits,
  _swigc__p_SimGroup_SpatialZoneGroup_ZoneGroup_type,
  _swigc__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_const_iterator,
  _swigc__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_iterator,
  _swigc__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_sequence,
  _swigc__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_traits,
  _swigc__p_SimGroup_SpatialZoneGroup_ZoneHvacGroup_type,
  _swigc__p_SimInternalLoad_Equipment_Electric_const_iterator,
  _swigc__p_SimInternalLoad_Equipment_Electric_iterator,
  _swigc__p_SimInternalLoad_Equipment_Electric_sequence,
  _swigc__p_SimInternalLoad_Equipment_Electric_traits,
  _swigc__p_SimInternalLoad_Equipment_Electric_type,
  _swigc__p_SimInternalLoad_Lights_Default_const_iterator,
  _swigc__p_SimInternalLoad_Lights_Default_iterator,
  _swigc__p_SimInternalLoad_Lights_Default_sequence,
  _swigc__p_SimInternalLoad_Lights_Default_traits,
  _swigc__p_SimInternalLoad_Lights_Default_type,
  _swigc__p_SimInternalLoad_People_Default_const_iterator,
  _swigc__p_SimInternalLoad_People_Default_iterator,
  _swigc__p_SimInternalLoad_People_Default_sequence,
  _swigc__p_SimInternalLoad_People_Default_traits,
  _swigc__p_SimInternalLoad_People_Default_type,
  _swigc__p_SimList_ConnectorList_SimConnections_const_iterator,
  _swigc__p_SimList_ConnectorList_SimConnections_iterator,
  _swigc__p_SimList_ConnectorList_SimConnections_sequence,
  _swigc__p_SimList_ConnectorList_SimConnections_traits,
  _swigc__p_SimList_ConnectorList_SimConnections_type,
  _swigc__p_SimList_EquipmentList_ZoneHvac_const_iterator,
  _swigc__p_SimList_EquipmentList_ZoneHvac_iterator,
  _swigc__p_SimList_EquipmentList_ZoneHvac_sequence,
  _swigc__p_SimList_EquipmentList_ZoneHvac_traits,
  _swigc__p_SimList_EquipmentList_ZoneHvac_type,
  _swigc__p_SimList_MaterialList_Default_const_iterator,
  _swigc__p_SimList_MaterialList_Default_iterator,
  _swigc__p_SimList_MaterialList_Default_sequence,
  _swigc__p_SimList_MaterialList_Default_traits,
  _swigc__p_SimList_MaterialList_Default_type,
  _swigc__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_const_iterator,
  _swigc__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_iterator,
  _swigc__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_sequence,
  _swigc__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_traits,
  _swigc__p_SimList_SchemeList_AirLoopAvailabilityMgrScheme_type,
  _swigc__p_SimList_SchemeList_DemandManagerScheme_const_iterator,
  _swigc__p_SimList_SchemeList_DemandManagerScheme_iterator,
  _swigc__p_SimList_SchemeList_DemandManagerScheme_sequence,
  _swigc__p_SimList_SchemeList_DemandManagerScheme_traits,
  _swigc__p_SimList_SchemeList_DemandManagerScheme_type,
  _swigc__p_SimList_SchemeList_PlantOperatingScheme_const_iterator,
  _swigc__p_SimList_SchemeList_PlantOperatingScheme_iterator,
  _swigc__p_SimList_SchemeList_PlantOperatingScheme_sequence,
  _swigc__p_SimList_SchemeList_PlantOperatingScheme_traits,
  _swigc__p_SimList_SchemeList_PlantOperatingScheme_type,
  _swigc__p_SimList_SchemeList_WaterTempControlScheme_const_iterator,
  _swigc__p_SimList_SchemeList_WaterTempControlScheme_iterator,
  _swigc__p_SimList_SchemeList_WaterTempControlScheme_sequence,
  _swigc__p_SimList_SchemeList_WaterTempControlScheme_traits,
  _swigc__p_SimList_SchemeList_WaterTempControlScheme_type,
  _swigc__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_const_iterator,
  _swigc__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_iterator,
  _swigc__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_sequence,
  _swigc__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_traits,
  _swigc__p_SimLocalPlacement_LocalPlacement_AbsolutePlacement_type,
  _swigc__p_SimLocalPlacement_LocalPlacement_RelativePlacement_const_iterator,
  _swigc__p_SimLocalPlacement_LocalPlacement_RelativePlacement_iterator,
  _swigc__p_SimLocalPlacement_LocalPlacement_RelativePlacement_sequence,
  _swigc__p_SimLocalPlacement_LocalPlacement_RelativePlacement_traits,
  _swigc__p_SimLocalPlacement_LocalPlacement_RelativePlacement_type,
  _swigc__p_SimLocationAndWeather_DesignDay_Default_const_iterator,
  _swigc__p_SimLocationAndWeather_DesignDay_Default_iterator,
  _swigc__p_SimLocationAndWeather_DesignDay_Default_sequence,
  _swigc__p_SimLocationAndWeather_DesignDay_Default_traits,
  _swigc__p_SimLocationAndWeather_DesignDay_Default_type,
  _swigc__p_SimLocationAndWeather_Location_Default_const_iterator,
  _swigc__p_SimLocationAndWeather_Location_Default_iterator,
  _swigc__p_SimLocationAndWeather_Location_Default_sequence,
  _swigc__p_SimLocationAndWeather_Location_Default_traits,
  _swigc__p_SimLocationAndWeather_Location_Default_type,
  _swigc__p_SimLoop_Loop_PolyLoop_const_iterator,
  _swigc__p_SimLoop_Loop_PolyLoop_iterator,
  _swigc__p_SimLoop_Loop_PolyLoop_sequence,
  _swigc__p_SimLoop_Loop_PolyLoop_traits,
  _swigc__p_SimLoop_Loop_PolyLoop_type,
  _swigc__p_SimMappedRepresentationItem_Default_Default_const_iterator,
  _swigc__p_SimMappedRepresentationItem_Default_Default_iterator,
  _swigc__p_SimMappedRepresentationItem_Default_Default_sequence,
  _swigc__p_SimMappedRepresentationItem_Default_Default_traits,
  _swigc__p_SimMappedRepresentationItem_Default_Default_type,
  _swigc__p_SimMaterialLayerSet_Default_Default_const_iterator,
  _swigc__p_SimMaterialLayerSet_Default_Default_iterator,
  _swigc__p_SimMaterialLayerSet_Default_Default_sequence,
  _swigc__p_SimMaterialLayerSet_Default_Default_traits,
  _swigc__p_SimMaterialLayerSet_Default_Default_type,
  _swigc__p_SimMaterialLayerSet_GlazingLayerSet_Window_const_iterator,
  _swigc__p_SimMaterialLayerSet_GlazingLayerSet_Window_iterator,
  _swigc__p_SimMaterialLayerSet_GlazingLayerSet_Window_sequence,
  _swigc__p_SimMaterialLayerSet_GlazingLayerSet_Window_traits,
  _swigc__p_SimMaterialLayerSet_GlazingLayerSet_Window_type,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_const_iterator,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_iterator,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_sequence,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_traits,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Ceiling_type,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Door_const_iterator,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Door_iterator,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Door_sequence,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Door_traits,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Door_type,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_const_iterator,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_iterator,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_sequence,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_traits,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Floor_type,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_const_iterator,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_iterator,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_sequence,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_traits,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_InternalSource_type,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_const_iterator,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_iterator,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_sequence,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_traits,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Roof_type,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_const_iterator,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_iterator,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_sequence,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_traits,
  _swigc__p_SimMaterialLayerSet_OpaqueLayerSet_Wall_type,
  _swigc__p_SimMaterialLayer_GlazingMaterialLayer_Default_const_iterator,
  _swigc__p_SimMaterialLayer_GlazingMaterialLayer_Default_iterator,
  _swigc__p_SimMaterialLayer_GlazingMaterialLayer_Default_sequence,
  _swigc__p_SimMaterialLayer_GlazingMaterialLayer_Default_traits,
  _swigc__p_SimMaterialLayer_GlazingMaterialLayer_Default_type,
  _swigc__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_const_iterator,
  _swigc__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_iterator,
  _swigc__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_sequence,
  _swigc__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_traits,
  _swigc__p_SimMaterialLayer_GlazingMaterialLayer_Thermochromic_type,
  _swigc__p_SimMaterialLayer_OpaqueMaterialLayer_Default_const_iterator,
  _swigc__p_SimMaterialLayer_OpaqueMaterialLayer_Default_iterator,
  _swigc__p_SimMaterialLayer_OpaqueMaterialLayer_Default_sequence,
  _swigc__p_SimMaterialLayer_OpaqueMaterialLayer_Default_traits,
  _swigc__p_SimMaterialLayer_OpaqueMaterialLayer_Default_type,
  _swigc__p_SimMaterial_Default_Default_const_iterator,
  _swigc__p_SimMaterial_Default_Default_iterator,
  _swigc__p_SimMaterial_Default_Default_sequence,
  _swigc__p_SimMaterial_Default_Default_traits,
  _swigc__p_SimMaterial_Default_Default_type,
  _swigc__p_SimMaterial_GlazingMaterial_Gas_const_iterator,
  _swigc__p_SimMaterial_GlazingMaterial_Gas_iterator,
  _swigc__p_SimMaterial_GlazingMaterial_Gas_sequence,
  _swigc__p_SimMaterial_GlazingMaterial_Gas_traits,
  _swigc__p_SimMaterial_GlazingMaterial_Gas_type,
  _swigc__p_SimMaterial_GlazingMaterial_Glazing_const_iterator,
  _swigc__p_SimMaterial_GlazingMaterial_Glazing_iterator,
  _swigc__p_SimMaterial_GlazingMaterial_Glazing_sequence,
  _swigc__p_SimMaterial_GlazingMaterial_Glazing_traits,
  _swigc__p_SimMaterial_GlazingMaterial_Glazing_type,
  _swigc__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_const_iterator,
  _swigc__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_iterator,
  _swigc__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_sequence,
  _swigc__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_traits,
  _swigc__p_SimMaterial_GlazingMaterial_SimpleGlazingSystem_type,
  _swigc__p_SimMaterial_OpaqueMaterial_AirGap_const_iterator,
  _swigc__p_SimMaterial_OpaqueMaterial_AirGap_iterator,
  _swigc__p_SimMaterial_OpaqueMaterial_AirGap_sequence,
  _swigc__p_SimMaterial_OpaqueMaterial_AirGap_traits,
  _swigc__p_SimMaterial_OpaqueMaterial_AirGap_type,
  _swigc__p_SimMaterial_OpaqueMaterial_Default_const_iterator,
  _swigc__p_SimMaterial_OpaqueMaterial_Default_iterator,
  _swigc__p_SimMaterial_OpaqueMaterial_Default_sequence,
  _swigc__p_SimMaterial_OpaqueMaterial_Default_traits,
  _swigc__p_SimMaterial_OpaqueMaterial_Default_type,
  _swigc__p_SimModelName_optional,
  _swigc__p_SimModelName_traits,
  _swigc__p_SimModelName_type,
  _swigc__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_const_iterator,
  _swigc__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_iterator,
  _swigc__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_sequence,
  _swigc__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_traits,
  _swigc__p_SimModelRepresentationContext_GeometricRepresentationContext_Default_type,
  _swigc__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_const_iterator,
  _swigc__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_iterator,
  _swigc__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_sequence,
  _swigc__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_traits,
  _swigc__p_SimModelRepresentationContext_GeometricRepresentationSubContext_Default_type,
  _swigc__p_SimModelSchemaIDKey_optional,
  _swigc__p_SimModelSchemaIDKey_traits,
  _swigc__p_SimModelSchemaIDKey_type,
  _swigc__p_SimModelSchemaVersion_optional,
  _swigc__p_SimModelSchemaVersion_traits,
  _swigc__p_SimModelSchemaVersion_type,
  _swigc__p_SimModelSubtype_optional,
  _swigc__p_SimModelSubtype_traits,
  _swigc__p_SimModelSubtype_type,
  _swigc__p_SimModelType_optional,
  _swigc__p_SimModelType_traits,
  _swigc__p_SimModelType_type,
  _swigc__p_SimModelUnitDefaultsVersion_optional,
  _swigc__p_SimModelUnitDefaultsVersion_traits,
  _swigc__p_SimModelUnitDefaultsVersion_type,
  _swigc__p_SimModelUnitsVersion_optional,
  _swigc__p_SimModelUnitsVersion_traits,
  _swigc__p_SimModelUnitsVersion_type,
  _swigc__p_SimModelVersion_optional,
  _swigc__p_SimModelVersion_traits,
  _swigc__p_SimModelVersion_type,
  _swigc__p_SimNode_AirFlowPort_Air_In_const_iterator,
  _swigc__p_SimNode_AirFlowPort_Air_In_iterator,
  _swigc__p_SimNode_AirFlowPort_Air_In_sequence,
  _swigc__p_SimNode_AirFlowPort_Air_In_traits,
  _swigc__p_SimNode_AirFlowPort_Air_In_type,
  _swigc__p_SimNode_AirFlowPort_Air_Out_const_iterator,
  _swigc__p_SimNode_AirFlowPort_Air_Out_iterator,
  _swigc__p_SimNode_AirFlowPort_Air_Out_sequence,
  _swigc__p_SimNode_AirFlowPort_Air_Out_traits,
  _swigc__p_SimNode_AirFlowPort_Air_Out_type,
  _swigc__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_const_iterator,
  _swigc__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_iterator,
  _swigc__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_sequence,
  _swigc__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_traits,
  _swigc__p_SimNode_DigitalControl_AirLoop_DigitalSignal_In_type,
  _swigc__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_const_iterator,
  _swigc__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_iterator,
  _swigc__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_sequence,
  _swigc__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_traits,
  _swigc__p_SimNode_DigitalControl_HWLoop_DigitalSignal_In_type,
  _swigc__p_SimNode_Docking_Default_const_iterator,
  _swigc__p_SimNode_Docking_Default_iterator,
  _swigc__p_SimNode_Docking_Default_sequence,
  _swigc__p_SimNode_Docking_Default_traits,
  _swigc__p_SimNode_Docking_Default_type,
  _swigc__p_SimNode_HotWaterFlowPort_Water_In_const_iterator,
  _swigc__p_SimNode_HotWaterFlowPort_Water_In_iterator,
  _swigc__p_SimNode_HotWaterFlowPort_Water_In_sequence,
  _swigc__p_SimNode_HotWaterFlowPort_Water_In_traits,
  _swigc__p_SimNode_HotWaterFlowPort_Water_In_type,
  _swigc__p_SimNode_HotWaterFlowPort_Water_Out_const_iterator,
  _swigc__p_SimNode_HotWaterFlowPort_Water_Out_iterator,
  _swigc__p_SimNode_HotWaterFlowPort_Water_Out_sequence,
  _swigc__p_SimNode_HotWaterFlowPort_Water_Out_traits,
  _swigc__p_SimNode_HotWaterFlowPort_Water_Out_type,
  _swigc__p_SimOrganization_Organization_Default_const_iterator,
  _swigc__p_SimOrganization_Organization_Default_iterator,
  _swigc__p_SimOrganization_Organization_Default_sequence,
  _swigc__p_SimOrganization_Organization_Default_traits,
  _swigc__p_SimOrganization_Organization_Default_type,
  _swigc__p_SimOwnerHistory_Default_Default_const_iterator,
  _swigc__p_SimOwnerHistory_Default_Default_iterator,
  _swigc__p_SimOwnerHistory_Default_Default_sequence,
  _swigc__p_SimOwnerHistory_Default_Default_traits,
  _swigc__p_SimOwnerHistory_Default_Default_type,
  _swigc__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_const_iterator,
  _swigc__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_iterator,
  _swigc__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_sequence,
  _swigc__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_traits,
  _swigc__p_SimParameterizedProfileDef_ParameterizedProfile_Rectangle_type,
  _swigc__p_SimPersonAndOrganization_PersonAndOrganization_Default_const_iterator,
  _swigc__p_SimPersonAndOrganization_PersonAndOrganization_Default_iterator,
  _swigc__p_SimPersonAndOrganization_PersonAndOrganization_Default_sequence,
  _swigc__p_SimPersonAndOrganization_PersonAndOrganization_Default_traits,
  _swigc__p_SimPersonAndOrganization_PersonAndOrganization_Default_type,
  _swigc__p_SimPerson_Person_Default_const_iterator,
  _swigc__p_SimPerson_Person_Default_iterator,
  _swigc__p_SimPerson_Person_Default_sequence,
  _swigc__p_SimPerson_Person_Default_traits,
  _swigc__p_SimPerson_Person_Default_type,
  _swigc__p_SimPlacement_Axis2Placement2D_Default_const_iterator,
  _swigc__p_SimPlacement_Axis2Placement2D_Default_iterator,
  _swigc__p_SimPlacement_Axis2Placement2D_Default_sequence,
  _swigc__p_SimPlacement_Axis2Placement2D_Default_traits,
  _swigc__p_SimPlacement_Axis2Placement2D_Default_type,
  _swigc__p_SimPlacement_Axis2Placement3D_Default_const_iterator,
  _swigc__p_SimPlacement_Axis2Placement3D_Default_iterator,
  _swigc__p_SimPlacement_Axis2Placement3D_Default_sequence,
  _swigc__p_SimPlacement_Axis2Placement3D_Default_traits,
  _swigc__p_SimPlacement_Axis2Placement3D_Default_type,
  _swigc__p_SimPresentationLayerAssignment_Default_Default_const_iterator,
  _swigc__p_SimPresentationLayerAssignment_Default_Default_iterator,
  _swigc__p_SimPresentationLayerAssignment_Default_Default_sequence,
  _swigc__p_SimPresentationLayerAssignment_Default_Default_traits,
  _swigc__p_SimPresentationLayerAssignment_Default_Default_type,
  _swigc__p_SimProject_Project_DesignAlternative_const_iterator,
  _swigc__p_SimProject_Project_DesignAlternative_iterator,
  _swigc__p_SimProject_Project_DesignAlternative_sequence,
  _swigc__p_SimProject_Project_DesignAlternative_traits,
  _swigc__p_SimProject_Project_DesignAlternative_type,
  _swigc__p_SimRepresentationMap_RepresentationMap_Default_const_iterator,
  _swigc__p_SimRepresentationMap_RepresentationMap_Default_iterator,
  _swigc__p_SimRepresentationMap_RepresentationMap_Default_sequence,
  _swigc__p_SimRepresentationMap_RepresentationMap_Default_traits,
  _swigc__p_SimRepresentationMap_RepresentationMap_Default_type,
  _swigc__p_SimSIUnitType_SiUnit_Default_const_iterator,
  _swigc__p_SimSIUnitType_SiUnit_Default_iterator,
  _swigc__p_SimSIUnitType_SiUnit_Default_sequence,
  _swigc__p_SimSIUnitType_SiUnit_Default_traits,
  _swigc__p_SimSIUnitType_SiUnit_Default_type,
  _swigc__p_SimSensor_TemperatureSensor_DryBulb_const_iterator,
  _swigc__p_SimSensor_TemperatureSensor_DryBulb_iterator,
  _swigc__p_SimSensor_TemperatureSensor_DryBulb_sequence,
  _swigc__p_SimSensor_TemperatureSensor_DryBulb_traits,
  _swigc__p_SimSensor_TemperatureSensor_DryBulb_type,
  _swigc__p_SimShapeRepresentation_ShapeRepresentation_Default_const_iterator,
  _swigc__p_SimShapeRepresentation_ShapeRepresentation_Default_iterator,
  _swigc__p_SimShapeRepresentation_ShapeRepresentation_Default_sequence,
  _swigc__p_SimShapeRepresentation_ShapeRepresentation_Default_traits,
  _swigc__p_SimShapeRepresentation_ShapeRepresentation_Default_type,
  _swigc__p_SimSimulationConfiguration_SimulationConfiguration_Default_const_iterator,
  _swigc__p_SimSimulationConfiguration_SimulationConfiguration_Default_iterator,
  _swigc__p_SimSimulationConfiguration_SimulationConfiguration_Default_sequence,
  _swigc__p_SimSimulationConfiguration_SimulationConfiguration_Default_traits,
  _swigc__p_SimSimulationConfiguration_SimulationConfiguration_Default_type,
  _swigc__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_const_iterator,
  _swigc__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_iterator,
  _swigc__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_sequence,
  _swigc__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_traits,
  _swigc__p_SimSimulationParameters_HvacDesign_WaterLoopSizing_type,
  _swigc__p_SimSite_BuildingSite_Default_const_iterator,
  _swigc__p_SimSite_BuildingSite_Default_iterator,
  _swigc__p_SimSite_BuildingSite_Default_sequence,
  _swigc__p_SimSite_BuildingSite_Default_traits,
  _swigc__p_SimSite_BuildingSite_Default_type,
  _swigc__p_SimSlabParams_Slab_Floor_const_iterator,
  _swigc__p_SimSlabParams_Slab_Floor_iterator,
  _swigc__p_SimSlabParams_Slab_Floor_sequence,
  _swigc__p_SimSlabParams_Slab_Floor_traits,
  _swigc__p_SimSlabParams_Slab_Floor_type,
  _swigc__p_SimSlab_Default_Default_const_iterator,
  _swigc__p_SimSlab_Default_Default_iterator,
  _swigc__p_SimSlab_Default_Default_sequence,
  _swigc__p_SimSlab_Default_Default_traits,
  _swigc__p_SimSlab_Default_Default_type,
  _swigc__p_SimSlab_Floor_FloorOverEarth_const_iterator,
  _swigc__p_SimSlab_Floor_FloorOverEarth_iterator,
  _swigc__p_SimSlab_Floor_FloorOverEarth_sequence,
  _swigc__p_SimSlab_Floor_FloorOverEarth_traits,
  _swigc__p_SimSlab_Floor_FloorOverEarth_type,
  _swigc__p_SimSlab_Floor_InterzoneFloor_const_iterator,
  _swigc__p_SimSlab_Floor_InterzoneFloor_iterator,
  _swigc__p_SimSlab_Floor_InterzoneFloor_sequence,
  _swigc__p_SimSlab_Floor_InterzoneFloor_traits,
  _swigc__p_SimSlab_Floor_InterzoneFloor_type,
  _swigc__p_SimSlab_RoofSlab_RoofUnderAir_const_iterator,
  _swigc__p_SimSlab_RoofSlab_RoofUnderAir_iterator,
  _swigc__p_SimSlab_RoofSlab_RoofUnderAir_sequence,
  _swigc__p_SimSlab_RoofSlab_RoofUnderAir_traits,
  _swigc__p_SimSlab_RoofSlab_RoofUnderAir_type,
  _swigc__p_SimSoftwareApplication_Default_Default_const_iterator,
  _swigc__p_SimSoftwareApplication_Default_Default_iterator,
  _swigc__p_SimSoftwareApplication_Default_Default_sequence,
  _swigc__p_SimSoftwareApplication_Default_Default_traits,
  _swigc__p_SimSoftwareApplication_Default_Default_type,
  _swigc__p_SimSolarShade_Fin_Default_const_iterator,
  _swigc__p_SimSolarShade_Fin_Default_iterator,
  _swigc__p_SimSolarShade_Fin_Default_sequence,
  _swigc__p_SimSolarShade_Fin_Default_traits,
  _swigc__p_SimSolarShade_Fin_Default_type,
  _swigc__p_SimSolarShade_Overhang_Default_const_iterator,
  _swigc__p_SimSolarShade_Overhang_Default_iterator,
  _swigc__p_SimSolarShade_Overhang_Default_sequence,
  _swigc__p_SimSolarShade_Overhang_Default_traits,
  _swigc__p_SimSolarShade_Overhang_Default_type,
  _swigc__p_SimSpaceBoundary_SecondLevel_SubTypeA_const_iterator,
  _swigc__p_SimSpaceBoundary_SecondLevel_SubTypeA_iterator,
  _swigc__p_SimSpaceBoundary_SecondLevel_SubTypeA_sequence,
  _swigc__p_SimSpaceBoundary_SecondLevel_SubTypeA_traits,
  _swigc__p_SimSpaceBoundary_SecondLevel_SubTypeA_type,
  _swigc__p_SimSpaceParams_Space_Default_const_iterator,
  _swigc__p_SimSpaceParams_Space_Default_iterator,
  _swigc__p_SimSpaceParams_Space_Default_sequence,
  _swigc__p_SimSpaceParams_Space_Default_traits,
  _swigc__p_SimSpaceParams_Space_Default_type,
  _swigc__p_SimSpace_Occupied_Default_const_iterator,
  _swigc__p_SimSpace_Occupied_Default_iterator,
  _swigc__p_SimSpace_Occupied_Default_sequence,
  _swigc__p_SimSpace_Occupied_Default_traits,
  _swigc__p_SimSpace_Occupied_Default_type,
  _swigc__p_SimSpatialZone_ThermalZone_Default_const_iterator,
  _swigc__p_SimSpatialZone_ThermalZone_Default_iterator,
  _swigc__p_SimSpatialZone_ThermalZone_Default_sequence,
  _swigc__p_SimSpatialZone_ThermalZone_Default_traits,
  _swigc__p_SimSpatialZone_ThermalZone_Default_type,
  _swigc__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_const_iterator,
  _swigc__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_iterator,
  _swigc__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_sequence,
  _swigc__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_traits,
  _swigc__p_SimSpatialZone_ThermalZone_TemplateForZoneGroup_type,
  _swigc__p_SimSystem_HvacHotWater_Control_const_iterator,
  _swigc__p_SimSystem_HvacHotWater_Control_iterator,
  _swigc__p_SimSystem_HvacHotWater_Control_sequence,
  _swigc__p_SimSystem_HvacHotWater_Control_traits,
  _swigc__p_SimSystem_HvacHotWater_Control_type,
  _swigc__p_SimSystem_HvacHotWater_Demand_const_iterator,
  _swigc__p_SimSystem_HvacHotWater_Demand_iterator,
  _swigc__p_SimSystem_HvacHotWater_Demand_sequence,
  _swigc__p_SimSystem_HvacHotWater_Demand_traits,
  _swigc__p_SimSystem_HvacHotWater_Demand_type,
  _swigc__p_SimSystem_HvacHotWater_FullSystem_const_iterator,
  _swigc__p_SimSystem_HvacHotWater_FullSystem_iterator,
  _swigc__p_SimSystem_HvacHotWater_FullSystem_sequence,
  _swigc__p_SimSystem_HvacHotWater_FullSystem_traits,
  _swigc__p_SimSystem_HvacHotWater_FullSystem_type,
  _swigc__p_SimSystem_HvacHotWater_Supply_const_iterator,
  _swigc__p_SimSystem_HvacHotWater_Supply_iterator,
  _swigc__p_SimSystem_HvacHotWater_Supply_sequence,
  _swigc__p_SimSystem_HvacHotWater_Supply_traits,
  _swigc__p_SimSystem_HvacHotWater_Supply_type,
  _swigc__p_SimSystem_ZoneHvacGroup_Control_const_iterator,
  _swigc__p_SimSystem_ZoneHvacGroup_Control_iterator,
  _swigc__p_SimSystem_ZoneHvacGroup_Control_sequence,
  _swigc__p_SimSystem_ZoneHvacGroup_Control_traits,
  _swigc__p_SimSystem_ZoneHvacGroup_Control_type,
  _swigc__p_SimSystem_ZoneHvacGroup_Demand_const_iterator,
  _swigc__p_SimSystem_ZoneHvacGroup_Demand_iterator,
  _swigc__p_SimSystem_ZoneHvacGroup_Demand_sequence,
  _swigc__p_SimSystem_ZoneHvacGroup_Demand_traits,
  _swigc__p_SimSystem_ZoneHvacGroup_Demand_type,
  _swigc__p_SimSystem_ZoneHvacGroup_FullSystem_const_iterator,
  _swigc__p_SimSystem_ZoneHvacGroup_FullSystem_iterator,
  _swigc__p_SimSystem_ZoneHvacGroup_FullSystem_sequence,
  _swigc__p_SimSystem_ZoneHvacGroup_FullSystem_traits,
  _swigc__p_SimSystem_ZoneHvacGroup_FullSystem_type,
  _swigc__p_SimSystem_ZoneHvacGroup_Supply_const_iterator,
  _swigc__p_SimSystem_ZoneHvacGroup_Supply_iterator,
  _swigc__p_SimSystem_ZoneHvacGroup_Supply_sequence,
  _swigc__p_SimSystem_ZoneHvacGroup_Supply_traits,
  _swigc__p_SimSystem_ZoneHvacGroup_Supply_type,
  _swigc__p_SimTemplateConstructions_Constructions_Default_const_iterator,
  _swigc__p_SimTemplateConstructions_Constructions_Default_iterator,
  _swigc__p_SimTemplateConstructions_Constructions_Default_sequence,
  _swigc__p_SimTemplateConstructions_Constructions_Default_traits,
  _swigc__p_SimTemplateConstructions_Constructions_Default_type,
  _swigc__p_SimTemplateLocation_Location_Default_const_iterator,
  _swigc__p_SimTemplateLocation_Location_Default_iterator,
  _swigc__p_SimTemplateLocation_Location_Default_sequence,
  _swigc__p_SimTemplateLocation_Location_Default_traits,
  _swigc__p_SimTemplateLocation_Location_Default_type,
  _swigc__p_SimTemplateZoneConditions_ZoneConditions_Default_const_iterator,
  _swigc__p_SimTemplateZoneConditions_ZoneConditions_Default_iterator,
  _swigc__p_SimTemplateZoneConditions_ZoneConditions_Default_sequence,
  _swigc__p_SimTemplateZoneConditions_ZoneConditions_Default_traits,
  _swigc__p_SimTemplateZoneConditions_ZoneConditions_Default_type,
  _swigc__p_SimTemplateZoneLoads_ZoneLoads_Default_const_iterator,
  _swigc__p_SimTemplateZoneLoads_ZoneLoads_Default_iterator,
  _swigc__p_SimTemplateZoneLoads_ZoneLoads_Default_sequence,
  _swigc__p_SimTemplateZoneLoads_ZoneLoads_Default_traits,
  _swigc__p_SimTemplateZoneLoads_ZoneLoads_Default_type,
  _swigc__p_SimThermalZoneType_ThermalZone_Default_const_iterator,
  _swigc__p_SimThermalZoneType_ThermalZone_Default_iterator,
  _swigc__p_SimThermalZoneType_ThermalZone_Default_sequence,
  _swigc__p_SimThermalZoneType_ThermalZone_Default_traits,
  _swigc__p_SimThermalZoneType_ThermalZone_Default_type,
  _swigc__p_SimTimeSeriesSchedule_Calendar_Configuration_const_iterator,
  _swigc__p_SimTimeSeriesSchedule_Calendar_Configuration_iterator,
  _swigc__p_SimTimeSeriesSchedule_Calendar_Configuration_sequence,
  _swigc__p_SimTimeSeriesSchedule_Calendar_Configuration_traits,
  _swigc__p_SimTimeSeriesSchedule_Calendar_Configuration_type,
  _swigc__p_SimTimeSeriesSchedule_Day_Interval_const_iterator,
  _swigc__p_SimTimeSeriesSchedule_Day_Interval_iterator,
  _swigc__p_SimTimeSeriesSchedule_Day_Interval_sequence,
  _swigc__p_SimTimeSeriesSchedule_Day_Interval_traits,
  _swigc__p_SimTimeSeriesSchedule_Day_Interval_type,
  _swigc__p_SimTimeSeriesSchedule_Limits_Default_const_iterator,
  _swigc__p_SimTimeSeriesSchedule_Limits_Default_iterator,
  _swigc__p_SimTimeSeriesSchedule_Limits_Default_sequence,
  _swigc__p_SimTimeSeriesSchedule_Limits_Default_traits,
  _swigc__p_SimTimeSeriesSchedule_Limits_Default_type,
  _swigc__p_SimTimeSeriesSchedule_Week_Daily_const_iterator,
  _swigc__p_SimTimeSeriesSchedule_Week_Daily_iterator,
  _swigc__p_SimTimeSeriesSchedule_Week_Daily_sequence,
  _swigc__p_SimTimeSeriesSchedule_Week_Daily_traits,
  _swigc__p_SimTimeSeriesSchedule_Week_Daily_type,
  _swigc__p_SimTimeSeriesSchedule_Year_Default_const_iterator,
  _swigc__p_SimTimeSeriesSchedule_Year_Default_iterator,
  _swigc__p_SimTimeSeriesSchedule_Year_Default_sequence,
  _swigc__p_SimTimeSeriesSchedule_Year_Default_traits,
  _swigc__p_SimTimeSeriesSchedule_Year_Default_type,
  _swigc__p_SimUniqueID_optional,
  _swigc__p_SimUniqueID_traits,
  _swigc__p_SimUniqueID_type,
  _swigc__p_SimWallParams_Wall_Default_const_iterator,
  _swigc__p_SimWallParams_Wall_Default_iterator,
  _swigc__p_SimWallParams_Wall_Default_sequence,
  _swigc__p_SimWallParams_Wall_Default_traits,
  _swigc__p_SimWallParams_Wall_Default_type,
  _swigc__p_SimWallType_Wall_Default_const_iterator,
  _swigc__p_SimWallType_Wall_Default_iterator,
  _swigc__p_SimWallType_Wall_Default_sequence,
  _swigc__p_SimWallType_Wall_Default_traits,
  _swigc__p_SimWallType_Wall_Default_type,
  _swigc__p_SimWall_Wall_Default_const_iterator,
  _swigc__p_SimWall_Wall_Default_iterator,
  _swigc__p_SimWall_Wall_Default_sequence,
  _swigc__p_SimWall_Wall_Default_traits,
  _swigc__p_SimWall_Wall_Default_type,
  _swigc__p_SimWall_Wall_ExteriorAboveGrade_const_iterator,
  _swigc__p_SimWall_Wall_ExteriorAboveGrade_iterator,
  _swigc__p_SimWall_Wall_ExteriorAboveGrade_sequence,
  _swigc__p_SimWall_Wall_ExteriorAboveGrade_traits,
  _swigc__p_SimWall_Wall_ExteriorAboveGrade_type,
  _swigc__p_SimWall_Wall_Interior_const_iterator,
  _swigc__p_SimWall_Wall_Interior_iterator,
  _swigc__p_SimWall_Wall_Interior_sequence,
  _swigc__p_SimWall_Wall_Interior_traits,
  _swigc__p_SimWall_Wall_Interior_type,
  _swigc__p_SimWindowArrayParams_WindowArray_Default_const_iterator,
  _swigc__p_SimWindowArrayParams_WindowArray_Default_iterator,
  _swigc__p_SimWindowArrayParams_WindowArray_Default_sequence,
  _swigc__p_SimWindowArrayParams_WindowArray_Default_traits,
  _swigc__p_SimWindowArrayParams_WindowArray_Default_type,
  _swigc__p_SimWindowLiningProps_WindowLiningProps_Default_const_iterator,
  _swigc__p_SimWindowLiningProps_WindowLiningProps_Default_iterator,
  _swigc__p_SimWindowLiningProps_WindowLiningProps_Default_sequence,
  _swigc__p_SimWindowLiningProps_WindowLiningProps_Default_traits,
  _swigc__p_SimWindowLiningProps_WindowLiningProps_Default_type,
  _swigc__p_SimWindowParams_Window_Default_const_iterator,
  _swigc__p_SimWindowParams_Window_Default_iterator,
  _swigc__p_SimWindowParams_Window_Default_sequence,
  _swigc__p_SimWindowParams_Window_Default_traits,
  _swigc__p_SimWindowParams_Window_Default_type,
  _swigc__p_SimWindowType_Window_Default_const_iterator,
  _swigc__p_SimWindowType_Window_Default_iterator,
  _swigc__p_SimWindowType_Window_Default_sequence,
  _swigc__p_SimWindowType_Window_Default_traits,
  _swigc__p_SimWindowType_Window_Default_type,
  _swigc__p_SimWindowType_Window_Exterior_const_iterator,
  _swigc__p_SimWindowType_Window_Exterior_iterator,
  _swigc__p_SimWindowType_Window_Exterior_sequence,
  _swigc__p_SimWindowType_Window_Exterior_traits,
  _swigc__p_SimWindowType_Window_Exterior_type,
  _swigc__p_SimWindowType_Window_Interior_const_iterator,
  _swigc__p_SimWindowType_Window_Interior_iterator,
  _swigc__p_SimWindowType_Window_Interior_sequence,
  _swigc__p_SimWindowType_Window_Interior_traits,
  _swigc__p_SimWindowType_Window_Interior_type,
  _swigc__p_SimWindow_Window_Default_const_iterator,
  _swigc__p_SimWindow_Window_Default_iterator,
  _swigc__p_SimWindow_Window_Default_sequence,
  _swigc__p_SimWindow_Window_Default_traits,
  _swigc__p_SimWindow_Window_Default_type,
  _swigc__p_SimWindow_Window_ExteriorDetailed_const_iterator,
  _swigc__p_SimWindow_Window_ExteriorDetailed_iterator,
  _swigc__p_SimWindow_Window_ExteriorDetailed_sequence,
  _swigc__p_SimWindow_Window_ExteriorDetailed_traits,
  _swigc__p_SimWindow_Window_ExteriorDetailed_type,
  _swigc__p_SimWindow_Window_Exterior_const_iterator,
  _swigc__p_SimWindow_Window_Exterior_iterator,
  _swigc__p_SimWindow_Window_Exterior_sequence,
  _swigc__p_SimWindow_Window_Exterior_traits,
  _swigc__p_SimWindow_Window_Exterior_type,
  _swigc__p_SourceLibraryEntryID_optional,
  _swigc__p_SourceLibraryEntryID_traits,
  _swigc__p_SourceLibraryEntryID_type,
  _swigc__p_SourceLibraryEntryRef_optional,
  _swigc__p_SourceLibraryEntryRef_traits,
  _swigc__p_SourceLibraryEntryRef_type,
  _swigc__p_SourceModelObjectType_optional,
  _swigc__p_SourceModelObjectType_traits,
  _swigc__p_SourceModelObjectType_type,
  _swigc__p_SourceModelSchema_optional,
  _swigc__p_SourceModelSchema_traits,
  _swigc__p_SourceModelSchema_type,
  _swigc__p_Tag_optional,
  _swigc__p_Tag_traits,
  _swigc__p_Tag_type,
  _swigc__p_TemplatesForMembers_optional,
  _swigc__p_TemplatesForMembers_traits,
  _swigc__p_TemplatesForMembers_type,
  _swigc__p_TypeDefCreationParams_optional,
  _swigc__p_TypeDefCreationParams_traits,
  _swigc__p_TypeDefCreationParams_type,
  _swigc__p_TypeDefinition_optional,
  _swigc__p_TypeDefinition_traits,
  _swigc__p_TypeDefinition_type,
  _swigc__p_UnitType_String_optional,
  _swigc__p_UnitType_String_traits,
  _swigc__p_UnitType_String_type,
  _swigc__p_XDirectionX_optional,
  _swigc__p_XDirectionX_traits,
  _swigc__p_XDirectionX_type,
  _swigc__p_XDirectionY_optional,
  _swigc__p_XDirectionY_traits,
  _swigc__p_XDirectionY_type,
  _swigc__p_XDirectionZ_optional,
  _swigc__p_XDirectionZ_traits,
  _swigc__p_XDirectionZ_type,
  _swigc__p__3dHeight_optional,
  _swigc__p__3dHeight_traits,
  _swigc__p__3dHeight_type,
  _swigc__p__3dLength_optional,
  _swigc__p__3dLength_traits,
  _swigc__p__3dLength_type,
  _swigc__p__3dWidth_optional,
  _swigc__p__3dWidth_traits,
  _swigc__p__3dWidth_type,
  _swigc__p_allocator_type,
  _swigc__p_base_const_iterator,
  _swigc__p_base_iterator,
  _swigc__p_base_sequence,
  _swigc__p_base_type,
  _swigc__p_bool,
  _swigc__p_bool_convertible,
  _swigc__p_char,
  _swigc__p_const_iterator,
  _swigc__p_const_reverse_iterator,
  _swigc__p_difference_type,
  _swigc__p_dom_content_optional,
  _swigc__p_double,
  _swigc__p_float,
  _swigc__p_int,
  _swigc__p_iterator,
  _swigc__p_long_long,
  _swigc__p_ptr,
  _swigc__p_reverse_iterator,
  _swigc__p_schema__simxml__MepModel__SimFlowEnergyConverter,
  _swigc__p_schema__simxml__Model__SimModel,
  _swigc__p_schema__simxml__ResourcesGeneral__SimArrayParams,
  _swigc__p_schema__simxml__ResourcesGeneral__SimNode,
  _swigc__p_schema__simxml__ResourcesGeneral__SimPort,
  _swigc__p_schema__simxml__ResourcesGeneral__SimUnitType,
  _swigc__p_schema__simxml__ResourcesGeometry__SimProfileDefinition,
  _swigc__p_schema__simxml__SimModelCore__SelectedPropertyGroups,
  _swigc__p_schema__simxml__SimModelCore__SimActorDefinition,
  _swigc__p_schema__simxml__SimModelCore__SimAppDefault,
  _swigc__p_schema__simxml__SimModelCore__SimBldgModelParams,
  _swigc__p_schema__simxml__SimModelCore__SimBuildingElement,
  _swigc__p_schema__simxml__SimModelCore__SimDistributionControlElement,
  _swigc__p_schema__simxml__SimModelCore__SimDistributionElement,
  _swigc__p_schema__simxml__SimModelCore__SimDistributionFlowElement,
  _swigc__p_schema__simxml__SimModelCore__SimElement,
  _swigc__p_schema__simxml__SimModelCore__SimFeatureElement,
  _swigc__p_schema__simxml__SimModelCore__SimGeometricRepresentationItem,
  _swigc__p_schema__simxml__SimModelCore__SimGroup,
  _swigc__p_schema__simxml__SimModelCore__SimObject,
  _swigc__p_schema__simxml__SimModelCore__SimObjectDefinition,
  _swigc__p_schema__simxml__SimModelCore__SimObjectPlacement,
  _swigc__p_schema__simxml__SimModelCore__SimObjectTypeDefinition,
  _swigc__p_schema__simxml__SimModelCore__SimPropertySetDefinition,
  _swigc__p_schema__simxml__SimModelCore__SimRepresentation,
  _swigc__p_schema__simxml__SimModelCore__SimRepresentationItem,
  _swigc__p_schema__simxml__SimModelCore__SimResourceObject,
  _swigc__p_schema__simxml__SimModelCore__SimRoot,
  _swigc__p_schema__simxml__SimModelCore__SimSpatialStructureElement,
  _swigc__p_schema__simxml__SimModelCore__SimTemplate,
  _swigc__p_schema__simxml__SimModelCore__SimTopologicalRepresentationItem,
  _swigc__p_schema__simxml__SimModelCore__doubleList,
  _swigc__p_schema__simxml__SimModelCore__integerList,
  _swigc__p_schema__simxml__SimModelCore__logical,
  _swigc__p_self_,
  _swigc__p_short,
  _swigc__p_signed_char,
  _swigc__p_size_type,
  _swigc__p_std__auto_ptrT_xml_schema__string_t,
  _swigc__p_std__invalid_argument,
  _swigc__p_std__istream,
  _swigc__p_swig__SwigPyIterator,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long_long,
  _swigc__p_unsigned_short,
  _swigc__p_value_type,
  _swigc__p_xercesc__DOMDocument,
  _swigc__p_xercesc__DOMElement,
  _swigc__p_xercesc__DOMErrorHandler,
  _swigc__p_xercesc__InputSource,
  _swigc__p_xml_schema__dom__auto_ptrT_xercesc__DOMDocument_t,
  _swigc__p_xsd__cxx__tree___type,
  _swigc__p_xsd__cxx__tree__base64_binaryT_char_xsd__cxx__tree__simple_type_t,
  _swigc__p_xsd__cxx__tree__boundsT_char_t,
  _swigc__p_xsd__cxx__tree__bufferT_char_t,
  _swigc__p_xsd__cxx__tree__content_order,
  _swigc__p_xsd__cxx__tree__dateT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__date_timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__diagnosticsT_char_t,
  _swigc__p_xsd__cxx__tree__duplicate_idT_char_t,
  _swigc__p_xsd__cxx__tree__durationT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__entitiesT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__entity_t,
  _swigc__p_xsd__cxx__tree__entityT_char_xsd__cxx__tree__ncname_t,
  _swigc__p_xsd__cxx__tree__errorT_char_t,
  _swigc__p_xsd__cxx__tree__exceptionT_char_t,
  _swigc__p_xsd__cxx__tree__expected_attributeT_char_t,
  _swigc__p_xsd__cxx__tree__expected_elementT_char_t,
  _swigc__p_xsd__cxx__tree__expected_text_contentT_char_t,
  _swigc__p_xsd__cxx__tree__flags,
  _swigc__p_xsd__cxx__tree__gdayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__gmonthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__gmonth_dayT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__gyearT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__gyear_monthT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__hex_binaryT_char_xsd__cxx__tree__simple_type_t,
  _swigc__p_xsd__cxx__tree__idT_char_xsd__cxx__tree__ncname_t,
  _swigc__p_xsd__cxx__tree__idrefT_char_xsd__cxx__tree__ncname_xsd__cxx__tree___type_t,
  _swigc__p_xsd__cxx__tree__idrefsT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__idref_t,
  _swigc__p_xsd__cxx__tree__languageT_char_xsd__cxx__tree__token_t,
  _swigc__p_xsd__cxx__tree__nameT_char_xsd__cxx__tree__token_t,
  _swigc__p_xsd__cxx__tree__ncnameT_char_xsd__cxx__tree__name_t,
  _swigc__p_xsd__cxx__tree__nmtokenT_char_xsd__cxx__tree__token_t,
  _swigc__p_xsd__cxx__tree__nmtokensT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__nmtoken_t,
  _swigc__p_xsd__cxx__tree__no_prefix_mappingT_char_t,
  _swigc__p_xsd__cxx__tree__no_type_infoT_char_t,
  _swigc__p_xsd__cxx__tree__normalized_stringT_char_xsd__cxx__tree__string_t,
  _swigc__p_xsd__cxx__tree__not_derivedT_char_t,
  _swigc__p_xsd__cxx__tree__optionalT_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t_false_t,
  _swigc__p_xsd__cxx__tree__parsingT_char_t,
  _swigc__p_xsd__cxx__tree__propertiesT_char_t,
  _swigc__p_xsd__cxx__tree__qnameT_char_xsd__cxx__tree__simple_type_xsd__cxx__tree__uri_xsd__cxx__tree__ncname_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuildingStory_BuildingStory_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimBuilding_Building_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_ConnectorList_SimConnections_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_EquipmentList_ZoneHvac_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_MaterialList_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_AirLoopAvailabilityMgrScheme_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_DemandManagerScheme_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_PlantOperatingScheme_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimList_SchemeList_WaterTempControlScheme_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimProject_Project_DesignAlternative_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSite_BuildingSite_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Default_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_FloorOverEarth_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_Floor_InterzoneFloor_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSlab_RoofSlab_RoofUnderAir_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Fin_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSolarShade_Overhang_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpace_Occupied_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSpatialZone_ThermalZone_TemplateForZoneGroup_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Control_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Demand_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_FullSystem_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_HvacHotWater_Supply_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Control_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Demand_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_FullSystem_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimSystem_ZoneHvacGroup_Supply_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimThermalZoneType_ThermalZone_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWallType_Wall_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_ExteriorAboveGrade_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWall_Wall_Interior_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Exterior_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindowType_Window_Interior_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_ExteriorDetailed_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__BuildingModel__SimWindow_Window_Exterior_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_SupplyWater_Temperature_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimController_ZoneControlTemperature_Thermostat_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowController_Valve_TemperingValve_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Expansion_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_MixedDual_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransferStorage_HotWaterTank_Mixed_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Radiant_Water_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowEnergyTransfer_ConvectiveHeater_Water_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Default_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Mixer_DemandProxyMixerWater_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowFitting_Splitter_DemandProxySplitterWater_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowMover_Pump_VariableSpeedReturn_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowPlant_Boiler_BoilerHotWater_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimFlowSegment_Pipe_Indoor_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__MepModel__SimSensor_TemperatureSensor_DryBulb_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAddress_Postal_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppLibraryDefault_AppLibraryDefault_GlobalLibrary_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponentGroup_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_BldgComponentGroup_HvacComponent_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacAirLoop_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacChilledWaterLoop_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacCondenserLoop_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacHotWaterLoop_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_HvacSteamLoop_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_MixedWaterLoop_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_RefrigerationLoop_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerDemand_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_SitePowerGeneration_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_DistributionSystem_VarRefrigerantFlow_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_AdjacentSite_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SiteContext_SolarObstruction_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_Space_Space_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_BuildingStory_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Building_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Project_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialContainer_Site_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_CeilingPlenumZone_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_FloorPlenumZone_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_SpatialZone_ThermalZone_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_CeilingPlenumZoneGroup_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_DaylightingZoneGroup_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_FloorPlenumZoneGroup_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_HvacEquipmentGroup_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_NatVentZoneGroup_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppObjNameDefault_ZoneGroup_ThermalZoneGroup_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSaveInterval_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_AutoSave_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalPath_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_EPlusInstalVersion_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppPreferences_AppPreferences_MinMonthlyChargeType_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimAppUnitDefault_AppUnitDefault_DatabaseDefault_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgSiteParams_BuildingSite_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimBldgStoryParams_BuildingStory_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryBoma_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceCategoryOwner_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationReference_SpaceTypeOwner_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimClassification_ClassificationSystem_OmniClass_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_HotWaterFlow_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimConnection_ZoneAirFlow_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_AvailabilityManagerScheme_Scheduled_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_ControlAndSequencingScheme_HeatingLoad_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointManagerScheme_ScheduledSetpoint_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimControlScheme_SetpointScheme_SingleHeating_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDerivedUnitType_DerivedUnit_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_In_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_AirFlowPort_Air_Out_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_In_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimDistributionPort_HotWaterFlowPort_Water_Out_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Equipment_Electric_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_Lights_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimInternalLoad_People_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_DesignDay_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimLocationAndWeather_Location_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_Default_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_GlazingLayerSet_Window_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Ceiling_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Door_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Floor_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_InternalSource_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Roof_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayerSet_OpaqueLayerSet_Wall_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_GlazingMaterialLayer_Thermochromic_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterialLayer_OpaqueMaterialLayer_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_Default_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Gas_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_Glazing_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_GlazingMaterial_SimpleGlazingSystem_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_AirGap_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimMaterial_OpaqueMaterial_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationContext_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimModelRepresentationContext_GeometricRepresentationSubContext_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_In_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_AirFlowPort_Air_Out_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_AirLoop_DigitalSignal_In_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_DigitalControl_HWLoop_DigitalSignal_In_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_Docking_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_In_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimNode_HotWaterFlowPort_Water_Out_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOrganization_Organization_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimOwnerHistory_Default_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPersonAndOrganization_PersonAndOrganization_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPerson_Person_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimPresentationLayerAssignment_Default_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSIUnitType_SiUnit_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationConfiguration_SimulationConfiguration_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSimulationParameters_HvacDesign_WaterLoopSizing_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSlabParams_Slab_Floor_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSoftwareApplication_Default_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceBoundary_SecondLevel_SubTypeA_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimSpaceParams_Space_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateConstructions_Constructions_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateLocation_Location_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneConditions_ZoneConditions_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTemplateZoneLoads_ZoneLoads_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Calendar_Configuration_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Day_Interval_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Limits_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Week_Daily_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimTimeSeriesSchedule_Year_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWallParams_Wall_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowArrayParams_WindowArray_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowLiningProps_WindowLiningProps_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeneral__SimWindowParams_Window_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimArbitraryProfileDef_ArbitraryProfile_Closed_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimCartesianTransformOperator_3D_Uniform_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_ClosedShell_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimConnectedFaceSet_ConnectedFaceSet_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFaceBound_FaceBound_FaceOuterBound_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFace_Face_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimFeatureElementSubtraction_Void_Opening_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomBooleanResult_BooleanClippingResult_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomCurve_Polyline_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomHalfSpaceSolid_HalfSpaceSolid_PolygonalBoundedHalfSpace_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomPoint_Point_CartesianPoint_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_FacetedBrep_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSolidModel_SweptAreaSolid_ExtrudedAreaSolid_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurfaceModel_FaceBasedSurfaceModel_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_BoundedSurface_CurveBoundedPlane_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomSurface_ElementarySurface_Plane_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimGeomVector_Vector_Direction_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_AbsolutePlacement_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLocalPlacement_LocalPlacement_RelativePlacement_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimLoop_Loop_PolyLoop_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimMappedRepresentationItem_Default_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimParameterizedProfileDef_ParameterizedProfile_Rectangle_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement2D_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimPlacement_Axis2Placement3D_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimRepresentationMap_RepresentationMap_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__ResourcesGeometry__SimShapeRepresentation_ShapeRepresentation_Default_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_BldgCompGroup_ZoneEquipment_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_HvacDemandGroup_WaterSystem_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneGroup_false_t,
  _swigc__p_xsd__cxx__tree__sequenceT_schema__simxml__SimModelCore__SimGroup_SpatialZoneGroup_ZoneHvacGroup_false_t,
  _swigc__p_xsd__cxx__tree__severity,
  _swigc__p_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t,
  _swigc__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree__type_t_t,
  _swigc__p_xsd__cxx__tree__stringT_char_xsd__cxx__tree__simple_type_t,
  _swigc__p_xsd__cxx__tree__timeT_char_xsd__cxx__tree__simple_typeT_char_xsd__cxx__tree___type_t_t,
  _swigc__p_xsd__cxx__tree__time_zone,
  _swigc__p_xsd__cxx__tree__tokenT_char_xsd__cxx__tree__normalized_string_t,
  _swigc__p_xsd__cxx__tree__unexpected_elementT_char_t,
  _swigc__p_xsd__cxx__tree__unexpected_enumeratorT_char_t,
  _swigc__p_xsd__cxx__tree__uriT_char_xsd__cxx__tree__simple_type_t,
  _swigc__p_xsd__cxx__tree__user_data_keys_templateT_0_t,
  _swigc__p_xsd__cxx__xml__error_handlerT_char_t,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    iter=module_head;
    do {
      if (iter==&swig_module) {
        /* Our module is already in the list, so there's nothing more to do. */
        return;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* otherwise we must add our module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    char *tmp;
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", tmp = SWIG_Python_str_AsChar(str));
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;
    if (!type_init) {
      const PyTypeObject tmp = {
        /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(NULL, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* ob_size */
#endif
        (char *)"swigvarlink",              /* tp_name */
        sizeof(swig_varlinkobject),         /* tp_basicsize */
        0,                                  /* tp_itemsize */
        (destructor) swig_varlink_dealloc,  /* tp_dealloc */
        (printfunc) swig_varlink_print,     /* tp_print */
        (getattrfunc) swig_varlink_getattr, /* tp_getattr */
        (setattrfunc) swig_varlink_setattr, /* tp_setattr */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc) swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
        0,                                  /* tp_version */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      type_init = 1;
#if PY_VERSION_HEX < 0x02020000
      varlink_type.ob_type = &PyType_Type;
#else
      if (PyType_Ready(&varlink_type) < 0)
      return NULL;
#endif
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (!c) continue;
      c = strstr(c, "swig_ptr: ");
      if (c) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md;
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
# if PY_VERSION_HEX >= 0x03020000
    PyModuleDef_HEAD_INIT,
# else
    {
      PyObject_HEAD_INIT(NULL)
      NULL, /* m_init */
      0,    /* m_index */
      NULL, /* m_copy */
    },
# endif
    (char *) SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    (PyCFunction) SwigPyObject_own,
    (PyCFunction) SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyObject *metatype_args;
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  PyObject *self = 0;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  (void)self;
  
  /* metatype is used to implement static member variables. */
  metatype_args = Py_BuildValue("(s(O){})", "SwigPyObjectType", &PyType_Type);
  assert(metatype_args);
  metatype = (PyTypeObject *) PyType_Type.tp_call((PyObject *) &PyType_Type, metatype_args, NULL);
  assert(metatype);
  Py_DECREF(metatype_args);
  metatype->tp_setattro = (setattrofunc) &SwigPyObjectType_setattro;
  assert(PyType_Ready(metatype) >= 0);
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
#endif
  
  md = d = PyModule_GetDict(m);
  (void)md;
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = SwigPyObject_TypeOnce();
  } else if (SwigPyObject_TypeOnce()->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

