// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined.hxx"

#include "simflowcompeqmt_plantconn_1_3_inletnodename.hxx"

#include "simflowcompeqmt_plantconn_1_3_outletnodename.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined
      // 

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_Name_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_Name () const
      {
        return this->SimFlowCompEqmt_Name_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_Name_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_Name ()
      {
        return this->SimFlowCompEqmt_Name_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_Name (const SimFlowCompEqmt_Name_type& x)
      {
        this->SimFlowCompEqmt_Name_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_Name (const SimFlowCompEqmt_Name_optional& x)
      {
        this->SimFlowCompEqmt_Name_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_Name (::std::auto_ptr< SimFlowCompEqmt_Name_type > x)
      {
        this->SimFlowCompEqmt_Name_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName () const
      {
        return this->SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName ()
      {
        return this->SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName (const SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName_type& x)
      {
        this->SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName (const SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName_optional& x)
      {
        this->SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName (::std::auto_ptr< SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName_type > x)
      {
        this->SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName () const
      {
        return this->SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName ()
      {
        return this->SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName (const SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName_type& x)
      {
        this->SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName (const SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName_optional& x)
      {
        this->SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName (::std::auto_ptr< SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName_type > x)
      {
        this->SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_PrimaryAirInletNodeName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_PrimaryAirInletNodeName () const
      {
        return this->SimFlowCompEqmt_PrimaryAirInletNodeName_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_PrimaryAirInletNodeName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_PrimaryAirInletNodeName ()
      {
        return this->SimFlowCompEqmt_PrimaryAirInletNodeName_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_PrimaryAirInletNodeName (const SimFlowCompEqmt_PrimaryAirInletNodeName_type& x)
      {
        this->SimFlowCompEqmt_PrimaryAirInletNodeName_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_PrimaryAirInletNodeName (const SimFlowCompEqmt_PrimaryAirInletNodeName_optional& x)
      {
        this->SimFlowCompEqmt_PrimaryAirInletNodeName_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_PrimaryAirInletNodeName (::std::auto_ptr< SimFlowCompEqmt_PrimaryAirInletNodeName_type > x)
      {
        this->SimFlowCompEqmt_PrimaryAirInletNodeName_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_PrimaryAirOutInletNodeName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_PrimaryAirOutInletNodeName () const
      {
        return this->SimFlowCompEqmt_PrimaryAirOutInletNodeName_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_PrimaryAirOutInletNodeName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_PrimaryAirOutInletNodeName ()
      {
        return this->SimFlowCompEqmt_PrimaryAirOutInletNodeName_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_PrimaryAirOutInletNodeName (const SimFlowCompEqmt_PrimaryAirOutInletNodeName_type& x)
      {
        this->SimFlowCompEqmt_PrimaryAirOutInletNodeName_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_PrimaryAirOutInletNodeName (const SimFlowCompEqmt_PrimaryAirOutInletNodeName_optional& x)
      {
        this->SimFlowCompEqmt_PrimaryAirOutInletNodeName_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_PrimaryAirOutInletNodeName (::std::auto_ptr< SimFlowCompEqmt_PrimaryAirOutInletNodeName_type > x)
      {
        this->SimFlowCompEqmt_PrimaryAirOutInletNodeName_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_SecondAirInletNodeName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_SecondAirInletNodeName () const
      {
        return this->SimFlowCompEqmt_SecondAirInletNodeName_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_SecondAirInletNodeName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_SecondAirInletNodeName ()
      {
        return this->SimFlowCompEqmt_SecondAirInletNodeName_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_SecondAirInletNodeName (const SimFlowCompEqmt_SecondAirInletNodeName_type& x)
      {
        this->SimFlowCompEqmt_SecondAirInletNodeName_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_SecondAirInletNodeName (const SimFlowCompEqmt_SecondAirInletNodeName_optional& x)
      {
        this->SimFlowCompEqmt_SecondAirInletNodeName_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_SecondAirInletNodeName (::std::auto_ptr< SimFlowCompEqmt_SecondAirInletNodeName_type > x)
      {
        this->SimFlowCompEqmt_SecondAirInletNodeName_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_SecondAirOutletNodeName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_SecondAirOutletNodeName () const
      {
        return this->SimFlowCompEqmt_SecondAirOutletNodeName_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_SecondAirOutletNodeName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_SecondAirOutletNodeName ()
      {
        return this->SimFlowCompEqmt_SecondAirOutletNodeName_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_SecondAirOutletNodeName (const SimFlowCompEqmt_SecondAirOutletNodeName_type& x)
      {
        this->SimFlowCompEqmt_SecondAirOutletNodeName_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_SecondAirOutletNodeName (const SimFlowCompEqmt_SecondAirOutletNodeName_optional& x)
      {
        this->SimFlowCompEqmt_SecondAirOutletNodeName_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_SecondAirOutletNodeName (::std::auto_ptr< SimFlowCompEqmt_SecondAirOutletNodeName_type > x)
      {
        this->SimFlowCompEqmt_SecondAirOutletNodeName_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_NumberOfPlantLoopConns_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_NumberOfPlantLoopConns () const
      {
        return this->SimFlowCompEqmt_NumberOfPlantLoopConns_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_NumberOfPlantLoopConns_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_NumberOfPlantLoopConns ()
      {
        return this->SimFlowCompEqmt_NumberOfPlantLoopConns_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_NumberOfPlantLoopConns (const SimFlowCompEqmt_NumberOfPlantLoopConns_type& x)
      {
        this->SimFlowCompEqmt_NumberOfPlantLoopConns_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_NumberOfPlantLoopConns (const SimFlowCompEqmt_NumberOfPlantLoopConns_optional& x)
      {
        this->SimFlowCompEqmt_NumberOfPlantLoopConns_ = x;
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_PlantConn_1_3_InletNodeName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_PlantConn_1_3_InletNodeName () const
      {
        return this->SimFlowCompEqmt_PlantConn_1_3_InletNodeName_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_PlantConn_1_3_InletNodeName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_PlantConn_1_3_InletNodeName ()
      {
        return this->SimFlowCompEqmt_PlantConn_1_3_InletNodeName_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_PlantConn_1_3_InletNodeName (const SimFlowCompEqmt_PlantConn_1_3_InletNodeName_type& x)
      {
        this->SimFlowCompEqmt_PlantConn_1_3_InletNodeName_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_PlantConn_1_3_InletNodeName (const SimFlowCompEqmt_PlantConn_1_3_InletNodeName_optional& x)
      {
        this->SimFlowCompEqmt_PlantConn_1_3_InletNodeName_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_PlantConn_1_3_InletNodeName (::std::auto_ptr< SimFlowCompEqmt_PlantConn_1_3_InletNodeName_type > x)
      {
        this->SimFlowCompEqmt_PlantConn_1_3_InletNodeName_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_PlantConn_1_3_OutletNodeName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_PlantConn_1_3_OutletNodeName () const
      {
        return this->SimFlowCompEqmt_PlantConn_1_3_OutletNodeName_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_PlantConn_1_3_OutletNodeName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_PlantConn_1_3_OutletNodeName ()
      {
        return this->SimFlowCompEqmt_PlantConn_1_3_OutletNodeName_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_PlantConn_1_3_OutletNodeName (const SimFlowCompEqmt_PlantConn_1_3_OutletNodeName_type& x)
      {
        this->SimFlowCompEqmt_PlantConn_1_3_OutletNodeName_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_PlantConn_1_3_OutletNodeName (const SimFlowCompEqmt_PlantConn_1_3_OutletNodeName_optional& x)
      {
        this->SimFlowCompEqmt_PlantConn_1_3_OutletNodeName_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_PlantConn_1_3_OutletNodeName (::std::auto_ptr< SimFlowCompEqmt_PlantConn_1_3_OutletNodeName_type > x)
      {
        this->SimFlowCompEqmt_PlantConn_1_3_OutletNodeName_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_SupplyInletWaterStorageTankName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_SupplyInletWaterStorageTankName () const
      {
        return this->SimFlowCompEqmt_SupplyInletWaterStorageTankName_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_SupplyInletWaterStorageTankName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_SupplyInletWaterStorageTankName ()
      {
        return this->SimFlowCompEqmt_SupplyInletWaterStorageTankName_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_SupplyInletWaterStorageTankName (const SimFlowCompEqmt_SupplyInletWaterStorageTankName_type& x)
      {
        this->SimFlowCompEqmt_SupplyInletWaterStorageTankName_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_SupplyInletWaterStorageTankName (const SimFlowCompEqmt_SupplyInletWaterStorageTankName_optional& x)
      {
        this->SimFlowCompEqmt_SupplyInletWaterStorageTankName_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_SupplyInletWaterStorageTankName (::std::auto_ptr< SimFlowCompEqmt_SupplyInletWaterStorageTankName_type > x)
      {
        this->SimFlowCompEqmt_SupplyInletWaterStorageTankName_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_CollectionOutletWaterStorageTankName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_CollectionOutletWaterStorageTankName () const
      {
        return this->SimFlowCompEqmt_CollectionOutletWaterStorageTankName_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_CollectionOutletWaterStorageTankName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_CollectionOutletWaterStorageTankName ()
      {
        return this->SimFlowCompEqmt_CollectionOutletWaterStorageTankName_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_CollectionOutletWaterStorageTankName (const SimFlowCompEqmt_CollectionOutletWaterStorageTankName_type& x)
      {
        this->SimFlowCompEqmt_CollectionOutletWaterStorageTankName_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_CollectionOutletWaterStorageTankName (const SimFlowCompEqmt_CollectionOutletWaterStorageTankName_optional& x)
      {
        this->SimFlowCompEqmt_CollectionOutletWaterStorageTankName_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_CollectionOutletWaterStorageTankName (::std::auto_ptr< SimFlowCompEqmt_CollectionOutletWaterStorageTankName_type > x)
      {
        this->SimFlowCompEqmt_CollectionOutletWaterStorageTankName_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_AmbientZoneName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_AmbientZoneName () const
      {
        return this->SimFlowCompEqmt_AmbientZoneName_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::SimFlowCompEqmt_AmbientZoneName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_AmbientZoneName ()
      {
        return this->SimFlowCompEqmt_AmbientZoneName_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_AmbientZoneName (const SimFlowCompEqmt_AmbientZoneName_type& x)
      {
        this->SimFlowCompEqmt_AmbientZoneName_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_AmbientZoneName (const SimFlowCompEqmt_AmbientZoneName_optional& x)
      {
        this->SimFlowCompEqmt_AmbientZoneName_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompEqmt_AmbientZoneName (::std::auto_ptr< SimFlowCompEqmt_AmbientZoneName_type > x)
      {
        this->SimFlowCompEqmt_AmbientZoneName_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined
      //

      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined ()
      : ::schema::simxml::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt (),
        SimFlowCompEqmt_Name_ (this),
        SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName_ (this),
        SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName_ (this),
        SimFlowCompEqmt_PrimaryAirInletNodeName_ (this),
        SimFlowCompEqmt_PrimaryAirOutInletNodeName_ (this),
        SimFlowCompEqmt_SecondAirInletNodeName_ (this),
        SimFlowCompEqmt_SecondAirOutletNodeName_ (this),
        SimFlowCompEqmt_NumberOfPlantLoopConns_ (this),
        SimFlowCompEqmt_PlantConn_1_3_InletNodeName_ (this),
        SimFlowCompEqmt_PlantConn_1_3_OutletNodeName_ (this),
        SimFlowCompEqmt_SupplyInletWaterStorageTankName_ (this),
        SimFlowCompEqmt_CollectionOutletWaterStorageTankName_ (this),
        SimFlowCompEqmt_AmbientZoneName_ (this)
      {
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt (RefId),
        SimFlowCompEqmt_Name_ (this),
        SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName_ (this),
        SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName_ (this),
        SimFlowCompEqmt_PrimaryAirInletNodeName_ (this),
        SimFlowCompEqmt_PrimaryAirOutInletNodeName_ (this),
        SimFlowCompEqmt_SecondAirInletNodeName_ (this),
        SimFlowCompEqmt_SecondAirOutletNodeName_ (this),
        SimFlowCompEqmt_NumberOfPlantLoopConns_ (this),
        SimFlowCompEqmt_PlantConn_1_3_InletNodeName_ (this),
        SimFlowCompEqmt_PlantConn_1_3_OutletNodeName_ (this),
        SimFlowCompEqmt_SupplyInletWaterStorageTankName_ (this),
        SimFlowCompEqmt_CollectionOutletWaterStorageTankName_ (this),
        SimFlowCompEqmt_AmbientZoneName_ (this)
      {
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined (const SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined& x,
                                                       ::xml_schema::flags f,
                                                       ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt (x, f, c),
        SimFlowCompEqmt_Name_ (x.SimFlowCompEqmt_Name_, f, this),
        SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName_ (x.SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName_, f, this),
        SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName_ (x.SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName_, f, this),
        SimFlowCompEqmt_PrimaryAirInletNodeName_ (x.SimFlowCompEqmt_PrimaryAirInletNodeName_, f, this),
        SimFlowCompEqmt_PrimaryAirOutInletNodeName_ (x.SimFlowCompEqmt_PrimaryAirOutInletNodeName_, f, this),
        SimFlowCompEqmt_SecondAirInletNodeName_ (x.SimFlowCompEqmt_SecondAirInletNodeName_, f, this),
        SimFlowCompEqmt_SecondAirOutletNodeName_ (x.SimFlowCompEqmt_SecondAirOutletNodeName_, f, this),
        SimFlowCompEqmt_NumberOfPlantLoopConns_ (x.SimFlowCompEqmt_NumberOfPlantLoopConns_, f, this),
        SimFlowCompEqmt_PlantConn_1_3_InletNodeName_ (x.SimFlowCompEqmt_PlantConn_1_3_InletNodeName_, f, this),
        SimFlowCompEqmt_PlantConn_1_3_OutletNodeName_ (x.SimFlowCompEqmt_PlantConn_1_3_OutletNodeName_, f, this),
        SimFlowCompEqmt_SupplyInletWaterStorageTankName_ (x.SimFlowCompEqmt_SupplyInletWaterStorageTankName_, f, this),
        SimFlowCompEqmt_CollectionOutletWaterStorageTankName_ (x.SimFlowCompEqmt_CollectionOutletWaterStorageTankName_, f, this),
        SimFlowCompEqmt_AmbientZoneName_ (x.SimFlowCompEqmt_AmbientZoneName_, f, this)
      {
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined (const ::xercesc::DOMElement& e,
                                                       ::xml_schema::flags f,
                                                       ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt (e, f | ::xml_schema::flags::base, c),
        SimFlowCompEqmt_Name_ (this),
        SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName_ (this),
        SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName_ (this),
        SimFlowCompEqmt_PrimaryAirInletNodeName_ (this),
        SimFlowCompEqmt_PrimaryAirOutInletNodeName_ (this),
        SimFlowCompEqmt_SecondAirInletNodeName_ (this),
        SimFlowCompEqmt_SecondAirOutletNodeName_ (this),
        SimFlowCompEqmt_NumberOfPlantLoopConns_ (this),
        SimFlowCompEqmt_PlantConn_1_3_InletNodeName_ (this),
        SimFlowCompEqmt_PlantConn_1_3_OutletNodeName_ (this),
        SimFlowCompEqmt_SupplyInletWaterStorageTankName_ (this),
        SimFlowCompEqmt_CollectionOutletWaterStorageTankName_ (this),
        SimFlowCompEqmt_AmbientZoneName_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowCompEqmt_Name
          //
          if (n.name () == "SimFlowCompEqmt_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_Name_type > r (
              SimFlowCompEqmt_Name_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_Name_)
            {
              this->SimFlowCompEqmt_Name_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName
          //
          if (n.name () == "SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName_type > r (
              SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName_)
            {
              this->SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName
          //
          if (n.name () == "SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName_type > r (
              SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName_)
            {
              this->SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_PrimaryAirInletNodeName
          //
          if (n.name () == "SimFlowCompEqmt_PrimaryAirInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_PrimaryAirInletNodeName_type > r (
              SimFlowCompEqmt_PrimaryAirInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_PrimaryAirInletNodeName_)
            {
              this->SimFlowCompEqmt_PrimaryAirInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_PrimaryAirOutInletNodeName
          //
          if (n.name () == "SimFlowCompEqmt_PrimaryAirOutInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_PrimaryAirOutInletNodeName_type > r (
              SimFlowCompEqmt_PrimaryAirOutInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_PrimaryAirOutInletNodeName_)
            {
              this->SimFlowCompEqmt_PrimaryAirOutInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_SecondAirInletNodeName
          //
          if (n.name () == "SimFlowCompEqmt_SecondAirInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_SecondAirInletNodeName_type > r (
              SimFlowCompEqmt_SecondAirInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_SecondAirInletNodeName_)
            {
              this->SimFlowCompEqmt_SecondAirInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_SecondAirOutletNodeName
          //
          if (n.name () == "SimFlowCompEqmt_SecondAirOutletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_SecondAirOutletNodeName_type > r (
              SimFlowCompEqmt_SecondAirOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_SecondAirOutletNodeName_)
            {
              this->SimFlowCompEqmt_SecondAirOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_NumberOfPlantLoopConns
          //
          if (n.name () == "SimFlowCompEqmt_NumberOfPlantLoopConns" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowCompEqmt_NumberOfPlantLoopConns_)
            {
              this->SimFlowCompEqmt_NumberOfPlantLoopConns_.set (SimFlowCompEqmt_NumberOfPlantLoopConns_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowCompEqmt_PlantConn_1_3_InletNodeName
          //
          if (n.name () == "SimFlowCompEqmt_PlantConn_1_3_InletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_PlantConn_1_3_InletNodeName_type > r (
              SimFlowCompEqmt_PlantConn_1_3_InletNodeName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_PlantConn_1_3_InletNodeName_)
            {
              this->SimFlowCompEqmt_PlantConn_1_3_InletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_PlantConn_1_3_OutletNodeName
          //
          if (n.name () == "SimFlowCompEqmt_PlantConn_1_3_OutletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_PlantConn_1_3_OutletNodeName_type > r (
              SimFlowCompEqmt_PlantConn_1_3_OutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_PlantConn_1_3_OutletNodeName_)
            {
              this->SimFlowCompEqmt_PlantConn_1_3_OutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_SupplyInletWaterStorageTankName
          //
          if (n.name () == "SimFlowCompEqmt_SupplyInletWaterStorageTankName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_SupplyInletWaterStorageTankName_type > r (
              SimFlowCompEqmt_SupplyInletWaterStorageTankName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_SupplyInletWaterStorageTankName_)
            {
              this->SimFlowCompEqmt_SupplyInletWaterStorageTankName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_CollectionOutletWaterStorageTankName
          //
          if (n.name () == "SimFlowCompEqmt_CollectionOutletWaterStorageTankName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_CollectionOutletWaterStorageTankName_type > r (
              SimFlowCompEqmt_CollectionOutletWaterStorageTankName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_CollectionOutletWaterStorageTankName_)
            {
              this->SimFlowCompEqmt_CollectionOutletWaterStorageTankName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_AmbientZoneName
          //
          if (n.name () == "SimFlowCompEqmt_AmbientZoneName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_AmbientZoneName_type > r (
              SimFlowCompEqmt_AmbientZoneName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_AmbientZoneName_)
            {
              this->SimFlowCompEqmt_AmbientZoneName_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined* SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined (*this, f, c);
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined& SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      operator= (const SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt& > (*this) = x;
          this->SimFlowCompEqmt_Name_ = x.SimFlowCompEqmt_Name_;
          this->SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName_ = x.SimFlowCompEqmt_OverallMdlSimulationProgCallingMngrName_;
          this->SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName_ = x.SimFlowCompEqmt_MdlSetupandSizingProgCallingMngrName_;
          this->SimFlowCompEqmt_PrimaryAirInletNodeName_ = x.SimFlowCompEqmt_PrimaryAirInletNodeName_;
          this->SimFlowCompEqmt_PrimaryAirOutInletNodeName_ = x.SimFlowCompEqmt_PrimaryAirOutInletNodeName_;
          this->SimFlowCompEqmt_SecondAirInletNodeName_ = x.SimFlowCompEqmt_SecondAirInletNodeName_;
          this->SimFlowCompEqmt_SecondAirOutletNodeName_ = x.SimFlowCompEqmt_SecondAirOutletNodeName_;
          this->SimFlowCompEqmt_NumberOfPlantLoopConns_ = x.SimFlowCompEqmt_NumberOfPlantLoopConns_;
          this->SimFlowCompEqmt_PlantConn_1_3_InletNodeName_ = x.SimFlowCompEqmt_PlantConn_1_3_InletNodeName_;
          this->SimFlowCompEqmt_PlantConn_1_3_OutletNodeName_ = x.SimFlowCompEqmt_PlantConn_1_3_OutletNodeName_;
          this->SimFlowCompEqmt_SupplyInletWaterStorageTankName_ = x.SimFlowCompEqmt_SupplyInletWaterStorageTankName_;
          this->SimFlowCompEqmt_CollectionOutletWaterStorageTankName_ = x.SimFlowCompEqmt_CollectionOutletWaterStorageTankName_;
          this->SimFlowCompEqmt_AmbientZoneName_ = x.SimFlowCompEqmt_AmbientZoneName_;
        }

        return *this;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined::
      ~SimFlowCompoundEqmt_UnitaryZoneEqmt_UserDefined ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

