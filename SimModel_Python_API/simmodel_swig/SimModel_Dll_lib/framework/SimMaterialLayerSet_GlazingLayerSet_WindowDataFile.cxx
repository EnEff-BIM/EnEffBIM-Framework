// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimMaterialLayerSet_GlazingLayerSet_WindowDataFile.hxx"

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      // SimMaterialLayerSet_GlazingLayerSet_WindowDataFile
      // 

      const SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::SimMatLayerSet_Name_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      SimMatLayerSet_Name () const
      {
        return this->SimMatLayerSet_Name_;
      }

      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::SimMatLayerSet_Name_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      SimMatLayerSet_Name ()
      {
        return this->SimMatLayerSet_Name_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      SimMatLayerSet_Name (const SimMatLayerSet_Name_type& x)
      {
        this->SimMatLayerSet_Name_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      SimMatLayerSet_Name (const SimMatLayerSet_Name_optional& x)
      {
        this->SimMatLayerSet_Name_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      SimMatLayerSet_Name (::std::auto_ptr< SimMatLayerSet_Name_type > x)
      {
        this->SimMatLayerSet_Name_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::SimMatLayerSet_FileName_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      SimMatLayerSet_FileName () const
      {
        return this->SimMatLayerSet_FileName_;
      }

      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::SimMatLayerSet_FileName_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      SimMatLayerSet_FileName ()
      {
        return this->SimMatLayerSet_FileName_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      SimMatLayerSet_FileName (const SimMatLayerSet_FileName_type& x)
      {
        this->SimMatLayerSet_FileName_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      SimMatLayerSet_FileName (const SimMatLayerSet_FileName_optional& x)
      {
        this->SimMatLayerSet_FileName_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      SimMatLayerSet_FileName (::std::auto_ptr< SimMatLayerSet_FileName_type > x)
      {
        this->SimMatLayerSet_FileName_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24AssmContext_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24AssmContext () const
      {
        return this->T24AssmContext_;
      }

      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24AssmContext_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24AssmContext ()
      {
        return this->T24AssmContext_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24AssmContext (const T24AssmContext_type& x)
      {
        this->T24AssmContext_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24AssmContext (const T24AssmContext_optional& x)
      {
        this->T24AssmContext_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24AssmContext (::std::auto_ptr< T24AssmContext_type > x)
      {
        this->T24AssmContext_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24FenestraCertMethod_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraCertMethod () const
      {
        return this->T24FenestraCertMethod_;
      }

      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24FenestraCertMethod_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraCertMethod ()
      {
        return this->T24FenestraCertMethod_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraCertMethod (const T24FenestraCertMethod_type& x)
      {
        this->T24FenestraCertMethod_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraCertMethod (const T24FenestraCertMethod_optional& x)
      {
        this->T24FenestraCertMethod_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraCertMethod (::std::auto_ptr< T24FenestraCertMethod_type > x)
      {
        this->T24FenestraCertMethod_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24Diffusing_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24Diffusing () const
      {
        return this->T24Diffusing_;
      }

      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24Diffusing_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24Diffusing ()
      {
        return this->T24Diffusing_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24Diffusing (const T24Diffusing_type& x)
      {
        this->T24Diffusing_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24Diffusing (const T24Diffusing_optional& x)
      {
        this->T24Diffusing_ = x;
      }

      const SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24FenestraFrame_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraFrame () const
      {
        return this->T24FenestraFrame_;
      }

      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24FenestraFrame_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraFrame ()
      {
        return this->T24FenestraFrame_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraFrame (const T24FenestraFrame_type& x)
      {
        this->T24FenestraFrame_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraFrame (const T24FenestraFrame_optional& x)
      {
        this->T24FenestraFrame_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraFrame (::std::auto_ptr< T24FenestraFrame_type > x)
      {
        this->T24FenestraFrame_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24FenestraPanes_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraPanes () const
      {
        return this->T24FenestraPanes_;
      }

      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24FenestraPanes_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraPanes ()
      {
        return this->T24FenestraPanes_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraPanes (const T24FenestraPanes_type& x)
      {
        this->T24FenestraPanes_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraPanes (const T24FenestraPanes_optional& x)
      {
        this->T24FenestraPanes_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraPanes (::std::auto_ptr< T24FenestraPanes_type > x)
      {
        this->T24FenestraPanes_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24FenestraProdType_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraProdType () const
      {
        return this->T24FenestraProdType_;
      }

      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24FenestraProdType_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraProdType ()
      {
        return this->T24FenestraProdType_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraProdType (const T24FenestraProdType_type& x)
      {
        this->T24FenestraProdType_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraProdType (const T24FenestraProdType_optional& x)
      {
        this->T24FenestraProdType_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraProdType (::std::auto_ptr< T24FenestraProdType_type > x)
      {
        this->T24FenestraProdType_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24FenestraTint_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraTint () const
      {
        return this->T24FenestraTint_;
      }

      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24FenestraTint_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraTint ()
      {
        return this->T24FenestraTint_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraTint (const T24FenestraTint_type& x)
      {
        this->T24FenestraTint_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraTint (const T24FenestraTint_optional& x)
      {
        this->T24FenestraTint_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraTint (::std::auto_ptr< T24FenestraTint_type > x)
      {
        this->T24FenestraTint_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24GreenhouseGardenWindow_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24GreenhouseGardenWindow () const
      {
        return this->T24GreenhouseGardenWindow_;
      }

      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24GreenhouseGardenWindow_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24GreenhouseGardenWindow ()
      {
        return this->T24GreenhouseGardenWindow_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24GreenhouseGardenWindow (const T24GreenhouseGardenWindow_type& x)
      {
        this->T24GreenhouseGardenWindow_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24GreenhouseGardenWindow (const T24GreenhouseGardenWindow_optional& x)
      {
        this->T24GreenhouseGardenWindow_ = x;
      }

      const SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24SHGCCenterOfGlass_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24SHGCCenterOfGlass () const
      {
        return this->T24SHGCCenterOfGlass_;
      }

      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24SHGCCenterOfGlass_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24SHGCCenterOfGlass ()
      {
        return this->T24SHGCCenterOfGlass_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24SHGCCenterOfGlass (const T24SHGCCenterOfGlass_type& x)
      {
        this->T24SHGCCenterOfGlass_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24SHGCCenterOfGlass (const T24SHGCCenterOfGlass_optional& x)
      {
        this->T24SHGCCenterOfGlass_ = x;
      }

      const SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24FenestraSkyltCurb_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraSkyltCurb () const
      {
        return this->T24FenestraSkyltCurb_;
      }

      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24FenestraSkyltCurb_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraSkyltCurb ()
      {
        return this->T24FenestraSkyltCurb_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraSkyltCurb (const T24FenestraSkyltCurb_type& x)
      {
        this->T24FenestraSkyltCurb_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraSkyltCurb (const T24FenestraSkyltCurb_optional& x)
      {
        this->T24FenestraSkyltCurb_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraSkyltCurb (::std::auto_ptr< T24FenestraSkyltCurb_type > x)
      {
        this->T24FenestraSkyltCurb_.set (x);
      }

      const SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24FenestraSkyltGlaze_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraSkyltGlaze () const
      {
        return this->T24FenestraSkyltGlaze_;
      }

      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::T24FenestraSkyltGlaze_optional& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraSkyltGlaze ()
      {
        return this->T24FenestraSkyltGlaze_;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraSkyltGlaze (const T24FenestraSkyltGlaze_type& x)
      {
        this->T24FenestraSkyltGlaze_.set (x);
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraSkyltGlaze (const T24FenestraSkyltGlaze_optional& x)
      {
        this->T24FenestraSkyltGlaze_ = x;
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      T24FenestraSkyltGlaze (::std::auto_ptr< T24FenestraSkyltGlaze_type > x)
      {
        this->T24FenestraSkyltGlaze_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      // SimMaterialLayerSet_GlazingLayerSet_WindowDataFile
      //

      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile ()
      : ::schema::simxml::ResourcesGeneral::SimMaterialLayerSet_GlazingLayerSet (),
        SimMatLayerSet_Name_ (this),
        SimMatLayerSet_FileName_ (this),
        T24AssmContext_ (this),
        T24FenestraCertMethod_ (this),
        T24Diffusing_ (this),
        T24FenestraFrame_ (this),
        T24FenestraPanes_ (this),
        T24FenestraProdType_ (this),
        T24FenestraTint_ (this),
        T24GreenhouseGardenWindow_ (this),
        T24SHGCCenterOfGlass_ (this),
        T24FenestraSkyltCurb_ (this),
        T24FenestraSkyltGlaze_ (this)
      {
      }

      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile (const RefId_type& RefId)
      : ::schema::simxml::ResourcesGeneral::SimMaterialLayerSet_GlazingLayerSet (RefId),
        SimMatLayerSet_Name_ (this),
        SimMatLayerSet_FileName_ (this),
        T24AssmContext_ (this),
        T24FenestraCertMethod_ (this),
        T24Diffusing_ (this),
        T24FenestraFrame_ (this),
        T24FenestraPanes_ (this),
        T24FenestraProdType_ (this),
        T24FenestraTint_ (this),
        T24GreenhouseGardenWindow_ (this),
        T24SHGCCenterOfGlass_ (this),
        T24FenestraSkyltCurb_ (this),
        T24FenestraSkyltGlaze_ (this)
      {
      }

      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile (const SimMaterialLayerSet_GlazingLayerSet_WindowDataFile& x,
                                                          ::xml_schema::flags f,
                                                          ::xml_schema::container* c)
      : ::schema::simxml::ResourcesGeneral::SimMaterialLayerSet_GlazingLayerSet (x, f, c),
        SimMatLayerSet_Name_ (x.SimMatLayerSet_Name_, f, this),
        SimMatLayerSet_FileName_ (x.SimMatLayerSet_FileName_, f, this),
        T24AssmContext_ (x.T24AssmContext_, f, this),
        T24FenestraCertMethod_ (x.T24FenestraCertMethod_, f, this),
        T24Diffusing_ (x.T24Diffusing_, f, this),
        T24FenestraFrame_ (x.T24FenestraFrame_, f, this),
        T24FenestraPanes_ (x.T24FenestraPanes_, f, this),
        T24FenestraProdType_ (x.T24FenestraProdType_, f, this),
        T24FenestraTint_ (x.T24FenestraTint_, f, this),
        T24GreenhouseGardenWindow_ (x.T24GreenhouseGardenWindow_, f, this),
        T24SHGCCenterOfGlass_ (x.T24SHGCCenterOfGlass_, f, this),
        T24FenestraSkyltCurb_ (x.T24FenestraSkyltCurb_, f, this),
        T24FenestraSkyltGlaze_ (x.T24FenestraSkyltGlaze_, f, this)
      {
      }

      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile (const ::xercesc::DOMElement& e,
                                                          ::xml_schema::flags f,
                                                          ::xml_schema::container* c)
      : ::schema::simxml::ResourcesGeneral::SimMaterialLayerSet_GlazingLayerSet (e, f | ::xml_schema::flags::base, c),
        SimMatLayerSet_Name_ (this),
        SimMatLayerSet_FileName_ (this),
        T24AssmContext_ (this),
        T24FenestraCertMethod_ (this),
        T24Diffusing_ (this),
        T24FenestraFrame_ (this),
        T24FenestraPanes_ (this),
        T24FenestraProdType_ (this),
        T24FenestraTint_ (this),
        T24GreenhouseGardenWindow_ (this),
        T24SHGCCenterOfGlass_ (this),
        T24FenestraSkyltCurb_ (this),
        T24FenestraSkyltGlaze_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::ResourcesGeneral::SimMaterialLayerSet_GlazingLayerSet::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimMatLayerSet_Name
          //
          if (n.name () == "SimMatLayerSet_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_Name_type > r (
              SimMatLayerSet_Name_traits::create (i, f, this));

            if (!this->SimMatLayerSet_Name_)
            {
              this->SimMatLayerSet_Name_.set (r);
              continue;
            }
          }

          // SimMatLayerSet_FileName
          //
          if (n.name () == "SimMatLayerSet_FileName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimMatLayerSet_FileName_type > r (
              SimMatLayerSet_FileName_traits::create (i, f, this));

            if (!this->SimMatLayerSet_FileName_)
            {
              this->SimMatLayerSet_FileName_.set (r);
              continue;
            }
          }

          // T24AssmContext
          //
          if (n.name () == "T24AssmContext" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< T24AssmContext_type > r (
              T24AssmContext_traits::create (i, f, this));

            if (!this->T24AssmContext_)
            {
              this->T24AssmContext_.set (r);
              continue;
            }
          }

          // T24FenestraCertMethod
          //
          if (n.name () == "T24FenestraCertMethod" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< T24FenestraCertMethod_type > r (
              T24FenestraCertMethod_traits::create (i, f, this));

            if (!this->T24FenestraCertMethod_)
            {
              this->T24FenestraCertMethod_.set (r);
              continue;
            }
          }

          // T24Diffusing
          //
          if (n.name () == "T24Diffusing" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->T24Diffusing_)
            {
              this->T24Diffusing_.set (T24Diffusing_traits::create (i, f, this));
              continue;
            }
          }

          // T24FenestraFrame
          //
          if (n.name () == "T24FenestraFrame" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< T24FenestraFrame_type > r (
              T24FenestraFrame_traits::create (i, f, this));

            if (!this->T24FenestraFrame_)
            {
              this->T24FenestraFrame_.set (r);
              continue;
            }
          }

          // T24FenestraPanes
          //
          if (n.name () == "T24FenestraPanes" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< T24FenestraPanes_type > r (
              T24FenestraPanes_traits::create (i, f, this));

            if (!this->T24FenestraPanes_)
            {
              this->T24FenestraPanes_.set (r);
              continue;
            }
          }

          // T24FenestraProdType
          //
          if (n.name () == "T24FenestraProdType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< T24FenestraProdType_type > r (
              T24FenestraProdType_traits::create (i, f, this));

            if (!this->T24FenestraProdType_)
            {
              this->T24FenestraProdType_.set (r);
              continue;
            }
          }

          // T24FenestraTint
          //
          if (n.name () == "T24FenestraTint" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< T24FenestraTint_type > r (
              T24FenestraTint_traits::create (i, f, this));

            if (!this->T24FenestraTint_)
            {
              this->T24FenestraTint_.set (r);
              continue;
            }
          }

          // T24GreenhouseGardenWindow
          //
          if (n.name () == "T24GreenhouseGardenWindow" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->T24GreenhouseGardenWindow_)
            {
              this->T24GreenhouseGardenWindow_.set (T24GreenhouseGardenWindow_traits::create (i, f, this));
              continue;
            }
          }

          // T24SHGCCenterOfGlass
          //
          if (n.name () == "T24SHGCCenterOfGlass" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->T24SHGCCenterOfGlass_)
            {
              this->T24SHGCCenterOfGlass_.set (T24SHGCCenterOfGlass_traits::create (i, f, this));
              continue;
            }
          }

          // T24FenestraSkyltCurb
          //
          if (n.name () == "T24FenestraSkyltCurb" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< T24FenestraSkyltCurb_type > r (
              T24FenestraSkyltCurb_traits::create (i, f, this));

            if (!this->T24FenestraSkyltCurb_)
            {
              this->T24FenestraSkyltCurb_.set (r);
              continue;
            }
          }

          // T24FenestraSkyltGlaze
          //
          if (n.name () == "T24FenestraSkyltGlaze" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< T24FenestraSkyltGlaze_type > r (
              T24FenestraSkyltGlaze_traits::create (i, f, this));

            if (!this->T24FenestraSkyltGlaze_)
            {
              this->T24FenestraSkyltGlaze_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile* SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimMaterialLayerSet_GlazingLayerSet_WindowDataFile (*this, f, c);
      }

      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile& SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      operator= (const SimMaterialLayerSet_GlazingLayerSet_WindowDataFile& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::ResourcesGeneral::SimMaterialLayerSet_GlazingLayerSet& > (*this) = x;
          this->SimMatLayerSet_Name_ = x.SimMatLayerSet_Name_;
          this->SimMatLayerSet_FileName_ = x.SimMatLayerSet_FileName_;
          this->T24AssmContext_ = x.T24AssmContext_;
          this->T24FenestraCertMethod_ = x.T24FenestraCertMethod_;
          this->T24Diffusing_ = x.T24Diffusing_;
          this->T24FenestraFrame_ = x.T24FenestraFrame_;
          this->T24FenestraPanes_ = x.T24FenestraPanes_;
          this->T24FenestraProdType_ = x.T24FenestraProdType_;
          this->T24FenestraTint_ = x.T24FenestraTint_;
          this->T24GreenhouseGardenWindow_ = x.T24GreenhouseGardenWindow_;
          this->T24SHGCCenterOfGlass_ = x.T24SHGCCenterOfGlass_;
          this->T24FenestraSkyltCurb_ = x.T24FenestraSkyltCurb_;
          this->T24FenestraSkyltGlaze_ = x.T24FenestraSkyltGlaze_;
        }

        return *this;
      }

      SimMaterialLayerSet_GlazingLayerSet_WindowDataFile::
      ~SimMaterialLayerSet_GlazingLayerSet_WindowDataFile ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

