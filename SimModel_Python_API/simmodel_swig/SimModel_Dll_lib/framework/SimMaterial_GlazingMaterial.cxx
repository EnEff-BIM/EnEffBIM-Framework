// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimMaterial_GlazingMaterial.hxx"

#include "doublelist.hxx"

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      // SimMaterial_GlazingMaterial
      // 

      const SimMaterial_GlazingMaterial::MatProp_MoistPeneDepth_Settings_Name_optional& SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_Name () const
      {
        return this->MatProp_MoistPeneDepth_Settings_Name_;
      }

      SimMaterial_GlazingMaterial::MatProp_MoistPeneDepth_Settings_Name_optional& SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_Name ()
      {
        return this->MatProp_MoistPeneDepth_Settings_Name_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_Name (const MatProp_MoistPeneDepth_Settings_Name_type& x)
      {
        this->MatProp_MoistPeneDepth_Settings_Name_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_Name (const MatProp_MoistPeneDepth_Settings_Name_optional& x)
      {
        this->MatProp_MoistPeneDepth_Settings_Name_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_Name (::std::auto_ptr< MatProp_MoistPeneDepth_Settings_Name_type > x)
      {
        this->MatProp_MoistPeneDepth_Settings_Name_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth_optional& SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth () const
      {
        return this->MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth_;
      }

      SimMaterial_GlazingMaterial::MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth_optional& SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth ()
      {
        return this->MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth (const MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth_type& x)
      {
        this->MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth (const MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth_optional& x)
      {
        this->MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth_ = x;
      }

      const SimMaterial_GlazingMaterial::MatProp_MoistPeneDepth_Settings_MoistEquaCoefA_optional& SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_MoistEquaCoefA () const
      {
        return this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefA_;
      }

      SimMaterial_GlazingMaterial::MatProp_MoistPeneDepth_Settings_MoistEquaCoefA_optional& SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_MoistEquaCoefA ()
      {
        return this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefA_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_MoistEquaCoefA (const MatProp_MoistPeneDepth_Settings_MoistEquaCoefA_type& x)
      {
        this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefA_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_MoistEquaCoefA (const MatProp_MoistPeneDepth_Settings_MoistEquaCoefA_optional& x)
      {
        this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefA_ = x;
      }

      const SimMaterial_GlazingMaterial::MatProp_MoistPeneDepth_Settings_MoistEquaCoefB_optional& SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_MoistEquaCoefB () const
      {
        return this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefB_;
      }

      SimMaterial_GlazingMaterial::MatProp_MoistPeneDepth_Settings_MoistEquaCoefB_optional& SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_MoistEquaCoefB ()
      {
        return this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefB_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_MoistEquaCoefB (const MatProp_MoistPeneDepth_Settings_MoistEquaCoefB_type& x)
      {
        this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefB_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_MoistEquaCoefB (const MatProp_MoistPeneDepth_Settings_MoistEquaCoefB_optional& x)
      {
        this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefB_ = x;
      }

      const SimMaterial_GlazingMaterial::MatProp_MoistPeneDepth_Settings_MoistEquaCoefC_optional& SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_MoistEquaCoefC () const
      {
        return this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefC_;
      }

      SimMaterial_GlazingMaterial::MatProp_MoistPeneDepth_Settings_MoistEquaCoefC_optional& SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_MoistEquaCoefC ()
      {
        return this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefC_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_MoistEquaCoefC (const MatProp_MoistPeneDepth_Settings_MoistEquaCoefC_type& x)
      {
        this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefC_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_MoistEquaCoefC (const MatProp_MoistPeneDepth_Settings_MoistEquaCoefC_optional& x)
      {
        this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefC_ = x;
      }

      const SimMaterial_GlazingMaterial::MatProp_MoistPeneDepth_Settings_MoistEquaCoefD_optional& SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_MoistEquaCoefD () const
      {
        return this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefD_;
      }

      SimMaterial_GlazingMaterial::MatProp_MoistPeneDepth_Settings_MoistEquaCoefD_optional& SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_MoistEquaCoefD ()
      {
        return this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefD_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_MoistEquaCoefD (const MatProp_MoistPeneDepth_Settings_MoistEquaCoefD_type& x)
      {
        this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefD_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_MoistPeneDepth_Settings_MoistEquaCoefD (const MatProp_MoistPeneDepth_Settings_MoistEquaCoefD_optional& x)
      {
        this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefD_ = x;
      }

      const SimMaterial_GlazingMaterial::MatProp_PhaseChange_Name_optional& SimMaterial_GlazingMaterial::
      MatProp_PhaseChange_Name () const
      {
        return this->MatProp_PhaseChange_Name_;
      }

      SimMaterial_GlazingMaterial::MatProp_PhaseChange_Name_optional& SimMaterial_GlazingMaterial::
      MatProp_PhaseChange_Name ()
      {
        return this->MatProp_PhaseChange_Name_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_PhaseChange_Name (const MatProp_PhaseChange_Name_type& x)
      {
        this->MatProp_PhaseChange_Name_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_PhaseChange_Name (const MatProp_PhaseChange_Name_optional& x)
      {
        this->MatProp_PhaseChange_Name_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_PhaseChange_Name (::std::auto_ptr< MatProp_PhaseChange_Name_type > x)
      {
        this->MatProp_PhaseChange_Name_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_PhaseChange_TempCoefForThermalCond_optional& SimMaterial_GlazingMaterial::
      MatProp_PhaseChange_TempCoefForThermalCond () const
      {
        return this->MatProp_PhaseChange_TempCoefForThermalCond_;
      }

      SimMaterial_GlazingMaterial::MatProp_PhaseChange_TempCoefForThermalCond_optional& SimMaterial_GlazingMaterial::
      MatProp_PhaseChange_TempCoefForThermalCond ()
      {
        return this->MatProp_PhaseChange_TempCoefForThermalCond_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_PhaseChange_TempCoefForThermalCond (const MatProp_PhaseChange_TempCoefForThermalCond_type& x)
      {
        this->MatProp_PhaseChange_TempCoefForThermalCond_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_PhaseChange_TempCoefForThermalCond (const MatProp_PhaseChange_TempCoefForThermalCond_optional& x)
      {
        this->MatProp_PhaseChange_TempCoefForThermalCond_ = x;
      }

      const SimMaterial_GlazingMaterial::MatProp_PhaseChange_Temp_1_16_optional& SimMaterial_GlazingMaterial::
      MatProp_PhaseChange_Temp_1_16 () const
      {
        return this->MatProp_PhaseChange_Temp_1_16_;
      }

      SimMaterial_GlazingMaterial::MatProp_PhaseChange_Temp_1_16_optional& SimMaterial_GlazingMaterial::
      MatProp_PhaseChange_Temp_1_16 ()
      {
        return this->MatProp_PhaseChange_Temp_1_16_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_PhaseChange_Temp_1_16 (const MatProp_PhaseChange_Temp_1_16_type& x)
      {
        this->MatProp_PhaseChange_Temp_1_16_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_PhaseChange_Temp_1_16 (const MatProp_PhaseChange_Temp_1_16_optional& x)
      {
        this->MatProp_PhaseChange_Temp_1_16_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_PhaseChange_Temp_1_16 (::std::auto_ptr< MatProp_PhaseChange_Temp_1_16_type > x)
      {
        this->MatProp_PhaseChange_Temp_1_16_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_PhaseChange_Enthalpy_1_16_optional& SimMaterial_GlazingMaterial::
      MatProp_PhaseChange_Enthalpy_1_16 () const
      {
        return this->MatProp_PhaseChange_Enthalpy_1_16_;
      }

      SimMaterial_GlazingMaterial::MatProp_PhaseChange_Enthalpy_1_16_optional& SimMaterial_GlazingMaterial::
      MatProp_PhaseChange_Enthalpy_1_16 ()
      {
        return this->MatProp_PhaseChange_Enthalpy_1_16_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_PhaseChange_Enthalpy_1_16 (const MatProp_PhaseChange_Enthalpy_1_16_type& x)
      {
        this->MatProp_PhaseChange_Enthalpy_1_16_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_PhaseChange_Enthalpy_1_16 (const MatProp_PhaseChange_Enthalpy_1_16_optional& x)
      {
        this->MatProp_PhaseChange_Enthalpy_1_16_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_PhaseChange_Enthalpy_1_16 (::std::auto_ptr< MatProp_PhaseChange_Enthalpy_1_16_type > x)
      {
        this->MatProp_PhaseChange_Enthalpy_1_16_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_VarThermCond_Name_optional& SimMaterial_GlazingMaterial::
      MatProp_VarThermCond_Name () const
      {
        return this->MatProp_VarThermCond_Name_;
      }

      SimMaterial_GlazingMaterial::MatProp_VarThermCond_Name_optional& SimMaterial_GlazingMaterial::
      MatProp_VarThermCond_Name ()
      {
        return this->MatProp_VarThermCond_Name_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_VarThermCond_Name (const MatProp_VarThermCond_Name_type& x)
      {
        this->MatProp_VarThermCond_Name_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_VarThermCond_Name (const MatProp_VarThermCond_Name_optional& x)
      {
        this->MatProp_VarThermCond_Name_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_VarThermCond_Name (::std::auto_ptr< MatProp_VarThermCond_Name_type > x)
      {
        this->MatProp_VarThermCond_Name_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_VarThermCond_Temp_1_10_optional& SimMaterial_GlazingMaterial::
      MatProp_VarThermCond_Temp_1_10 () const
      {
        return this->MatProp_VarThermCond_Temp_1_10_;
      }

      SimMaterial_GlazingMaterial::MatProp_VarThermCond_Temp_1_10_optional& SimMaterial_GlazingMaterial::
      MatProp_VarThermCond_Temp_1_10 ()
      {
        return this->MatProp_VarThermCond_Temp_1_10_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_VarThermCond_Temp_1_10 (const MatProp_VarThermCond_Temp_1_10_type& x)
      {
        this->MatProp_VarThermCond_Temp_1_10_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_VarThermCond_Temp_1_10 (const MatProp_VarThermCond_Temp_1_10_optional& x)
      {
        this->MatProp_VarThermCond_Temp_1_10_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_VarThermCond_Temp_1_10 (::std::auto_ptr< MatProp_VarThermCond_Temp_1_10_type > x)
      {
        this->MatProp_VarThermCond_Temp_1_10_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_VarThermCond_ThermalCond_1_10_optional& SimMaterial_GlazingMaterial::
      MatProp_VarThermCond_ThermalCond_1_10 () const
      {
        return this->MatProp_VarThermCond_ThermalCond_1_10_;
      }

      SimMaterial_GlazingMaterial::MatProp_VarThermCond_ThermalCond_1_10_optional& SimMaterial_GlazingMaterial::
      MatProp_VarThermCond_ThermalCond_1_10 ()
      {
        return this->MatProp_VarThermCond_ThermalCond_1_10_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_VarThermCond_ThermalCond_1_10 (const MatProp_VarThermCond_ThermalCond_1_10_type& x)
      {
        this->MatProp_VarThermCond_ThermalCond_1_10_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_VarThermCond_ThermalCond_1_10 (const MatProp_VarThermCond_ThermalCond_1_10_optional& x)
      {
        this->MatProp_VarThermCond_ThermalCond_1_10_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_VarThermCond_ThermalCond_1_10 (::std::auto_ptr< MatProp_VarThermCond_ThermalCond_1_10_type > x)
      {
        this->MatProp_VarThermCond_ThermalCond_1_10_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Settings_MaterialName_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Settings_MaterialName () const
      {
        return this->MatProp_Heat_MoistTrans_Settings_MaterialName_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Settings_MaterialName_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Settings_MaterialName ()
      {
        return this->MatProp_Heat_MoistTrans_Settings_MaterialName_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Settings_MaterialName (const MatProp_Heat_MoistTrans_Settings_MaterialName_type& x)
      {
        this->MatProp_Heat_MoistTrans_Settings_MaterialName_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Settings_MaterialName (const MatProp_Heat_MoistTrans_Settings_MaterialName_optional& x)
      {
        this->MatProp_Heat_MoistTrans_Settings_MaterialName_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Settings_MaterialName (::std::auto_ptr< MatProp_Heat_MoistTrans_Settings_MaterialName_type > x)
      {
        this->MatProp_Heat_MoistTrans_Settings_MaterialName_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Settings_Porosity_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Settings_Porosity () const
      {
        return this->MatProp_Heat_MoistTrans_Settings_Porosity_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Settings_Porosity_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Settings_Porosity ()
      {
        return this->MatProp_Heat_MoistTrans_Settings_Porosity_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Settings_Porosity (const MatProp_Heat_MoistTrans_Settings_Porosity_type& x)
      {
        this->MatProp_Heat_MoistTrans_Settings_Porosity_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Settings_Porosity (const MatProp_Heat_MoistTrans_Settings_Porosity_optional& x)
      {
        this->MatProp_Heat_MoistTrans_Settings_Porosity_ = x;
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Settings_InitWaterContRatio_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Settings_InitWaterContRatio () const
      {
        return this->MatProp_Heat_MoistTrans_Settings_InitWaterContRatio_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Settings_InitWaterContRatio_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Settings_InitWaterContRatio ()
      {
        return this->MatProp_Heat_MoistTrans_Settings_InitWaterContRatio_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Settings_InitWaterContRatio (const MatProp_Heat_MoistTrans_Settings_InitWaterContRatio_type& x)
      {
        this->MatProp_Heat_MoistTrans_Settings_InitWaterContRatio_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Settings_InitWaterContRatio (const MatProp_Heat_MoistTrans_Settings_InitWaterContRatio_optional& x)
      {
        this->MatProp_Heat_MoistTrans_Settings_InitWaterContRatio_ = x;
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_SorpIsothm_MaterialName_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_SorpIsothm_MaterialName () const
      {
        return this->MatProp_Heat_MoistTrans_SorpIsothm_MaterialName_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_SorpIsothm_MaterialName_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_SorpIsothm_MaterialName ()
      {
        return this->MatProp_Heat_MoistTrans_SorpIsothm_MaterialName_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_SorpIsothm_MaterialName (const MatProp_Heat_MoistTrans_SorpIsothm_MaterialName_type& x)
      {
        this->MatProp_Heat_MoistTrans_SorpIsothm_MaterialName_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_SorpIsothm_MaterialName (const MatProp_Heat_MoistTrans_SorpIsothm_MaterialName_optional& x)
      {
        this->MatProp_Heat_MoistTrans_SorpIsothm_MaterialName_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_SorpIsothm_MaterialName (::std::auto_ptr< MatProp_Heat_MoistTrans_SorpIsothm_MaterialName_type > x)
      {
        this->MatProp_Heat_MoistTrans_SorpIsothm_MaterialName_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords () const
      {
        return this->MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords ()
      {
        return this->MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords (const MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords_type& x)
      {
        this->MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords (const MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords_optional& x)
      {
        this->MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords_ = x;
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25 () const
      {
        return this->MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25 ()
      {
        return this->MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25 (const MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25_type& x)
      {
        this->MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25 (const MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25_optional& x)
      {
        this->MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25 (::std::auto_ptr< MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25_type > x)
      {
        this->MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25 () const
      {
        return this->MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25 ()
      {
        return this->MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25 (const MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25_type& x)
      {
        this->MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25 (const MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25_optional& x)
      {
        this->MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25 (::std::auto_ptr< MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25_type > x)
      {
        this->MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Suction_MaterialName_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Suction_MaterialName () const
      {
        return this->MatProp_Heat_MoistTrans_Suction_MaterialName_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Suction_MaterialName_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Suction_MaterialName ()
      {
        return this->MatProp_Heat_MoistTrans_Suction_MaterialName_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Suction_MaterialName (const MatProp_Heat_MoistTrans_Suction_MaterialName_type& x)
      {
        this->MatProp_Heat_MoistTrans_Suction_MaterialName_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Suction_MaterialName (const MatProp_Heat_MoistTrans_Suction_MaterialName_optional& x)
      {
        this->MatProp_Heat_MoistTrans_Suction_MaterialName_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Suction_MaterialName (::std::auto_ptr< MatProp_Heat_MoistTrans_Suction_MaterialName_type > x)
      {
        this->MatProp_Heat_MoistTrans_Suction_MaterialName_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Suction_NumSuctionPoints_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Suction_NumSuctionPoints () const
      {
        return this->MatProp_Heat_MoistTrans_Suction_NumSuctionPoints_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Suction_NumSuctionPoints_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Suction_NumSuctionPoints ()
      {
        return this->MatProp_Heat_MoistTrans_Suction_NumSuctionPoints_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Suction_NumSuctionPoints (const MatProp_Heat_MoistTrans_Suction_NumSuctionPoints_type& x)
      {
        this->MatProp_Heat_MoistTrans_Suction_NumSuctionPoints_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Suction_NumSuctionPoints (const MatProp_Heat_MoistTrans_Suction_NumSuctionPoints_optional& x)
      {
        this->MatProp_Heat_MoistTrans_Suction_NumSuctionPoints_ = x;
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Suction_MoistCont_1_25_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Suction_MoistCont_1_25 () const
      {
        return this->MatProp_Heat_MoistTrans_Suction_MoistCont_1_25_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Suction_MoistCont_1_25_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Suction_MoistCont_1_25 ()
      {
        return this->MatProp_Heat_MoistTrans_Suction_MoistCont_1_25_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Suction_MoistCont_1_25 (const MatProp_Heat_MoistTrans_Suction_MoistCont_1_25_type& x)
      {
        this->MatProp_Heat_MoistTrans_Suction_MoistCont_1_25_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Suction_MoistCont_1_25 (const MatProp_Heat_MoistTrans_Suction_MoistCont_1_25_optional& x)
      {
        this->MatProp_Heat_MoistTrans_Suction_MoistCont_1_25_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Suction_MoistCont_1_25 (::std::auto_ptr< MatProp_Heat_MoistTrans_Suction_MoistCont_1_25_type > x)
      {
        this->MatProp_Heat_MoistTrans_Suction_MoistCont_1_25_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25 () const
      {
        return this->MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25 ()
      {
        return this->MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25 (const MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25_type& x)
      {
        this->MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25 (const MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25_optional& x)
      {
        this->MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25 (::std::auto_ptr< MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25_type > x)
      {
        this->MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_ReDistrib_MaterialName_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ReDistrib_MaterialName () const
      {
        return this->MatProp_Heat_MoistTrans_ReDistrib_MaterialName_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_ReDistrib_MaterialName_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ReDistrib_MaterialName ()
      {
        return this->MatProp_Heat_MoistTrans_ReDistrib_MaterialName_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ReDistrib_MaterialName (const MatProp_Heat_MoistTrans_ReDistrib_MaterialName_type& x)
      {
        this->MatProp_Heat_MoistTrans_ReDistrib_MaterialName_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ReDistrib_MaterialName (const MatProp_Heat_MoistTrans_ReDistrib_MaterialName_optional& x)
      {
        this->MatProp_Heat_MoistTrans_ReDistrib_MaterialName_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ReDistrib_MaterialName (::std::auto_ptr< MatProp_Heat_MoistTrans_ReDistrib_MaterialName_type > x)
      {
        this->MatProp_Heat_MoistTrans_ReDistrib_MaterialName_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints () const
      {
        return this->MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints ()
      {
        return this->MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints (const MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints_type& x)
      {
        this->MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints (const MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints_optional& x)
      {
        this->MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints_ = x;
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25 () const
      {
        return this->MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25 ()
      {
        return this->MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25 (const MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25_type& x)
      {
        this->MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25 (const MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25_optional& x)
      {
        this->MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25 (::std::auto_ptr< MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25_type > x)
      {
        this->MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25 () const
      {
        return this->MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25 ()
      {
        return this->MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25 (const MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25_type& x)
      {
        this->MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25 (const MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25_optional& x)
      {
        this->MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25 (::std::auto_ptr< MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25_type > x)
      {
        this->MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Diffusion_MaterialName_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Diffusion_MaterialName () const
      {
        return this->MatProp_Heat_MoistTrans_Diffusion_MaterialName_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Diffusion_MaterialName_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Diffusion_MaterialName ()
      {
        return this->MatProp_Heat_MoistTrans_Diffusion_MaterialName_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Diffusion_MaterialName (const MatProp_Heat_MoistTrans_Diffusion_MaterialName_type& x)
      {
        this->MatProp_Heat_MoistTrans_Diffusion_MaterialName_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Diffusion_MaterialName (const MatProp_Heat_MoistTrans_Diffusion_MaterialName_optional& x)
      {
        this->MatProp_Heat_MoistTrans_Diffusion_MaterialName_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Diffusion_MaterialName (::std::auto_ptr< MatProp_Heat_MoistTrans_Diffusion_MaterialName_type > x)
      {
        this->MatProp_Heat_MoistTrans_Diffusion_MaterialName_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Diffusion_NumDataPairs_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Diffusion_NumDataPairs () const
      {
        return this->MatProp_Heat_MoistTrans_Diffusion_NumDataPairs_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Diffusion_NumDataPairs_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Diffusion_NumDataPairs ()
      {
        return this->MatProp_Heat_MoistTrans_Diffusion_NumDataPairs_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Diffusion_NumDataPairs (const MatProp_Heat_MoistTrans_Diffusion_NumDataPairs_type& x)
      {
        this->MatProp_Heat_MoistTrans_Diffusion_NumDataPairs_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Diffusion_NumDataPairs (const MatProp_Heat_MoistTrans_Diffusion_NumDataPairs_optional& x)
      {
        this->MatProp_Heat_MoistTrans_Diffusion_NumDataPairs_ = x;
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25 () const
      {
        return this->MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25 ()
      {
        return this->MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25 (const MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25_type& x)
      {
        this->MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25 (const MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25_optional& x)
      {
        this->MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25 (::std::auto_ptr< MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25_type > x)
      {
        this->MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25 () const
      {
        return this->MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25 ()
      {
        return this->MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25 (const MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25_type& x)
      {
        this->MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25 (const MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25_optional& x)
      {
        this->MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25 (::std::auto_ptr< MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25_type > x)
      {
        this->MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_ThermCond_MaterialName_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ThermCond_MaterialName () const
      {
        return this->MatProp_Heat_MoistTrans_ThermCond_MaterialName_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_ThermCond_MaterialName_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ThermCond_MaterialName ()
      {
        return this->MatProp_Heat_MoistTrans_ThermCond_MaterialName_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ThermCond_MaterialName (const MatProp_Heat_MoistTrans_ThermCond_MaterialName_type& x)
      {
        this->MatProp_Heat_MoistTrans_ThermCond_MaterialName_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ThermCond_MaterialName (const MatProp_Heat_MoistTrans_ThermCond_MaterialName_optional& x)
      {
        this->MatProp_Heat_MoistTrans_ThermCond_MaterialName_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ThermCond_MaterialName (::std::auto_ptr< MatProp_Heat_MoistTrans_ThermCond_MaterialName_type > x)
      {
        this->MatProp_Heat_MoistTrans_ThermCond_MaterialName_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords () const
      {
        return this->MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords ()
      {
        return this->MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords (const MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords_type& x)
      {
        this->MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords (const MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords_optional& x)
      {
        this->MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords_ = x;
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25 () const
      {
        return this->MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25 ()
      {
        return this->MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25 (const MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25_type& x)
      {
        this->MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25 (const MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25_optional& x)
      {
        this->MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25 (::std::auto_ptr< MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25_type > x)
      {
        this->MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25_.set (x);
      }

      const SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25 () const
      {
        return this->MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25_;
      }

      SimMaterial_GlazingMaterial::MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25_optional& SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25 ()
      {
        return this->MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25_;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25 (const MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25_type& x)
      {
        this->MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25_.set (x);
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25 (const MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25_optional& x)
      {
        this->MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25_ = x;
      }

      void SimMaterial_GlazingMaterial::
      MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25 (::std::auto_ptr< MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25_type > x)
      {
        this->MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      // SimMaterial_GlazingMaterial
      //

      SimMaterial_GlazingMaterial::
      SimMaterial_GlazingMaterial ()
      : ::schema::simxml::ResourcesGeneral::SimMaterial (),
        MatProp_MoistPeneDepth_Settings_Name_ (this),
        MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth_ (this),
        MatProp_MoistPeneDepth_Settings_MoistEquaCoefA_ (this),
        MatProp_MoistPeneDepth_Settings_MoistEquaCoefB_ (this),
        MatProp_MoistPeneDepth_Settings_MoistEquaCoefC_ (this),
        MatProp_MoistPeneDepth_Settings_MoistEquaCoefD_ (this),
        MatProp_PhaseChange_Name_ (this),
        MatProp_PhaseChange_TempCoefForThermalCond_ (this),
        MatProp_PhaseChange_Temp_1_16_ (this),
        MatProp_PhaseChange_Enthalpy_1_16_ (this),
        MatProp_VarThermCond_Name_ (this),
        MatProp_VarThermCond_Temp_1_10_ (this),
        MatProp_VarThermCond_ThermalCond_1_10_ (this),
        MatProp_Heat_MoistTrans_Settings_MaterialName_ (this),
        MatProp_Heat_MoistTrans_Settings_Porosity_ (this),
        MatProp_Heat_MoistTrans_Settings_InitWaterContRatio_ (this),
        MatProp_Heat_MoistTrans_SorpIsothm_MaterialName_ (this),
        MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords_ (this),
        MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25_ (this),
        MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25_ (this),
        MatProp_Heat_MoistTrans_Suction_MaterialName_ (this),
        MatProp_Heat_MoistTrans_Suction_NumSuctionPoints_ (this),
        MatProp_Heat_MoistTrans_Suction_MoistCont_1_25_ (this),
        MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25_ (this),
        MatProp_Heat_MoistTrans_ReDistrib_MaterialName_ (this),
        MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints_ (this),
        MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25_ (this),
        MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25_ (this),
        MatProp_Heat_MoistTrans_Diffusion_MaterialName_ (this),
        MatProp_Heat_MoistTrans_Diffusion_NumDataPairs_ (this),
        MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25_ (this),
        MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25_ (this),
        MatProp_Heat_MoistTrans_ThermCond_MaterialName_ (this),
        MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords_ (this),
        MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25_ (this),
        MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25_ (this)
      {
      }

      SimMaterial_GlazingMaterial::
      SimMaterial_GlazingMaterial (const RefId_type& RefId)
      : ::schema::simxml::ResourcesGeneral::SimMaterial (RefId),
        MatProp_MoistPeneDepth_Settings_Name_ (this),
        MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth_ (this),
        MatProp_MoistPeneDepth_Settings_MoistEquaCoefA_ (this),
        MatProp_MoistPeneDepth_Settings_MoistEquaCoefB_ (this),
        MatProp_MoistPeneDepth_Settings_MoistEquaCoefC_ (this),
        MatProp_MoistPeneDepth_Settings_MoistEquaCoefD_ (this),
        MatProp_PhaseChange_Name_ (this),
        MatProp_PhaseChange_TempCoefForThermalCond_ (this),
        MatProp_PhaseChange_Temp_1_16_ (this),
        MatProp_PhaseChange_Enthalpy_1_16_ (this),
        MatProp_VarThermCond_Name_ (this),
        MatProp_VarThermCond_Temp_1_10_ (this),
        MatProp_VarThermCond_ThermalCond_1_10_ (this),
        MatProp_Heat_MoistTrans_Settings_MaterialName_ (this),
        MatProp_Heat_MoistTrans_Settings_Porosity_ (this),
        MatProp_Heat_MoistTrans_Settings_InitWaterContRatio_ (this),
        MatProp_Heat_MoistTrans_SorpIsothm_MaterialName_ (this),
        MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords_ (this),
        MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25_ (this),
        MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25_ (this),
        MatProp_Heat_MoistTrans_Suction_MaterialName_ (this),
        MatProp_Heat_MoistTrans_Suction_NumSuctionPoints_ (this),
        MatProp_Heat_MoistTrans_Suction_MoistCont_1_25_ (this),
        MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25_ (this),
        MatProp_Heat_MoistTrans_ReDistrib_MaterialName_ (this),
        MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints_ (this),
        MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25_ (this),
        MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25_ (this),
        MatProp_Heat_MoistTrans_Diffusion_MaterialName_ (this),
        MatProp_Heat_MoistTrans_Diffusion_NumDataPairs_ (this),
        MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25_ (this),
        MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25_ (this),
        MatProp_Heat_MoistTrans_ThermCond_MaterialName_ (this),
        MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords_ (this),
        MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25_ (this),
        MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25_ (this)
      {
      }

      SimMaterial_GlazingMaterial::
      SimMaterial_GlazingMaterial (const SimMaterial_GlazingMaterial& x,
                                   ::xml_schema::flags f,
                                   ::xml_schema::container* c)
      : ::schema::simxml::ResourcesGeneral::SimMaterial (x, f, c),
        MatProp_MoistPeneDepth_Settings_Name_ (x.MatProp_MoistPeneDepth_Settings_Name_, f, this),
        MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth_ (x.MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth_, f, this),
        MatProp_MoistPeneDepth_Settings_MoistEquaCoefA_ (x.MatProp_MoistPeneDepth_Settings_MoistEquaCoefA_, f, this),
        MatProp_MoistPeneDepth_Settings_MoistEquaCoefB_ (x.MatProp_MoistPeneDepth_Settings_MoistEquaCoefB_, f, this),
        MatProp_MoistPeneDepth_Settings_MoistEquaCoefC_ (x.MatProp_MoistPeneDepth_Settings_MoistEquaCoefC_, f, this),
        MatProp_MoistPeneDepth_Settings_MoistEquaCoefD_ (x.MatProp_MoistPeneDepth_Settings_MoistEquaCoefD_, f, this),
        MatProp_PhaseChange_Name_ (x.MatProp_PhaseChange_Name_, f, this),
        MatProp_PhaseChange_TempCoefForThermalCond_ (x.MatProp_PhaseChange_TempCoefForThermalCond_, f, this),
        MatProp_PhaseChange_Temp_1_16_ (x.MatProp_PhaseChange_Temp_1_16_, f, this),
        MatProp_PhaseChange_Enthalpy_1_16_ (x.MatProp_PhaseChange_Enthalpy_1_16_, f, this),
        MatProp_VarThermCond_Name_ (x.MatProp_VarThermCond_Name_, f, this),
        MatProp_VarThermCond_Temp_1_10_ (x.MatProp_VarThermCond_Temp_1_10_, f, this),
        MatProp_VarThermCond_ThermalCond_1_10_ (x.MatProp_VarThermCond_ThermalCond_1_10_, f, this),
        MatProp_Heat_MoistTrans_Settings_MaterialName_ (x.MatProp_Heat_MoistTrans_Settings_MaterialName_, f, this),
        MatProp_Heat_MoistTrans_Settings_Porosity_ (x.MatProp_Heat_MoistTrans_Settings_Porosity_, f, this),
        MatProp_Heat_MoistTrans_Settings_InitWaterContRatio_ (x.MatProp_Heat_MoistTrans_Settings_InitWaterContRatio_, f, this),
        MatProp_Heat_MoistTrans_SorpIsothm_MaterialName_ (x.MatProp_Heat_MoistTrans_SorpIsothm_MaterialName_, f, this),
        MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords_ (x.MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords_, f, this),
        MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25_ (x.MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25_, f, this),
        MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25_ (x.MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25_, f, this),
        MatProp_Heat_MoistTrans_Suction_MaterialName_ (x.MatProp_Heat_MoistTrans_Suction_MaterialName_, f, this),
        MatProp_Heat_MoistTrans_Suction_NumSuctionPoints_ (x.MatProp_Heat_MoistTrans_Suction_NumSuctionPoints_, f, this),
        MatProp_Heat_MoistTrans_Suction_MoistCont_1_25_ (x.MatProp_Heat_MoistTrans_Suction_MoistCont_1_25_, f, this),
        MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25_ (x.MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25_, f, this),
        MatProp_Heat_MoistTrans_ReDistrib_MaterialName_ (x.MatProp_Heat_MoistTrans_ReDistrib_MaterialName_, f, this),
        MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints_ (x.MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints_, f, this),
        MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25_ (x.MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25_, f, this),
        MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25_ (x.MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25_, f, this),
        MatProp_Heat_MoistTrans_Diffusion_MaterialName_ (x.MatProp_Heat_MoistTrans_Diffusion_MaterialName_, f, this),
        MatProp_Heat_MoistTrans_Diffusion_NumDataPairs_ (x.MatProp_Heat_MoistTrans_Diffusion_NumDataPairs_, f, this),
        MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25_ (x.MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25_, f, this),
        MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25_ (x.MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25_, f, this),
        MatProp_Heat_MoistTrans_ThermCond_MaterialName_ (x.MatProp_Heat_MoistTrans_ThermCond_MaterialName_, f, this),
        MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords_ (x.MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords_, f, this),
        MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25_ (x.MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25_, f, this),
        MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25_ (x.MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25_, f, this)
      {
      }

      SimMaterial_GlazingMaterial::
      SimMaterial_GlazingMaterial (const ::xercesc::DOMElement& e,
                                   ::xml_schema::flags f,
                                   ::xml_schema::container* c)
      : ::schema::simxml::ResourcesGeneral::SimMaterial (e, f | ::xml_schema::flags::base, c),
        MatProp_MoistPeneDepth_Settings_Name_ (this),
        MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth_ (this),
        MatProp_MoistPeneDepth_Settings_MoistEquaCoefA_ (this),
        MatProp_MoistPeneDepth_Settings_MoistEquaCoefB_ (this),
        MatProp_MoistPeneDepth_Settings_MoistEquaCoefC_ (this),
        MatProp_MoistPeneDepth_Settings_MoistEquaCoefD_ (this),
        MatProp_PhaseChange_Name_ (this),
        MatProp_PhaseChange_TempCoefForThermalCond_ (this),
        MatProp_PhaseChange_Temp_1_16_ (this),
        MatProp_PhaseChange_Enthalpy_1_16_ (this),
        MatProp_VarThermCond_Name_ (this),
        MatProp_VarThermCond_Temp_1_10_ (this),
        MatProp_VarThermCond_ThermalCond_1_10_ (this),
        MatProp_Heat_MoistTrans_Settings_MaterialName_ (this),
        MatProp_Heat_MoistTrans_Settings_Porosity_ (this),
        MatProp_Heat_MoistTrans_Settings_InitWaterContRatio_ (this),
        MatProp_Heat_MoistTrans_SorpIsothm_MaterialName_ (this),
        MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords_ (this),
        MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25_ (this),
        MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25_ (this),
        MatProp_Heat_MoistTrans_Suction_MaterialName_ (this),
        MatProp_Heat_MoistTrans_Suction_NumSuctionPoints_ (this),
        MatProp_Heat_MoistTrans_Suction_MoistCont_1_25_ (this),
        MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25_ (this),
        MatProp_Heat_MoistTrans_ReDistrib_MaterialName_ (this),
        MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints_ (this),
        MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25_ (this),
        MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25_ (this),
        MatProp_Heat_MoistTrans_Diffusion_MaterialName_ (this),
        MatProp_Heat_MoistTrans_Diffusion_NumDataPairs_ (this),
        MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25_ (this),
        MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25_ (this),
        MatProp_Heat_MoistTrans_ThermCond_MaterialName_ (this),
        MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords_ (this),
        MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25_ (this),
        MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimMaterial_GlazingMaterial::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::ResourcesGeneral::SimMaterial::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // MatProp_MoistPeneDepth_Settings_Name
          //
          if (n.name () == "MatProp_MoistPeneDepth_Settings_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_MoistPeneDepth_Settings_Name_type > r (
              MatProp_MoistPeneDepth_Settings_Name_traits::create (i, f, this));

            if (!this->MatProp_MoistPeneDepth_Settings_Name_)
            {
              this->MatProp_MoistPeneDepth_Settings_Name_.set (r);
              continue;
            }
          }

          // MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth
          //
          if (n.name () == "MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth_)
            {
              this->MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth_.set (MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth_traits::create (i, f, this));
              continue;
            }
          }

          // MatProp_MoistPeneDepth_Settings_MoistEquaCoefA
          //
          if (n.name () == "MatProp_MoistPeneDepth_Settings_MoistEquaCoefA" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefA_)
            {
              this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefA_.set (MatProp_MoistPeneDepth_Settings_MoistEquaCoefA_traits::create (i, f, this));
              continue;
            }
          }

          // MatProp_MoistPeneDepth_Settings_MoistEquaCoefB
          //
          if (n.name () == "MatProp_MoistPeneDepth_Settings_MoistEquaCoefB" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefB_)
            {
              this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefB_.set (MatProp_MoistPeneDepth_Settings_MoistEquaCoefB_traits::create (i, f, this));
              continue;
            }
          }

          // MatProp_MoistPeneDepth_Settings_MoistEquaCoefC
          //
          if (n.name () == "MatProp_MoistPeneDepth_Settings_MoistEquaCoefC" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefC_)
            {
              this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefC_.set (MatProp_MoistPeneDepth_Settings_MoistEquaCoefC_traits::create (i, f, this));
              continue;
            }
          }

          // MatProp_MoistPeneDepth_Settings_MoistEquaCoefD
          //
          if (n.name () == "MatProp_MoistPeneDepth_Settings_MoistEquaCoefD" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefD_)
            {
              this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefD_.set (MatProp_MoistPeneDepth_Settings_MoistEquaCoefD_traits::create (i, f, this));
              continue;
            }
          }

          // MatProp_PhaseChange_Name
          //
          if (n.name () == "MatProp_PhaseChange_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_PhaseChange_Name_type > r (
              MatProp_PhaseChange_Name_traits::create (i, f, this));

            if (!this->MatProp_PhaseChange_Name_)
            {
              this->MatProp_PhaseChange_Name_.set (r);
              continue;
            }
          }

          // MatProp_PhaseChange_TempCoefForThermalCond
          //
          if (n.name () == "MatProp_PhaseChange_TempCoefForThermalCond" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->MatProp_PhaseChange_TempCoefForThermalCond_)
            {
              this->MatProp_PhaseChange_TempCoefForThermalCond_.set (MatProp_PhaseChange_TempCoefForThermalCond_traits::create (i, f, this));
              continue;
            }
          }

          // MatProp_PhaseChange_Temp_1_16
          //
          if (n.name () == "MatProp_PhaseChange_Temp_1_16" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_PhaseChange_Temp_1_16_type > r (
              MatProp_PhaseChange_Temp_1_16_traits::create (i, f, this));

            if (!this->MatProp_PhaseChange_Temp_1_16_)
            {
              this->MatProp_PhaseChange_Temp_1_16_.set (r);
              continue;
            }
          }

          // MatProp_PhaseChange_Enthalpy_1_16
          //
          if (n.name () == "MatProp_PhaseChange_Enthalpy_1_16" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_PhaseChange_Enthalpy_1_16_type > r (
              MatProp_PhaseChange_Enthalpy_1_16_traits::create (i, f, this));

            if (!this->MatProp_PhaseChange_Enthalpy_1_16_)
            {
              this->MatProp_PhaseChange_Enthalpy_1_16_.set (r);
              continue;
            }
          }

          // MatProp_VarThermCond_Name
          //
          if (n.name () == "MatProp_VarThermCond_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_VarThermCond_Name_type > r (
              MatProp_VarThermCond_Name_traits::create (i, f, this));

            if (!this->MatProp_VarThermCond_Name_)
            {
              this->MatProp_VarThermCond_Name_.set (r);
              continue;
            }
          }

          // MatProp_VarThermCond_Temp_1_10
          //
          if (n.name () == "MatProp_VarThermCond_Temp_1_10" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_VarThermCond_Temp_1_10_type > r (
              MatProp_VarThermCond_Temp_1_10_traits::create (i, f, this));

            if (!this->MatProp_VarThermCond_Temp_1_10_)
            {
              this->MatProp_VarThermCond_Temp_1_10_.set (r);
              continue;
            }
          }

          // MatProp_VarThermCond_ThermalCond_1_10
          //
          if (n.name () == "MatProp_VarThermCond_ThermalCond_1_10" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_VarThermCond_ThermalCond_1_10_type > r (
              MatProp_VarThermCond_ThermalCond_1_10_traits::create (i, f, this));

            if (!this->MatProp_VarThermCond_ThermalCond_1_10_)
            {
              this->MatProp_VarThermCond_ThermalCond_1_10_.set (r);
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_Settings_MaterialName
          //
          if (n.name () == "MatProp_Heat_MoistTrans_Settings_MaterialName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_Heat_MoistTrans_Settings_MaterialName_type > r (
              MatProp_Heat_MoistTrans_Settings_MaterialName_traits::create (i, f, this));

            if (!this->MatProp_Heat_MoistTrans_Settings_MaterialName_)
            {
              this->MatProp_Heat_MoistTrans_Settings_MaterialName_.set (r);
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_Settings_Porosity
          //
          if (n.name () == "MatProp_Heat_MoistTrans_Settings_Porosity" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->MatProp_Heat_MoistTrans_Settings_Porosity_)
            {
              this->MatProp_Heat_MoistTrans_Settings_Porosity_.set (MatProp_Heat_MoistTrans_Settings_Porosity_traits::create (i, f, this));
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_Settings_InitWaterContRatio
          //
          if (n.name () == "MatProp_Heat_MoistTrans_Settings_InitWaterContRatio" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->MatProp_Heat_MoistTrans_Settings_InitWaterContRatio_)
            {
              this->MatProp_Heat_MoistTrans_Settings_InitWaterContRatio_.set (MatProp_Heat_MoistTrans_Settings_InitWaterContRatio_traits::create (i, f, this));
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_SorpIsothm_MaterialName
          //
          if (n.name () == "MatProp_Heat_MoistTrans_SorpIsothm_MaterialName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_Heat_MoistTrans_SorpIsothm_MaterialName_type > r (
              MatProp_Heat_MoistTrans_SorpIsothm_MaterialName_traits::create (i, f, this));

            if (!this->MatProp_Heat_MoistTrans_SorpIsothm_MaterialName_)
            {
              this->MatProp_Heat_MoistTrans_SorpIsothm_MaterialName_.set (r);
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords
          //
          if (n.name () == "MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords_)
            {
              this->MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords_.set (MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords_traits::create (i, f, this));
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25
          //
          if (n.name () == "MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25_type > r (
              MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25_traits::create (i, f, this));

            if (!this->MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25_)
            {
              this->MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25_.set (r);
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25
          //
          if (n.name () == "MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25_type > r (
              MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25_traits::create (i, f, this));

            if (!this->MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25_)
            {
              this->MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25_.set (r);
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_Suction_MaterialName
          //
          if (n.name () == "MatProp_Heat_MoistTrans_Suction_MaterialName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_Heat_MoistTrans_Suction_MaterialName_type > r (
              MatProp_Heat_MoistTrans_Suction_MaterialName_traits::create (i, f, this));

            if (!this->MatProp_Heat_MoistTrans_Suction_MaterialName_)
            {
              this->MatProp_Heat_MoistTrans_Suction_MaterialName_.set (r);
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_Suction_NumSuctionPoints
          //
          if (n.name () == "MatProp_Heat_MoistTrans_Suction_NumSuctionPoints" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->MatProp_Heat_MoistTrans_Suction_NumSuctionPoints_)
            {
              this->MatProp_Heat_MoistTrans_Suction_NumSuctionPoints_.set (MatProp_Heat_MoistTrans_Suction_NumSuctionPoints_traits::create (i, f, this));
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_Suction_MoistCont_1_25
          //
          if (n.name () == "MatProp_Heat_MoistTrans_Suction_MoistCont_1_25" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_Heat_MoistTrans_Suction_MoistCont_1_25_type > r (
              MatProp_Heat_MoistTrans_Suction_MoistCont_1_25_traits::create (i, f, this));

            if (!this->MatProp_Heat_MoistTrans_Suction_MoistCont_1_25_)
            {
              this->MatProp_Heat_MoistTrans_Suction_MoistCont_1_25_.set (r);
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25
          //
          if (n.name () == "MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25_type > r (
              MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25_traits::create (i, f, this));

            if (!this->MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25_)
            {
              this->MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25_.set (r);
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_ReDistrib_MaterialName
          //
          if (n.name () == "MatProp_Heat_MoistTrans_ReDistrib_MaterialName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_Heat_MoistTrans_ReDistrib_MaterialName_type > r (
              MatProp_Heat_MoistTrans_ReDistrib_MaterialName_traits::create (i, f, this));

            if (!this->MatProp_Heat_MoistTrans_ReDistrib_MaterialName_)
            {
              this->MatProp_Heat_MoistTrans_ReDistrib_MaterialName_.set (r);
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints
          //
          if (n.name () == "MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints_)
            {
              this->MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints_.set (MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints_traits::create (i, f, this));
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25
          //
          if (n.name () == "MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25_type > r (
              MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25_traits::create (i, f, this));

            if (!this->MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25_)
            {
              this->MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25_.set (r);
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25
          //
          if (n.name () == "MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25_type > r (
              MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25_traits::create (i, f, this));

            if (!this->MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25_)
            {
              this->MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25_.set (r);
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_Diffusion_MaterialName
          //
          if (n.name () == "MatProp_Heat_MoistTrans_Diffusion_MaterialName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_Heat_MoistTrans_Diffusion_MaterialName_type > r (
              MatProp_Heat_MoistTrans_Diffusion_MaterialName_traits::create (i, f, this));

            if (!this->MatProp_Heat_MoistTrans_Diffusion_MaterialName_)
            {
              this->MatProp_Heat_MoistTrans_Diffusion_MaterialName_.set (r);
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_Diffusion_NumDataPairs
          //
          if (n.name () == "MatProp_Heat_MoistTrans_Diffusion_NumDataPairs" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->MatProp_Heat_MoistTrans_Diffusion_NumDataPairs_)
            {
              this->MatProp_Heat_MoistTrans_Diffusion_NumDataPairs_.set (MatProp_Heat_MoistTrans_Diffusion_NumDataPairs_traits::create (i, f, this));
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25
          //
          if (n.name () == "MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25_type > r (
              MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25_traits::create (i, f, this));

            if (!this->MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25_)
            {
              this->MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25_.set (r);
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25
          //
          if (n.name () == "MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25_type > r (
              MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25_traits::create (i, f, this));

            if (!this->MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25_)
            {
              this->MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25_.set (r);
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_ThermCond_MaterialName
          //
          if (n.name () == "MatProp_Heat_MoistTrans_ThermCond_MaterialName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_Heat_MoistTrans_ThermCond_MaterialName_type > r (
              MatProp_Heat_MoistTrans_ThermCond_MaterialName_traits::create (i, f, this));

            if (!this->MatProp_Heat_MoistTrans_ThermCond_MaterialName_)
            {
              this->MatProp_Heat_MoistTrans_ThermCond_MaterialName_.set (r);
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords
          //
          if (n.name () == "MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords_)
            {
              this->MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords_.set (MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords_traits::create (i, f, this));
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25
          //
          if (n.name () == "MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25_type > r (
              MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25_traits::create (i, f, this));

            if (!this->MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25_)
            {
              this->MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25_.set (r);
              continue;
            }
          }

          // MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25
          //
          if (n.name () == "MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25_type > r (
              MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25_traits::create (i, f, this));

            if (!this->MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25_)
            {
              this->MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimMaterial_GlazingMaterial* SimMaterial_GlazingMaterial::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimMaterial_GlazingMaterial (*this, f, c);
      }

      SimMaterial_GlazingMaterial& SimMaterial_GlazingMaterial::
      operator= (const SimMaterial_GlazingMaterial& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::ResourcesGeneral::SimMaterial& > (*this) = x;
          this->MatProp_MoistPeneDepth_Settings_Name_ = x.MatProp_MoistPeneDepth_Settings_Name_;
          this->MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth_ = x.MatProp_MoistPeneDepth_Settings_MoistPenetrationDepth_;
          this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefA_ = x.MatProp_MoistPeneDepth_Settings_MoistEquaCoefA_;
          this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefB_ = x.MatProp_MoistPeneDepth_Settings_MoistEquaCoefB_;
          this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefC_ = x.MatProp_MoistPeneDepth_Settings_MoistEquaCoefC_;
          this->MatProp_MoistPeneDepth_Settings_MoistEquaCoefD_ = x.MatProp_MoistPeneDepth_Settings_MoistEquaCoefD_;
          this->MatProp_PhaseChange_Name_ = x.MatProp_PhaseChange_Name_;
          this->MatProp_PhaseChange_TempCoefForThermalCond_ = x.MatProp_PhaseChange_TempCoefForThermalCond_;
          this->MatProp_PhaseChange_Temp_1_16_ = x.MatProp_PhaseChange_Temp_1_16_;
          this->MatProp_PhaseChange_Enthalpy_1_16_ = x.MatProp_PhaseChange_Enthalpy_1_16_;
          this->MatProp_VarThermCond_Name_ = x.MatProp_VarThermCond_Name_;
          this->MatProp_VarThermCond_Temp_1_10_ = x.MatProp_VarThermCond_Temp_1_10_;
          this->MatProp_VarThermCond_ThermalCond_1_10_ = x.MatProp_VarThermCond_ThermalCond_1_10_;
          this->MatProp_Heat_MoistTrans_Settings_MaterialName_ = x.MatProp_Heat_MoistTrans_Settings_MaterialName_;
          this->MatProp_Heat_MoistTrans_Settings_Porosity_ = x.MatProp_Heat_MoistTrans_Settings_Porosity_;
          this->MatProp_Heat_MoistTrans_Settings_InitWaterContRatio_ = x.MatProp_Heat_MoistTrans_Settings_InitWaterContRatio_;
          this->MatProp_Heat_MoistTrans_SorpIsothm_MaterialName_ = x.MatProp_Heat_MoistTrans_SorpIsothm_MaterialName_;
          this->MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords_ = x.MatProp_Heat_MoistTrans_SorpIsothm_NumothermCoords_;
          this->MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25_ = x.MatProp_Heat_MoistTrans_SorpIsothm_RelHumidFract_1_25_;
          this->MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25_ = x.MatProp_Heat_MoistTrans_SorpIsothm_MoistCont_1_25_;
          this->MatProp_Heat_MoistTrans_Suction_MaterialName_ = x.MatProp_Heat_MoistTrans_Suction_MaterialName_;
          this->MatProp_Heat_MoistTrans_Suction_NumSuctionPoints_ = x.MatProp_Heat_MoistTrans_Suction_NumSuctionPoints_;
          this->MatProp_Heat_MoistTrans_Suction_MoistCont_1_25_ = x.MatProp_Heat_MoistTrans_Suction_MoistCont_1_25_;
          this->MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25_ = x.MatProp_Heat_MoistTrans_Suction_LiqTransportCoef_1_25_;
          this->MatProp_Heat_MoistTrans_ReDistrib_MaterialName_ = x.MatProp_Heat_MoistTrans_ReDistrib_MaterialName_;
          this->MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints_ = x.MatProp_Heat_MoistTrans_ReDistrib_NumReDistPoints_;
          this->MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25_ = x.MatProp_Heat_MoistTrans_ReDistrib_MoistCont_1_25_;
          this->MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25_ = x.MatProp_Heat_MoistTrans_ReDistrib_LiqTransportCoef_1_25_;
          this->MatProp_Heat_MoistTrans_Diffusion_MaterialName_ = x.MatProp_Heat_MoistTrans_Diffusion_MaterialName_;
          this->MatProp_Heat_MoistTrans_Diffusion_NumDataPairs_ = x.MatProp_Heat_MoistTrans_Diffusion_NumDataPairs_;
          this->MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25_ = x.MatProp_Heat_MoistTrans_Diffusion_RelHumidFract_1_25_;
          this->MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25_ = x.MatProp_Heat_MoistTrans_Diffusion_WaterVaporDiffusResistFactor_1_25_;
          this->MatProp_Heat_MoistTrans_ThermCond_MaterialName_ = x.MatProp_Heat_MoistTrans_ThermCond_MaterialName_;
          this->MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords_ = x.MatProp_Heat_MoistTrans_ThermCond_NumThermalCoords_;
          this->MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25_ = x.MatProp_Heat_MoistTrans_ThermCond_MoistCont_1_25_;
          this->MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25_ = x.MatProp_Heat_MoistTrans_ThermCond_ThermalCond_1_25_;
        }

        return *this;
      }

      SimMaterial_GlazingMaterial::
      ~SimMaterial_GlazingMaterial ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

