// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit.hxx"

#include "doublelist.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit
      // 

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_NumSpeeds_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_NumSpeeds () const
      {
        return this->SimFlowEnergyTrans_NumSpeeds_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_NumSpeeds_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_NumSpeeds ()
      {
        return this->SimFlowEnergyTrans_NumSpeeds_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_NumSpeeds (const SimFlowEnergyTrans_NumSpeeds_type& x)
      {
        this->SimFlowEnergyTrans_NumSpeeds_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_NumSpeeds (const SimFlowEnergyTrans_NumSpeeds_optional& x)
      {
        this->SimFlowEnergyTrans_NumSpeeds_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_IndoorAirInletNodeName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_IndoorAirInletNodeName () const
      {
        return this->SimFlowEnergyTrans_IndoorAirInletNodeName_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_IndoorAirInletNodeName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_IndoorAirInletNodeName ()
      {
        return this->SimFlowEnergyTrans_IndoorAirInletNodeName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_IndoorAirInletNodeName (const SimFlowEnergyTrans_IndoorAirInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_IndoorAirInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_IndoorAirInletNodeName (const SimFlowEnergyTrans_IndoorAirInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_IndoorAirInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_IndoorAirInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_IndoorAirInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_IndoorAirInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_IndoorAirOutletNodeName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_IndoorAirOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_IndoorAirOutletNodeName_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_IndoorAirOutletNodeName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_IndoorAirOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_IndoorAirOutletNodeName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_IndoorAirOutletNodeName (const SimFlowEnergyTrans_IndoorAirOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_IndoorAirOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_IndoorAirOutletNodeName (const SimFlowEnergyTrans_IndoorAirOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_IndoorAirOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_IndoorAirOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_IndoorAirOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_IndoorAirOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_NominalSpeedLevel_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_NominalSpeedLevel () const
      {
        return this->SimFlowEnergyTrans_NominalSpeedLevel_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_NominalSpeedLevel_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_NominalSpeedLevel ()
      {
        return this->SimFlowEnergyTrans_NominalSpeedLevel_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_NominalSpeedLevel (const SimFlowEnergyTrans_NominalSpeedLevel_type& x)
      {
        this->SimFlowEnergyTrans_NominalSpeedLevel_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_NominalSpeedLevel (const SimFlowEnergyTrans_NominalSpeedLevel_optional& x)
      {
        this->SimFlowEnergyTrans_NominalSpeedLevel_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel () const
      {
        return this->SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel ()
      {
        return this->SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel (const SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel_type& x)
      {
        this->SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel (const SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel_optional& x)
      {
        this->SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel () const
      {
        return this->SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel ()
      {
        return this->SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel (const SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_type& x)
      {
        this->SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel (const SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_optional& x)
      {
        this->SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil () const
      {
        return this->SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil ()
      {
        return this->SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil (const SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_type& x)
      {
        this->SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil (const SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_optional& x)
      {
        this->SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap () const
      {
        return this->SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap ()
      {
        return this->SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap (const SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_type& x)
      {
        this->SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap (const SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_optional& x)
      {
        this->SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_EnergyPartLoadFractionCurveName () const
      {
        return this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_EnergyPartLoadFractionCurveName ()
      {
        return this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_EnergyPartLoadFractionCurveName (const SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_type& x)
      {
        this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_EnergyPartLoadFractionCurveName (const SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_EnergyPartLoadFractionCurveName (::std::auto_ptr< SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_type > x)
      {
        this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName () const
      {
        return this->SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName ()
      {
        return this->SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName (const SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName (const SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName (const SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName (const SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel () const
      {
        return this->SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel ()
      {
        return this->SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel (const SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel_type& x)
      {
        this->SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel (const SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel_optional& x)
      {
        this->SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1 () const
      {
        return this->SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1 ()
      {
        return this->SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1 (const SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1_type& x)
      {
        this->SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1 (const SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1_optional& x)
      {
        this->SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap (const SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap (const SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio (const SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio (const SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP (const SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP (const SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate (const SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate (const SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate (const SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate (const SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName (const SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName (const SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName (const SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName (const SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName (const SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName (const SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName (const SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName (const SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName (const SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName (const SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName (const SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName (const SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds (const SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds (const SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName (const SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName (const SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit
      //

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit ()
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_CoolingCoilWater (),
        SimFlowEnergyTrans_NumSpeeds_ (this),
        SimFlowEnergyTrans_IndoorAirInletNodeName_ (this),
        SimFlowEnergyTrans_IndoorAirOutletNodeName_ (this),
        SimFlowEnergyTrans_NominalSpeedLevel_ (this),
        SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel_ (this),
        SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_ (this),
        SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_ (this),
        SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_ (this),
        SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_ (this),
        SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName_ (this),
        SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName_ (this),
        SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel_ (this),
        SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate_ (this),
        SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds_ (this),
        SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName_ (this)
      {
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_CoolingCoilWater (RefId),
        SimFlowEnergyTrans_NumSpeeds_ (this),
        SimFlowEnergyTrans_IndoorAirInletNodeName_ (this),
        SimFlowEnergyTrans_IndoorAirOutletNodeName_ (this),
        SimFlowEnergyTrans_NominalSpeedLevel_ (this),
        SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel_ (this),
        SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_ (this),
        SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_ (this),
        SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_ (this),
        SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_ (this),
        SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName_ (this),
        SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName_ (this),
        SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel_ (this),
        SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate_ (this),
        SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds_ (this),
        SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName_ (this)
      {
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit (const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit& x,
                                                                                                       ::xml_schema::flags f,
                                                                                                       ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_CoolingCoilWater (x, f, c),
        SimFlowEnergyTrans_NumSpeeds_ (x.SimFlowEnergyTrans_NumSpeeds_, f, this),
        SimFlowEnergyTrans_IndoorAirInletNodeName_ (x.SimFlowEnergyTrans_IndoorAirInletNodeName_, f, this),
        SimFlowEnergyTrans_IndoorAirOutletNodeName_ (x.SimFlowEnergyTrans_IndoorAirOutletNodeName_, f, this),
        SimFlowEnergyTrans_NominalSpeedLevel_ (x.SimFlowEnergyTrans_NominalSpeedLevel_, f, this),
        SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel_ (x.SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel_, f, this),
        SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_ (x.SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_, f, this),
        SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_ (x.SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_, f, this),
        SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_ (x.SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_, f, this),
        SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_ (x.SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_, f, this),
        SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName_ (x.SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName_, f, this),
        SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName_ (x.SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName_, f, this),
        SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel_ (x.SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel_, f, this),
        SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1_ (x.SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1_, f, this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap_ (x.SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap_, f, this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio_ (x.SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio_, f, this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP_ (x.SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP_, f, this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_ (x.SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_, f, this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate_ (x.SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate_, f, this),
        SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_ (x.SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_, f, this),
        SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_ (x.SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_, f, this),
        SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName_ (x.SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName_, f, this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_ (x.SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_, f, this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_ (x.SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_, f, this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName_ (x.SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName_, f, this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds_ (x.SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds_, f, this),
        SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName_ (x.SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName_, f, this)
      {
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit (const ::xercesc::DOMElement& e,
                                                                                                       ::xml_schema::flags f,
                                                                                                       ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_CoolingCoilWater (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTrans_NumSpeeds_ (this),
        SimFlowEnergyTrans_IndoorAirInletNodeName_ (this),
        SimFlowEnergyTrans_IndoorAirOutletNodeName_ (this),
        SimFlowEnergyTrans_NominalSpeedLevel_ (this),
        SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel_ (this),
        SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_ (this),
        SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_ (this),
        SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_ (this),
        SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_ (this),
        SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName_ (this),
        SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName_ (this),
        SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel_ (this),
        SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate_ (this),
        SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds_ (this),
        SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimFlowEnergyTransfer_CoolingCoilWater::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTrans_NumSpeeds
          //
          if (n.name () == "SimFlowEnergyTrans_NumSpeeds" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NumSpeeds_)
            {
              this->SimFlowEnergyTrans_NumSpeeds_.set (SimFlowEnergyTrans_NumSpeeds_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_IndoorAirInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_IndoorAirInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_IndoorAirInletNodeName_type > r (
              SimFlowEnergyTrans_IndoorAirInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_IndoorAirInletNodeName_)
            {
              this->SimFlowEnergyTrans_IndoorAirInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_IndoorAirOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_IndoorAirOutletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_IndoorAirOutletNodeName_type > r (
              SimFlowEnergyTrans_IndoorAirOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_IndoorAirOutletNodeName_)
            {
              this->SimFlowEnergyTrans_IndoorAirOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_NominalSpeedLevel
          //
          if (n.name () == "SimFlowEnergyTrans_NominalSpeedLevel" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NominalSpeedLevel_)
            {
              this->SimFlowEnergyTrans_NominalSpeedLevel_.set (SimFlowEnergyTrans_NominalSpeedLevel_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel
          //
          if (n.name () == "SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel_)
            {
              this->SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel_.set (SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel
          //
          if (n.name () == "SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_)
            {
              this->SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_.set (SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil
          //
          if (n.name () == "SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_)
            {
              this->SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_.set (SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap
          //
          if (n.name () == "SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_)
            {
              this->SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_.set (SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_EnergyPartLoadFractionCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_EnergyPartLoadFractionCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_type > r (
              SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_)
            {
              this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName_type > r (
              SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName_)
            {
              this->SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName_type > r (
              SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName_)
            {
              this->SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel
          //
          if (n.name () == "SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel_)
            {
              this->SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel_.set (SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1
          //
          if (n.name () == "SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1_)
            {
              this->SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1_.set (SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap_type > r (
              SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio_type > r (
              SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP_type > r (
              SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_type > r (
              SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate_type > r (
              SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_type > r (
              SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_type > r (
              SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName_type > r (
              SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_type > r (
              SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_type > r (
              SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName_type > r (
              SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds_type > r (
              SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName_type > r (
              SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit* SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit (*this, f, c);
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      operator= (const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimFlowEnergyTransfer_CoolingCoilWater& > (*this) = x;
          this->SimFlowEnergyTrans_NumSpeeds_ = x.SimFlowEnergyTrans_NumSpeeds_;
          this->SimFlowEnergyTrans_IndoorAirInletNodeName_ = x.SimFlowEnergyTrans_IndoorAirInletNodeName_;
          this->SimFlowEnergyTrans_IndoorAirOutletNodeName_ = x.SimFlowEnergyTrans_IndoorAirOutletNodeName_;
          this->SimFlowEnergyTrans_NominalSpeedLevel_ = x.SimFlowEnergyTrans_NominalSpeedLevel_;
          this->SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel_ = x.SimFlowEnergyTrans_GrossRatedTotalCoolCapAtSelectedNomSpeedLevel_;
          this->SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_ = x.SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_;
          this->SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_ = x.SimFlowEnergyTrans_NominalTimeforCondensateToBeginLeavingtheCoil_;
          this->SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_ = x.SimFlowEnergyTrans_InitialMoistureEvapRateDiviBySteady_StateACLatentCap_;
          this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_ = x.SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_;
          this->SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName_ = x.SimFlowEnergyTrans_Water_to_RefrigerantHXWaterInletNodeName_;
          this->SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName_ = x.SimFlowEnergyTrans_Water_to_RefrigerantHXWaterOutletNodeName_;
          this->SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel_ = x.SimFlowEnergyTrans_RatedWaterFlowRateAtSelectedNomSpeedLevel_;
          this->SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1_ = x.SimFlowEnergyTrans_FlagforUsingHotGasReheat_0_or_1_;
          this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap_ = x.SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedTotalCoolCap_;
          this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio_ = x.SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedSensHeatRatio_;
          this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP_ = x.SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedCoolCOP_;
          this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_ = x.SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_;
          this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate_ = x.SimFlowEnergyTrans_Speed_1_10_RefUnitRatedWaterFlowRate_;
          this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_ = x.SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfTempCurveName_;
          this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_ = x.SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfAirFlowFractionCurveName_;
          this->SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName_ = x.SimFlowEnergyTrans_Speed_1_10_TotCoolingCapFuncOfWaterFlowFractionCurveName_;
          this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_ = x.SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_;
          this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_ = x.SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_;
          this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName_ = x.SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfWaterFlowFractionCurveName_;
          this->SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds_ = x.SimFlowEnergyTrans_Speed_1_10_RefUnitWasteHeatFractionofInputPowerAtRatedConds_;
          this->SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName_ = x.SimFlowEnergyTrans_Speed_1_10_WasteHeatFuncOfTempCurveName_;
        }

        return *this;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit::
      ~SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterToAirHeatPumpVariableSpeedEquationFit ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

