// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransfer_RadiantDevice_HighTemp.hxx"

#include "doublelist.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_RadiantDevice_HighTemp
      // 

      const SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_Name_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_Name () const
      {
        return this->SimFlowEnergyTrans_Name_;
      }

      SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_Name_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_Name ()
      {
        return this->SimFlowEnergyTrans_Name_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_Name (const SimFlowEnergyTrans_Name_type& x)
      {
        this->SimFlowEnergyTrans_Name_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_Name (const SimFlowEnergyTrans_Name_optional& x)
      {
        this->SimFlowEnergyTrans_Name_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_Name (::std::auto_ptr< SimFlowEnergyTrans_Name_type > x)
      {
        this->SimFlowEnergyTrans_Name_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_AvailSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_AvailSchedName () const
      {
        return this->SimFlowEnergyTrans_AvailSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_AvailSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_AvailSchedName ()
      {
        return this->SimFlowEnergyTrans_AvailSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_AvailSchedName (const SimFlowEnergyTrans_AvailSchedName_type& x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_AvailSchedName (const SimFlowEnergyTrans_AvailSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_AvailSchedName (::std::auto_ptr< SimFlowEnergyTrans_AvailSchedName_type > x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople () const
      {
        return this->SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople_;
      }

      SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople ()
      {
        return this->SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople (const SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople_type& x)
      {
        this->SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople (const SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople_optional& x)
      {
        this->SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_ZoneName_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_ZoneName () const
      {
        return this->SimFlowEnergyTrans_ZoneName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_ZoneName_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_ZoneName ()
      {
        return this->SimFlowEnergyTrans_ZoneName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_ZoneName (const SimFlowEnergyTrans_ZoneName_type& x)
      {
        this->SimFlowEnergyTrans_ZoneName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_ZoneName (const SimFlowEnergyTrans_ZoneName_optional& x)
      {
        this->SimFlowEnergyTrans_ZoneName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_ZoneName (::std::auto_ptr< SimFlowEnergyTrans_ZoneName_type > x)
      {
        this->SimFlowEnergyTrans_ZoneName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_TempCntlType_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_TempCntlType () const
      {
        return this->SimFlowEnergyTrans_TempCntlType_;
      }

      SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_TempCntlType_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_TempCntlType ()
      {
        return this->SimFlowEnergyTrans_TempCntlType_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_TempCntlType (const SimFlowEnergyTrans_TempCntlType_type& x)
      {
        this->SimFlowEnergyTrans_TempCntlType_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_TempCntlType (const SimFlowEnergyTrans_TempCntlType_optional& x)
      {
        this->SimFlowEnergyTrans_TempCntlType_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_TempCntlType (::std::auto_ptr< SimFlowEnergyTrans_TempCntlType_type > x)
      {
        this->SimFlowEnergyTrans_TempCntlType_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_MaxPwrInput_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_MaxPwrInput () const
      {
        return this->SimFlowEnergyTrans_MaxPwrInput_;
      }

      SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_MaxPwrInput_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_MaxPwrInput ()
      {
        return this->SimFlowEnergyTrans_MaxPwrInput_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_MaxPwrInput (const SimFlowEnergyTrans_MaxPwrInput_type& x)
      {
        this->SimFlowEnergyTrans_MaxPwrInput_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_MaxPwrInput (const SimFlowEnergyTrans_MaxPwrInput_optional& x)
      {
        this->SimFlowEnergyTrans_MaxPwrInput_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_FuelType_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FuelType () const
      {
        return this->SimFlowEnergyTrans_FuelType_;
      }

      SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_FuelType_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FuelType ()
      {
        return this->SimFlowEnergyTrans_FuelType_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FuelType (const SimFlowEnergyTrans_FuelType_type& x)
      {
        this->SimFlowEnergyTrans_FuelType_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FuelType (const SimFlowEnergyTrans_FuelType_optional& x)
      {
        this->SimFlowEnergyTrans_FuelType_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FuelType (::std::auto_ptr< SimFlowEnergyTrans_FuelType_type > x)
      {
        this->SimFlowEnergyTrans_FuelType_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_CombustEff_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_CombustEff () const
      {
        return this->SimFlowEnergyTrans_CombustEff_;
      }

      SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_CombustEff_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_CombustEff ()
      {
        return this->SimFlowEnergyTrans_CombustEff_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_CombustEff (const SimFlowEnergyTrans_CombustEff_type& x)
      {
        this->SimFlowEnergyTrans_CombustEff_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_CombustEff (const SimFlowEnergyTrans_CombustEff_optional& x)
      {
        this->SimFlowEnergyTrans_CombustEff_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy () const
      {
        return this->SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy_;
      }

      SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy ()
      {
        return this->SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy (const SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy_type& x)
      {
        this->SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy (const SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy_optional& x)
      {
        this->SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_FractInputConvertedToLatentEnergy_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FractInputConvertedToLatentEnergy () const
      {
        return this->SimFlowEnergyTrans_FractInputConvertedToLatentEnergy_;
      }

      SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_FractInputConvertedToLatentEnergy_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FractInputConvertedToLatentEnergy ()
      {
        return this->SimFlowEnergyTrans_FractInputConvertedToLatentEnergy_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FractInputConvertedToLatentEnergy (const SimFlowEnergyTrans_FractInputConvertedToLatentEnergy_type& x)
      {
        this->SimFlowEnergyTrans_FractInputConvertedToLatentEnergy_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FractInputConvertedToLatentEnergy (const SimFlowEnergyTrans_FractInputConvertedToLatentEnergy_optional& x)
      {
        this->SimFlowEnergyTrans_FractInputConvertedToLatentEnergy_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_FractInputThatLost_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FractInputThatLost () const
      {
        return this->SimFlowEnergyTrans_FractInputThatLost_;
      }

      SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_FractInputThatLost_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FractInputThatLost ()
      {
        return this->SimFlowEnergyTrans_FractInputThatLost_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FractInputThatLost (const SimFlowEnergyTrans_FractInputThatLost_type& x)
      {
        this->SimFlowEnergyTrans_FractInputThatLost_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FractInputThatLost (const SimFlowEnergyTrans_FractInputThatLost_optional& x)
      {
        this->SimFlowEnergyTrans_FractInputThatLost_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_HeatingThrottlingRange_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_HeatingThrottlingRange () const
      {
        return this->SimFlowEnergyTrans_HeatingThrottlingRange_;
      }

      SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_HeatingThrottlingRange_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_HeatingThrottlingRange ()
      {
        return this->SimFlowEnergyTrans_HeatingThrottlingRange_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_HeatingThrottlingRange (const SimFlowEnergyTrans_HeatingThrottlingRange_type& x)
      {
        this->SimFlowEnergyTrans_HeatingThrottlingRange_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_HeatingThrottlingRange (const SimFlowEnergyTrans_HeatingThrottlingRange_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingThrottlingRange_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_HeatingSetpointTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_HeatingSetpointTempSchedName () const
      {
        return this->SimFlowEnergyTrans_HeatingSetpointTempSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_HeatingSetpointTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_HeatingSetpointTempSchedName ()
      {
        return this->SimFlowEnergyTrans_HeatingSetpointTempSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_HeatingSetpointTempSchedName (const SimFlowEnergyTrans_HeatingSetpointTempSchedName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingSetpointTempSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_HeatingSetpointTempSchedName (const SimFlowEnergyTrans_HeatingSetpointTempSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingSetpointTempSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_HeatingSetpointTempSchedName (::std::auto_ptr< SimFlowEnergyTrans_HeatingSetpointTempSchedName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingSetpointTempSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_SurfName_1_100_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_SurfName_1_100 () const
      {
        return this->SimFlowEnergyTrans_SurfName_1_100_;
      }

      SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_SurfName_1_100_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_SurfName_1_100 ()
      {
        return this->SimFlowEnergyTrans_SurfName_1_100_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_SurfName_1_100 (const SimFlowEnergyTrans_SurfName_1_100_type& x)
      {
        this->SimFlowEnergyTrans_SurfName_1_100_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_SurfName_1_100 (const SimFlowEnergyTrans_SurfName_1_100_optional& x)
      {
        this->SimFlowEnergyTrans_SurfName_1_100_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_SurfName_1_100 (::std::auto_ptr< SimFlowEnergyTrans_SurfName_1_100_type > x)
      {
        this->SimFlowEnergyTrans_SurfName_1_100_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20 () const
      {
        return this->SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20_;
      }

      SimFlowEnergyTransfer_RadiantDevice_HighTemp::SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20_optional& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20 ()
      {
        return this->SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20 (const SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20_type& x)
      {
        this->SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20 (const SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20_optional& x)
      {
        this->SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20 (::std::auto_ptr< SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20_type > x)
      {
        this->SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_RadiantDevice_HighTemp
      //

      SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTransfer_RadiantDevice_HighTemp ()
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_RadiantDevice (),
        SimFlowEnergyTrans_Name_ (this),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople_ (this),
        SimFlowEnergyTrans_ZoneName_ (this),
        SimFlowEnergyTrans_TempCntlType_ (this),
        SimFlowEnergyTrans_MaxPwrInput_ (this),
        SimFlowEnergyTrans_FuelType_ (this),
        SimFlowEnergyTrans_CombustEff_ (this),
        SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy_ (this),
        SimFlowEnergyTrans_FractInputConvertedToLatentEnergy_ (this),
        SimFlowEnergyTrans_FractInputThatLost_ (this),
        SimFlowEnergyTrans_HeatingThrottlingRange_ (this),
        SimFlowEnergyTrans_HeatingSetpointTempSchedName_ (this),
        SimFlowEnergyTrans_SurfName_1_100_ (this),
        SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20_ (this)
      {
      }

      SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTransfer_RadiantDevice_HighTemp (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_RadiantDevice (RefId),
        SimFlowEnergyTrans_Name_ (this),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople_ (this),
        SimFlowEnergyTrans_ZoneName_ (this),
        SimFlowEnergyTrans_TempCntlType_ (this),
        SimFlowEnergyTrans_MaxPwrInput_ (this),
        SimFlowEnergyTrans_FuelType_ (this),
        SimFlowEnergyTrans_CombustEff_ (this),
        SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy_ (this),
        SimFlowEnergyTrans_FractInputConvertedToLatentEnergy_ (this),
        SimFlowEnergyTrans_FractInputThatLost_ (this),
        SimFlowEnergyTrans_HeatingThrottlingRange_ (this),
        SimFlowEnergyTrans_HeatingSetpointTempSchedName_ (this),
        SimFlowEnergyTrans_SurfName_1_100_ (this),
        SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20_ (this)
      {
      }

      SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTransfer_RadiantDevice_HighTemp (const SimFlowEnergyTransfer_RadiantDevice_HighTemp& x,
                                                    ::xml_schema::flags f,
                                                    ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_RadiantDevice (x, f, c),
        SimFlowEnergyTrans_Name_ (x.SimFlowEnergyTrans_Name_, f, this),
        SimFlowEnergyTrans_AvailSchedName_ (x.SimFlowEnergyTrans_AvailSchedName_, f, this),
        SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople_ (x.SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople_, f, this),
        SimFlowEnergyTrans_ZoneName_ (x.SimFlowEnergyTrans_ZoneName_, f, this),
        SimFlowEnergyTrans_TempCntlType_ (x.SimFlowEnergyTrans_TempCntlType_, f, this),
        SimFlowEnergyTrans_MaxPwrInput_ (x.SimFlowEnergyTrans_MaxPwrInput_, f, this),
        SimFlowEnergyTrans_FuelType_ (x.SimFlowEnergyTrans_FuelType_, f, this),
        SimFlowEnergyTrans_CombustEff_ (x.SimFlowEnergyTrans_CombustEff_, f, this),
        SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy_ (x.SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy_, f, this),
        SimFlowEnergyTrans_FractInputConvertedToLatentEnergy_ (x.SimFlowEnergyTrans_FractInputConvertedToLatentEnergy_, f, this),
        SimFlowEnergyTrans_FractInputThatLost_ (x.SimFlowEnergyTrans_FractInputThatLost_, f, this),
        SimFlowEnergyTrans_HeatingThrottlingRange_ (x.SimFlowEnergyTrans_HeatingThrottlingRange_, f, this),
        SimFlowEnergyTrans_HeatingSetpointTempSchedName_ (x.SimFlowEnergyTrans_HeatingSetpointTempSchedName_, f, this),
        SimFlowEnergyTrans_SurfName_1_100_ (x.SimFlowEnergyTrans_SurfName_1_100_, f, this),
        SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20_ (x.SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20_, f, this)
      {
      }

      SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      SimFlowEnergyTransfer_RadiantDevice_HighTemp (const ::xercesc::DOMElement& e,
                                                    ::xml_schema::flags f,
                                                    ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_RadiantDevice (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTrans_Name_ (this),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople_ (this),
        SimFlowEnergyTrans_ZoneName_ (this),
        SimFlowEnergyTrans_TempCntlType_ (this),
        SimFlowEnergyTrans_MaxPwrInput_ (this),
        SimFlowEnergyTrans_FuelType_ (this),
        SimFlowEnergyTrans_CombustEff_ (this),
        SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy_ (this),
        SimFlowEnergyTrans_FractInputConvertedToLatentEnergy_ (this),
        SimFlowEnergyTrans_FractInputThatLost_ (this),
        SimFlowEnergyTrans_HeatingThrottlingRange_ (this),
        SimFlowEnergyTrans_HeatingSetpointTempSchedName_ (this),
        SimFlowEnergyTrans_SurfName_1_100_ (this),
        SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimFlowEnergyTransfer_RadiantDevice::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTrans_Name
          //
          if (n.name () == "SimFlowEnergyTrans_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Name_type > r (
              SimFlowEnergyTrans_Name_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Name_)
            {
              this->SimFlowEnergyTrans_Name_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_AvailSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_AvailSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AvailSchedName_type > r (
              SimFlowEnergyTrans_AvailSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AvailSchedName_)
            {
              this->SimFlowEnergyTrans_AvailSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople
          //
          if (n.name () == "SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople_)
            {
              this->SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople_.set (SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_ZoneName
          //
          if (n.name () == "SimFlowEnergyTrans_ZoneName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_ZoneName_type > r (
              SimFlowEnergyTrans_ZoneName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_ZoneName_)
            {
              this->SimFlowEnergyTrans_ZoneName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_TempCntlType
          //
          if (n.name () == "SimFlowEnergyTrans_TempCntlType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_TempCntlType_type > r (
              SimFlowEnergyTrans_TempCntlType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_TempCntlType_)
            {
              this->SimFlowEnergyTrans_TempCntlType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_MaxPwrInput
          //
          if (n.name () == "SimFlowEnergyTrans_MaxPwrInput" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MaxPwrInput_)
            {
              this->SimFlowEnergyTrans_MaxPwrInput_.set (SimFlowEnergyTrans_MaxPwrInput_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_FuelType
          //
          if (n.name () == "SimFlowEnergyTrans_FuelType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_FuelType_type > r (
              SimFlowEnergyTrans_FuelType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_FuelType_)
            {
              this->SimFlowEnergyTrans_FuelType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CombustEff
          //
          if (n.name () == "SimFlowEnergyTrans_CombustEff" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_CombustEff_)
            {
              this->SimFlowEnergyTrans_CombustEff_.set (SimFlowEnergyTrans_CombustEff_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy
          //
          if (n.name () == "SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy_)
            {
              this->SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy_.set (SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_FractInputConvertedToLatentEnergy
          //
          if (n.name () == "SimFlowEnergyTrans_FractInputConvertedToLatentEnergy" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_FractInputConvertedToLatentEnergy_)
            {
              this->SimFlowEnergyTrans_FractInputConvertedToLatentEnergy_.set (SimFlowEnergyTrans_FractInputConvertedToLatentEnergy_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_FractInputThatLost
          //
          if (n.name () == "SimFlowEnergyTrans_FractInputThatLost" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_FractInputThatLost_)
            {
              this->SimFlowEnergyTrans_FractInputThatLost_.set (SimFlowEnergyTrans_FractInputThatLost_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingThrottlingRange
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingThrottlingRange" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_HeatingThrottlingRange_)
            {
              this->SimFlowEnergyTrans_HeatingThrottlingRange_.set (SimFlowEnergyTrans_HeatingThrottlingRange_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingSetpointTempSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingSetpointTempSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingSetpointTempSchedName_type > r (
              SimFlowEnergyTrans_HeatingSetpointTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingSetpointTempSchedName_)
            {
              this->SimFlowEnergyTrans_HeatingSetpointTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SurfName_1_100
          //
          if (n.name () == "SimFlowEnergyTrans_SurfName_1_100" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SurfName_1_100_type > r (
              SimFlowEnergyTrans_SurfName_1_100_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SurfName_1_100_)
            {
              this->SimFlowEnergyTrans_SurfName_1_100_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20
          //
          if (n.name () == "SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20_type > r (
              SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20_)
            {
              this->SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransfer_RadiantDevice_HighTemp* SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransfer_RadiantDevice_HighTemp (*this, f, c);
      }

      SimFlowEnergyTransfer_RadiantDevice_HighTemp& SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      operator= (const SimFlowEnergyTransfer_RadiantDevice_HighTemp& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimFlowEnergyTransfer_RadiantDevice& > (*this) = x;
          this->SimFlowEnergyTrans_Name_ = x.SimFlowEnergyTrans_Name_;
          this->SimFlowEnergyTrans_AvailSchedName_ = x.SimFlowEnergyTrans_AvailSchedName_;
          this->SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople_ = x.SimFlowEnergyTrans_FractRadiantEnergycidentOnPeople_;
          this->SimFlowEnergyTrans_ZoneName_ = x.SimFlowEnergyTrans_ZoneName_;
          this->SimFlowEnergyTrans_TempCntlType_ = x.SimFlowEnergyTrans_TempCntlType_;
          this->SimFlowEnergyTrans_MaxPwrInput_ = x.SimFlowEnergyTrans_MaxPwrInput_;
          this->SimFlowEnergyTrans_FuelType_ = x.SimFlowEnergyTrans_FuelType_;
          this->SimFlowEnergyTrans_CombustEff_ = x.SimFlowEnergyTrans_CombustEff_;
          this->SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy_ = x.SimFlowEnergyTrans_FractInputConvertedToRadiantEnergy_;
          this->SimFlowEnergyTrans_FractInputConvertedToLatentEnergy_ = x.SimFlowEnergyTrans_FractInputConvertedToLatentEnergy_;
          this->SimFlowEnergyTrans_FractInputThatLost_ = x.SimFlowEnergyTrans_FractInputThatLost_;
          this->SimFlowEnergyTrans_HeatingThrottlingRange_ = x.SimFlowEnergyTrans_HeatingThrottlingRange_;
          this->SimFlowEnergyTrans_HeatingSetpointTempSchedName_ = x.SimFlowEnergyTrans_HeatingSetpointTempSchedName_;
          this->SimFlowEnergyTrans_SurfName_1_100_ = x.SimFlowEnergyTrans_SurfName_1_100_;
          this->SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20_ = x.SimFlowEnergyTrans_FractRadiantEnergyToSurf_1_20_;
        }

        return *this;
      }

      SimFlowEnergyTransfer_RadiantDevice_HighTemp::
      ~SimFlowEnergyTransfer_RadiantDevice_HighTemp ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

