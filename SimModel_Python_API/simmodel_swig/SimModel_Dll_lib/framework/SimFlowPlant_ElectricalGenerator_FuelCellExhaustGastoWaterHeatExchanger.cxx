// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger
      // 

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Name_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Name () const
      {
        return this->SimFlowPlant_Name_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Name_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Name ()
      {
        return this->SimFlowPlant_Name_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Name (const SimFlowPlant_Name_type& x)
      {
        this->SimFlowPlant_Name_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Name (const SimFlowPlant_Name_optional& x)
      {
        this->SimFlowPlant_Name_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Name (::std::auto_ptr< SimFlowPlant_Name_type > x)
      {
        this->SimFlowPlant_Name_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_HeatRecovWaterInletNodeName_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_HeatRecovWaterInletNodeName () const
      {
        return this->SimFlowPlant_HeatRecovWaterInletNodeName_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_HeatRecovWaterInletNodeName_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_HeatRecovWaterInletNodeName ()
      {
        return this->SimFlowPlant_HeatRecovWaterInletNodeName_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_HeatRecovWaterInletNodeName (const SimFlowPlant_HeatRecovWaterInletNodeName_type& x)
      {
        this->SimFlowPlant_HeatRecovWaterInletNodeName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_HeatRecovWaterInletNodeName (const SimFlowPlant_HeatRecovWaterInletNodeName_optional& x)
      {
        this->SimFlowPlant_HeatRecovWaterInletNodeName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_HeatRecovWaterInletNodeName (::std::auto_ptr< SimFlowPlant_HeatRecovWaterInletNodeName_type > x)
      {
        this->SimFlowPlant_HeatRecovWaterInletNodeName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_HeatRecovWaterOutletNodeName_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_HeatRecovWaterOutletNodeName () const
      {
        return this->SimFlowPlant_HeatRecovWaterOutletNodeName_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_HeatRecovWaterOutletNodeName_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_HeatRecovWaterOutletNodeName ()
      {
        return this->SimFlowPlant_HeatRecovWaterOutletNodeName_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_HeatRecovWaterOutletNodeName (const SimFlowPlant_HeatRecovWaterOutletNodeName_type& x)
      {
        this->SimFlowPlant_HeatRecovWaterOutletNodeName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_HeatRecovWaterOutletNodeName (const SimFlowPlant_HeatRecovWaterOutletNodeName_optional& x)
      {
        this->SimFlowPlant_HeatRecovWaterOutletNodeName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_HeatRecovWaterOutletNodeName (::std::auto_ptr< SimFlowPlant_HeatRecovWaterOutletNodeName_type > x)
      {
        this->SimFlowPlant_HeatRecovWaterOutletNodeName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_HeatRecovWaterMaxFlowRate_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_HeatRecovWaterMaxFlowRate () const
      {
        return this->SimFlowPlant_HeatRecovWaterMaxFlowRate_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_HeatRecovWaterMaxFlowRate_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_HeatRecovWaterMaxFlowRate ()
      {
        return this->SimFlowPlant_HeatRecovWaterMaxFlowRate_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_HeatRecovWaterMaxFlowRate (const SimFlowPlant_HeatRecovWaterMaxFlowRate_type& x)
      {
        this->SimFlowPlant_HeatRecovWaterMaxFlowRate_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_HeatRecovWaterMaxFlowRate (const SimFlowPlant_HeatRecovWaterMaxFlowRate_optional& x)
      {
        this->SimFlowPlant_HeatRecovWaterMaxFlowRate_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_ExhOutletAirNodeName_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_ExhOutletAirNodeName () const
      {
        return this->SimFlowPlant_ExhOutletAirNodeName_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_ExhOutletAirNodeName_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_ExhOutletAirNodeName ()
      {
        return this->SimFlowPlant_ExhOutletAirNodeName_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_ExhOutletAirNodeName (const SimFlowPlant_ExhOutletAirNodeName_type& x)
      {
        this->SimFlowPlant_ExhOutletAirNodeName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_ExhOutletAirNodeName (const SimFlowPlant_ExhOutletAirNodeName_optional& x)
      {
        this->SimFlowPlant_ExhOutletAirNodeName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_ExhOutletAirNodeName (::std::auto_ptr< SimFlowPlant_ExhOutletAirNodeName_type > x)
      {
        this->SimFlowPlant_ExhOutletAirNodeName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_HeatExchngCalcMeth_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_HeatExchngCalcMeth () const
      {
        return this->SimFlowPlant_HeatExchngCalcMeth_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_HeatExchngCalcMeth_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_HeatExchngCalcMeth ()
      {
        return this->SimFlowPlant_HeatExchngCalcMeth_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_HeatExchngCalcMeth (const SimFlowPlant_HeatExchngCalcMeth_type& x)
      {
        this->SimFlowPlant_HeatExchngCalcMeth_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_HeatExchngCalcMeth (const SimFlowPlant_HeatExchngCalcMeth_optional& x)
      {
        this->SimFlowPlant_HeatExchngCalcMeth_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_HeatExchngCalcMeth (::std::auto_ptr< SimFlowPlant_HeatExchngCalcMeth_type > x)
      {
        this->SimFlowPlant_HeatExchngCalcMeth_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth1HeatExchngEffect_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth1HeatExchngEffect () const
      {
        return this->SimFlowPlant_Meth1HeatExchngEffect_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth1HeatExchngEffect_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth1HeatExchngEffect ()
      {
        return this->SimFlowPlant_Meth1HeatExchngEffect_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth1HeatExchngEffect (const SimFlowPlant_Meth1HeatExchngEffect_type& x)
      {
        this->SimFlowPlant_Meth1HeatExchngEffect_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth1HeatExchngEffect (const SimFlowPlant_Meth1HeatExchngEffect_optional& x)
      {
        this->SimFlowPlant_Meth1HeatExchngEffect_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Method2Paramhxs0_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method2Paramhxs0 () const
      {
        return this->SimFlowPlant_Method2Paramhxs0_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Method2Paramhxs0_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method2Paramhxs0 ()
      {
        return this->SimFlowPlant_Method2Paramhxs0_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method2Paramhxs0 (const SimFlowPlant_Method2Paramhxs0_type& x)
      {
        this->SimFlowPlant_Method2Paramhxs0_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method2Paramhxs0 (const SimFlowPlant_Method2Paramhxs0_optional& x)
      {
        this->SimFlowPlant_Method2Paramhxs0_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Method2Paramhxs1_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method2Paramhxs1 () const
      {
        return this->SimFlowPlant_Method2Paramhxs1_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Method2Paramhxs1_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method2Paramhxs1 ()
      {
        return this->SimFlowPlant_Method2Paramhxs1_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method2Paramhxs1 (const SimFlowPlant_Method2Paramhxs1_type& x)
      {
        this->SimFlowPlant_Method2Paramhxs1_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method2Paramhxs1 (const SimFlowPlant_Method2Paramhxs1_optional& x)
      {
        this->SimFlowPlant_Method2Paramhxs1_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Method2Paramhxs2_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method2Paramhxs2 () const
      {
        return this->SimFlowPlant_Method2Paramhxs2_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Method2Paramhxs2_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method2Paramhxs2 ()
      {
        return this->SimFlowPlant_Method2Paramhxs2_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method2Paramhxs2 (const SimFlowPlant_Method2Paramhxs2_type& x)
      {
        this->SimFlowPlant_Method2Paramhxs2_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method2Paramhxs2 (const SimFlowPlant_Method2Paramhxs2_optional& x)
      {
        this->SimFlowPlant_Method2Paramhxs2_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Method2Paramhxs3_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method2Paramhxs3 () const
      {
        return this->SimFlowPlant_Method2Paramhxs3_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Method2Paramhxs3_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method2Paramhxs3 ()
      {
        return this->SimFlowPlant_Method2Paramhxs3_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method2Paramhxs3 (const SimFlowPlant_Method2Paramhxs3_type& x)
      {
        this->SimFlowPlant_Method2Paramhxs3_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method2Paramhxs3 (const SimFlowPlant_Method2Paramhxs3_optional& x)
      {
        this->SimFlowPlant_Method2Paramhxs3_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Method2Paramhxs4_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method2Paramhxs4 () const
      {
        return this->SimFlowPlant_Method2Paramhxs4_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Method2Paramhxs4_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method2Paramhxs4 ()
      {
        return this->SimFlowPlant_Method2Paramhxs4_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method2Paramhxs4 (const SimFlowPlant_Method2Paramhxs4_type& x)
      {
        this->SimFlowPlant_Method2Paramhxs4_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method2Paramhxs4 (const SimFlowPlant_Method2Paramhxs4_optional& x)
      {
        this->SimFlowPlant_Method2Paramhxs4_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth3H0GasCoef_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3H0GasCoef () const
      {
        return this->SimFlowPlant_Meth3H0GasCoef_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth3H0GasCoef_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3H0GasCoef ()
      {
        return this->SimFlowPlant_Meth3H0GasCoef_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3H0GasCoef (const SimFlowPlant_Meth3H0GasCoef_type& x)
      {
        this->SimFlowPlant_Meth3H0GasCoef_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3H0GasCoef (const SimFlowPlant_Meth3H0GasCoef_optional& x)
      {
        this->SimFlowPlant_Meth3H0GasCoef_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth3NdotGasRefCoef_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3NdotGasRefCoef () const
      {
        return this->SimFlowPlant_Meth3NdotGasRefCoef_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth3NdotGasRefCoef_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3NdotGasRefCoef ()
      {
        return this->SimFlowPlant_Meth3NdotGasRefCoef_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3NdotGasRefCoef (const SimFlowPlant_Meth3NdotGasRefCoef_type& x)
      {
        this->SimFlowPlant_Meth3NdotGasRefCoef_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3NdotGasRefCoef (const SimFlowPlant_Meth3NdotGasRefCoef_optional& x)
      {
        this->SimFlowPlant_Meth3NdotGasRefCoef_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth3NCoef_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3NCoef () const
      {
        return this->SimFlowPlant_Meth3NCoef_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth3NCoef_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3NCoef ()
      {
        return this->SimFlowPlant_Meth3NCoef_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3NCoef (const SimFlowPlant_Meth3NCoef_type& x)
      {
        this->SimFlowPlant_Meth3NCoef_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3NCoef (const SimFlowPlant_Meth3NCoef_optional& x)
      {
        this->SimFlowPlant_Meth3NCoef_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth3GasArea_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3GasArea () const
      {
        return this->SimFlowPlant_Meth3GasArea_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth3GasArea_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3GasArea ()
      {
        return this->SimFlowPlant_Meth3GasArea_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3GasArea (const SimFlowPlant_Meth3GasArea_type& x)
      {
        this->SimFlowPlant_Meth3GasArea_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3GasArea (const SimFlowPlant_Meth3GasArea_optional& x)
      {
        this->SimFlowPlant_Meth3GasArea_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth3H0WaterCoef_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3H0WaterCoef () const
      {
        return this->SimFlowPlant_Meth3H0WaterCoef_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth3H0WaterCoef_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3H0WaterCoef ()
      {
        return this->SimFlowPlant_Meth3H0WaterCoef_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3H0WaterCoef (const SimFlowPlant_Meth3H0WaterCoef_type& x)
      {
        this->SimFlowPlant_Meth3H0WaterCoef_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3H0WaterCoef (const SimFlowPlant_Meth3H0WaterCoef_optional& x)
      {
        this->SimFlowPlant_Meth3H0WaterCoef_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth3NDotWaterRefCoef_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3NDotWaterRefCoef () const
      {
        return this->SimFlowPlant_Meth3NDotWaterRefCoef_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth3NDotWaterRefCoef_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3NDotWaterRefCoef ()
      {
        return this->SimFlowPlant_Meth3NDotWaterRefCoef_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3NDotWaterRefCoef (const SimFlowPlant_Meth3NDotWaterRefCoef_type& x)
      {
        this->SimFlowPlant_Meth3NDotWaterRefCoef_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3NDotWaterRefCoef (const SimFlowPlant_Meth3NDotWaterRefCoef_optional& x)
      {
        this->SimFlowPlant_Meth3NDotWaterRefCoef_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth3MCoef_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3MCoef () const
      {
        return this->SimFlowPlant_Meth3MCoef_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth3MCoef_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3MCoef ()
      {
        return this->SimFlowPlant_Meth3MCoef_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3MCoef (const SimFlowPlant_Meth3MCoef_type& x)
      {
        this->SimFlowPlant_Meth3MCoef_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3MCoef (const SimFlowPlant_Meth3MCoef_optional& x)
      {
        this->SimFlowPlant_Meth3MCoef_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Method3WaterArea_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method3WaterArea () const
      {
        return this->SimFlowPlant_Method3WaterArea_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Method3WaterArea_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method3WaterArea ()
      {
        return this->SimFlowPlant_Method3WaterArea_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method3WaterArea (const SimFlowPlant_Method3WaterArea_type& x)
      {
        this->SimFlowPlant_Method3WaterArea_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Method3WaterArea (const SimFlowPlant_Method3WaterArea_optional& x)
      {
        this->SimFlowPlant_Method3WaterArea_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth3FAdjFactor_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3FAdjFactor () const
      {
        return this->SimFlowPlant_Meth3FAdjFactor_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth3FAdjFactor_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3FAdjFactor ()
      {
        return this->SimFlowPlant_Meth3FAdjFactor_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3FAdjFactor (const SimFlowPlant_Meth3FAdjFactor_type& x)
      {
        this->SimFlowPlant_Meth3FAdjFactor_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth3FAdjFactor (const SimFlowPlant_Meth3FAdjFactor_optional& x)
      {
        this->SimFlowPlant_Meth3FAdjFactor_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth4Hxl1Coef_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth4Hxl1Coef () const
      {
        return this->SimFlowPlant_Meth4Hxl1Coef_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth4Hxl1Coef_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth4Hxl1Coef ()
      {
        return this->SimFlowPlant_Meth4Hxl1Coef_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth4Hxl1Coef (const SimFlowPlant_Meth4Hxl1Coef_type& x)
      {
        this->SimFlowPlant_Meth4Hxl1Coef_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth4Hxl1Coef (const SimFlowPlant_Meth4Hxl1Coef_optional& x)
      {
        this->SimFlowPlant_Meth4Hxl1Coef_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth4Hxl2Coef_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth4Hxl2Coef () const
      {
        return this->SimFlowPlant_Meth4Hxl2Coef_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth4Hxl2Coef_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth4Hxl2Coef ()
      {
        return this->SimFlowPlant_Meth4Hxl2Coef_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth4Hxl2Coef (const SimFlowPlant_Meth4Hxl2Coef_type& x)
      {
        this->SimFlowPlant_Meth4Hxl2Coef_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth4Hxl2Coef (const SimFlowPlant_Meth4Hxl2Coef_optional& x)
      {
        this->SimFlowPlant_Meth4Hxl2Coef_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth4CondensationThresh_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth4CondensationThresh () const
      {
        return this->SimFlowPlant_Meth4CondensationThresh_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::SimFlowPlant_Meth4CondensationThresh_optional& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth4CondensationThresh ()
      {
        return this->SimFlowPlant_Meth4CondensationThresh_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth4CondensationThresh (const SimFlowPlant_Meth4CondensationThresh_type& x)
      {
        this->SimFlowPlant_Meth4CondensationThresh_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_Meth4CondensationThresh (const SimFlowPlant_Meth4CondensationThresh_optional& x)
      {
        this->SimFlowPlant_Meth4CondensationThresh_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger
      //

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger ()
      : ::schema::simxml::MepModel::SimFlowPlant_ElectricalGenerator (),
        SimFlowPlant_Name_ (this),
        SimFlowPlant_HeatRecovWaterInletNodeName_ (this),
        SimFlowPlant_HeatRecovWaterOutletNodeName_ (this),
        SimFlowPlant_HeatRecovWaterMaxFlowRate_ (this),
        SimFlowPlant_ExhOutletAirNodeName_ (this),
        SimFlowPlant_HeatExchngCalcMeth_ (this),
        SimFlowPlant_Meth1HeatExchngEffect_ (this),
        SimFlowPlant_Method2Paramhxs0_ (this),
        SimFlowPlant_Method2Paramhxs1_ (this),
        SimFlowPlant_Method2Paramhxs2_ (this),
        SimFlowPlant_Method2Paramhxs3_ (this),
        SimFlowPlant_Method2Paramhxs4_ (this),
        SimFlowPlant_Meth3H0GasCoef_ (this),
        SimFlowPlant_Meth3NdotGasRefCoef_ (this),
        SimFlowPlant_Meth3NCoef_ (this),
        SimFlowPlant_Meth3GasArea_ (this),
        SimFlowPlant_Meth3H0WaterCoef_ (this),
        SimFlowPlant_Meth3NDotWaterRefCoef_ (this),
        SimFlowPlant_Meth3MCoef_ (this),
        SimFlowPlant_Method3WaterArea_ (this),
        SimFlowPlant_Meth3FAdjFactor_ (this),
        SimFlowPlant_Meth4Hxl1Coef_ (this),
        SimFlowPlant_Meth4Hxl2Coef_ (this),
        SimFlowPlant_Meth4CondensationThresh_ (this)
      {
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimFlowPlant_ElectricalGenerator (RefId),
        SimFlowPlant_Name_ (this),
        SimFlowPlant_HeatRecovWaterInletNodeName_ (this),
        SimFlowPlant_HeatRecovWaterOutletNodeName_ (this),
        SimFlowPlant_HeatRecovWaterMaxFlowRate_ (this),
        SimFlowPlant_ExhOutletAirNodeName_ (this),
        SimFlowPlant_HeatExchngCalcMeth_ (this),
        SimFlowPlant_Meth1HeatExchngEffect_ (this),
        SimFlowPlant_Method2Paramhxs0_ (this),
        SimFlowPlant_Method2Paramhxs1_ (this),
        SimFlowPlant_Method2Paramhxs2_ (this),
        SimFlowPlant_Method2Paramhxs3_ (this),
        SimFlowPlant_Method2Paramhxs4_ (this),
        SimFlowPlant_Meth3H0GasCoef_ (this),
        SimFlowPlant_Meth3NdotGasRefCoef_ (this),
        SimFlowPlant_Meth3NCoef_ (this),
        SimFlowPlant_Meth3GasArea_ (this),
        SimFlowPlant_Meth3H0WaterCoef_ (this),
        SimFlowPlant_Meth3NDotWaterRefCoef_ (this),
        SimFlowPlant_Meth3MCoef_ (this),
        SimFlowPlant_Method3WaterArea_ (this),
        SimFlowPlant_Meth3FAdjFactor_ (this),
        SimFlowPlant_Meth4Hxl1Coef_ (this),
        SimFlowPlant_Meth4Hxl2Coef_ (this),
        SimFlowPlant_Meth4CondensationThresh_ (this)
      {
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger (const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger& x,
                                                                               ::xml_schema::flags f,
                                                                               ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowPlant_ElectricalGenerator (x, f, c),
        SimFlowPlant_Name_ (x.SimFlowPlant_Name_, f, this),
        SimFlowPlant_HeatRecovWaterInletNodeName_ (x.SimFlowPlant_HeatRecovWaterInletNodeName_, f, this),
        SimFlowPlant_HeatRecovWaterOutletNodeName_ (x.SimFlowPlant_HeatRecovWaterOutletNodeName_, f, this),
        SimFlowPlant_HeatRecovWaterMaxFlowRate_ (x.SimFlowPlant_HeatRecovWaterMaxFlowRate_, f, this),
        SimFlowPlant_ExhOutletAirNodeName_ (x.SimFlowPlant_ExhOutletAirNodeName_, f, this),
        SimFlowPlant_HeatExchngCalcMeth_ (x.SimFlowPlant_HeatExchngCalcMeth_, f, this),
        SimFlowPlant_Meth1HeatExchngEffect_ (x.SimFlowPlant_Meth1HeatExchngEffect_, f, this),
        SimFlowPlant_Method2Paramhxs0_ (x.SimFlowPlant_Method2Paramhxs0_, f, this),
        SimFlowPlant_Method2Paramhxs1_ (x.SimFlowPlant_Method2Paramhxs1_, f, this),
        SimFlowPlant_Method2Paramhxs2_ (x.SimFlowPlant_Method2Paramhxs2_, f, this),
        SimFlowPlant_Method2Paramhxs3_ (x.SimFlowPlant_Method2Paramhxs3_, f, this),
        SimFlowPlant_Method2Paramhxs4_ (x.SimFlowPlant_Method2Paramhxs4_, f, this),
        SimFlowPlant_Meth3H0GasCoef_ (x.SimFlowPlant_Meth3H0GasCoef_, f, this),
        SimFlowPlant_Meth3NdotGasRefCoef_ (x.SimFlowPlant_Meth3NdotGasRefCoef_, f, this),
        SimFlowPlant_Meth3NCoef_ (x.SimFlowPlant_Meth3NCoef_, f, this),
        SimFlowPlant_Meth3GasArea_ (x.SimFlowPlant_Meth3GasArea_, f, this),
        SimFlowPlant_Meth3H0WaterCoef_ (x.SimFlowPlant_Meth3H0WaterCoef_, f, this),
        SimFlowPlant_Meth3NDotWaterRefCoef_ (x.SimFlowPlant_Meth3NDotWaterRefCoef_, f, this),
        SimFlowPlant_Meth3MCoef_ (x.SimFlowPlant_Meth3MCoef_, f, this),
        SimFlowPlant_Method3WaterArea_ (x.SimFlowPlant_Method3WaterArea_, f, this),
        SimFlowPlant_Meth3FAdjFactor_ (x.SimFlowPlant_Meth3FAdjFactor_, f, this),
        SimFlowPlant_Meth4Hxl1Coef_ (x.SimFlowPlant_Meth4Hxl1Coef_, f, this),
        SimFlowPlant_Meth4Hxl2Coef_ (x.SimFlowPlant_Meth4Hxl2Coef_, f, this),
        SimFlowPlant_Meth4CondensationThresh_ (x.SimFlowPlant_Meth4CondensationThresh_, f, this)
      {
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger (const ::xercesc::DOMElement& e,
                                                                               ::xml_schema::flags f,
                                                                               ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowPlant_ElectricalGenerator (e, f | ::xml_schema::flags::base, c),
        SimFlowPlant_Name_ (this),
        SimFlowPlant_HeatRecovWaterInletNodeName_ (this),
        SimFlowPlant_HeatRecovWaterOutletNodeName_ (this),
        SimFlowPlant_HeatRecovWaterMaxFlowRate_ (this),
        SimFlowPlant_ExhOutletAirNodeName_ (this),
        SimFlowPlant_HeatExchngCalcMeth_ (this),
        SimFlowPlant_Meth1HeatExchngEffect_ (this),
        SimFlowPlant_Method2Paramhxs0_ (this),
        SimFlowPlant_Method2Paramhxs1_ (this),
        SimFlowPlant_Method2Paramhxs2_ (this),
        SimFlowPlant_Method2Paramhxs3_ (this),
        SimFlowPlant_Method2Paramhxs4_ (this),
        SimFlowPlant_Meth3H0GasCoef_ (this),
        SimFlowPlant_Meth3NdotGasRefCoef_ (this),
        SimFlowPlant_Meth3NCoef_ (this),
        SimFlowPlant_Meth3GasArea_ (this),
        SimFlowPlant_Meth3H0WaterCoef_ (this),
        SimFlowPlant_Meth3NDotWaterRefCoef_ (this),
        SimFlowPlant_Meth3MCoef_ (this),
        SimFlowPlant_Method3WaterArea_ (this),
        SimFlowPlant_Meth3FAdjFactor_ (this),
        SimFlowPlant_Meth4Hxl1Coef_ (this),
        SimFlowPlant_Meth4Hxl2Coef_ (this),
        SimFlowPlant_Meth4CondensationThresh_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimFlowPlant_ElectricalGenerator::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowPlant_Name
          //
          if (n.name () == "SimFlowPlant_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_Name_type > r (
              SimFlowPlant_Name_traits::create (i, f, this));

            if (!this->SimFlowPlant_Name_)
            {
              this->SimFlowPlant_Name_.set (r);
              continue;
            }
          }

          // SimFlowPlant_HeatRecovWaterInletNodeName
          //
          if (n.name () == "SimFlowPlant_HeatRecovWaterInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_HeatRecovWaterInletNodeName_type > r (
              SimFlowPlant_HeatRecovWaterInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowPlant_HeatRecovWaterInletNodeName_)
            {
              this->SimFlowPlant_HeatRecovWaterInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_HeatRecovWaterOutletNodeName
          //
          if (n.name () == "SimFlowPlant_HeatRecovWaterOutletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_HeatRecovWaterOutletNodeName_type > r (
              SimFlowPlant_HeatRecovWaterOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowPlant_HeatRecovWaterOutletNodeName_)
            {
              this->SimFlowPlant_HeatRecovWaterOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_HeatRecovWaterMaxFlowRate
          //
          if (n.name () == "SimFlowPlant_HeatRecovWaterMaxFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_HeatRecovWaterMaxFlowRate_)
            {
              this->SimFlowPlant_HeatRecovWaterMaxFlowRate_.set (SimFlowPlant_HeatRecovWaterMaxFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_ExhOutletAirNodeName
          //
          if (n.name () == "SimFlowPlant_ExhOutletAirNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_ExhOutletAirNodeName_type > r (
              SimFlowPlant_ExhOutletAirNodeName_traits::create (i, f, this));

            if (!this->SimFlowPlant_ExhOutletAirNodeName_)
            {
              this->SimFlowPlant_ExhOutletAirNodeName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_HeatExchngCalcMeth
          //
          if (n.name () == "SimFlowPlant_HeatExchngCalcMeth" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_HeatExchngCalcMeth_type > r (
              SimFlowPlant_HeatExchngCalcMeth_traits::create (i, f, this));

            if (!this->SimFlowPlant_HeatExchngCalcMeth_)
            {
              this->SimFlowPlant_HeatExchngCalcMeth_.set (r);
              continue;
            }
          }

          // SimFlowPlant_Meth1HeatExchngEffect
          //
          if (n.name () == "SimFlowPlant_Meth1HeatExchngEffect" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_Meth1HeatExchngEffect_)
            {
              this->SimFlowPlant_Meth1HeatExchngEffect_.set (SimFlowPlant_Meth1HeatExchngEffect_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_Method2Paramhxs0
          //
          if (n.name () == "SimFlowPlant_Method2Paramhxs0" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_Method2Paramhxs0_)
            {
              this->SimFlowPlant_Method2Paramhxs0_.set (SimFlowPlant_Method2Paramhxs0_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_Method2Paramhxs1
          //
          if (n.name () == "SimFlowPlant_Method2Paramhxs1" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_Method2Paramhxs1_)
            {
              this->SimFlowPlant_Method2Paramhxs1_.set (SimFlowPlant_Method2Paramhxs1_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_Method2Paramhxs2
          //
          if (n.name () == "SimFlowPlant_Method2Paramhxs2" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_Method2Paramhxs2_)
            {
              this->SimFlowPlant_Method2Paramhxs2_.set (SimFlowPlant_Method2Paramhxs2_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_Method2Paramhxs3
          //
          if (n.name () == "SimFlowPlant_Method2Paramhxs3" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_Method2Paramhxs3_)
            {
              this->SimFlowPlant_Method2Paramhxs3_.set (SimFlowPlant_Method2Paramhxs3_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_Method2Paramhxs4
          //
          if (n.name () == "SimFlowPlant_Method2Paramhxs4" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_Method2Paramhxs4_)
            {
              this->SimFlowPlant_Method2Paramhxs4_.set (SimFlowPlant_Method2Paramhxs4_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_Meth3H0GasCoef
          //
          if (n.name () == "SimFlowPlant_Meth3H0GasCoef" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_Meth3H0GasCoef_)
            {
              this->SimFlowPlant_Meth3H0GasCoef_.set (SimFlowPlant_Meth3H0GasCoef_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_Meth3NdotGasRefCoef
          //
          if (n.name () == "SimFlowPlant_Meth3NdotGasRefCoef" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_Meth3NdotGasRefCoef_)
            {
              this->SimFlowPlant_Meth3NdotGasRefCoef_.set (SimFlowPlant_Meth3NdotGasRefCoef_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_Meth3NCoef
          //
          if (n.name () == "SimFlowPlant_Meth3NCoef" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_Meth3NCoef_)
            {
              this->SimFlowPlant_Meth3NCoef_.set (SimFlowPlant_Meth3NCoef_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_Meth3GasArea
          //
          if (n.name () == "SimFlowPlant_Meth3GasArea" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_Meth3GasArea_)
            {
              this->SimFlowPlant_Meth3GasArea_.set (SimFlowPlant_Meth3GasArea_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_Meth3H0WaterCoef
          //
          if (n.name () == "SimFlowPlant_Meth3H0WaterCoef" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_Meth3H0WaterCoef_)
            {
              this->SimFlowPlant_Meth3H0WaterCoef_.set (SimFlowPlant_Meth3H0WaterCoef_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_Meth3NDotWaterRefCoef
          //
          if (n.name () == "SimFlowPlant_Meth3NDotWaterRefCoef" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_Meth3NDotWaterRefCoef_)
            {
              this->SimFlowPlant_Meth3NDotWaterRefCoef_.set (SimFlowPlant_Meth3NDotWaterRefCoef_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_Meth3MCoef
          //
          if (n.name () == "SimFlowPlant_Meth3MCoef" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_Meth3MCoef_)
            {
              this->SimFlowPlant_Meth3MCoef_.set (SimFlowPlant_Meth3MCoef_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_Method3WaterArea
          //
          if (n.name () == "SimFlowPlant_Method3WaterArea" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_Method3WaterArea_)
            {
              this->SimFlowPlant_Method3WaterArea_.set (SimFlowPlant_Method3WaterArea_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_Meth3FAdjFactor
          //
          if (n.name () == "SimFlowPlant_Meth3FAdjFactor" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_Meth3FAdjFactor_)
            {
              this->SimFlowPlant_Meth3FAdjFactor_.set (SimFlowPlant_Meth3FAdjFactor_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_Meth4Hxl1Coef
          //
          if (n.name () == "SimFlowPlant_Meth4Hxl1Coef" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_Meth4Hxl1Coef_)
            {
              this->SimFlowPlant_Meth4Hxl1Coef_.set (SimFlowPlant_Meth4Hxl1Coef_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_Meth4Hxl2Coef
          //
          if (n.name () == "SimFlowPlant_Meth4Hxl2Coef" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_Meth4Hxl2Coef_)
            {
              this->SimFlowPlant_Meth4Hxl2Coef_.set (SimFlowPlant_Meth4Hxl2Coef_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_Meth4CondensationThresh
          //
          if (n.name () == "SimFlowPlant_Meth4CondensationThresh" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_Meth4CondensationThresh_)
            {
              this->SimFlowPlant_Meth4CondensationThresh_.set (SimFlowPlant_Meth4CondensationThresh_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger* SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger (*this, f, c);
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger& SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      operator= (const SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimFlowPlant_ElectricalGenerator& > (*this) = x;
          this->SimFlowPlant_Name_ = x.SimFlowPlant_Name_;
          this->SimFlowPlant_HeatRecovWaterInletNodeName_ = x.SimFlowPlant_HeatRecovWaterInletNodeName_;
          this->SimFlowPlant_HeatRecovWaterOutletNodeName_ = x.SimFlowPlant_HeatRecovWaterOutletNodeName_;
          this->SimFlowPlant_HeatRecovWaterMaxFlowRate_ = x.SimFlowPlant_HeatRecovWaterMaxFlowRate_;
          this->SimFlowPlant_ExhOutletAirNodeName_ = x.SimFlowPlant_ExhOutletAirNodeName_;
          this->SimFlowPlant_HeatExchngCalcMeth_ = x.SimFlowPlant_HeatExchngCalcMeth_;
          this->SimFlowPlant_Meth1HeatExchngEffect_ = x.SimFlowPlant_Meth1HeatExchngEffect_;
          this->SimFlowPlant_Method2Paramhxs0_ = x.SimFlowPlant_Method2Paramhxs0_;
          this->SimFlowPlant_Method2Paramhxs1_ = x.SimFlowPlant_Method2Paramhxs1_;
          this->SimFlowPlant_Method2Paramhxs2_ = x.SimFlowPlant_Method2Paramhxs2_;
          this->SimFlowPlant_Method2Paramhxs3_ = x.SimFlowPlant_Method2Paramhxs3_;
          this->SimFlowPlant_Method2Paramhxs4_ = x.SimFlowPlant_Method2Paramhxs4_;
          this->SimFlowPlant_Meth3H0GasCoef_ = x.SimFlowPlant_Meth3H0GasCoef_;
          this->SimFlowPlant_Meth3NdotGasRefCoef_ = x.SimFlowPlant_Meth3NdotGasRefCoef_;
          this->SimFlowPlant_Meth3NCoef_ = x.SimFlowPlant_Meth3NCoef_;
          this->SimFlowPlant_Meth3GasArea_ = x.SimFlowPlant_Meth3GasArea_;
          this->SimFlowPlant_Meth3H0WaterCoef_ = x.SimFlowPlant_Meth3H0WaterCoef_;
          this->SimFlowPlant_Meth3NDotWaterRefCoef_ = x.SimFlowPlant_Meth3NDotWaterRefCoef_;
          this->SimFlowPlant_Meth3MCoef_ = x.SimFlowPlant_Meth3MCoef_;
          this->SimFlowPlant_Method3WaterArea_ = x.SimFlowPlant_Method3WaterArea_;
          this->SimFlowPlant_Meth3FAdjFactor_ = x.SimFlowPlant_Meth3FAdjFactor_;
          this->SimFlowPlant_Meth4Hxl1Coef_ = x.SimFlowPlant_Meth4Hxl1Coef_;
          this->SimFlowPlant_Meth4Hxl2Coef_ = x.SimFlowPlant_Meth4Hxl2Coef_;
          this->SimFlowPlant_Meth4CondensationThresh_ = x.SimFlowPlant_Meth4CondensationThresh_;
        }

        return *this;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger::
      ~SimFlowPlant_ElectricalGenerator_FuelCellExhaustGasToWaterHeatExchanger ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

