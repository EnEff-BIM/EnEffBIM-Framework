// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry
      // 

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_AvailSchedName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_AvailSchedName () const
      {
        return this->SimFlowEnergyTrans_AvailSchedName_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_AvailSchedName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_AvailSchedName ()
      {
        return this->SimFlowEnergyTrans_AvailSchedName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_AvailSchedName (const SimFlowEnergyTrans_AvailSchedName_type& x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_AvailSchedName (const SimFlowEnergyTrans_AvailSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_AvailSchedName (::std::auto_ptr< SimFlowEnergyTrans_AvailSchedName_type > x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_MaxWaterFlowRate_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_MaxWaterFlowRate () const
      {
        return this->SimFlowEnergyTrans_MaxWaterFlowRate_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_MaxWaterFlowRate_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_MaxWaterFlowRate ()
      {
        return this->SimFlowEnergyTrans_MaxWaterFlowRate_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_MaxWaterFlowRate (const SimFlowEnergyTrans_MaxWaterFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_MaxWaterFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_MaxWaterFlowRate (const SimFlowEnergyTrans_MaxWaterFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_MaxWaterFlowRate_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_WaterInletNodeName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_WaterInletNodeName () const
      {
        return this->SimFlowEnergyTrans_WaterInletNodeName_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_WaterInletNodeName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_WaterInletNodeName ()
      {
        return this->SimFlowEnergyTrans_WaterInletNodeName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_WaterInletNodeName (const SimFlowEnergyTrans_WaterInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_WaterInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_WaterInletNodeName (const SimFlowEnergyTrans_WaterInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_WaterInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_WaterInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_WaterInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_WaterInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_WaterOutletNodeName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_WaterOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_WaterOutletNodeName_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_WaterOutletNodeName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_WaterOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_WaterOutletNodeName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_WaterOutletNodeName (const SimFlowEnergyTrans_WaterOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_WaterOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_WaterOutletNodeName (const SimFlowEnergyTrans_WaterOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_WaterOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_WaterOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_WaterOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_WaterOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_AirInNodeName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_AirInNodeName () const
      {
        return this->SimFlowEnergyTrans_AirInNodeName_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_AirInNodeName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_AirInNodeName ()
      {
        return this->SimFlowEnergyTrans_AirInNodeName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_AirInNodeName (const SimFlowEnergyTrans_AirInNodeName_type& x)
      {
        this->SimFlowEnergyTrans_AirInNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_AirInNodeName (const SimFlowEnergyTrans_AirInNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_AirInNodeName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_AirInNodeName (::std::auto_ptr< SimFlowEnergyTrans_AirInNodeName_type > x)
      {
        this->SimFlowEnergyTrans_AirInNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_AirOutNodeName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_AirOutNodeName () const
      {
        return this->SimFlowEnergyTrans_AirOutNodeName_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_AirOutNodeName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_AirOutNodeName ()
      {
        return this->SimFlowEnergyTrans_AirOutNodeName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_AirOutNodeName (const SimFlowEnergyTrans_AirOutNodeName_type& x)
      {
        this->SimFlowEnergyTrans_AirOutNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_AirOutNodeName (const SimFlowEnergyTrans_AirOutNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_AirOutNodeName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_AirOutNodeName (::std::auto_ptr< SimFlowEnergyTrans_AirOutNodeName_type > x)
      {
        this->SimFlowEnergyTrans_AirOutNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_CondsCollectionWaterStorageTankName () const
      {
        return this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_CondsCollectionWaterStorageTankName ()
      {
        return this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_CondsCollectionWaterStorageTankName (const SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_type& x)
      {
        this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_CondsCollectionWaterStorageTankName (const SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_optional& x)
      {
        this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_CondsCollectionWaterStorageTankName (::std::auto_ptr< SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_type > x)
      {
        this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_TubeOutsideSurfArea_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TubeOutsideSurfArea () const
      {
        return this->SimFlowEnergyTrans_TubeOutsideSurfArea_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_TubeOutsideSurfArea_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TubeOutsideSurfArea ()
      {
        return this->SimFlowEnergyTrans_TubeOutsideSurfArea_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TubeOutsideSurfArea (const SimFlowEnergyTrans_TubeOutsideSurfArea_type& x)
      {
        this->SimFlowEnergyTrans_TubeOutsideSurfArea_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TubeOutsideSurfArea (const SimFlowEnergyTrans_TubeOutsideSurfArea_optional& x)
      {
        this->SimFlowEnergyTrans_TubeOutsideSurfArea_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_TotalTubesideArea_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TotalTubesideArea () const
      {
        return this->SimFlowEnergyTrans_TotalTubesideArea_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_TotalTubesideArea_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TotalTubesideArea ()
      {
        return this->SimFlowEnergyTrans_TotalTubesideArea_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TotalTubesideArea (const SimFlowEnergyTrans_TotalTubesideArea_type& x)
      {
        this->SimFlowEnergyTrans_TotalTubesideArea_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TotalTubesideArea (const SimFlowEnergyTrans_TotalTubesideArea_optional& x)
      {
        this->SimFlowEnergyTrans_TotalTubesideArea_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_FinSurfArea_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_FinSurfArea () const
      {
        return this->SimFlowEnergyTrans_FinSurfArea_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_FinSurfArea_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_FinSurfArea ()
      {
        return this->SimFlowEnergyTrans_FinSurfArea_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_FinSurfArea (const SimFlowEnergyTrans_FinSurfArea_type& x)
      {
        this->SimFlowEnergyTrans_FinSurfArea_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_FinSurfArea (const SimFlowEnergyTrans_FinSurfArea_optional& x)
      {
        this->SimFlowEnergyTrans_FinSurfArea_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_MinAirflowArea_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_MinAirflowArea () const
      {
        return this->SimFlowEnergyTrans_MinAirflowArea_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_MinAirflowArea_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_MinAirflowArea ()
      {
        return this->SimFlowEnergyTrans_MinAirflowArea_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_MinAirflowArea (const SimFlowEnergyTrans_MinAirflowArea_type& x)
      {
        this->SimFlowEnergyTrans_MinAirflowArea_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_MinAirflowArea (const SimFlowEnergyTrans_MinAirflowArea_optional& x)
      {
        this->SimFlowEnergyTrans_MinAirflowArea_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_CoilCntlType_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_CoilCntlType () const
      {
        return this->SimFlowEnergyTrans_CoilCntlType_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_CoilCntlType_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_CoilCntlType ()
      {
        return this->SimFlowEnergyTrans_CoilCntlType_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_CoilCntlType (const SimFlowEnergyTrans_CoilCntlType_type& x)
      {
        this->SimFlowEnergyTrans_CoilCntlType_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_CoilCntlType (const SimFlowEnergyTrans_CoilCntlType_optional& x)
      {
        this->SimFlowEnergyTrans_CoilCntlType_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_FinDiam_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_FinDiam () const
      {
        return this->SimFlowEnergyTrans_FinDiam_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_FinDiam_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_FinDiam ()
      {
        return this->SimFlowEnergyTrans_FinDiam_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_FinDiam (const SimFlowEnergyTrans_FinDiam_type& x)
      {
        this->SimFlowEnergyTrans_FinDiam_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_FinDiam (const SimFlowEnergyTrans_FinDiam_optional& x)
      {
        this->SimFlowEnergyTrans_FinDiam_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_FinThick_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_FinThick () const
      {
        return this->SimFlowEnergyTrans_FinThick_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_FinThick_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_FinThick ()
      {
        return this->SimFlowEnergyTrans_FinThick_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_FinThick (const SimFlowEnergyTrans_FinThick_type& x)
      {
        this->SimFlowEnergyTrans_FinThick_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_FinThick (const SimFlowEnergyTrans_FinThick_optional& x)
      {
        this->SimFlowEnergyTrans_FinThick_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_TubesideDiam_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TubesideDiam () const
      {
        return this->SimFlowEnergyTrans_TubesideDiam_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_TubesideDiam_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TubesideDiam ()
      {
        return this->SimFlowEnergyTrans_TubesideDiam_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TubesideDiam (const SimFlowEnergyTrans_TubesideDiam_type& x)
      {
        this->SimFlowEnergyTrans_TubesideDiam_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TubesideDiam (const SimFlowEnergyTrans_TubesideDiam_optional& x)
      {
        this->SimFlowEnergyTrans_TubesideDiam_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_TubeOutsideDiam_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TubeOutsideDiam () const
      {
        return this->SimFlowEnergyTrans_TubeOutsideDiam_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_TubeOutsideDiam_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TubeOutsideDiam ()
      {
        return this->SimFlowEnergyTrans_TubeOutsideDiam_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TubeOutsideDiam (const SimFlowEnergyTrans_TubeOutsideDiam_type& x)
      {
        this->SimFlowEnergyTrans_TubeOutsideDiam_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TubeOutsideDiam (const SimFlowEnergyTrans_TubeOutsideDiam_optional& x)
      {
        this->SimFlowEnergyTrans_TubeOutsideDiam_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_TubeThermalCond_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TubeThermalCond () const
      {
        return this->SimFlowEnergyTrans_TubeThermalCond_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_TubeThermalCond_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TubeThermalCond ()
      {
        return this->SimFlowEnergyTrans_TubeThermalCond_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TubeThermalCond (const SimFlowEnergyTrans_TubeThermalCond_type& x)
      {
        this->SimFlowEnergyTrans_TubeThermalCond_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TubeThermalCond (const SimFlowEnergyTrans_TubeThermalCond_optional& x)
      {
        this->SimFlowEnergyTrans_TubeThermalCond_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_FinThermalCond_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_FinThermalCond () const
      {
        return this->SimFlowEnergyTrans_FinThermalCond_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_FinThermalCond_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_FinThermalCond ()
      {
        return this->SimFlowEnergyTrans_FinThermalCond_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_FinThermalCond (const SimFlowEnergyTrans_FinThermalCond_type& x)
      {
        this->SimFlowEnergyTrans_FinThermalCond_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_FinThermalCond (const SimFlowEnergyTrans_FinThermalCond_optional& x)
      {
        this->SimFlowEnergyTrans_FinThermalCond_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_FinSpacing_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_FinSpacing () const
      {
        return this->SimFlowEnergyTrans_FinSpacing_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_FinSpacing_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_FinSpacing ()
      {
        return this->SimFlowEnergyTrans_FinSpacing_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_FinSpacing (const SimFlowEnergyTrans_FinSpacing_type& x)
      {
        this->SimFlowEnergyTrans_FinSpacing_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_FinSpacing (const SimFlowEnergyTrans_FinSpacing_optional& x)
      {
        this->SimFlowEnergyTrans_FinSpacing_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_TubeDepthSpacing_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TubeDepthSpacing () const
      {
        return this->SimFlowEnergyTrans_TubeDepthSpacing_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_TubeDepthSpacing_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TubeDepthSpacing ()
      {
        return this->SimFlowEnergyTrans_TubeDepthSpacing_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TubeDepthSpacing (const SimFlowEnergyTrans_TubeDepthSpacing_type& x)
      {
        this->SimFlowEnergyTrans_TubeDepthSpacing_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_TubeDepthSpacing (const SimFlowEnergyTrans_TubeDepthSpacing_optional& x)
      {
        this->SimFlowEnergyTrans_TubeDepthSpacing_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_NumTubeRows_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_NumTubeRows () const
      {
        return this->SimFlowEnergyTrans_NumTubeRows_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_NumTubeRows_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_NumTubeRows ()
      {
        return this->SimFlowEnergyTrans_NumTubeRows_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_NumTubeRows (const SimFlowEnergyTrans_NumTubeRows_type& x)
      {
        this->SimFlowEnergyTrans_NumTubeRows_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_NumTubeRows (const SimFlowEnergyTrans_NumTubeRows_optional& x)
      {
        this->SimFlowEnergyTrans_NumTubeRows_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_NumTubesPerRow_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_NumTubesPerRow () const
      {
        return this->SimFlowEnergyTrans_NumTubesPerRow_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::SimFlowEnergyTrans_NumTubesPerRow_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_NumTubesPerRow ()
      {
        return this->SimFlowEnergyTrans_NumTubesPerRow_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_NumTubesPerRow (const SimFlowEnergyTrans_NumTubesPerRow_type& x)
      {
        this->SimFlowEnergyTrans_NumTubesPerRow_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTrans_NumTubesPerRow (const SimFlowEnergyTrans_NumTubesPerRow_optional& x)
      {
        this->SimFlowEnergyTrans_NumTubesPerRow_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::Controller_WaterCoil_Name_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_Name () const
      {
        return this->Controller_WaterCoil_Name_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::Controller_WaterCoil_Name_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_Name ()
      {
        return this->Controller_WaterCoil_Name_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_Name (const Controller_WaterCoil_Name_type& x)
      {
        this->Controller_WaterCoil_Name_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_Name (const Controller_WaterCoil_Name_optional& x)
      {
        this->Controller_WaterCoil_Name_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_Name (::std::auto_ptr< Controller_WaterCoil_Name_type > x)
      {
        this->Controller_WaterCoil_Name_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::Controller_WaterCoil_CntlVar_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_CntlVar () const
      {
        return this->Controller_WaterCoil_CntlVar_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::Controller_WaterCoil_CntlVar_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_CntlVar ()
      {
        return this->Controller_WaterCoil_CntlVar_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_CntlVar (const Controller_WaterCoil_CntlVar_type& x)
      {
        this->Controller_WaterCoil_CntlVar_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_CntlVar (const Controller_WaterCoil_CntlVar_optional& x)
      {
        this->Controller_WaterCoil_CntlVar_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_CntlVar (::std::auto_ptr< Controller_WaterCoil_CntlVar_type > x)
      {
        this->Controller_WaterCoil_CntlVar_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::Controller_WaterCoil_Action_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_Action () const
      {
        return this->Controller_WaterCoil_Action_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::Controller_WaterCoil_Action_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_Action ()
      {
        return this->Controller_WaterCoil_Action_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_Action (const Controller_WaterCoil_Action_type& x)
      {
        this->Controller_WaterCoil_Action_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_Action (const Controller_WaterCoil_Action_optional& x)
      {
        this->Controller_WaterCoil_Action_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_Action (::std::auto_ptr< Controller_WaterCoil_Action_type > x)
      {
        this->Controller_WaterCoil_Action_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::Controller_WaterCoil_ActuatorVariable_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_ActuatorVariable () const
      {
        return this->Controller_WaterCoil_ActuatorVariable_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::Controller_WaterCoil_ActuatorVariable_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_ActuatorVariable ()
      {
        return this->Controller_WaterCoil_ActuatorVariable_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_ActuatorVariable (const Controller_WaterCoil_ActuatorVariable_type& x)
      {
        this->Controller_WaterCoil_ActuatorVariable_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_ActuatorVariable (const Controller_WaterCoil_ActuatorVariable_optional& x)
      {
        this->Controller_WaterCoil_ActuatorVariable_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_ActuatorVariable (::std::auto_ptr< Controller_WaterCoil_ActuatorVariable_type > x)
      {
        this->Controller_WaterCoil_ActuatorVariable_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::Controller_WaterCoil_SensorNodeName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_SensorNodeName () const
      {
        return this->Controller_WaterCoil_SensorNodeName_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::Controller_WaterCoil_SensorNodeName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_SensorNodeName ()
      {
        return this->Controller_WaterCoil_SensorNodeName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_SensorNodeName (const Controller_WaterCoil_SensorNodeName_type& x)
      {
        this->Controller_WaterCoil_SensorNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_SensorNodeName (const Controller_WaterCoil_SensorNodeName_optional& x)
      {
        this->Controller_WaterCoil_SensorNodeName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_SensorNodeName (::std::auto_ptr< Controller_WaterCoil_SensorNodeName_type > x)
      {
        this->Controller_WaterCoil_SensorNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::Controller_WaterCoil_ActuatorNodeName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_ActuatorNodeName () const
      {
        return this->Controller_WaterCoil_ActuatorNodeName_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::Controller_WaterCoil_ActuatorNodeName_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_ActuatorNodeName ()
      {
        return this->Controller_WaterCoil_ActuatorNodeName_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_ActuatorNodeName (const Controller_WaterCoil_ActuatorNodeName_type& x)
      {
        this->Controller_WaterCoil_ActuatorNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_ActuatorNodeName (const Controller_WaterCoil_ActuatorNodeName_optional& x)
      {
        this->Controller_WaterCoil_ActuatorNodeName_ = x;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_ActuatorNodeName (::std::auto_ptr< Controller_WaterCoil_ActuatorNodeName_type > x)
      {
        this->Controller_WaterCoil_ActuatorNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::Controller_WaterCoil_CntrlrConvergenceTolerance_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_CntrlrConvergenceTolerance () const
      {
        return this->Controller_WaterCoil_CntrlrConvergenceTolerance_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::Controller_WaterCoil_CntrlrConvergenceTolerance_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_CntrlrConvergenceTolerance ()
      {
        return this->Controller_WaterCoil_CntrlrConvergenceTolerance_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_CntrlrConvergenceTolerance (const Controller_WaterCoil_CntrlrConvergenceTolerance_type& x)
      {
        this->Controller_WaterCoil_CntrlrConvergenceTolerance_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_CntrlrConvergenceTolerance (const Controller_WaterCoil_CntrlrConvergenceTolerance_optional& x)
      {
        this->Controller_WaterCoil_CntrlrConvergenceTolerance_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::Controller_WaterCoil_MaxActuatedFlow_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_MaxActuatedFlow () const
      {
        return this->Controller_WaterCoil_MaxActuatedFlow_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::Controller_WaterCoil_MaxActuatedFlow_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_MaxActuatedFlow ()
      {
        return this->Controller_WaterCoil_MaxActuatedFlow_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_MaxActuatedFlow (const Controller_WaterCoil_MaxActuatedFlow_type& x)
      {
        this->Controller_WaterCoil_MaxActuatedFlow_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_MaxActuatedFlow (const Controller_WaterCoil_MaxActuatedFlow_optional& x)
      {
        this->Controller_WaterCoil_MaxActuatedFlow_ = x;
      }

      const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::Controller_WaterCoil_MinActuatedFlow_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_MinActuatedFlow () const
      {
        return this->Controller_WaterCoil_MinActuatedFlow_;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::Controller_WaterCoil_MinActuatedFlow_optional& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_MinActuatedFlow ()
      {
        return this->Controller_WaterCoil_MinActuatedFlow_;
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_MinActuatedFlow (const Controller_WaterCoil_MinActuatedFlow_type& x)
      {
        this->Controller_WaterCoil_MinActuatedFlow_.set (x);
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      Controller_WaterCoil_MinActuatedFlow (const Controller_WaterCoil_MinActuatedFlow_optional& x)
      {
        this->Controller_WaterCoil_MinActuatedFlow_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry
      //

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry ()
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_CoolingCoilWater (),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_MaxWaterFlowRate_ (this),
        SimFlowEnergyTrans_WaterInletNodeName_ (this),
        SimFlowEnergyTrans_WaterOutletNodeName_ (this),
        SimFlowEnergyTrans_AirInNodeName_ (this),
        SimFlowEnergyTrans_AirOutNodeName_ (this),
        SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_ (this),
        SimFlowEnergyTrans_TubeOutsideSurfArea_ (this),
        SimFlowEnergyTrans_TotalTubesideArea_ (this),
        SimFlowEnergyTrans_FinSurfArea_ (this),
        SimFlowEnergyTrans_MinAirflowArea_ (this),
        SimFlowEnergyTrans_CoilCntlType_ (this),
        SimFlowEnergyTrans_FinDiam_ (this),
        SimFlowEnergyTrans_FinThick_ (this),
        SimFlowEnergyTrans_TubesideDiam_ (this),
        SimFlowEnergyTrans_TubeOutsideDiam_ (this),
        SimFlowEnergyTrans_TubeThermalCond_ (this),
        SimFlowEnergyTrans_FinThermalCond_ (this),
        SimFlowEnergyTrans_FinSpacing_ (this),
        SimFlowEnergyTrans_TubeDepthSpacing_ (this),
        SimFlowEnergyTrans_NumTubeRows_ (this),
        SimFlowEnergyTrans_NumTubesPerRow_ (this),
        Controller_WaterCoil_Name_ (this),
        Controller_WaterCoil_CntlVar_ (this),
        Controller_WaterCoil_Action_ (this),
        Controller_WaterCoil_ActuatorVariable_ (this),
        Controller_WaterCoil_SensorNodeName_ (this),
        Controller_WaterCoil_ActuatorNodeName_ (this),
        Controller_WaterCoil_CntrlrConvergenceTolerance_ (this),
        Controller_WaterCoil_MaxActuatedFlow_ (this),
        Controller_WaterCoil_MinActuatedFlow_ (this)
      {
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_CoolingCoilWater (RefId),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_MaxWaterFlowRate_ (this),
        SimFlowEnergyTrans_WaterInletNodeName_ (this),
        SimFlowEnergyTrans_WaterOutletNodeName_ (this),
        SimFlowEnergyTrans_AirInNodeName_ (this),
        SimFlowEnergyTrans_AirOutNodeName_ (this),
        SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_ (this),
        SimFlowEnergyTrans_TubeOutsideSurfArea_ (this),
        SimFlowEnergyTrans_TotalTubesideArea_ (this),
        SimFlowEnergyTrans_FinSurfArea_ (this),
        SimFlowEnergyTrans_MinAirflowArea_ (this),
        SimFlowEnergyTrans_CoilCntlType_ (this),
        SimFlowEnergyTrans_FinDiam_ (this),
        SimFlowEnergyTrans_FinThick_ (this),
        SimFlowEnergyTrans_TubesideDiam_ (this),
        SimFlowEnergyTrans_TubeOutsideDiam_ (this),
        SimFlowEnergyTrans_TubeThermalCond_ (this),
        SimFlowEnergyTrans_FinThermalCond_ (this),
        SimFlowEnergyTrans_FinSpacing_ (this),
        SimFlowEnergyTrans_TubeDepthSpacing_ (this),
        SimFlowEnergyTrans_NumTubeRows_ (this),
        SimFlowEnergyTrans_NumTubesPerRow_ (this),
        Controller_WaterCoil_Name_ (this),
        Controller_WaterCoil_CntlVar_ (this),
        Controller_WaterCoil_Action_ (this),
        Controller_WaterCoil_ActuatorVariable_ (this),
        Controller_WaterCoil_SensorNodeName_ (this),
        Controller_WaterCoil_ActuatorNodeName_ (this),
        Controller_WaterCoil_CntrlrConvergenceTolerance_ (this),
        Controller_WaterCoil_MaxActuatedFlow_ (this),
        Controller_WaterCoil_MinActuatedFlow_ (this)
      {
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry (const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry& x,
                                                                                  ::xml_schema::flags f,
                                                                                  ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_CoolingCoilWater (x, f, c),
        SimFlowEnergyTrans_AvailSchedName_ (x.SimFlowEnergyTrans_AvailSchedName_, f, this),
        SimFlowEnergyTrans_MaxWaterFlowRate_ (x.SimFlowEnergyTrans_MaxWaterFlowRate_, f, this),
        SimFlowEnergyTrans_WaterInletNodeName_ (x.SimFlowEnergyTrans_WaterInletNodeName_, f, this),
        SimFlowEnergyTrans_WaterOutletNodeName_ (x.SimFlowEnergyTrans_WaterOutletNodeName_, f, this),
        SimFlowEnergyTrans_AirInNodeName_ (x.SimFlowEnergyTrans_AirInNodeName_, f, this),
        SimFlowEnergyTrans_AirOutNodeName_ (x.SimFlowEnergyTrans_AirOutNodeName_, f, this),
        SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_ (x.SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_, f, this),
        SimFlowEnergyTrans_TubeOutsideSurfArea_ (x.SimFlowEnergyTrans_TubeOutsideSurfArea_, f, this),
        SimFlowEnergyTrans_TotalTubesideArea_ (x.SimFlowEnergyTrans_TotalTubesideArea_, f, this),
        SimFlowEnergyTrans_FinSurfArea_ (x.SimFlowEnergyTrans_FinSurfArea_, f, this),
        SimFlowEnergyTrans_MinAirflowArea_ (x.SimFlowEnergyTrans_MinAirflowArea_, f, this),
        SimFlowEnergyTrans_CoilCntlType_ (x.SimFlowEnergyTrans_CoilCntlType_, f, this),
        SimFlowEnergyTrans_FinDiam_ (x.SimFlowEnergyTrans_FinDiam_, f, this),
        SimFlowEnergyTrans_FinThick_ (x.SimFlowEnergyTrans_FinThick_, f, this),
        SimFlowEnergyTrans_TubesideDiam_ (x.SimFlowEnergyTrans_TubesideDiam_, f, this),
        SimFlowEnergyTrans_TubeOutsideDiam_ (x.SimFlowEnergyTrans_TubeOutsideDiam_, f, this),
        SimFlowEnergyTrans_TubeThermalCond_ (x.SimFlowEnergyTrans_TubeThermalCond_, f, this),
        SimFlowEnergyTrans_FinThermalCond_ (x.SimFlowEnergyTrans_FinThermalCond_, f, this),
        SimFlowEnergyTrans_FinSpacing_ (x.SimFlowEnergyTrans_FinSpacing_, f, this),
        SimFlowEnergyTrans_TubeDepthSpacing_ (x.SimFlowEnergyTrans_TubeDepthSpacing_, f, this),
        SimFlowEnergyTrans_NumTubeRows_ (x.SimFlowEnergyTrans_NumTubeRows_, f, this),
        SimFlowEnergyTrans_NumTubesPerRow_ (x.SimFlowEnergyTrans_NumTubesPerRow_, f, this),
        Controller_WaterCoil_Name_ (x.Controller_WaterCoil_Name_, f, this),
        Controller_WaterCoil_CntlVar_ (x.Controller_WaterCoil_CntlVar_, f, this),
        Controller_WaterCoil_Action_ (x.Controller_WaterCoil_Action_, f, this),
        Controller_WaterCoil_ActuatorVariable_ (x.Controller_WaterCoil_ActuatorVariable_, f, this),
        Controller_WaterCoil_SensorNodeName_ (x.Controller_WaterCoil_SensorNodeName_, f, this),
        Controller_WaterCoil_ActuatorNodeName_ (x.Controller_WaterCoil_ActuatorNodeName_, f, this),
        Controller_WaterCoil_CntrlrConvergenceTolerance_ (x.Controller_WaterCoil_CntrlrConvergenceTolerance_, f, this),
        Controller_WaterCoil_MaxActuatedFlow_ (x.Controller_WaterCoil_MaxActuatedFlow_, f, this),
        Controller_WaterCoil_MinActuatedFlow_ (x.Controller_WaterCoil_MinActuatedFlow_, f, this)
      {
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry (const ::xercesc::DOMElement& e,
                                                                                  ::xml_schema::flags f,
                                                                                  ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_CoolingCoilWater (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_MaxWaterFlowRate_ (this),
        SimFlowEnergyTrans_WaterInletNodeName_ (this),
        SimFlowEnergyTrans_WaterOutletNodeName_ (this),
        SimFlowEnergyTrans_AirInNodeName_ (this),
        SimFlowEnergyTrans_AirOutNodeName_ (this),
        SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_ (this),
        SimFlowEnergyTrans_TubeOutsideSurfArea_ (this),
        SimFlowEnergyTrans_TotalTubesideArea_ (this),
        SimFlowEnergyTrans_FinSurfArea_ (this),
        SimFlowEnergyTrans_MinAirflowArea_ (this),
        SimFlowEnergyTrans_CoilCntlType_ (this),
        SimFlowEnergyTrans_FinDiam_ (this),
        SimFlowEnergyTrans_FinThick_ (this),
        SimFlowEnergyTrans_TubesideDiam_ (this),
        SimFlowEnergyTrans_TubeOutsideDiam_ (this),
        SimFlowEnergyTrans_TubeThermalCond_ (this),
        SimFlowEnergyTrans_FinThermalCond_ (this),
        SimFlowEnergyTrans_FinSpacing_ (this),
        SimFlowEnergyTrans_TubeDepthSpacing_ (this),
        SimFlowEnergyTrans_NumTubeRows_ (this),
        SimFlowEnergyTrans_NumTubesPerRow_ (this),
        Controller_WaterCoil_Name_ (this),
        Controller_WaterCoil_CntlVar_ (this),
        Controller_WaterCoil_Action_ (this),
        Controller_WaterCoil_ActuatorVariable_ (this),
        Controller_WaterCoil_SensorNodeName_ (this),
        Controller_WaterCoil_ActuatorNodeName_ (this),
        Controller_WaterCoil_CntrlrConvergenceTolerance_ (this),
        Controller_WaterCoil_MaxActuatedFlow_ (this),
        Controller_WaterCoil_MinActuatedFlow_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimFlowEnergyTransfer_CoolingCoilWater::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTrans_AvailSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_AvailSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AvailSchedName_type > r (
              SimFlowEnergyTrans_AvailSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AvailSchedName_)
            {
              this->SimFlowEnergyTrans_AvailSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_MaxWaterFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_MaxWaterFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MaxWaterFlowRate_)
            {
              this->SimFlowEnergyTrans_MaxWaterFlowRate_.set (SimFlowEnergyTrans_MaxWaterFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_WaterInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_WaterInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_WaterInletNodeName_type > r (
              SimFlowEnergyTrans_WaterInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_WaterInletNodeName_)
            {
              this->SimFlowEnergyTrans_WaterInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_WaterOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_WaterOutletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_WaterOutletNodeName_type > r (
              SimFlowEnergyTrans_WaterOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_WaterOutletNodeName_)
            {
              this->SimFlowEnergyTrans_WaterOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_AirInNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_AirInNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AirInNodeName_type > r (
              SimFlowEnergyTrans_AirInNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AirInNodeName_)
            {
              this->SimFlowEnergyTrans_AirInNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_AirOutNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_AirOutNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AirOutNodeName_type > r (
              SimFlowEnergyTrans_AirOutNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AirOutNodeName_)
            {
              this->SimFlowEnergyTrans_AirOutNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CondsCollectionWaterStorageTankName
          //
          if (n.name () == "SimFlowEnergyTrans_CondsCollectionWaterStorageTankName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_type > r (
              SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_)
            {
              this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_TubeOutsideSurfArea
          //
          if (n.name () == "SimFlowEnergyTrans_TubeOutsideSurfArea" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_TubeOutsideSurfArea_)
            {
              this->SimFlowEnergyTrans_TubeOutsideSurfArea_.set (SimFlowEnergyTrans_TubeOutsideSurfArea_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_TotalTubesideArea
          //
          if (n.name () == "SimFlowEnergyTrans_TotalTubesideArea" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_TotalTubesideArea_)
            {
              this->SimFlowEnergyTrans_TotalTubesideArea_.set (SimFlowEnergyTrans_TotalTubesideArea_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_FinSurfArea
          //
          if (n.name () == "SimFlowEnergyTrans_FinSurfArea" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_FinSurfArea_)
            {
              this->SimFlowEnergyTrans_FinSurfArea_.set (SimFlowEnergyTrans_FinSurfArea_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_MinAirflowArea
          //
          if (n.name () == "SimFlowEnergyTrans_MinAirflowArea" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MinAirflowArea_)
            {
              this->SimFlowEnergyTrans_MinAirflowArea_.set (SimFlowEnergyTrans_MinAirflowArea_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_CoilCntlType
          //
          if (n.name () == "SimFlowEnergyTrans_CoilCntlType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_CoilCntlType_)
            {
              this->SimFlowEnergyTrans_CoilCntlType_.set (SimFlowEnergyTrans_CoilCntlType_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_FinDiam
          //
          if (n.name () == "SimFlowEnergyTrans_FinDiam" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_FinDiam_)
            {
              this->SimFlowEnergyTrans_FinDiam_.set (SimFlowEnergyTrans_FinDiam_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_FinThick
          //
          if (n.name () == "SimFlowEnergyTrans_FinThick" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_FinThick_)
            {
              this->SimFlowEnergyTrans_FinThick_.set (SimFlowEnergyTrans_FinThick_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_TubesideDiam
          //
          if (n.name () == "SimFlowEnergyTrans_TubesideDiam" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_TubesideDiam_)
            {
              this->SimFlowEnergyTrans_TubesideDiam_.set (SimFlowEnergyTrans_TubesideDiam_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_TubeOutsideDiam
          //
          if (n.name () == "SimFlowEnergyTrans_TubeOutsideDiam" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_TubeOutsideDiam_)
            {
              this->SimFlowEnergyTrans_TubeOutsideDiam_.set (SimFlowEnergyTrans_TubeOutsideDiam_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_TubeThermalCond
          //
          if (n.name () == "SimFlowEnergyTrans_TubeThermalCond" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_TubeThermalCond_)
            {
              this->SimFlowEnergyTrans_TubeThermalCond_.set (SimFlowEnergyTrans_TubeThermalCond_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_FinThermalCond
          //
          if (n.name () == "SimFlowEnergyTrans_FinThermalCond" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_FinThermalCond_)
            {
              this->SimFlowEnergyTrans_FinThermalCond_.set (SimFlowEnergyTrans_FinThermalCond_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_FinSpacing
          //
          if (n.name () == "SimFlowEnergyTrans_FinSpacing" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_FinSpacing_)
            {
              this->SimFlowEnergyTrans_FinSpacing_.set (SimFlowEnergyTrans_FinSpacing_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_TubeDepthSpacing
          //
          if (n.name () == "SimFlowEnergyTrans_TubeDepthSpacing" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_TubeDepthSpacing_)
            {
              this->SimFlowEnergyTrans_TubeDepthSpacing_.set (SimFlowEnergyTrans_TubeDepthSpacing_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_NumTubeRows
          //
          if (n.name () == "SimFlowEnergyTrans_NumTubeRows" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NumTubeRows_)
            {
              this->SimFlowEnergyTrans_NumTubeRows_.set (SimFlowEnergyTrans_NumTubeRows_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_NumTubesPerRow
          //
          if (n.name () == "SimFlowEnergyTrans_NumTubesPerRow" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NumTubesPerRow_)
            {
              this->SimFlowEnergyTrans_NumTubesPerRow_.set (SimFlowEnergyTrans_NumTubesPerRow_traits::create (i, f, this));
              continue;
            }
          }

          // Controller_WaterCoil_Name
          //
          if (n.name () == "Controller_WaterCoil_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< Controller_WaterCoil_Name_type > r (
              Controller_WaterCoil_Name_traits::create (i, f, this));

            if (!this->Controller_WaterCoil_Name_)
            {
              this->Controller_WaterCoil_Name_.set (r);
              continue;
            }
          }

          // Controller_WaterCoil_CntlVar
          //
          if (n.name () == "Controller_WaterCoil_CntlVar" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< Controller_WaterCoil_CntlVar_type > r (
              Controller_WaterCoil_CntlVar_traits::create (i, f, this));

            if (!this->Controller_WaterCoil_CntlVar_)
            {
              this->Controller_WaterCoil_CntlVar_.set (r);
              continue;
            }
          }

          // Controller_WaterCoil_Action
          //
          if (n.name () == "Controller_WaterCoil_Action" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< Controller_WaterCoil_Action_type > r (
              Controller_WaterCoil_Action_traits::create (i, f, this));

            if (!this->Controller_WaterCoil_Action_)
            {
              this->Controller_WaterCoil_Action_.set (r);
              continue;
            }
          }

          // Controller_WaterCoil_ActuatorVariable
          //
          if (n.name () == "Controller_WaterCoil_ActuatorVariable" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< Controller_WaterCoil_ActuatorVariable_type > r (
              Controller_WaterCoil_ActuatorVariable_traits::create (i, f, this));

            if (!this->Controller_WaterCoil_ActuatorVariable_)
            {
              this->Controller_WaterCoil_ActuatorVariable_.set (r);
              continue;
            }
          }

          // Controller_WaterCoil_SensorNodeName
          //
          if (n.name () == "Controller_WaterCoil_SensorNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< Controller_WaterCoil_SensorNodeName_type > r (
              Controller_WaterCoil_SensorNodeName_traits::create (i, f, this));

            if (!this->Controller_WaterCoil_SensorNodeName_)
            {
              this->Controller_WaterCoil_SensorNodeName_.set (r);
              continue;
            }
          }

          // Controller_WaterCoil_ActuatorNodeName
          //
          if (n.name () == "Controller_WaterCoil_ActuatorNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< Controller_WaterCoil_ActuatorNodeName_type > r (
              Controller_WaterCoil_ActuatorNodeName_traits::create (i, f, this));

            if (!this->Controller_WaterCoil_ActuatorNodeName_)
            {
              this->Controller_WaterCoil_ActuatorNodeName_.set (r);
              continue;
            }
          }

          // Controller_WaterCoil_CntrlrConvergenceTolerance
          //
          if (n.name () == "Controller_WaterCoil_CntrlrConvergenceTolerance" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->Controller_WaterCoil_CntrlrConvergenceTolerance_)
            {
              this->Controller_WaterCoil_CntrlrConvergenceTolerance_.set (Controller_WaterCoil_CntrlrConvergenceTolerance_traits::create (i, f, this));
              continue;
            }
          }

          // Controller_WaterCoil_MaxActuatedFlow
          //
          if (n.name () == "Controller_WaterCoil_MaxActuatedFlow" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->Controller_WaterCoil_MaxActuatedFlow_)
            {
              this->Controller_WaterCoil_MaxActuatedFlow_.set (Controller_WaterCoil_MaxActuatedFlow_traits::create (i, f, this));
              continue;
            }
          }

          // Controller_WaterCoil_MinActuatedFlow
          //
          if (n.name () == "Controller_WaterCoil_MinActuatedFlow" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->Controller_WaterCoil_MinActuatedFlow_)
            {
              this->Controller_WaterCoil_MinActuatedFlow_.set (Controller_WaterCoil_MinActuatedFlow_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry* SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry (*this, f, c);
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry& SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      operator= (const SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimFlowEnergyTransfer_CoolingCoilWater& > (*this) = x;
          this->SimFlowEnergyTrans_AvailSchedName_ = x.SimFlowEnergyTrans_AvailSchedName_;
          this->SimFlowEnergyTrans_MaxWaterFlowRate_ = x.SimFlowEnergyTrans_MaxWaterFlowRate_;
          this->SimFlowEnergyTrans_WaterInletNodeName_ = x.SimFlowEnergyTrans_WaterInletNodeName_;
          this->SimFlowEnergyTrans_WaterOutletNodeName_ = x.SimFlowEnergyTrans_WaterOutletNodeName_;
          this->SimFlowEnergyTrans_AirInNodeName_ = x.SimFlowEnergyTrans_AirInNodeName_;
          this->SimFlowEnergyTrans_AirOutNodeName_ = x.SimFlowEnergyTrans_AirOutNodeName_;
          this->SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_ = x.SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_;
          this->SimFlowEnergyTrans_TubeOutsideSurfArea_ = x.SimFlowEnergyTrans_TubeOutsideSurfArea_;
          this->SimFlowEnergyTrans_TotalTubesideArea_ = x.SimFlowEnergyTrans_TotalTubesideArea_;
          this->SimFlowEnergyTrans_FinSurfArea_ = x.SimFlowEnergyTrans_FinSurfArea_;
          this->SimFlowEnergyTrans_MinAirflowArea_ = x.SimFlowEnergyTrans_MinAirflowArea_;
          this->SimFlowEnergyTrans_CoilCntlType_ = x.SimFlowEnergyTrans_CoilCntlType_;
          this->SimFlowEnergyTrans_FinDiam_ = x.SimFlowEnergyTrans_FinDiam_;
          this->SimFlowEnergyTrans_FinThick_ = x.SimFlowEnergyTrans_FinThick_;
          this->SimFlowEnergyTrans_TubesideDiam_ = x.SimFlowEnergyTrans_TubesideDiam_;
          this->SimFlowEnergyTrans_TubeOutsideDiam_ = x.SimFlowEnergyTrans_TubeOutsideDiam_;
          this->SimFlowEnergyTrans_TubeThermalCond_ = x.SimFlowEnergyTrans_TubeThermalCond_;
          this->SimFlowEnergyTrans_FinThermalCond_ = x.SimFlowEnergyTrans_FinThermalCond_;
          this->SimFlowEnergyTrans_FinSpacing_ = x.SimFlowEnergyTrans_FinSpacing_;
          this->SimFlowEnergyTrans_TubeDepthSpacing_ = x.SimFlowEnergyTrans_TubeDepthSpacing_;
          this->SimFlowEnergyTrans_NumTubeRows_ = x.SimFlowEnergyTrans_NumTubeRows_;
          this->SimFlowEnergyTrans_NumTubesPerRow_ = x.SimFlowEnergyTrans_NumTubesPerRow_;
          this->Controller_WaterCoil_Name_ = x.Controller_WaterCoil_Name_;
          this->Controller_WaterCoil_CntlVar_ = x.Controller_WaterCoil_CntlVar_;
          this->Controller_WaterCoil_Action_ = x.Controller_WaterCoil_Action_;
          this->Controller_WaterCoil_ActuatorVariable_ = x.Controller_WaterCoil_ActuatorVariable_;
          this->Controller_WaterCoil_SensorNodeName_ = x.Controller_WaterCoil_SensorNodeName_;
          this->Controller_WaterCoil_ActuatorNodeName_ = x.Controller_WaterCoil_ActuatorNodeName_;
          this->Controller_WaterCoil_CntrlrConvergenceTolerance_ = x.Controller_WaterCoil_CntrlrConvergenceTolerance_;
          this->Controller_WaterCoil_MaxActuatedFlow_ = x.Controller_WaterCoil_MaxActuatedFlow_;
          this->Controller_WaterCoil_MinActuatedFlow_ = x.Controller_WaterCoil_MinActuatedFlow_;
        }

        return *this;
      }

      SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry::
      ~SimFlowEnergyTransfer_CoolingCoilWater_CoilAirCoolingWaterDetailedGeometry ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

