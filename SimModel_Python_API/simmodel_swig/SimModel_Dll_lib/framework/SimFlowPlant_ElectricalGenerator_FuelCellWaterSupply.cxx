// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply
      // 

      const SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::SimFlowPlant_Name_optional& SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_Name () const
      {
        return this->SimFlowPlant_Name_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::SimFlowPlant_Name_optional& SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_Name ()
      {
        return this->SimFlowPlant_Name_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_Name (const SimFlowPlant_Name_type& x)
      {
        this->SimFlowPlant_Name_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_Name (const SimFlowPlant_Name_optional& x)
      {
        this->SimFlowPlant_Name_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_Name (::std::auto_ptr< SimFlowPlant_Name_type > x)
      {
        this->SimFlowPlant_Name_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName_optional& SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName () const
      {
        return this->SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName_optional& SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName ()
      {
        return this->SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName (const SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName_type& x)
      {
        this->SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName (const SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName_optional& x)
      {
        this->SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName (::std::auto_ptr< SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName_type > x)
      {
        this->SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName_optional& SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName () const
      {
        return this->SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName_optional& SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName ()
      {
        return this->SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName (const SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName_type& x)
      {
        this->SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName (const SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName_optional& x)
      {
        this->SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName (::std::auto_ptr< SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName_type > x)
      {
        this->SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::SimFlowPlant_PumpHeatLossFactor_optional& SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_PumpHeatLossFactor () const
      {
        return this->SimFlowPlant_PumpHeatLossFactor_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::SimFlowPlant_PumpHeatLossFactor_optional& SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_PumpHeatLossFactor ()
      {
        return this->SimFlowPlant_PumpHeatLossFactor_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_PumpHeatLossFactor (const SimFlowPlant_PumpHeatLossFactor_type& x)
      {
        this->SimFlowPlant_PumpHeatLossFactor_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_PumpHeatLossFactor (const SimFlowPlant_PumpHeatLossFactor_optional& x)
      {
        this->SimFlowPlant_PumpHeatLossFactor_ = x;
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::SimFlowPlant_WaterTempModelingMode_optional& SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_WaterTempModelingMode () const
      {
        return this->SimFlowPlant_WaterTempModelingMode_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::SimFlowPlant_WaterTempModelingMode_optional& SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_WaterTempModelingMode ()
      {
        return this->SimFlowPlant_WaterTempModelingMode_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_WaterTempModelingMode (const SimFlowPlant_WaterTempModelingMode_type& x)
      {
        this->SimFlowPlant_WaterTempModelingMode_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_WaterTempModelingMode (const SimFlowPlant_WaterTempModelingMode_optional& x)
      {
        this->SimFlowPlant_WaterTempModelingMode_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_WaterTempModelingMode (::std::auto_ptr< SimFlowPlant_WaterTempModelingMode_type > x)
      {
        this->SimFlowPlant_WaterTempModelingMode_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::SimFlowPlant_WaterTempRefNodeName_optional& SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_WaterTempRefNodeName () const
      {
        return this->SimFlowPlant_WaterTempRefNodeName_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::SimFlowPlant_WaterTempRefNodeName_optional& SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_WaterTempRefNodeName ()
      {
        return this->SimFlowPlant_WaterTempRefNodeName_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_WaterTempRefNodeName (const SimFlowPlant_WaterTempRefNodeName_type& x)
      {
        this->SimFlowPlant_WaterTempRefNodeName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_WaterTempRefNodeName (const SimFlowPlant_WaterTempRefNodeName_optional& x)
      {
        this->SimFlowPlant_WaterTempRefNodeName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_WaterTempRefNodeName (::std::auto_ptr< SimFlowPlant_WaterTempRefNodeName_type > x)
      {
        this->SimFlowPlant_WaterTempRefNodeName_.set (x);
      }

      const SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::SimFlowPlant_WaterTempSchedName_optional& SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_WaterTempSchedName () const
      {
        return this->SimFlowPlant_WaterTempSchedName_;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::SimFlowPlant_WaterTempSchedName_optional& SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_WaterTempSchedName ()
      {
        return this->SimFlowPlant_WaterTempSchedName_;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_WaterTempSchedName (const SimFlowPlant_WaterTempSchedName_type& x)
      {
        this->SimFlowPlant_WaterTempSchedName_.set (x);
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_WaterTempSchedName (const SimFlowPlant_WaterTempSchedName_optional& x)
      {
        this->SimFlowPlant_WaterTempSchedName_ = x;
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_WaterTempSchedName (::std::auto_ptr< SimFlowPlant_WaterTempSchedName_type > x)
      {
        this->SimFlowPlant_WaterTempSchedName_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply
      //

      SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply ()
      : ::schema::simxml::MepModel::SimFlowPlant_ElectricalGenerator (),
        SimFlowPlant_Name_ (this),
        SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName_ (this),
        SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName_ (this),
        SimFlowPlant_PumpHeatLossFactor_ (this),
        SimFlowPlant_WaterTempModelingMode_ (this),
        SimFlowPlant_WaterTempRefNodeName_ (this),
        SimFlowPlant_WaterTempSchedName_ (this)
      {
      }

      SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimFlowPlant_ElectricalGenerator (RefId),
        SimFlowPlant_Name_ (this),
        SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName_ (this),
        SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName_ (this),
        SimFlowPlant_PumpHeatLossFactor_ (this),
        SimFlowPlant_WaterTempModelingMode_ (this),
        SimFlowPlant_WaterTempRefNodeName_ (this),
        SimFlowPlant_WaterTempSchedName_ (this)
      {
      }

      SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply (const SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply& x,
                                                            ::xml_schema::flags f,
                                                            ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowPlant_ElectricalGenerator (x, f, c),
        SimFlowPlant_Name_ (x.SimFlowPlant_Name_, f, this),
        SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName_ (x.SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName_, f, this),
        SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName_ (x.SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName_, f, this),
        SimFlowPlant_PumpHeatLossFactor_ (x.SimFlowPlant_PumpHeatLossFactor_, f, this),
        SimFlowPlant_WaterTempModelingMode_ (x.SimFlowPlant_WaterTempModelingMode_, f, this),
        SimFlowPlant_WaterTempRefNodeName_ (x.SimFlowPlant_WaterTempRefNodeName_, f, this),
        SimFlowPlant_WaterTempSchedName_ (x.SimFlowPlant_WaterTempSchedName_, f, this)
      {
      }

      SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply (const ::xercesc::DOMElement& e,
                                                            ::xml_schema::flags f,
                                                            ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowPlant_ElectricalGenerator (e, f | ::xml_schema::flags::base, c),
        SimFlowPlant_Name_ (this),
        SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName_ (this),
        SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName_ (this),
        SimFlowPlant_PumpHeatLossFactor_ (this),
        SimFlowPlant_WaterTempModelingMode_ (this),
        SimFlowPlant_WaterTempRefNodeName_ (this),
        SimFlowPlant_WaterTempSchedName_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimFlowPlant_ElectricalGenerator::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowPlant_Name
          //
          if (n.name () == "SimFlowPlant_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_Name_type > r (
              SimFlowPlant_Name_traits::create (i, f, this));

            if (!this->SimFlowPlant_Name_)
            {
              this->SimFlowPlant_Name_.set (r);
              continue;
            }
          }

          // SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName
          //
          if (n.name () == "SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName_type > r (
              SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName_traits::create (i, f, this));

            if (!this->SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName_)
            {
              this->SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName
          //
          if (n.name () == "SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName_type > r (
              SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName_traits::create (i, f, this));

            if (!this->SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName_)
            {
              this->SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_PumpHeatLossFactor
          //
          if (n.name () == "SimFlowPlant_PumpHeatLossFactor" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_PumpHeatLossFactor_)
            {
              this->SimFlowPlant_PumpHeatLossFactor_.set (SimFlowPlant_PumpHeatLossFactor_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_WaterTempModelingMode
          //
          if (n.name () == "SimFlowPlant_WaterTempModelingMode" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_WaterTempModelingMode_type > r (
              SimFlowPlant_WaterTempModelingMode_traits::create (i, f, this));

            if (!this->SimFlowPlant_WaterTempModelingMode_)
            {
              this->SimFlowPlant_WaterTempModelingMode_.set (r);
              continue;
            }
          }

          // SimFlowPlant_WaterTempRefNodeName
          //
          if (n.name () == "SimFlowPlant_WaterTempRefNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_WaterTempRefNodeName_type > r (
              SimFlowPlant_WaterTempRefNodeName_traits::create (i, f, this));

            if (!this->SimFlowPlant_WaterTempRefNodeName_)
            {
              this->SimFlowPlant_WaterTempRefNodeName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_WaterTempSchedName
          //
          if (n.name () == "SimFlowPlant_WaterTempSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_WaterTempSchedName_type > r (
              SimFlowPlant_WaterTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowPlant_WaterTempSchedName_)
            {
              this->SimFlowPlant_WaterTempSchedName_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply* SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply (*this, f, c);
      }

      SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply& SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      operator= (const SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimFlowPlant_ElectricalGenerator& > (*this) = x;
          this->SimFlowPlant_Name_ = x.SimFlowPlant_Name_;
          this->SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName_ = x.SimFlowPlant_ReformWaterFlowRateFuncFuelRateCurveName_;
          this->SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName_ = x.SimFlowPlant_ReformWaterPumpPwrFuncFuelRateCurveName_;
          this->SimFlowPlant_PumpHeatLossFactor_ = x.SimFlowPlant_PumpHeatLossFactor_;
          this->SimFlowPlant_WaterTempModelingMode_ = x.SimFlowPlant_WaterTempModelingMode_;
          this->SimFlowPlant_WaterTempRefNodeName_ = x.SimFlowPlant_WaterTempRefNodeName_;
          this->SimFlowPlant_WaterTempSchedName_ = x.SimFlowPlant_WaterTempSchedName_;
        }

        return *this;
      }

      SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply::
      ~SimFlowPlant_ElectricalGenerator_FuelCellWaterSupply ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

