// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef SIM_GROUND_HEAT_TRANSFER_SLAB_HXX
#define SIM_GROUND_HEAT_TRANSFER_SLAB_HXX

#ifndef XSD_USE_CHAR
#define XSD_USE_CHAR
#endif

#ifndef XSD_CXX_TREE_USE_CHAR
#define XSD_CXX_TREE_USE_CHAR
#endif

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/config.hxx>

#if (XSD_INT_VERSION != 4000000L)
#error XSD runtime version mismatch
#endif

#include <xsd/cxx/pre.hxx>

#include <xsd/cxx/xml/char-utf8.hxx>

#include <xsd/cxx/tree/exceptions.hxx>
#include <xsd/cxx/tree/elements.hxx>
#include <xsd/cxx/tree/types.hxx>

#include <xsd/cxx/xml/error-handler.hxx>

#include <xsd/cxx/xml/dom/auto-ptr.hxx>

#include <xsd/cxx/tree/parsing.hxx>
#include <xsd/cxx/tree/parsing/byte.hxx>
#include <xsd/cxx/tree/parsing/unsigned-byte.hxx>
#include <xsd/cxx/tree/parsing/short.hxx>
#include <xsd/cxx/tree/parsing/unsigned-short.hxx>
#include <xsd/cxx/tree/parsing/int.hxx>
#include <xsd/cxx/tree/parsing/unsigned-int.hxx>
#include <xsd/cxx/tree/parsing/long.hxx>
#include <xsd/cxx/tree/parsing/unsigned-long.hxx>
#include <xsd/cxx/tree/parsing/boolean.hxx>
#include <xsd/cxx/tree/parsing/float.hxx>
#include <xsd/cxx/tree/parsing/double.hxx>
#include <xsd/cxx/tree/parsing/decimal.hxx>

namespace xml_schema
{
  // anyType and anySimpleType.
  //
  typedef ::xsd::cxx::tree::type type;
  typedef ::xsd::cxx::tree::simple_type< char, type > simple_type;
  typedef ::xsd::cxx::tree::type container;

  // 8-bit
  //
  typedef signed char byte;
  typedef unsigned char unsigned_byte;

  // 16-bit
  //
  typedef short short_;
  typedef unsigned short unsigned_short;

  // 32-bit
  //
  typedef int int_;
  typedef unsigned int unsigned_int;

  // 64-bit
  //
  typedef long long long_;
  typedef unsigned long long unsigned_long;

  // Supposed to be arbitrary-length integral types.
  //
  typedef long long integer;
  typedef long long non_positive_integer;
  typedef unsigned long long non_negative_integer;
  typedef unsigned long long positive_integer;
  typedef long long negative_integer;

  // Boolean.
  //
  typedef bool boolean;

  // Floating-point types.
  //
  typedef float float_;
  typedef double double_;
  typedef double decimal;

  // String types.
  //
  typedef ::xsd::cxx::tree::string< char, simple_type > string;
  typedef ::xsd::cxx::tree::normalized_string< char, string > normalized_string;
  typedef ::xsd::cxx::tree::token< char, normalized_string > token;
  typedef ::xsd::cxx::tree::name< char, token > name;
  typedef ::xsd::cxx::tree::nmtoken< char, token > nmtoken;
  typedef ::xsd::cxx::tree::nmtokens< char, simple_type, nmtoken > nmtokens;
  typedef ::xsd::cxx::tree::ncname< char, name > ncname;
  typedef ::xsd::cxx::tree::language< char, token > language;

  // ID/IDREF.
  //
  typedef ::xsd::cxx::tree::id< char, ncname > id;
  typedef ::xsd::cxx::tree::idref< char, ncname, type > idref;
  typedef ::xsd::cxx::tree::idrefs< char, simple_type, idref > idrefs;

  // URI.
  //
  typedef ::xsd::cxx::tree::uri< char, simple_type > uri;

  // Qualified name.
  //
  typedef ::xsd::cxx::tree::qname< char, simple_type, uri, ncname > qname;

  // Binary.
  //
  typedef ::xsd::cxx::tree::buffer< char > buffer;
  typedef ::xsd::cxx::tree::base64_binary< char, simple_type > base64_binary;
  typedef ::xsd::cxx::tree::hex_binary< char, simple_type > hex_binary;

  // Date/time.
  //
  typedef ::xsd::cxx::tree::time_zone time_zone;
  typedef ::xsd::cxx::tree::date< char, simple_type > date;
  typedef ::xsd::cxx::tree::date_time< char, simple_type > date_time;
  typedef ::xsd::cxx::tree::duration< char, simple_type > duration;
  typedef ::xsd::cxx::tree::gday< char, simple_type > gday;
  typedef ::xsd::cxx::tree::gmonth< char, simple_type > gmonth;
  typedef ::xsd::cxx::tree::gmonth_day< char, simple_type > gmonth_day;
  typedef ::xsd::cxx::tree::gyear< char, simple_type > gyear;
  typedef ::xsd::cxx::tree::gyear_month< char, simple_type > gyear_month;
  typedef ::xsd::cxx::tree::time< char, simple_type > time;

  // Entity.
  //
  typedef ::xsd::cxx::tree::entity< char, ncname > entity;
  typedef ::xsd::cxx::tree::entities< char, simple_type, entity > entities;

  typedef ::xsd::cxx::tree::content_order content_order;
  // Flags and properties.
  //
  typedef ::xsd::cxx::tree::flags flags;
  typedef ::xsd::cxx::tree::properties< char > properties;

  // Parsing/serialization diagnostics.
  //
  typedef ::xsd::cxx::tree::severity severity;
  typedef ::xsd::cxx::tree::error< char > error;
  typedef ::xsd::cxx::tree::diagnostics< char > diagnostics;

  // Exceptions.
  //
  typedef ::xsd::cxx::tree::exception< char > exception;
  typedef ::xsd::cxx::tree::bounds< char > bounds;
  typedef ::xsd::cxx::tree::duplicate_id< char > duplicate_id;
  typedef ::xsd::cxx::tree::parsing< char > parsing;
  typedef ::xsd::cxx::tree::expected_element< char > expected_element;
  typedef ::xsd::cxx::tree::unexpected_element< char > unexpected_element;
  typedef ::xsd::cxx::tree::expected_attribute< char > expected_attribute;
  typedef ::xsd::cxx::tree::unexpected_enumerator< char > unexpected_enumerator;
  typedef ::xsd::cxx::tree::expected_text_content< char > expected_text_content;
  typedef ::xsd::cxx::tree::no_prefix_mapping< char > no_prefix_mapping;
  typedef ::xsd::cxx::tree::no_type_info< char > no_type_info;
  typedef ::xsd::cxx::tree::not_derived< char > not_derived;

  // Error handler callback interface.
  //
  typedef ::xsd::cxx::xml::error_handler< char > error_handler;

  // DOM interaction.
  //
  namespace dom
  {
    // Automatic pointer for DOMDocument.
    //
    using ::xsd::cxx::xml::dom::auto_ptr;

#ifndef XSD_CXX_TREE_TREE_NODE_KEY__XML_SCHEMA
#define XSD_CXX_TREE_TREE_NODE_KEY__XML_SCHEMA
    // DOM user data key for back pointers to tree nodes.
    //
    const XMLCh* const tree_node_key = ::xsd::cxx::tree::user_data_keys::node;
#endif
  }
}

// Forward declarations.
//
namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      class SimGroundHeatTransferSlab;
    }
  }
}


#include <memory>    // ::std::auto_ptr
#include <limits>    // std::numeric_limits
#include <algorithm> // std::binary_search

#include <xsd/cxx/xml/char-utf8.hxx>

#include <xsd/cxx/tree/exceptions.hxx>
#include <xsd/cxx/tree/elements.hxx>
#include <xsd/cxx/tree/containers.hxx>
#include <xsd/cxx/tree/list.hxx>

#include <xsd/cxx/xml/dom/parsing-header.hxx>

#include "simgroundheattransfer.hxx"

namespace schema
{
  namespace simxml
  {
    namespace SimModelCore
    {
      class doubleList;
    }
  }
}

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      class SimGroundHeatTransferSlab: public ::schema::simxml::ResourcesGeneral::SimGroundHeatTransfer
      {
        public:
        // SimGrndHeatTransSlab_IYRS_NumYearsToIterate
        //
        typedef ::xml_schema::double_ SimGrndHeatTransSlab_IYRS_NumYearsToIterate_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransSlab_IYRS_NumYearsToIterate_type > SimGrndHeatTransSlab_IYRS_NumYearsToIterate_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransSlab_IYRS_NumYearsToIterate_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransSlab_IYRS_NumYearsToIterate_traits;

        const SimGrndHeatTransSlab_IYRS_NumYearsToIterate_optional&
        SimGrndHeatTransSlab_IYRS_NumYearsToIterate () const;

        SimGrndHeatTransSlab_IYRS_NumYearsToIterate_optional&
        SimGrndHeatTransSlab_IYRS_NumYearsToIterate ();

        void
        SimGrndHeatTransSlab_IYRS_NumYearsToIterate (const SimGrndHeatTransSlab_IYRS_NumYearsToIterate_type& x);

        void
        SimGrndHeatTransSlab_IYRS_NumYearsToIterate (const SimGrndHeatTransSlab_IYRS_NumYearsToIterate_optional& x);

        // SimGrndHeatTransSlab_Shape_Slabshape
        //
        typedef ::xml_schema::double_ SimGrndHeatTransSlab_Shape_Slabshape_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransSlab_Shape_Slabshape_type > SimGrndHeatTransSlab_Shape_Slabshape_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransSlab_Shape_Slabshape_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransSlab_Shape_Slabshape_traits;

        const SimGrndHeatTransSlab_Shape_Slabshape_optional&
        SimGrndHeatTransSlab_Shape_Slabshape () const;

        SimGrndHeatTransSlab_Shape_Slabshape_optional&
        SimGrndHeatTransSlab_Shape_Slabshape ();

        void
        SimGrndHeatTransSlab_Shape_Slabshape (const SimGrndHeatTransSlab_Shape_Slabshape_type& x);

        void
        SimGrndHeatTransSlab_Shape_Slabshape (const SimGrndHeatTransSlab_Shape_Slabshape_optional& x);

        // SimGrndHeatTransSlab_HBLDG_Bldgheight
        //
        typedef ::xml_schema::double_ SimGrndHeatTransSlab_HBLDG_Bldgheight_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransSlab_HBLDG_Bldgheight_type > SimGrndHeatTransSlab_HBLDG_Bldgheight_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransSlab_HBLDG_Bldgheight_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransSlab_HBLDG_Bldgheight_traits;

        const SimGrndHeatTransSlab_HBLDG_Bldgheight_optional&
        SimGrndHeatTransSlab_HBLDG_Bldgheight () const;

        SimGrndHeatTransSlab_HBLDG_Bldgheight_optional&
        SimGrndHeatTransSlab_HBLDG_Bldgheight ();

        void
        SimGrndHeatTransSlab_HBLDG_Bldgheight (const SimGrndHeatTransSlab_HBLDG_Bldgheight_type& x);

        void
        SimGrndHeatTransSlab_HBLDG_Bldgheight (const SimGrndHeatTransSlab_HBLDG_Bldgheight_optional& x);

        // SimGrndHeatTransSlab_TIN1_JanuaryIndoorAvgTempSetpnt
        //
        typedef ::xml_schema::double_ SimGrndHeatTransSlab_TIN1_JanuaryIndoorAvgTempSetpnt_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransSlab_TIN1_JanuaryIndoorAvgTempSetpnt_type > SimGrndHeatTransSlab_TIN1_JanuaryIndoorAvgTempSetpnt_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransSlab_TIN1_JanuaryIndoorAvgTempSetpnt_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransSlab_TIN1_JanuaryIndoorAvgTempSetpnt_traits;

        const SimGrndHeatTransSlab_TIN1_JanuaryIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN1_JanuaryIndoorAvgTempSetpnt () const;

        SimGrndHeatTransSlab_TIN1_JanuaryIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN1_JanuaryIndoorAvgTempSetpnt ();

        void
        SimGrndHeatTransSlab_TIN1_JanuaryIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN1_JanuaryIndoorAvgTempSetpnt_type& x);

        void
        SimGrndHeatTransSlab_TIN1_JanuaryIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN1_JanuaryIndoorAvgTempSetpnt_optional& x);

        // SimGrndHeatTransSlab_TIN2_FebIndoorAvgTempSetpnt
        //
        typedef ::xml_schema::double_ SimGrndHeatTransSlab_TIN2_FebIndoorAvgTempSetpnt_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransSlab_TIN2_FebIndoorAvgTempSetpnt_type > SimGrndHeatTransSlab_TIN2_FebIndoorAvgTempSetpnt_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransSlab_TIN2_FebIndoorAvgTempSetpnt_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransSlab_TIN2_FebIndoorAvgTempSetpnt_traits;

        const SimGrndHeatTransSlab_TIN2_FebIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN2_FebIndoorAvgTempSetpnt () const;

        SimGrndHeatTransSlab_TIN2_FebIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN2_FebIndoorAvgTempSetpnt ();

        void
        SimGrndHeatTransSlab_TIN2_FebIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN2_FebIndoorAvgTempSetpnt_type& x);

        void
        SimGrndHeatTransSlab_TIN2_FebIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN2_FebIndoorAvgTempSetpnt_optional& x);

        // SimGrndHeatTransSlab_TIN3_MarIndoorAvgTempSetpnt
        //
        typedef ::xml_schema::double_ SimGrndHeatTransSlab_TIN3_MarIndoorAvgTempSetpnt_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransSlab_TIN3_MarIndoorAvgTempSetpnt_type > SimGrndHeatTransSlab_TIN3_MarIndoorAvgTempSetpnt_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransSlab_TIN3_MarIndoorAvgTempSetpnt_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransSlab_TIN3_MarIndoorAvgTempSetpnt_traits;

        const SimGrndHeatTransSlab_TIN3_MarIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN3_MarIndoorAvgTempSetpnt () const;

        SimGrndHeatTransSlab_TIN3_MarIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN3_MarIndoorAvgTempSetpnt ();

        void
        SimGrndHeatTransSlab_TIN3_MarIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN3_MarIndoorAvgTempSetpnt_type& x);

        void
        SimGrndHeatTransSlab_TIN3_MarIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN3_MarIndoorAvgTempSetpnt_optional& x);

        // SimGrndHeatTransSlab_TIN4_AprIndoorAvgTempSetpnt
        //
        typedef ::xml_schema::double_ SimGrndHeatTransSlab_TIN4_AprIndoorAvgTempSetpnt_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransSlab_TIN4_AprIndoorAvgTempSetpnt_type > SimGrndHeatTransSlab_TIN4_AprIndoorAvgTempSetpnt_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransSlab_TIN4_AprIndoorAvgTempSetpnt_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransSlab_TIN4_AprIndoorAvgTempSetpnt_traits;

        const SimGrndHeatTransSlab_TIN4_AprIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN4_AprIndoorAvgTempSetpnt () const;

        SimGrndHeatTransSlab_TIN4_AprIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN4_AprIndoorAvgTempSetpnt ();

        void
        SimGrndHeatTransSlab_TIN4_AprIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN4_AprIndoorAvgTempSetpnt_type& x);

        void
        SimGrndHeatTransSlab_TIN4_AprIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN4_AprIndoorAvgTempSetpnt_optional& x);

        // SimGrndHeatTransSlab_TIN5_MayIndoorAvgTempSetpnt
        //
        typedef ::xml_schema::double_ SimGrndHeatTransSlab_TIN5_MayIndoorAvgTempSetpnt_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransSlab_TIN5_MayIndoorAvgTempSetpnt_type > SimGrndHeatTransSlab_TIN5_MayIndoorAvgTempSetpnt_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransSlab_TIN5_MayIndoorAvgTempSetpnt_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransSlab_TIN5_MayIndoorAvgTempSetpnt_traits;

        const SimGrndHeatTransSlab_TIN5_MayIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN5_MayIndoorAvgTempSetpnt () const;

        SimGrndHeatTransSlab_TIN5_MayIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN5_MayIndoorAvgTempSetpnt ();

        void
        SimGrndHeatTransSlab_TIN5_MayIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN5_MayIndoorAvgTempSetpnt_type& x);

        void
        SimGrndHeatTransSlab_TIN5_MayIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN5_MayIndoorAvgTempSetpnt_optional& x);

        // SimGrndHeatTransSlab_TIN6_JunIndoorAvgTempSetpnt
        //
        typedef ::xml_schema::double_ SimGrndHeatTransSlab_TIN6_JunIndoorAvgTempSetpnt_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransSlab_TIN6_JunIndoorAvgTempSetpnt_type > SimGrndHeatTransSlab_TIN6_JunIndoorAvgTempSetpnt_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransSlab_TIN6_JunIndoorAvgTempSetpnt_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransSlab_TIN6_JunIndoorAvgTempSetpnt_traits;

        const SimGrndHeatTransSlab_TIN6_JunIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN6_JunIndoorAvgTempSetpnt () const;

        SimGrndHeatTransSlab_TIN6_JunIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN6_JunIndoorAvgTempSetpnt ();

        void
        SimGrndHeatTransSlab_TIN6_JunIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN6_JunIndoorAvgTempSetpnt_type& x);

        void
        SimGrndHeatTransSlab_TIN6_JunIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN6_JunIndoorAvgTempSetpnt_optional& x);

        // SimGrndHeatTransSlab_TIN7_JulIndoorAvgTempSetpnt
        //
        typedef ::xml_schema::double_ SimGrndHeatTransSlab_TIN7_JulIndoorAvgTempSetpnt_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransSlab_TIN7_JulIndoorAvgTempSetpnt_type > SimGrndHeatTransSlab_TIN7_JulIndoorAvgTempSetpnt_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransSlab_TIN7_JulIndoorAvgTempSetpnt_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransSlab_TIN7_JulIndoorAvgTempSetpnt_traits;

        const SimGrndHeatTransSlab_TIN7_JulIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN7_JulIndoorAvgTempSetpnt () const;

        SimGrndHeatTransSlab_TIN7_JulIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN7_JulIndoorAvgTempSetpnt ();

        void
        SimGrndHeatTransSlab_TIN7_JulIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN7_JulIndoorAvgTempSetpnt_type& x);

        void
        SimGrndHeatTransSlab_TIN7_JulIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN7_JulIndoorAvgTempSetpnt_optional& x);

        // SimGrndHeatTransSlab_TIN8_AugIndoorAvgTempSetpnt
        //
        typedef ::xml_schema::double_ SimGrndHeatTransSlab_TIN8_AugIndoorAvgTempSetpnt_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransSlab_TIN8_AugIndoorAvgTempSetpnt_type > SimGrndHeatTransSlab_TIN8_AugIndoorAvgTempSetpnt_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransSlab_TIN8_AugIndoorAvgTempSetpnt_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransSlab_TIN8_AugIndoorAvgTempSetpnt_traits;

        const SimGrndHeatTransSlab_TIN8_AugIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN8_AugIndoorAvgTempSetpnt () const;

        SimGrndHeatTransSlab_TIN8_AugIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN8_AugIndoorAvgTempSetpnt ();

        void
        SimGrndHeatTransSlab_TIN8_AugIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN8_AugIndoorAvgTempSetpnt_type& x);

        void
        SimGrndHeatTransSlab_TIN8_AugIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN8_AugIndoorAvgTempSetpnt_optional& x);

        // SimGrndHeatTransSlab_TIN9_SepIndoorAvgTempSetpnt
        //
        typedef ::xml_schema::double_ SimGrndHeatTransSlab_TIN9_SepIndoorAvgTempSetpnt_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransSlab_TIN9_SepIndoorAvgTempSetpnt_type > SimGrndHeatTransSlab_TIN9_SepIndoorAvgTempSetpnt_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransSlab_TIN9_SepIndoorAvgTempSetpnt_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransSlab_TIN9_SepIndoorAvgTempSetpnt_traits;

        const SimGrndHeatTransSlab_TIN9_SepIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN9_SepIndoorAvgTempSetpnt () const;

        SimGrndHeatTransSlab_TIN9_SepIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN9_SepIndoorAvgTempSetpnt ();

        void
        SimGrndHeatTransSlab_TIN9_SepIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN9_SepIndoorAvgTempSetpnt_type& x);

        void
        SimGrndHeatTransSlab_TIN9_SepIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN9_SepIndoorAvgTempSetpnt_optional& x);

        // SimGrndHeatTransSlab_TIN10_OctIndoorAvgTempSetpnt
        //
        typedef ::xml_schema::double_ SimGrndHeatTransSlab_TIN10_OctIndoorAvgTempSetpnt_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransSlab_TIN10_OctIndoorAvgTempSetpnt_type > SimGrndHeatTransSlab_TIN10_OctIndoorAvgTempSetpnt_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransSlab_TIN10_OctIndoorAvgTempSetpnt_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransSlab_TIN10_OctIndoorAvgTempSetpnt_traits;

        const SimGrndHeatTransSlab_TIN10_OctIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN10_OctIndoorAvgTempSetpnt () const;

        SimGrndHeatTransSlab_TIN10_OctIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN10_OctIndoorAvgTempSetpnt ();

        void
        SimGrndHeatTransSlab_TIN10_OctIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN10_OctIndoorAvgTempSetpnt_type& x);

        void
        SimGrndHeatTransSlab_TIN10_OctIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN10_OctIndoorAvgTempSetpnt_optional& x);

        // SimGrndHeatTransSlab_TIN11_NovIndoorAvgTempSetpnt
        //
        typedef ::xml_schema::double_ SimGrndHeatTransSlab_TIN11_NovIndoorAvgTempSetpnt_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransSlab_TIN11_NovIndoorAvgTempSetpnt_type > SimGrndHeatTransSlab_TIN11_NovIndoorAvgTempSetpnt_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransSlab_TIN11_NovIndoorAvgTempSetpnt_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransSlab_TIN11_NovIndoorAvgTempSetpnt_traits;

        const SimGrndHeatTransSlab_TIN11_NovIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN11_NovIndoorAvgTempSetpnt () const;

        SimGrndHeatTransSlab_TIN11_NovIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN11_NovIndoorAvgTempSetpnt ();

        void
        SimGrndHeatTransSlab_TIN11_NovIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN11_NovIndoorAvgTempSetpnt_type& x);

        void
        SimGrndHeatTransSlab_TIN11_NovIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN11_NovIndoorAvgTempSetpnt_optional& x);

        // SimGrndHeatTransSlab_TIN12_DecIndoorAvgTempSetpnt
        //
        typedef ::xml_schema::double_ SimGrndHeatTransSlab_TIN12_DecIndoorAvgTempSetpnt_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransSlab_TIN12_DecIndoorAvgTempSetpnt_type > SimGrndHeatTransSlab_TIN12_DecIndoorAvgTempSetpnt_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransSlab_TIN12_DecIndoorAvgTempSetpnt_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransSlab_TIN12_DecIndoorAvgTempSetpnt_traits;

        const SimGrndHeatTransSlab_TIN12_DecIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN12_DecIndoorAvgTempSetpnt () const;

        SimGrndHeatTransSlab_TIN12_DecIndoorAvgTempSetpnt_optional&
        SimGrndHeatTransSlab_TIN12_DecIndoorAvgTempSetpnt ();

        void
        SimGrndHeatTransSlab_TIN12_DecIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN12_DecIndoorAvgTempSetpnt_type& x);

        void
        SimGrndHeatTransSlab_TIN12_DecIndoorAvgTempSetpnt (const SimGrndHeatTransSlab_TIN12_DecIndoorAvgTempSetpnt_optional& x);

        // SimGrndHeatTransSlab_TINAmp_DailyIndoorsinewavevariationamplitude
        //
        typedef ::xml_schema::double_ SimGrndHeatTransSlab_TINAmp_DailyIndoorsinewavevariationamplitude_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransSlab_TINAmp_DailyIndoorsinewavevariationamplitude_type > SimGrndHeatTransSlab_TINAmp_DailyIndoorsinewavevariationamplitude_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransSlab_TINAmp_DailyIndoorsinewavevariationamplitude_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransSlab_TINAmp_DailyIndoorsinewavevariationamplitude_traits;

        const SimGrndHeatTransSlab_TINAmp_DailyIndoorsinewavevariationamplitude_optional&
        SimGrndHeatTransSlab_TINAmp_DailyIndoorsinewavevariationamplitude () const;

        SimGrndHeatTransSlab_TINAmp_DailyIndoorsinewavevariationamplitude_optional&
        SimGrndHeatTransSlab_TINAmp_DailyIndoorsinewavevariationamplitude ();

        void
        SimGrndHeatTransSlab_TINAmp_DailyIndoorsinewavevariationamplitude (const SimGrndHeatTransSlab_TINAmp_DailyIndoorsinewavevariationamplitude_type& x);

        void
        SimGrndHeatTransSlab_TINAmp_DailyIndoorsinewavevariationamplitude (const SimGrndHeatTransSlab_TINAmp_DailyIndoorsinewavevariationamplitude_optional& x);

        // SimGrndHeatTransSlab_ConvTol_ConvergTolerance
        //
        typedef ::xml_schema::double_ SimGrndHeatTransSlab_ConvTol_ConvergTolerance_type;
        typedef ::xsd::cxx::tree::optional< SimGrndHeatTransSlab_ConvTol_ConvergTolerance_type > SimGrndHeatTransSlab_ConvTol_ConvergTolerance_optional;
        typedef ::xsd::cxx::tree::traits< SimGrndHeatTransSlab_ConvTol_ConvergTolerance_type, char, ::xsd::cxx::tree::schema_type::double_ > SimGrndHeatTransSlab_ConvTol_ConvergTolerance_traits;

        const SimGrndHeatTransSlab_ConvTol_ConvergTolerance_optional&
        SimGrndHeatTransSlab_ConvTol_ConvergTolerance () const;

        SimGrndHeatTransSlab_ConvTol_ConvergTolerance_optional&
        SimGrndHeatTransSlab_ConvTol_ConvergTolerance ();

        void
        SimGrndHeatTransSlab_ConvTol_ConvergTolerance (const SimGrndHeatTransSlab_ConvTol_ConvergTolerance_type& x);

        void
        SimGrndHeatTransSlab_ConvTol_ConvergTolerance (const SimGrndHeatTransSlab_ConvTol_ConvergTolerance_optional& x);

        // GndHeatTransf_Slab_Materials_NMAT_Numofmaterials
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_Materials_NMAT_Numofmaterials_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_Materials_NMAT_Numofmaterials_type > GndHeatTransf_Slab_Materials_NMAT_Numofmaterials_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_Materials_NMAT_Numofmaterials_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_Materials_NMAT_Numofmaterials_traits;

        const GndHeatTransf_Slab_Materials_NMAT_Numofmaterials_optional&
        GndHeatTransf_Slab_Materials_NMAT_Numofmaterials () const;

        GndHeatTransf_Slab_Materials_NMAT_Numofmaterials_optional&
        GndHeatTransf_Slab_Materials_NMAT_Numofmaterials ();

        void
        GndHeatTransf_Slab_Materials_NMAT_Numofmaterials (const GndHeatTransf_Slab_Materials_NMAT_Numofmaterials_type& x);

        void
        GndHeatTransf_Slab_Materials_NMAT_Numofmaterials (const GndHeatTransf_Slab_Materials_NMAT_Numofmaterials_optional& x);

        // GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_NoSnow
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_NoSnow_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_NoSnow_type > GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_NoSnow_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_NoSnow_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_NoSnow_traits;

        const GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_NoSnow_optional&
        GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_NoSnow () const;

        GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_NoSnow_optional&
        GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_NoSnow ();

        void
        GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_NoSnow (const GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_NoSnow_type& x);

        void
        GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_NoSnow (const GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_NoSnow_optional& x);

        // GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_Snow
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_Snow_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_Snow_type > GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_Snow_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_Snow_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_Snow_traits;

        const GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_Snow_optional&
        GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_Snow () const;

        GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_Snow_optional&
        GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_Snow ();

        void
        GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_Snow (const GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_Snow_type& x);

        void
        GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_Snow (const GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_Snow_optional& x);

        // GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_NoSnow
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_NoSnow_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_NoSnow_type > GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_NoSnow_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_NoSnow_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_NoSnow_traits;

        const GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_NoSnow_optional&
        GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_NoSnow () const;

        GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_NoSnow_optional&
        GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_NoSnow ();

        void
        GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_NoSnow (const GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_NoSnow_type& x);

        void
        GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_NoSnow (const GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_NoSnow_optional& x);

        // GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_Snow
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_Snow_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_Snow_type > GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_Snow_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_Snow_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_Snow_traits;

        const GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_Snow_optional&
        GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_Snow () const;

        GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_Snow_optional&
        GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_Snow ();

        void
        GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_Snow (const GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_Snow_type& x);

        void
        GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_Snow (const GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_Snow_optional& x);

        // GndHeatTransf_Slab_Materials_Z0_SurfRoughness_NoSnow
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_Materials_Z0_SurfRoughness_NoSnow_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_Materials_Z0_SurfRoughness_NoSnow_type > GndHeatTransf_Slab_Materials_Z0_SurfRoughness_NoSnow_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_Materials_Z0_SurfRoughness_NoSnow_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_Materials_Z0_SurfRoughness_NoSnow_traits;

        const GndHeatTransf_Slab_Materials_Z0_SurfRoughness_NoSnow_optional&
        GndHeatTransf_Slab_Materials_Z0_SurfRoughness_NoSnow () const;

        GndHeatTransf_Slab_Materials_Z0_SurfRoughness_NoSnow_optional&
        GndHeatTransf_Slab_Materials_Z0_SurfRoughness_NoSnow ();

        void
        GndHeatTransf_Slab_Materials_Z0_SurfRoughness_NoSnow (const GndHeatTransf_Slab_Materials_Z0_SurfRoughness_NoSnow_type& x);

        void
        GndHeatTransf_Slab_Materials_Z0_SurfRoughness_NoSnow (const GndHeatTransf_Slab_Materials_Z0_SurfRoughness_NoSnow_optional& x);

        // GndHeatTransf_Slab_Materials_Z0_SurfRoughness_Snow
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_Materials_Z0_SurfRoughness_Snow_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_Materials_Z0_SurfRoughness_Snow_type > GndHeatTransf_Slab_Materials_Z0_SurfRoughness_Snow_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_Materials_Z0_SurfRoughness_Snow_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_Materials_Z0_SurfRoughness_Snow_traits;

        const GndHeatTransf_Slab_Materials_Z0_SurfRoughness_Snow_optional&
        GndHeatTransf_Slab_Materials_Z0_SurfRoughness_Snow () const;

        GndHeatTransf_Slab_Materials_Z0_SurfRoughness_Snow_optional&
        GndHeatTransf_Slab_Materials_Z0_SurfRoughness_Snow ();

        void
        GndHeatTransf_Slab_Materials_Z0_SurfRoughness_Snow (const GndHeatTransf_Slab_Materials_Z0_SurfRoughness_Snow_type& x);

        void
        GndHeatTransf_Slab_Materials_Z0_SurfRoughness_Snow (const GndHeatTransf_Slab_Materials_Z0_SurfRoughness_Snow_optional& x);

        // GndHeatTransf_Slab_Materials_HIN_IndoorHConv_DownwardFlow
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_Materials_HIN_IndoorHConv_DownwardFlow_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_Materials_HIN_IndoorHConv_DownwardFlow_type > GndHeatTransf_Slab_Materials_HIN_IndoorHConv_DownwardFlow_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_Materials_HIN_IndoorHConv_DownwardFlow_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_Materials_HIN_IndoorHConv_DownwardFlow_traits;

        const GndHeatTransf_Slab_Materials_HIN_IndoorHConv_DownwardFlow_optional&
        GndHeatTransf_Slab_Materials_HIN_IndoorHConv_DownwardFlow () const;

        GndHeatTransf_Slab_Materials_HIN_IndoorHConv_DownwardFlow_optional&
        GndHeatTransf_Slab_Materials_HIN_IndoorHConv_DownwardFlow ();

        void
        GndHeatTransf_Slab_Materials_HIN_IndoorHConv_DownwardFlow (const GndHeatTransf_Slab_Materials_HIN_IndoorHConv_DownwardFlow_type& x);

        void
        GndHeatTransf_Slab_Materials_HIN_IndoorHConv_DownwardFlow (const GndHeatTransf_Slab_Materials_HIN_IndoorHConv_DownwardFlow_optional& x);

        // GndHeatTransf_Slab_Materials_HIN_IndoorHConv_Upward
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_Materials_HIN_IndoorHConv_Upward_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_Materials_HIN_IndoorHConv_Upward_type > GndHeatTransf_Slab_Materials_HIN_IndoorHConv_Upward_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_Materials_HIN_IndoorHConv_Upward_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_Materials_HIN_IndoorHConv_Upward_traits;

        const GndHeatTransf_Slab_Materials_HIN_IndoorHConv_Upward_optional&
        GndHeatTransf_Slab_Materials_HIN_IndoorHConv_Upward () const;

        GndHeatTransf_Slab_Materials_HIN_IndoorHConv_Upward_optional&
        GndHeatTransf_Slab_Materials_HIN_IndoorHConv_Upward ();

        void
        GndHeatTransf_Slab_Materials_HIN_IndoorHConv_Upward (const GndHeatTransf_Slab_Materials_HIN_IndoorHConv_Upward_type& x);

        void
        GndHeatTransf_Slab_Materials_HIN_IndoorHConv_Upward (const GndHeatTransf_Slab_Materials_HIN_IndoorHConv_Upward_optional& x);

        // GndHeatTransf_Slab_MatlProps_RHO_SlabMaterialdensity
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_MatlProps_RHO_SlabMaterialdensity_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_MatlProps_RHO_SlabMaterialdensity_type > GndHeatTransf_Slab_MatlProps_RHO_SlabMaterialdensity_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_MatlProps_RHO_SlabMaterialdensity_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_MatlProps_RHO_SlabMaterialdensity_traits;

        const GndHeatTransf_Slab_MatlProps_RHO_SlabMaterialdensity_optional&
        GndHeatTransf_Slab_MatlProps_RHO_SlabMaterialdensity () const;

        GndHeatTransf_Slab_MatlProps_RHO_SlabMaterialdensity_optional&
        GndHeatTransf_Slab_MatlProps_RHO_SlabMaterialdensity ();

        void
        GndHeatTransf_Slab_MatlProps_RHO_SlabMaterialdensity (const GndHeatTransf_Slab_MatlProps_RHO_SlabMaterialdensity_type& x);

        void
        GndHeatTransf_Slab_MatlProps_RHO_SlabMaterialdensity (const GndHeatTransf_Slab_MatlProps_RHO_SlabMaterialdensity_optional& x);

        // GndHeatTransf_Slab_MatlProps_RHO_SoilDensity
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_MatlProps_RHO_SoilDensity_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_MatlProps_RHO_SoilDensity_type > GndHeatTransf_Slab_MatlProps_RHO_SoilDensity_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_MatlProps_RHO_SoilDensity_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_MatlProps_RHO_SoilDensity_traits;

        const GndHeatTransf_Slab_MatlProps_RHO_SoilDensity_optional&
        GndHeatTransf_Slab_MatlProps_RHO_SoilDensity () const;

        GndHeatTransf_Slab_MatlProps_RHO_SoilDensity_optional&
        GndHeatTransf_Slab_MatlProps_RHO_SoilDensity ();

        void
        GndHeatTransf_Slab_MatlProps_RHO_SoilDensity (const GndHeatTransf_Slab_MatlProps_RHO_SoilDensity_type& x);

        void
        GndHeatTransf_Slab_MatlProps_RHO_SoilDensity (const GndHeatTransf_Slab_MatlProps_RHO_SoilDensity_optional& x);

        // GndHeatTransf_Slab_MatlProps_CP_SlabCP
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_MatlProps_CP_SlabCP_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_MatlProps_CP_SlabCP_type > GndHeatTransf_Slab_MatlProps_CP_SlabCP_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_MatlProps_CP_SlabCP_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_MatlProps_CP_SlabCP_traits;

        const GndHeatTransf_Slab_MatlProps_CP_SlabCP_optional&
        GndHeatTransf_Slab_MatlProps_CP_SlabCP () const;

        GndHeatTransf_Slab_MatlProps_CP_SlabCP_optional&
        GndHeatTransf_Slab_MatlProps_CP_SlabCP ();

        void
        GndHeatTransf_Slab_MatlProps_CP_SlabCP (const GndHeatTransf_Slab_MatlProps_CP_SlabCP_type& x);

        void
        GndHeatTransf_Slab_MatlProps_CP_SlabCP (const GndHeatTransf_Slab_MatlProps_CP_SlabCP_optional& x);

        // GndHeatTransf_Slab_MatlProps_CP_SoilCP
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_MatlProps_CP_SoilCP_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_MatlProps_CP_SoilCP_type > GndHeatTransf_Slab_MatlProps_CP_SoilCP_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_MatlProps_CP_SoilCP_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_MatlProps_CP_SoilCP_traits;

        const GndHeatTransf_Slab_MatlProps_CP_SoilCP_optional&
        GndHeatTransf_Slab_MatlProps_CP_SoilCP () const;

        GndHeatTransf_Slab_MatlProps_CP_SoilCP_optional&
        GndHeatTransf_Slab_MatlProps_CP_SoilCP ();

        void
        GndHeatTransf_Slab_MatlProps_CP_SoilCP (const GndHeatTransf_Slab_MatlProps_CP_SoilCP_type& x);

        void
        GndHeatTransf_Slab_MatlProps_CP_SoilCP (const GndHeatTransf_Slab_MatlProps_CP_SoilCP_optional& x);

        // GndHeatTransf_Slab_MatlProps_TCON_Slabk
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_MatlProps_TCON_Slabk_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_MatlProps_TCON_Slabk_type > GndHeatTransf_Slab_MatlProps_TCON_Slabk_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_MatlProps_TCON_Slabk_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_MatlProps_TCON_Slabk_traits;

        const GndHeatTransf_Slab_MatlProps_TCON_Slabk_optional&
        GndHeatTransf_Slab_MatlProps_TCON_Slabk () const;

        GndHeatTransf_Slab_MatlProps_TCON_Slabk_optional&
        GndHeatTransf_Slab_MatlProps_TCON_Slabk ();

        void
        GndHeatTransf_Slab_MatlProps_TCON_Slabk (const GndHeatTransf_Slab_MatlProps_TCON_Slabk_type& x);

        void
        GndHeatTransf_Slab_MatlProps_TCON_Slabk (const GndHeatTransf_Slab_MatlProps_TCON_Slabk_optional& x);

        // GndHeatTransf_Slab_MatlProps_TCON_Soilk
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_MatlProps_TCON_Soilk_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_MatlProps_TCON_Soilk_type > GndHeatTransf_Slab_MatlProps_TCON_Soilk_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_MatlProps_TCON_Soilk_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_MatlProps_TCON_Soilk_traits;

        const GndHeatTransf_Slab_MatlProps_TCON_Soilk_optional&
        GndHeatTransf_Slab_MatlProps_TCON_Soilk () const;

        GndHeatTransf_Slab_MatlProps_TCON_Soilk_optional&
        GndHeatTransf_Slab_MatlProps_TCON_Soilk ();

        void
        GndHeatTransf_Slab_MatlProps_TCON_Soilk (const GndHeatTransf_Slab_MatlProps_TCON_Soilk_type& x);

        void
        GndHeatTransf_Slab_MatlProps_TCON_Soilk (const GndHeatTransf_Slab_MatlProps_TCON_Soilk_optional& x);

        // GndHeatTransf_Slab_BoundConds_EVTR_IsSurfEvapotranspirationModeled
        //
        typedef ::xml_schema::string GndHeatTransf_Slab_BoundConds_EVTR_IsSurfEvapotranspirationModeled_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_BoundConds_EVTR_IsSurfEvapotranspirationModeled_type > GndHeatTransf_Slab_BoundConds_EVTR_IsSurfEvapotranspirationModeled_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_BoundConds_EVTR_IsSurfEvapotranspirationModeled_type, char > GndHeatTransf_Slab_BoundConds_EVTR_IsSurfEvapotranspirationModeled_traits;

        const GndHeatTransf_Slab_BoundConds_EVTR_IsSurfEvapotranspirationModeled_optional&
        GndHeatTransf_Slab_BoundConds_EVTR_IsSurfEvapotranspirationModeled () const;

        GndHeatTransf_Slab_BoundConds_EVTR_IsSurfEvapotranspirationModeled_optional&
        GndHeatTransf_Slab_BoundConds_EVTR_IsSurfEvapotranspirationModeled ();

        void
        GndHeatTransf_Slab_BoundConds_EVTR_IsSurfEvapotranspirationModeled (const GndHeatTransf_Slab_BoundConds_EVTR_IsSurfEvapotranspirationModeled_type& x);

        void
        GndHeatTransf_Slab_BoundConds_EVTR_IsSurfEvapotranspirationModeled (const GndHeatTransf_Slab_BoundConds_EVTR_IsSurfEvapotranspirationModeled_optional& x);

        void
        GndHeatTransf_Slab_BoundConds_EVTR_IsSurfEvapotranspirationModeled (::std::auto_ptr< GndHeatTransf_Slab_BoundConds_EVTR_IsSurfEvapotranspirationModeled_type > p);

        // GndHeatTransf_Slab_BoundConds_FIXBC_isthelowerboundaryatafixedTemp
        //
        typedef ::xml_schema::string GndHeatTransf_Slab_BoundConds_FIXBC_isthelowerboundaryatafixedTemp_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_BoundConds_FIXBC_isthelowerboundaryatafixedTemp_type > GndHeatTransf_Slab_BoundConds_FIXBC_isthelowerboundaryatafixedTemp_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_BoundConds_FIXBC_isthelowerboundaryatafixedTemp_type, char > GndHeatTransf_Slab_BoundConds_FIXBC_isthelowerboundaryatafixedTemp_traits;

        const GndHeatTransf_Slab_BoundConds_FIXBC_isthelowerboundaryatafixedTemp_optional&
        GndHeatTransf_Slab_BoundConds_FIXBC_isthelowerboundaryatafixedTemp () const;

        GndHeatTransf_Slab_BoundConds_FIXBC_isthelowerboundaryatafixedTemp_optional&
        GndHeatTransf_Slab_BoundConds_FIXBC_isthelowerboundaryatafixedTemp ();

        void
        GndHeatTransf_Slab_BoundConds_FIXBC_isthelowerboundaryatafixedTemp (const GndHeatTransf_Slab_BoundConds_FIXBC_isthelowerboundaryatafixedTemp_type& x);

        void
        GndHeatTransf_Slab_BoundConds_FIXBC_isthelowerboundaryatafixedTemp (const GndHeatTransf_Slab_BoundConds_FIXBC_isthelowerboundaryatafixedTemp_optional& x);

        void
        GndHeatTransf_Slab_BoundConds_FIXBC_isthelowerboundaryatafixedTemp (::std::auto_ptr< GndHeatTransf_Slab_BoundConds_FIXBC_isthelowerboundaryatafixedTemp_type > p);

        // GndHeatTransf_Slab_BoundConds_TDEEPin
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_BoundConds_TDEEPin_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_BoundConds_TDEEPin_type > GndHeatTransf_Slab_BoundConds_TDEEPin_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_BoundConds_TDEEPin_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_BoundConds_TDEEPin_traits;

        const GndHeatTransf_Slab_BoundConds_TDEEPin_optional&
        GndHeatTransf_Slab_BoundConds_TDEEPin () const;

        GndHeatTransf_Slab_BoundConds_TDEEPin_optional&
        GndHeatTransf_Slab_BoundConds_TDEEPin ();

        void
        GndHeatTransf_Slab_BoundConds_TDEEPin (const GndHeatTransf_Slab_BoundConds_TDEEPin_type& x);

        void
        GndHeatTransf_Slab_BoundConds_TDEEPin (const GndHeatTransf_Slab_BoundConds_TDEEPin_optional& x);

        // GndHeatTransf_Slab_BoundConds_USRHflag_IsthegroundSurfHSpecByTheUser
        //
        typedef ::xml_schema::string GndHeatTransf_Slab_BoundConds_USRHflag_IsthegroundSurfHSpecByTheUser_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_BoundConds_USRHflag_IsthegroundSurfHSpecByTheUser_type > GndHeatTransf_Slab_BoundConds_USRHflag_IsthegroundSurfHSpecByTheUser_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_BoundConds_USRHflag_IsthegroundSurfHSpecByTheUser_type, char > GndHeatTransf_Slab_BoundConds_USRHflag_IsthegroundSurfHSpecByTheUser_traits;

        const GndHeatTransf_Slab_BoundConds_USRHflag_IsthegroundSurfHSpecByTheUser_optional&
        GndHeatTransf_Slab_BoundConds_USRHflag_IsthegroundSurfHSpecByTheUser () const;

        GndHeatTransf_Slab_BoundConds_USRHflag_IsthegroundSurfHSpecByTheUser_optional&
        GndHeatTransf_Slab_BoundConds_USRHflag_IsthegroundSurfHSpecByTheUser ();

        void
        GndHeatTransf_Slab_BoundConds_USRHflag_IsthegroundSurfHSpecByTheUser (const GndHeatTransf_Slab_BoundConds_USRHflag_IsthegroundSurfHSpecByTheUser_type& x);

        void
        GndHeatTransf_Slab_BoundConds_USRHflag_IsthegroundSurfHSpecByTheUser (const GndHeatTransf_Slab_BoundConds_USRHflag_IsthegroundSurfHSpecByTheUser_optional& x);

        void
        GndHeatTransf_Slab_BoundConds_USRHflag_IsthegroundSurfHSpecByTheUser (::std::auto_ptr< GndHeatTransf_Slab_BoundConds_USRHflag_IsthegroundSurfHSpecByTheUser_type > p);

        // GndHeatTransf_Slab_BoundConds_USERH_UserSpecGrndSurfheattransfercoeff
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_BoundConds_USERH_UserSpecGrndSurfheattransfercoeff_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_BoundConds_USERH_UserSpecGrndSurfheattransfercoeff_type > GndHeatTransf_Slab_BoundConds_USERH_UserSpecGrndSurfheattransfercoeff_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_BoundConds_USERH_UserSpecGrndSurfheattransfercoeff_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_BoundConds_USERH_UserSpecGrndSurfheattransfercoeff_traits;

        const GndHeatTransf_Slab_BoundConds_USERH_UserSpecGrndSurfheattransfercoeff_optional&
        GndHeatTransf_Slab_BoundConds_USERH_UserSpecGrndSurfheattransfercoeff () const;

        GndHeatTransf_Slab_BoundConds_USERH_UserSpecGrndSurfheattransfercoeff_optional&
        GndHeatTransf_Slab_BoundConds_USERH_UserSpecGrndSurfheattransfercoeff ();

        void
        GndHeatTransf_Slab_BoundConds_USERH_UserSpecGrndSurfheattransfercoeff (const GndHeatTransf_Slab_BoundConds_USERH_UserSpecGrndSurfheattransfercoeff_type& x);

        void
        GndHeatTransf_Slab_BoundConds_USERH_UserSpecGrndSurfheattransfercoeff (const GndHeatTransf_Slab_BoundConds_USERH_UserSpecGrndSurfheattransfercoeff_optional& x);

        // GndHeatTransf_Slab_Insulation_RINS_RvalueofunderslabInsul
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_Insulation_RINS_RvalueofunderslabInsul_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_Insulation_RINS_RvalueofunderslabInsul_type > GndHeatTransf_Slab_Insulation_RINS_RvalueofunderslabInsul_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_Insulation_RINS_RvalueofunderslabInsul_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_Insulation_RINS_RvalueofunderslabInsul_traits;

        const GndHeatTransf_Slab_Insulation_RINS_RvalueofunderslabInsul_optional&
        GndHeatTransf_Slab_Insulation_RINS_RvalueofunderslabInsul () const;

        GndHeatTransf_Slab_Insulation_RINS_RvalueofunderslabInsul_optional&
        GndHeatTransf_Slab_Insulation_RINS_RvalueofunderslabInsul ();

        void
        GndHeatTransf_Slab_Insulation_RINS_RvalueofunderslabInsul (const GndHeatTransf_Slab_Insulation_RINS_RvalueofunderslabInsul_type& x);

        void
        GndHeatTransf_Slab_Insulation_RINS_RvalueofunderslabInsul (const GndHeatTransf_Slab_Insulation_RINS_RvalueofunderslabInsul_optional& x);

        // GndHeatTransf_Slab_Insulation_DINS_WidthOfStripUnderSlabInsul
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_Insulation_DINS_WidthOfStripUnderSlabInsul_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_Insulation_DINS_WidthOfStripUnderSlabInsul_type > GndHeatTransf_Slab_Insulation_DINS_WidthOfStripUnderSlabInsul_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_Insulation_DINS_WidthOfStripUnderSlabInsul_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_Insulation_DINS_WidthOfStripUnderSlabInsul_traits;

        const GndHeatTransf_Slab_Insulation_DINS_WidthOfStripUnderSlabInsul_optional&
        GndHeatTransf_Slab_Insulation_DINS_WidthOfStripUnderSlabInsul () const;

        GndHeatTransf_Slab_Insulation_DINS_WidthOfStripUnderSlabInsul_optional&
        GndHeatTransf_Slab_Insulation_DINS_WidthOfStripUnderSlabInsul ();

        void
        GndHeatTransf_Slab_Insulation_DINS_WidthOfStripUnderSlabInsul (const GndHeatTransf_Slab_Insulation_DINS_WidthOfStripUnderSlabInsul_type& x);

        void
        GndHeatTransf_Slab_Insulation_DINS_WidthOfStripUnderSlabInsul (const GndHeatTransf_Slab_Insulation_DINS_WidthOfStripUnderSlabInsul_optional& x);

        // GndHeatTransf_Slab_Insulation_RVINS_RvalueofverticalInsul
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_Insulation_RVINS_RvalueofverticalInsul_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_Insulation_RVINS_RvalueofverticalInsul_type > GndHeatTransf_Slab_Insulation_RVINS_RvalueofverticalInsul_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_Insulation_RVINS_RvalueofverticalInsul_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_Insulation_RVINS_RvalueofverticalInsul_traits;

        const GndHeatTransf_Slab_Insulation_RVINS_RvalueofverticalInsul_optional&
        GndHeatTransf_Slab_Insulation_RVINS_RvalueofverticalInsul () const;

        GndHeatTransf_Slab_Insulation_RVINS_RvalueofverticalInsul_optional&
        GndHeatTransf_Slab_Insulation_RVINS_RvalueofverticalInsul ();

        void
        GndHeatTransf_Slab_Insulation_RVINS_RvalueofverticalInsul (const GndHeatTransf_Slab_Insulation_RVINS_RvalueofverticalInsul_type& x);

        void
        GndHeatTransf_Slab_Insulation_RVINS_RvalueofverticalInsul (const GndHeatTransf_Slab_Insulation_RVINS_RvalueofverticalInsul_optional& x);

        // GndHeatTransf_Slab_Insulation_ZVINS_DepthofVertInsul
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_Insulation_ZVINS_DepthofVertInsul_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_Insulation_ZVINS_DepthofVertInsul_type > GndHeatTransf_Slab_Insulation_ZVINS_DepthofVertInsul_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_Insulation_ZVINS_DepthofVertInsul_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_Insulation_ZVINS_DepthofVertInsul_traits;

        const GndHeatTransf_Slab_Insulation_ZVINS_DepthofVertInsul_optional&
        GndHeatTransf_Slab_Insulation_ZVINS_DepthofVertInsul () const;

        GndHeatTransf_Slab_Insulation_ZVINS_DepthofVertInsul_optional&
        GndHeatTransf_Slab_Insulation_ZVINS_DepthofVertInsul ();

        void
        GndHeatTransf_Slab_Insulation_ZVINS_DepthofVertInsul (const GndHeatTransf_Slab_Insulation_ZVINS_DepthofVertInsul_type& x);

        void
        GndHeatTransf_Slab_Insulation_ZVINS_DepthofVertInsul (const GndHeatTransf_Slab_Insulation_ZVINS_DepthofVertInsul_optional& x);

        // GndHeatTransf_Slab_Insulation_IVINS_Flag_IsthereverticalInsul
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_Insulation_IVINS_Flag_IsthereverticalInsul_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_Insulation_IVINS_Flag_IsthereverticalInsul_type > GndHeatTransf_Slab_Insulation_IVINS_Flag_IsthereverticalInsul_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_Insulation_IVINS_Flag_IsthereverticalInsul_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_Insulation_IVINS_Flag_IsthereverticalInsul_traits;

        const GndHeatTransf_Slab_Insulation_IVINS_Flag_IsthereverticalInsul_optional&
        GndHeatTransf_Slab_Insulation_IVINS_Flag_IsthereverticalInsul () const;

        GndHeatTransf_Slab_Insulation_IVINS_Flag_IsthereverticalInsul_optional&
        GndHeatTransf_Slab_Insulation_IVINS_Flag_IsthereverticalInsul ();

        void
        GndHeatTransf_Slab_Insulation_IVINS_Flag_IsthereverticalInsul (const GndHeatTransf_Slab_Insulation_IVINS_Flag_IsthereverticalInsul_type& x);

        void
        GndHeatTransf_Slab_Insulation_IVINS_Flag_IsthereverticalInsul (const GndHeatTransf_Slab_Insulation_IVINS_Flag_IsthereverticalInsul_optional& x);

        // GndHeatTransf_Slab_EquivalentSlab_APRatioAreaToPerimRatioThisSlab
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_EquivalentSlab_APRatioAreaToPerimRatioThisSlab_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_EquivalentSlab_APRatioAreaToPerimRatioThisSlab_type > GndHeatTransf_Slab_EquivalentSlab_APRatioAreaToPerimRatioThisSlab_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_EquivalentSlab_APRatioAreaToPerimRatioThisSlab_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_EquivalentSlab_APRatioAreaToPerimRatioThisSlab_traits;

        const GndHeatTransf_Slab_EquivalentSlab_APRatioAreaToPerimRatioThisSlab_optional&
        GndHeatTransf_Slab_EquivalentSlab_APRatioAreaToPerimRatioThisSlab () const;

        GndHeatTransf_Slab_EquivalentSlab_APRatioAreaToPerimRatioThisSlab_optional&
        GndHeatTransf_Slab_EquivalentSlab_APRatioAreaToPerimRatioThisSlab ();

        void
        GndHeatTransf_Slab_EquivalentSlab_APRatioAreaToPerimRatioThisSlab (const GndHeatTransf_Slab_EquivalentSlab_APRatioAreaToPerimRatioThisSlab_type& x);

        void
        GndHeatTransf_Slab_EquivalentSlab_APRatioAreaToPerimRatioThisSlab (const GndHeatTransf_Slab_EquivalentSlab_APRatioAreaToPerimRatioThisSlab_optional& x);

        // GndHeatTransf_Slab_EquivalentSlab_SLABDEPTH_Thicknessofslabongrade
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_EquivalentSlab_SLABDEPTH_Thicknessofslabongrade_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_EquivalentSlab_SLABDEPTH_Thicknessofslabongrade_type > GndHeatTransf_Slab_EquivalentSlab_SLABDEPTH_Thicknessofslabongrade_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_EquivalentSlab_SLABDEPTH_Thicknessofslabongrade_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_EquivalentSlab_SLABDEPTH_Thicknessofslabongrade_traits;

        const GndHeatTransf_Slab_EquivalentSlab_SLABDEPTH_Thicknessofslabongrade_optional&
        GndHeatTransf_Slab_EquivalentSlab_SLABDEPTH_Thicknessofslabongrade () const;

        GndHeatTransf_Slab_EquivalentSlab_SLABDEPTH_Thicknessofslabongrade_optional&
        GndHeatTransf_Slab_EquivalentSlab_SLABDEPTH_Thicknessofslabongrade ();

        void
        GndHeatTransf_Slab_EquivalentSlab_SLABDEPTH_Thicknessofslabongrade (const GndHeatTransf_Slab_EquivalentSlab_SLABDEPTH_Thicknessofslabongrade_type& x);

        void
        GndHeatTransf_Slab_EquivalentSlab_SLABDEPTH_Thicknessofslabongrade (const GndHeatTransf_Slab_EquivalentSlab_SLABDEPTH_Thicknessofslabongrade_optional& x);

        // GndHeatTransf_Slab_EquivalentSlab_Clear_DistFromEdgeOfSlabToDomainEdge
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_EquivalentSlab_Clear_DistFromEdgeOfSlabToDomainEdge_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_EquivalentSlab_Clear_DistFromEdgeOfSlabToDomainEdge_type > GndHeatTransf_Slab_EquivalentSlab_Clear_DistFromEdgeOfSlabToDomainEdge_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_EquivalentSlab_Clear_DistFromEdgeOfSlabToDomainEdge_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_EquivalentSlab_Clear_DistFromEdgeOfSlabToDomainEdge_traits;

        const GndHeatTransf_Slab_EquivalentSlab_Clear_DistFromEdgeOfSlabToDomainEdge_optional&
        GndHeatTransf_Slab_EquivalentSlab_Clear_DistFromEdgeOfSlabToDomainEdge () const;

        GndHeatTransf_Slab_EquivalentSlab_Clear_DistFromEdgeOfSlabToDomainEdge_optional&
        GndHeatTransf_Slab_EquivalentSlab_Clear_DistFromEdgeOfSlabToDomainEdge ();

        void
        GndHeatTransf_Slab_EquivalentSlab_Clear_DistFromEdgeOfSlabToDomainEdge (const GndHeatTransf_Slab_EquivalentSlab_Clear_DistFromEdgeOfSlabToDomainEdge_type& x);

        void
        GndHeatTransf_Slab_EquivalentSlab_Clear_DistFromEdgeOfSlabToDomainEdge (const GndHeatTransf_Slab_EquivalentSlab_Clear_DistFromEdgeOfSlabToDomainEdge_optional& x);

        // GndHeatTransf_Slab_EquivalentSlab_ZClear_Distfrombottomofslabtodomainbottom
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_EquivalentSlab_ZClear_Distfrombottomofslabtodomainbottom_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_EquivalentSlab_ZClear_Distfrombottomofslabtodomainbottom_type > GndHeatTransf_Slab_EquivalentSlab_ZClear_Distfrombottomofslabtodomainbottom_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_EquivalentSlab_ZClear_Distfrombottomofslabtodomainbottom_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_EquivalentSlab_ZClear_Distfrombottomofslabtodomainbottom_traits;

        const GndHeatTransf_Slab_EquivalentSlab_ZClear_Distfrombottomofslabtodomainbottom_optional&
        GndHeatTransf_Slab_EquivalentSlab_ZClear_Distfrombottomofslabtodomainbottom () const;

        GndHeatTransf_Slab_EquivalentSlab_ZClear_Distfrombottomofslabtodomainbottom_optional&
        GndHeatTransf_Slab_EquivalentSlab_ZClear_Distfrombottomofslabtodomainbottom ();

        void
        GndHeatTransf_Slab_EquivalentSlab_ZClear_Distfrombottomofslabtodomainbottom (const GndHeatTransf_Slab_EquivalentSlab_ZClear_Distfrombottomofslabtodomainbottom_type& x);

        void
        GndHeatTransf_Slab_EquivalentSlab_ZClear_Distfrombottomofslabtodomainbottom (const GndHeatTransf_Slab_EquivalentSlab_ZClear_Distfrombottomofslabtodomainbottom_optional& x);

        // GndHeatTransf_Slab_AutoGrid_SLABXXDimensionBldgSlab
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_AutoGrid_SLABXXDimensionBldgSlab_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_AutoGrid_SLABXXDimensionBldgSlab_type > GndHeatTransf_Slab_AutoGrid_SLABXXDimensionBldgSlab_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_AutoGrid_SLABXXDimensionBldgSlab_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_AutoGrid_SLABXXDimensionBldgSlab_traits;

        const GndHeatTransf_Slab_AutoGrid_SLABXXDimensionBldgSlab_optional&
        GndHeatTransf_Slab_AutoGrid_SLABXXDimensionBldgSlab () const;

        GndHeatTransf_Slab_AutoGrid_SLABXXDimensionBldgSlab_optional&
        GndHeatTransf_Slab_AutoGrid_SLABXXDimensionBldgSlab ();

        void
        GndHeatTransf_Slab_AutoGrid_SLABXXDimensionBldgSlab (const GndHeatTransf_Slab_AutoGrid_SLABXXDimensionBldgSlab_type& x);

        void
        GndHeatTransf_Slab_AutoGrid_SLABXXDimensionBldgSlab (const GndHeatTransf_Slab_AutoGrid_SLABXXDimensionBldgSlab_optional& x);

        // GndHeatTransf_Slab_AutoGrid_SLABYYDimensionBldgSlab
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_AutoGrid_SLABYYDimensionBldgSlab_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_AutoGrid_SLABYYDimensionBldgSlab_type > GndHeatTransf_Slab_AutoGrid_SLABYYDimensionBldgSlab_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_AutoGrid_SLABYYDimensionBldgSlab_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_AutoGrid_SLABYYDimensionBldgSlab_traits;

        const GndHeatTransf_Slab_AutoGrid_SLABYYDimensionBldgSlab_optional&
        GndHeatTransf_Slab_AutoGrid_SLABYYDimensionBldgSlab () const;

        GndHeatTransf_Slab_AutoGrid_SLABYYDimensionBldgSlab_optional&
        GndHeatTransf_Slab_AutoGrid_SLABYYDimensionBldgSlab ();

        void
        GndHeatTransf_Slab_AutoGrid_SLABYYDimensionBldgSlab (const GndHeatTransf_Slab_AutoGrid_SLABYYDimensionBldgSlab_type& x);

        void
        GndHeatTransf_Slab_AutoGrid_SLABYYDimensionBldgSlab (const GndHeatTransf_Slab_AutoGrid_SLABYYDimensionBldgSlab_optional& x);

        // GndHeatTransf_Slab_AutoGrid_SLABDEPTH_Thicknessofslabongrade
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_AutoGrid_SLABDEPTH_Thicknessofslabongrade_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_AutoGrid_SLABDEPTH_Thicknessofslabongrade_type > GndHeatTransf_Slab_AutoGrid_SLABDEPTH_Thicknessofslabongrade_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_AutoGrid_SLABDEPTH_Thicknessofslabongrade_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_AutoGrid_SLABDEPTH_Thicknessofslabongrade_traits;

        const GndHeatTransf_Slab_AutoGrid_SLABDEPTH_Thicknessofslabongrade_optional&
        GndHeatTransf_Slab_AutoGrid_SLABDEPTH_Thicknessofslabongrade () const;

        GndHeatTransf_Slab_AutoGrid_SLABDEPTH_Thicknessofslabongrade_optional&
        GndHeatTransf_Slab_AutoGrid_SLABDEPTH_Thicknessofslabongrade ();

        void
        GndHeatTransf_Slab_AutoGrid_SLABDEPTH_Thicknessofslabongrade (const GndHeatTransf_Slab_AutoGrid_SLABDEPTH_Thicknessofslabongrade_type& x);

        void
        GndHeatTransf_Slab_AutoGrid_SLABDEPTH_Thicknessofslabongrade (const GndHeatTransf_Slab_AutoGrid_SLABDEPTH_Thicknessofslabongrade_optional& x);

        // GndHeatTransf_Slab_AutoGrid_Clear_DistFromEdgeOfSlabToDomainEdge
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_AutoGrid_Clear_DistFromEdgeOfSlabToDomainEdge_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_AutoGrid_Clear_DistFromEdgeOfSlabToDomainEdge_type > GndHeatTransf_Slab_AutoGrid_Clear_DistFromEdgeOfSlabToDomainEdge_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_AutoGrid_Clear_DistFromEdgeOfSlabToDomainEdge_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_AutoGrid_Clear_DistFromEdgeOfSlabToDomainEdge_traits;

        const GndHeatTransf_Slab_AutoGrid_Clear_DistFromEdgeOfSlabToDomainEdge_optional&
        GndHeatTransf_Slab_AutoGrid_Clear_DistFromEdgeOfSlabToDomainEdge () const;

        GndHeatTransf_Slab_AutoGrid_Clear_DistFromEdgeOfSlabToDomainEdge_optional&
        GndHeatTransf_Slab_AutoGrid_Clear_DistFromEdgeOfSlabToDomainEdge ();

        void
        GndHeatTransf_Slab_AutoGrid_Clear_DistFromEdgeOfSlabToDomainEdge (const GndHeatTransf_Slab_AutoGrid_Clear_DistFromEdgeOfSlabToDomainEdge_type& x);

        void
        GndHeatTransf_Slab_AutoGrid_Clear_DistFromEdgeOfSlabToDomainEdge (const GndHeatTransf_Slab_AutoGrid_Clear_DistFromEdgeOfSlabToDomainEdge_optional& x);

        // GndHeatTransf_Slab_AutoGrid_ZClear_Distfrombottomofslabtodomainbottom
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_AutoGrid_ZClear_Distfrombottomofslabtodomainbottom_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_AutoGrid_ZClear_Distfrombottomofslabtodomainbottom_type > GndHeatTransf_Slab_AutoGrid_ZClear_Distfrombottomofslabtodomainbottom_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_AutoGrid_ZClear_Distfrombottomofslabtodomainbottom_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_AutoGrid_ZClear_Distfrombottomofslabtodomainbottom_traits;

        const GndHeatTransf_Slab_AutoGrid_ZClear_Distfrombottomofslabtodomainbottom_optional&
        GndHeatTransf_Slab_AutoGrid_ZClear_Distfrombottomofslabtodomainbottom () const;

        GndHeatTransf_Slab_AutoGrid_ZClear_Distfrombottomofslabtodomainbottom_optional&
        GndHeatTransf_Slab_AutoGrid_ZClear_Distfrombottomofslabtodomainbottom ();

        void
        GndHeatTransf_Slab_AutoGrid_ZClear_Distfrombottomofslabtodomainbottom (const GndHeatTransf_Slab_AutoGrid_ZClear_Distfrombottomofslabtodomainbottom_type& x);

        void
        GndHeatTransf_Slab_AutoGrid_ZClear_Distfrombottomofslabtodomainbottom (const GndHeatTransf_Slab_AutoGrid_ZClear_Distfrombottomofslabtodomainbottom_optional& x);

        // GndHeatTransf_Slab_ManualGrid_NX_NumofcellsintheXdirection
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_ManualGrid_NX_NumofcellsintheXdirection_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_ManualGrid_NX_NumofcellsintheXdirection_type > GndHeatTransf_Slab_ManualGrid_NX_NumofcellsintheXdirection_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_ManualGrid_NX_NumofcellsintheXdirection_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_ManualGrid_NX_NumofcellsintheXdirection_traits;

        const GndHeatTransf_Slab_ManualGrid_NX_NumofcellsintheXdirection_optional&
        GndHeatTransf_Slab_ManualGrid_NX_NumofcellsintheXdirection () const;

        GndHeatTransf_Slab_ManualGrid_NX_NumofcellsintheXdirection_optional&
        GndHeatTransf_Slab_ManualGrid_NX_NumofcellsintheXdirection ();

        void
        GndHeatTransf_Slab_ManualGrid_NX_NumofcellsintheXdirection (const GndHeatTransf_Slab_ManualGrid_NX_NumofcellsintheXdirection_type& x);

        void
        GndHeatTransf_Slab_ManualGrid_NX_NumofcellsintheXdirection (const GndHeatTransf_Slab_ManualGrid_NX_NumofcellsintheXdirection_optional& x);

        // GndHeatTransf_Slab_ManualGrid_NY_NumofcellsintheYdirection
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_ManualGrid_NY_NumofcellsintheYdirection_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_ManualGrid_NY_NumofcellsintheYdirection_type > GndHeatTransf_Slab_ManualGrid_NY_NumofcellsintheYdirection_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_ManualGrid_NY_NumofcellsintheYdirection_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_ManualGrid_NY_NumofcellsintheYdirection_traits;

        const GndHeatTransf_Slab_ManualGrid_NY_NumofcellsintheYdirection_optional&
        GndHeatTransf_Slab_ManualGrid_NY_NumofcellsintheYdirection () const;

        GndHeatTransf_Slab_ManualGrid_NY_NumofcellsintheYdirection_optional&
        GndHeatTransf_Slab_ManualGrid_NY_NumofcellsintheYdirection ();

        void
        GndHeatTransf_Slab_ManualGrid_NY_NumofcellsintheYdirection (const GndHeatTransf_Slab_ManualGrid_NY_NumofcellsintheYdirection_type& x);

        void
        GndHeatTransf_Slab_ManualGrid_NY_NumofcellsintheYdirection (const GndHeatTransf_Slab_ManualGrid_NY_NumofcellsintheYdirection_optional& x);

        // GndHeatTransf_Slab_ManualGrid_NZ_NumofcellsintheZdirection
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_ManualGrid_NZ_NumofcellsintheZdirection_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_ManualGrid_NZ_NumofcellsintheZdirection_type > GndHeatTransf_Slab_ManualGrid_NZ_NumofcellsintheZdirection_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_ManualGrid_NZ_NumofcellsintheZdirection_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_ManualGrid_NZ_NumofcellsintheZdirection_traits;

        const GndHeatTransf_Slab_ManualGrid_NZ_NumofcellsintheZdirection_optional&
        GndHeatTransf_Slab_ManualGrid_NZ_NumofcellsintheZdirection () const;

        GndHeatTransf_Slab_ManualGrid_NZ_NumofcellsintheZdirection_optional&
        GndHeatTransf_Slab_ManualGrid_NZ_NumofcellsintheZdirection ();

        void
        GndHeatTransf_Slab_ManualGrid_NZ_NumofcellsintheZdirection (const GndHeatTransf_Slab_ManualGrid_NZ_NumofcellsintheZdirection_type& x);

        void
        GndHeatTransf_Slab_ManualGrid_NZ_NumofcellsintheZdirection (const GndHeatTransf_Slab_ManualGrid_NZ_NumofcellsintheZdirection_optional& x);

        // GndHeatTransf_Slab_ManualGrid_IBOX_Xdirectioncellindicatorofslabedge
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_ManualGrid_IBOX_Xdirectioncellindicatorofslabedge_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_ManualGrid_IBOX_Xdirectioncellindicatorofslabedge_type > GndHeatTransf_Slab_ManualGrid_IBOX_Xdirectioncellindicatorofslabedge_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_ManualGrid_IBOX_Xdirectioncellindicatorofslabedge_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_ManualGrid_IBOX_Xdirectioncellindicatorofslabedge_traits;

        const GndHeatTransf_Slab_ManualGrid_IBOX_Xdirectioncellindicatorofslabedge_optional&
        GndHeatTransf_Slab_ManualGrid_IBOX_Xdirectioncellindicatorofslabedge () const;

        GndHeatTransf_Slab_ManualGrid_IBOX_Xdirectioncellindicatorofslabedge_optional&
        GndHeatTransf_Slab_ManualGrid_IBOX_Xdirectioncellindicatorofslabedge ();

        void
        GndHeatTransf_Slab_ManualGrid_IBOX_Xdirectioncellindicatorofslabedge (const GndHeatTransf_Slab_ManualGrid_IBOX_Xdirectioncellindicatorofslabedge_type& x);

        void
        GndHeatTransf_Slab_ManualGrid_IBOX_Xdirectioncellindicatorofslabedge (const GndHeatTransf_Slab_ManualGrid_IBOX_Xdirectioncellindicatorofslabedge_optional& x);

        // GndHeatTransf_Slab_ManualGrid_JBOX_Y_DirectionCellindicatorSlabEdge
        //
        typedef ::xml_schema::double_ GndHeatTransf_Slab_ManualGrid_JBOX_Y_DirectionCellindicatorSlabEdge_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_ManualGrid_JBOX_Y_DirectionCellindicatorSlabEdge_type > GndHeatTransf_Slab_ManualGrid_JBOX_Y_DirectionCellindicatorSlabEdge_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_ManualGrid_JBOX_Y_DirectionCellindicatorSlabEdge_type, char, ::xsd::cxx::tree::schema_type::double_ > GndHeatTransf_Slab_ManualGrid_JBOX_Y_DirectionCellindicatorSlabEdge_traits;

        const GndHeatTransf_Slab_ManualGrid_JBOX_Y_DirectionCellindicatorSlabEdge_optional&
        GndHeatTransf_Slab_ManualGrid_JBOX_Y_DirectionCellindicatorSlabEdge () const;

        GndHeatTransf_Slab_ManualGrid_JBOX_Y_DirectionCellindicatorSlabEdge_optional&
        GndHeatTransf_Slab_ManualGrid_JBOX_Y_DirectionCellindicatorSlabEdge ();

        void
        GndHeatTransf_Slab_ManualGrid_JBOX_Y_DirectionCellindicatorSlabEdge (const GndHeatTransf_Slab_ManualGrid_JBOX_Y_DirectionCellindicatorSlabEdge_type& x);

        void
        GndHeatTransf_Slab_ManualGrid_JBOX_Y_DirectionCellindicatorSlabEdge (const GndHeatTransf_Slab_ManualGrid_JBOX_Y_DirectionCellindicatorSlabEdge_optional& x);

        // GndHeatTransf_Slab_XFACE_SlabXCoord_1_40
        //
        typedef ::schema::simxml::SimModelCore::doubleList GndHeatTransf_Slab_XFACE_SlabXCoord_1_40_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_XFACE_SlabXCoord_1_40_type > GndHeatTransf_Slab_XFACE_SlabXCoord_1_40_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_XFACE_SlabXCoord_1_40_type, char > GndHeatTransf_Slab_XFACE_SlabXCoord_1_40_traits;

        const GndHeatTransf_Slab_XFACE_SlabXCoord_1_40_optional&
        GndHeatTransf_Slab_XFACE_SlabXCoord_1_40 () const;

        GndHeatTransf_Slab_XFACE_SlabXCoord_1_40_optional&
        GndHeatTransf_Slab_XFACE_SlabXCoord_1_40 ();

        void
        GndHeatTransf_Slab_XFACE_SlabXCoord_1_40 (const GndHeatTransf_Slab_XFACE_SlabXCoord_1_40_type& x);

        void
        GndHeatTransf_Slab_XFACE_SlabXCoord_1_40 (const GndHeatTransf_Slab_XFACE_SlabXCoord_1_40_optional& x);

        void
        GndHeatTransf_Slab_XFACE_SlabXCoord_1_40 (::std::auto_ptr< GndHeatTransf_Slab_XFACE_SlabXCoord_1_40_type > p);

        // GndHeatTransf_Slab_YFACE_SlabYCoord_1_40
        //
        typedef ::schema::simxml::SimModelCore::doubleList GndHeatTransf_Slab_YFACE_SlabYCoord_1_40_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_YFACE_SlabYCoord_1_40_type > GndHeatTransf_Slab_YFACE_SlabYCoord_1_40_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_YFACE_SlabYCoord_1_40_type, char > GndHeatTransf_Slab_YFACE_SlabYCoord_1_40_traits;

        const GndHeatTransf_Slab_YFACE_SlabYCoord_1_40_optional&
        GndHeatTransf_Slab_YFACE_SlabYCoord_1_40 () const;

        GndHeatTransf_Slab_YFACE_SlabYCoord_1_40_optional&
        GndHeatTransf_Slab_YFACE_SlabYCoord_1_40 ();

        void
        GndHeatTransf_Slab_YFACE_SlabYCoord_1_40 (const GndHeatTransf_Slab_YFACE_SlabYCoord_1_40_type& x);

        void
        GndHeatTransf_Slab_YFACE_SlabYCoord_1_40 (const GndHeatTransf_Slab_YFACE_SlabYCoord_1_40_optional& x);

        void
        GndHeatTransf_Slab_YFACE_SlabYCoord_1_40 (::std::auto_ptr< GndHeatTransf_Slab_YFACE_SlabYCoord_1_40_type > p);

        // GndHeatTransf_Slab_ZFACE_SlabZCoord_1_40
        //
        typedef ::schema::simxml::SimModelCore::doubleList GndHeatTransf_Slab_ZFACE_SlabZCoord_1_40_type;
        typedef ::xsd::cxx::tree::optional< GndHeatTransf_Slab_ZFACE_SlabZCoord_1_40_type > GndHeatTransf_Slab_ZFACE_SlabZCoord_1_40_optional;
        typedef ::xsd::cxx::tree::traits< GndHeatTransf_Slab_ZFACE_SlabZCoord_1_40_type, char > GndHeatTransf_Slab_ZFACE_SlabZCoord_1_40_traits;

        const GndHeatTransf_Slab_ZFACE_SlabZCoord_1_40_optional&
        GndHeatTransf_Slab_ZFACE_SlabZCoord_1_40 () const;

        GndHeatTransf_Slab_ZFACE_SlabZCoord_1_40_optional&
        GndHeatTransf_Slab_ZFACE_SlabZCoord_1_40 ();

        void
        GndHeatTransf_Slab_ZFACE_SlabZCoord_1_40 (const GndHeatTransf_Slab_ZFACE_SlabZCoord_1_40_type& x);

        void
        GndHeatTransf_Slab_ZFACE_SlabZCoord_1_40 (const GndHeatTransf_Slab_ZFACE_SlabZCoord_1_40_optional& x);

        void
        GndHeatTransf_Slab_ZFACE_SlabZCoord_1_40 (::std::auto_ptr< GndHeatTransf_Slab_ZFACE_SlabZCoord_1_40_type > p);

        // Constructors.
        //
        SimGroundHeatTransferSlab ();

        SimGroundHeatTransferSlab (const RefId_type&);

        SimGroundHeatTransferSlab (const ::xercesc::DOMElement& e,
                                   ::xml_schema::flags f = 0,
                                   ::xml_schema::container* c = 0);

        SimGroundHeatTransferSlab (const SimGroundHeatTransferSlab& x,
                                   ::xml_schema::flags f = 0,
                                   ::xml_schema::container* c = 0);

        virtual SimGroundHeatTransferSlab*
        _clone (::xml_schema::flags f = 0,
                ::xml_schema::container* c = 0) const;

        SimGroundHeatTransferSlab&
        operator= (const SimGroundHeatTransferSlab& x);

        virtual 
        ~SimGroundHeatTransferSlab ();

        // Implementation.
        //
        protected:
        void
        parse (::xsd::cxx::xml::dom::parser< char >&,
               ::xml_schema::flags);

        protected:
        SimGrndHeatTransSlab_IYRS_NumYearsToIterate_optional SimGrndHeatTransSlab_IYRS_NumYearsToIterate_;
        SimGrndHeatTransSlab_Shape_Slabshape_optional SimGrndHeatTransSlab_Shape_Slabshape_;
        SimGrndHeatTransSlab_HBLDG_Bldgheight_optional SimGrndHeatTransSlab_HBLDG_Bldgheight_;
        SimGrndHeatTransSlab_TIN1_JanuaryIndoorAvgTempSetpnt_optional SimGrndHeatTransSlab_TIN1_JanuaryIndoorAvgTempSetpnt_;
        SimGrndHeatTransSlab_TIN2_FebIndoorAvgTempSetpnt_optional SimGrndHeatTransSlab_TIN2_FebIndoorAvgTempSetpnt_;
        SimGrndHeatTransSlab_TIN3_MarIndoorAvgTempSetpnt_optional SimGrndHeatTransSlab_TIN3_MarIndoorAvgTempSetpnt_;
        SimGrndHeatTransSlab_TIN4_AprIndoorAvgTempSetpnt_optional SimGrndHeatTransSlab_TIN4_AprIndoorAvgTempSetpnt_;
        SimGrndHeatTransSlab_TIN5_MayIndoorAvgTempSetpnt_optional SimGrndHeatTransSlab_TIN5_MayIndoorAvgTempSetpnt_;
        SimGrndHeatTransSlab_TIN6_JunIndoorAvgTempSetpnt_optional SimGrndHeatTransSlab_TIN6_JunIndoorAvgTempSetpnt_;
        SimGrndHeatTransSlab_TIN7_JulIndoorAvgTempSetpnt_optional SimGrndHeatTransSlab_TIN7_JulIndoorAvgTempSetpnt_;
        SimGrndHeatTransSlab_TIN8_AugIndoorAvgTempSetpnt_optional SimGrndHeatTransSlab_TIN8_AugIndoorAvgTempSetpnt_;
        SimGrndHeatTransSlab_TIN9_SepIndoorAvgTempSetpnt_optional SimGrndHeatTransSlab_TIN9_SepIndoorAvgTempSetpnt_;
        SimGrndHeatTransSlab_TIN10_OctIndoorAvgTempSetpnt_optional SimGrndHeatTransSlab_TIN10_OctIndoorAvgTempSetpnt_;
        SimGrndHeatTransSlab_TIN11_NovIndoorAvgTempSetpnt_optional SimGrndHeatTransSlab_TIN11_NovIndoorAvgTempSetpnt_;
        SimGrndHeatTransSlab_TIN12_DecIndoorAvgTempSetpnt_optional SimGrndHeatTransSlab_TIN12_DecIndoorAvgTempSetpnt_;
        SimGrndHeatTransSlab_TINAmp_DailyIndoorsinewavevariationamplitude_optional SimGrndHeatTransSlab_TINAmp_DailyIndoorsinewavevariationamplitude_;
        SimGrndHeatTransSlab_ConvTol_ConvergTolerance_optional SimGrndHeatTransSlab_ConvTol_ConvergTolerance_;
        GndHeatTransf_Slab_Materials_NMAT_Numofmaterials_optional GndHeatTransf_Slab_Materials_NMAT_Numofmaterials_;
        GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_NoSnow_optional GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_NoSnow_;
        GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_Snow_optional GndHeatTransf_Slab_Materials_ALBEDO_SurfAlbedo_Snow_;
        GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_NoSnow_optional GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_NoSnow_;
        GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_Snow_optional GndHeatTransf_Slab_Materials_EPSLW_SurfEmiss_Snow_;
        GndHeatTransf_Slab_Materials_Z0_SurfRoughness_NoSnow_optional GndHeatTransf_Slab_Materials_Z0_SurfRoughness_NoSnow_;
        GndHeatTransf_Slab_Materials_Z0_SurfRoughness_Snow_optional GndHeatTransf_Slab_Materials_Z0_SurfRoughness_Snow_;
        GndHeatTransf_Slab_Materials_HIN_IndoorHConv_DownwardFlow_optional GndHeatTransf_Slab_Materials_HIN_IndoorHConv_DownwardFlow_;
        GndHeatTransf_Slab_Materials_HIN_IndoorHConv_Upward_optional GndHeatTransf_Slab_Materials_HIN_IndoorHConv_Upward_;
        GndHeatTransf_Slab_MatlProps_RHO_SlabMaterialdensity_optional GndHeatTransf_Slab_MatlProps_RHO_SlabMaterialdensity_;
        GndHeatTransf_Slab_MatlProps_RHO_SoilDensity_optional GndHeatTransf_Slab_MatlProps_RHO_SoilDensity_;
        GndHeatTransf_Slab_MatlProps_CP_SlabCP_optional GndHeatTransf_Slab_MatlProps_CP_SlabCP_;
        GndHeatTransf_Slab_MatlProps_CP_SoilCP_optional GndHeatTransf_Slab_MatlProps_CP_SoilCP_;
        GndHeatTransf_Slab_MatlProps_TCON_Slabk_optional GndHeatTransf_Slab_MatlProps_TCON_Slabk_;
        GndHeatTransf_Slab_MatlProps_TCON_Soilk_optional GndHeatTransf_Slab_MatlProps_TCON_Soilk_;
        GndHeatTransf_Slab_BoundConds_EVTR_IsSurfEvapotranspirationModeled_optional GndHeatTransf_Slab_BoundConds_EVTR_IsSurfEvapotranspirationModeled_;
        GndHeatTransf_Slab_BoundConds_FIXBC_isthelowerboundaryatafixedTemp_optional GndHeatTransf_Slab_BoundConds_FIXBC_isthelowerboundaryatafixedTemp_;
        GndHeatTransf_Slab_BoundConds_TDEEPin_optional GndHeatTransf_Slab_BoundConds_TDEEPin_;
        GndHeatTransf_Slab_BoundConds_USRHflag_IsthegroundSurfHSpecByTheUser_optional GndHeatTransf_Slab_BoundConds_USRHflag_IsthegroundSurfHSpecByTheUser_;
        GndHeatTransf_Slab_BoundConds_USERH_UserSpecGrndSurfheattransfercoeff_optional GndHeatTransf_Slab_BoundConds_USERH_UserSpecGrndSurfheattransfercoeff_;
        GndHeatTransf_Slab_Insulation_RINS_RvalueofunderslabInsul_optional GndHeatTransf_Slab_Insulation_RINS_RvalueofunderslabInsul_;
        GndHeatTransf_Slab_Insulation_DINS_WidthOfStripUnderSlabInsul_optional GndHeatTransf_Slab_Insulation_DINS_WidthOfStripUnderSlabInsul_;
        GndHeatTransf_Slab_Insulation_RVINS_RvalueofverticalInsul_optional GndHeatTransf_Slab_Insulation_RVINS_RvalueofverticalInsul_;
        GndHeatTransf_Slab_Insulation_ZVINS_DepthofVertInsul_optional GndHeatTransf_Slab_Insulation_ZVINS_DepthofVertInsul_;
        GndHeatTransf_Slab_Insulation_IVINS_Flag_IsthereverticalInsul_optional GndHeatTransf_Slab_Insulation_IVINS_Flag_IsthereverticalInsul_;
        GndHeatTransf_Slab_EquivalentSlab_APRatioAreaToPerimRatioThisSlab_optional GndHeatTransf_Slab_EquivalentSlab_APRatioAreaToPerimRatioThisSlab_;
        GndHeatTransf_Slab_EquivalentSlab_SLABDEPTH_Thicknessofslabongrade_optional GndHeatTransf_Slab_EquivalentSlab_SLABDEPTH_Thicknessofslabongrade_;
        GndHeatTransf_Slab_EquivalentSlab_Clear_DistFromEdgeOfSlabToDomainEdge_optional GndHeatTransf_Slab_EquivalentSlab_Clear_DistFromEdgeOfSlabToDomainEdge_;
        GndHeatTransf_Slab_EquivalentSlab_ZClear_Distfrombottomofslabtodomainbottom_optional GndHeatTransf_Slab_EquivalentSlab_ZClear_Distfrombottomofslabtodomainbottom_;
        GndHeatTransf_Slab_AutoGrid_SLABXXDimensionBldgSlab_optional GndHeatTransf_Slab_AutoGrid_SLABXXDimensionBldgSlab_;
        GndHeatTransf_Slab_AutoGrid_SLABYYDimensionBldgSlab_optional GndHeatTransf_Slab_AutoGrid_SLABYYDimensionBldgSlab_;
        GndHeatTransf_Slab_AutoGrid_SLABDEPTH_Thicknessofslabongrade_optional GndHeatTransf_Slab_AutoGrid_SLABDEPTH_Thicknessofslabongrade_;
        GndHeatTransf_Slab_AutoGrid_Clear_DistFromEdgeOfSlabToDomainEdge_optional GndHeatTransf_Slab_AutoGrid_Clear_DistFromEdgeOfSlabToDomainEdge_;
        GndHeatTransf_Slab_AutoGrid_ZClear_Distfrombottomofslabtodomainbottom_optional GndHeatTransf_Slab_AutoGrid_ZClear_Distfrombottomofslabtodomainbottom_;
        GndHeatTransf_Slab_ManualGrid_NX_NumofcellsintheXdirection_optional GndHeatTransf_Slab_ManualGrid_NX_NumofcellsintheXdirection_;
        GndHeatTransf_Slab_ManualGrid_NY_NumofcellsintheYdirection_optional GndHeatTransf_Slab_ManualGrid_NY_NumofcellsintheYdirection_;
        GndHeatTransf_Slab_ManualGrid_NZ_NumofcellsintheZdirection_optional GndHeatTransf_Slab_ManualGrid_NZ_NumofcellsintheZdirection_;
        GndHeatTransf_Slab_ManualGrid_IBOX_Xdirectioncellindicatorofslabedge_optional GndHeatTransf_Slab_ManualGrid_IBOX_Xdirectioncellindicatorofslabedge_;
        GndHeatTransf_Slab_ManualGrid_JBOX_Y_DirectionCellindicatorSlabEdge_optional GndHeatTransf_Slab_ManualGrid_JBOX_Y_DirectionCellindicatorSlabEdge_;
        GndHeatTransf_Slab_XFACE_SlabXCoord_1_40_optional GndHeatTransf_Slab_XFACE_SlabXCoord_1_40_;
        GndHeatTransf_Slab_YFACE_SlabYCoord_1_40_optional GndHeatTransf_Slab_YFACE_SlabYCoord_1_40_;
        GndHeatTransf_Slab_ZFACE_SlabZCoord_1_40_optional GndHeatTransf_Slab_ZFACE_SlabZCoord_1_40_;
      };
    }
  }
}

#include <iosfwd>

#include <xercesc/sax/InputSource.hpp>
#include <xercesc/dom/DOMDocument.hpp>
#include <xercesc/dom/DOMErrorHandler.hpp>

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

#endif // SIM_GROUND_HEAT_TRANSFER_SLAB_HXX
