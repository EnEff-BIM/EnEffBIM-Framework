# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.7
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_SimSystem_HvacHotWater_FullSystem', [dirname(__file__)])
        except ImportError:
            import _SimSystem_HvacHotWater_FullSystem
            return _SimSystem_HvacHotWater_FullSystem
        if fp is not None:
            try:
                _mod = imp.load_module('_SimSystem_HvacHotWater_FullSystem', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _SimSystem_HvacHotWater_FullSystem = swig_import_helper()
    del swig_import_helper
else:
    import _SimSystem_HvacHotWater_FullSystem
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0


try:
    import weakref
    weakref_proxy = weakref.proxy
except:
    weakref_proxy = lambda x: x


import base
import SimSystem_HvacHotWater_Control
class SimSystem_HvacHotWater_FullSystem(SimSystem_HvacHotWater_Control.SimSystem_HvacHotWater):
    __swig_setmethods__ = {}
    for _s in [SimSystem_HvacHotWater_Control.SimSystem_HvacHotWater]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SimSystem_HvacHotWater_FullSystem, name, value)
    __swig_getmethods__ = {}
    for _s in [SimSystem_HvacHotWater_Control.SimSystem_HvacHotWater]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, SimSystem_HvacHotWater_FullSystem, name)
    __repr__ = _swig_repr

    def SimSys_AvailMngrListName(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_AvailMngrListName(self, *args)

    def SimSys_DemandSideOutNodeName(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_DemandSideOutNodeName(self, *args)

    def SimSys_FluidType(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_FluidType(self, *args)

    def SimSys_UserDefFluidType(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_UserDefFluidType(self, *args)

    def SimSys_PlantEqmtOpSchemeName(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_PlantEqmtOpSchemeName(self, *args)

    def SimSys_LoopTempSetpntNodeName(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_LoopTempSetpntNodeName(self, *args)

    def SimSys_MaxLoopTemp(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_MaxLoopTemp(self, *args)

    def SimSys_MinLoopTemp(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_MinLoopTemp(self, *args)

    def SimSys_MaxLoopFlowRate(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_MaxLoopFlowRate(self, *args)

    def SimSys_MinLoopFlowRate(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_MinLoopFlowRate(self, *args)

    def SimSys_PlantLoopVolume(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_PlantLoopVolume(self, *args)

    def SimSys_PlantSideInNodeName(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_PlantSideInNodeName(self, *args)

    def SimSys_PlantSideOutNodeName(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_PlantSideOutNodeName(self, *args)

    def SimSys_PlantSideBranchListName(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_PlantSideBranchListName(self, *args)

    def SimSys_PlantSideConnListName(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_PlantSideConnListName(self, *args)

    def SimSys_DemandSideInNodeName(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_DemandSideInNodeName(self, *args)

    def SimSys_DemandSideBranchListName(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_DemandSideBranchListName(self, *args)

    def SimSys_DemandSideConnListName(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_DemandSideConnListName(self, *args)

    def SimSys_LoadDistScheme(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_LoadDistScheme(self, *args)

    def SimSys_PlantLoopDemandCalcScheme(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_PlantLoopDemandCalcScheme(self, *args)

    def SimSys_CommonPipeSim(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_CommonPipeSim(self, *args)

    def SimSys_PresSimType(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_SimSys_PresSimType(self, *args)

    def T24AnnualSolarFraction(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24AnnualSolarFraction(self, *args)

    def T24Brand(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24Brand(self, *args)

    def T24CollectorType(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24CollectorType(self, *args)

    def T24FluidSysCntrlType(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24FluidSysCntrlType(self, *args)

    def T24Manufacturer(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24Manufacturer(self, *args)

    def T24NRCAMch02A(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24NRCAMch02A(self, *args)

    def T24NRCAMch03A(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24NRCAMch03A(self, *args)

    def T24NRCAMch04A(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24NRCAMch04A(self, *args)

    def T24NRCAMch05A(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24NRCAMch05A(self, *args)

    def T24NRCAMch06A(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24NRCAMch06A(self, *args)

    def T24NRCAMch07A(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24NRCAMch07A(self, *args)

    def T24NRCAMch08A(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24NRCAMch08A(self, *args)

    def T24NRCAMch09A(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24NRCAMch09A(self, *args)

    def T24NRCAMch10A(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24NRCAMch10A(self, *args)

    def T24NRCAMch11A(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24NRCAMch11A(self, *args)

    def T24NRCAMch12A(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24NRCAMch12A(self, *args)

    def T24NRCAMch13A(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24NRCAMch13A(self, *args)

    def T24NRCAMch14A(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24NRCAMch14A(self, *args)

    def T24NRCAMch15A(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24NRCAMch15A(self, *args)

    def T24NRCAMch16A(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24NRCAMch16A(self, *args)

    def T24NRCAMch17A(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24NRCAMch17A(self, *args)

    def T24NRCAMch18A(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24NRCAMch18A(self, *args)

    def T24ModelNo(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24ModelNo(self, *args)

    def T24SolarCollectorProgramName(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24SolarCollectorProgramName(self, *args)

    def T24NumberDwellingUnits(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24NumberDwellingUnits(self, *args)

    def T24RatedEffCurveIntercept(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24RatedEffCurveIntercept(self, *args)

    def T24RatedEffCurveSlope(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24RatedEffCurveSlope(self, *args)

    def T24SecondTankVolume(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24SecondTankVolume(self, *args)

    def T24SRRCCertificationNumber(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24SRRCCertificationNumber(self, *args)

    def T24ConstructStatus3(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24ConstructStatus3(self, *args)

    def T24SolarCollectorProgramVersion(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_T24SolarCollectorProgramVersion(self, *args)

    def __init__(self, *args):
        this = _SimSystem_HvacHotWater_FullSystem.new_SimSystem_HvacHotWater_FullSystem(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def _clone(self, f=0, c=None):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem__clone(self, f, c)
    __swig_destroy__ = _SimSystem_HvacHotWater_FullSystem.delete_SimSystem_HvacHotWater_FullSystem
    __del__ = lambda self: None
SimSystem_HvacHotWater_FullSystem_swigregister = _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_swigregister
SimSystem_HvacHotWater_FullSystem_swigregister(SimSystem_HvacHotWater_FullSystem)

class SimSystem_HvacHotWater_FullSystem_sequence(base.sequence_common):
    __swig_setmethods__ = {}
    for _s in [base.sequence_common]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SimSystem_HvacHotWater_FullSystem_sequence, name, value)
    __swig_getmethods__ = {}
    for _s in [base.sequence_common]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, SimSystem_HvacHotWater_FullSystem_sequence, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _SimSystem_HvacHotWater_FullSystem.new_SimSystem_HvacHotWater_FullSystem_sequence(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def assign(self, n, x):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_sequence_assign(self, n, x)

    def begin(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_sequence_begin(self, *args)

    def end(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_sequence_end(self, *args)

    def rbegin(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_sequence_rbegin(self, *args)

    def rend(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_sequence_rend(self, *args)

    def at(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_sequence_at(self, *args)

    def front(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_sequence_front(self, *args)

    def back(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_sequence_back(self, *args)

    def push_back(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_sequence_push_back(self, *args)

    def pop_back(self):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_sequence_pop_back(self)

    def detach_back(self, pop=True):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_sequence_detach_back(self, pop)

    def insert(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_sequence_insert(self, *args)

    def erase(self, *args):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_sequence_erase(self, *args)

    def detach(self, position, r, erase=True):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_sequence_detach(self, position, r, erase)

    def swap(self, x):
        return _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_sequence_swap(self, x)
    __swig_destroy__ = _SimSystem_HvacHotWater_FullSystem.delete_SimSystem_HvacHotWater_FullSystem_sequence
    __del__ = lambda self: None
SimSystem_HvacHotWater_FullSystem_sequence_swigregister = _SimSystem_HvacHotWater_FullSystem.SimSystem_HvacHotWater_FullSystem_sequence_swigregister
SimSystem_HvacHotWater_FullSystem_sequence_swigregister(SimSystem_HvacHotWater_FullSystem_sequence)

# This file is compatible with both classic and new-style classes.


