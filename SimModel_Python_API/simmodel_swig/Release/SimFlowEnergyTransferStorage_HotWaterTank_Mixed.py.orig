# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.7
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_SimFlowEnergyTransferStorage_HotWaterTank_Mixed', [dirname(__file__)])
        except ImportError:
            import _SimFlowEnergyTransferStorage_HotWaterTank_Mixed
            return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed
        if fp is not None:
            try:
                _mod = imp.load_module('_SimFlowEnergyTransferStorage_HotWaterTank_Mixed', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _SimFlowEnergyTransferStorage_HotWaterTank_Mixed = swig_import_helper()
    del swig_import_helper
else:
    import _SimFlowEnergyTransferStorage_HotWaterTank_Mixed
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0


try:
    import weakref
    weakref_proxy = weakref.proxy
except:
    weakref_proxy = lambda x: x


import base
class SimFlowEnergyTransferStorage(base.SimFlowEnergyConverter):
    __swig_setmethods__ = {}
    for _s in [base.SimFlowEnergyConverter]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SimFlowEnergyTransferStorage, name, value)
    __swig_getmethods__ = {}
    for _s in [base.SimFlowEnergyConverter]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, SimFlowEnergyTransferStorage, name)
    __repr__ = _swig_repr

    def Representation(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_Representation(self, *args)

    def WaterHeater_Sizing_WaterHeatName(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_WaterHeater_Sizing_WaterHeatName(self, *args)

    def WaterHeater_Sizing_DesignMode(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_WaterHeater_Sizing_DesignMode(self, *args)

    def WaterHeater_Sizing_TimeStorageCanMeetPeakDraw(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_WaterHeater_Sizing_TimeStorageCanMeetPeakDraw(self, *args)

    def WaterHeater_Sizing_TimeForTankRecov(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_WaterHeater_Sizing_TimeForTankRecov(self, *args)

    def WaterHeater_Sizing_NomTankVolForAutosizPlantConn(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_WaterHeater_Sizing_NomTankVolForAutosizPlantConn(self, *args)

    def WaterHeater_Sizing_NumBedrooms(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_WaterHeater_Sizing_NumBedrooms(self, *args)

    def WaterHeater_Sizing_NumBathrooms(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_WaterHeater_Sizing_NumBathrooms(self, *args)

    def WaterHeater_Sizing_StorageCapPerPerson(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_WaterHeater_Sizing_StorageCapPerPerson(self, *args)

    def WaterHeater_Sizing_RecovCapPerPerson(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_WaterHeater_Sizing_RecovCapPerPerson(self, *args)

    def WaterHeater_Sizing_StorageCapPerFloorArea(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_WaterHeater_Sizing_StorageCapPerFloorArea(self, *args)

    def WaterHeater_Sizing_RecovCapPerFloorArea(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_WaterHeater_Sizing_RecovCapPerFloorArea(self, *args)

    def WaterHeater_Sizing_NumUnits(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_WaterHeater_Sizing_NumUnits(self, *args)

    def WaterHeater_Sizing_StorageCapPerUnit(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_WaterHeater_Sizing_StorageCapPerUnit(self, *args)

    def WaterHeater_Sizing_RecovCapPerUnit(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_WaterHeater_Sizing_RecovCapPerUnit(self, *args)

    def WaterHeater_Sizing_StorageCapPerCollectArea(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_WaterHeater_Sizing_StorageCapPerCollectArea(self, *args)

    def WaterHeater_Sizing_HeightAspectRatio(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_WaterHeater_Sizing_HeightAspectRatio(self, *args)

    def __init__(self, *args):
        this = _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.new_SimFlowEnergyTransferStorage(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def _clone(self, f=0, c=None):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage__clone(self, f, c)
    __swig_destroy__ = _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.delete_SimFlowEnergyTransferStorage
    __del__ = lambda self: None
SimFlowEnergyTransferStorage_swigregister = _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_swigregister
SimFlowEnergyTransferStorage_swigregister(SimFlowEnergyTransferStorage)

class SimFlowEnergyTransferStorage_HotWaterTank(SimFlowEnergyTransferStorage):
    __swig_setmethods__ = {}
    for _s in [SimFlowEnergyTransferStorage]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SimFlowEnergyTransferStorage_HotWaterTank, name, value)
    __swig_getmethods__ = {}
    for _s in [SimFlowEnergyTransferStorage]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, SimFlowEnergyTransferStorage_HotWaterTank, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.new_SimFlowEnergyTransferStorage_HotWaterTank(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def _clone(self, f=0, c=None):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank__clone(self, f, c)
    __swig_destroy__ = _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.delete_SimFlowEnergyTransferStorage_HotWaterTank
    __del__ = lambda self: None
SimFlowEnergyTransferStorage_HotWaterTank_swigregister = _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_swigregister
SimFlowEnergyTransferStorage_HotWaterTank_swigregister(SimFlowEnergyTransferStorage_HotWaterTank)

class SimFlowEnergyTransferStorage_HotWaterTank_Mixed(SimFlowEnergyTransferStorage_HotWaterTank):
    __swig_setmethods__ = {}
    for _s in [SimFlowEnergyTransferStorage_HotWaterTank]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SimFlowEnergyTransferStorage_HotWaterTank_Mixed, name, value)
    __swig_getmethods__ = {}
    for _s in [SimFlowEnergyTransferStorage_HotWaterTank]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, SimFlowEnergyTransferStorage_HotWaterTank_Mixed, name)
    __repr__ = _swig_repr

    def SimFlowEnergyTransSto_Name(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_Name(self, *args)

    def SimFlowEnergyTransSto_TankVol(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_TankVol(self, *args)

    def SimFlowEnergyTransSto_SetpointTempSchedName(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_SetpointTempSchedName(self, *args)

    def SimFlowEnergyTransSto_DeadbandTempDifference(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_DeadbandTempDifference(self, *args)

    def SimFlowEnergyTransSto_MaxTempLimit(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_MaxTempLimit(self, *args)

    def SimFlowEnergyTransSto_HeatCntlType(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_HeatCntlType(self, *args)

    def SimFlowEnergyTransSto_HeatMaxCap(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_HeatMaxCap(self, *args)

    def SimFlowEnergyTransSto_HeatMinCap(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_HeatMinCap(self, *args)

    def SimFlowEnergyTransSto_HeatIgnitionMinFlowRate(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_HeatIgnitionMinFlowRate(self, *args)

    def SimFlowEnergyTransSto_HeatIgnitionDelay(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_HeatIgnitionDelay(self, *args)

    def SimFlowEnergyTransSto_HeatFuelType(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_HeatFuelType(self, *args)

    def SimFlowEnergyTransSto_HeatThermalEff(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_HeatThermalEff(self, *args)

    def SimFlowEnergyTransSto_PartLoadFactorCurveName(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_PartLoadFactorCurveName(self, *args)

    def SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_fCycleParasiticFuelConsumpRate(self, *args)

    def SimFlowEnergyTransSto_fCycleParasiticFuelType(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_fCycleParasiticFuelType(self, *args)

    def SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_fCycleParasiticHeatFractToTank(self, *args)

    def SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_OnCycleParasiticFuelConsumpRate(self, *args)

    def SimFlowEnergyTransSto_OnCycleParasiticFuelType(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_OnCycleParasiticFuelType(self, *args)

    def SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_OnCycleParasiticHeatFractToTank(self, *args)

    def SimFlowEnergyTransSto_AmbTempdic(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_AmbTempdic(self, *args)

    def SimFlowEnergyTransSto_AmbTempSchedName(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_AmbTempSchedName(self, *args)

    def SimFlowEnergyTransSto_AmbTempZoneName(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_AmbTempZoneName(self, *args)

    def SimFlowEnergyTransSto_AmbTempOutdrAirNodeName(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_AmbTempOutdrAirNodeName(self, *args)

    def SimFlowEnergyTransSto_fCycleLossCoefToAmbTemp(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_fCycleLossCoefToAmbTemp(self, *args)

    def SimFlowEnergyTransSto_fCycleLossFractToZone(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_fCycleLossFractToZone(self, *args)

    def SimFlowEnergyTransSto_OnCycleLossCoefToAmbTemp(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_OnCycleLossCoefToAmbTemp(self, *args)

    def SimFlowEnergyTransSto_OnCycleLossFractToZone(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_OnCycleLossFractToZone(self, *args)

    def SimFlowEnergyTransSto_PeakUseFlowRate(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_PeakUseFlowRate(self, *args)

    def SimFlowEnergyTransSto_UseFlowRateFractSchedName(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_UseFlowRateFractSchedName(self, *args)

    def SimFlowEnergyTransSto_ColdWaterSupTempSchedName(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_ColdWaterSupTempSchedName(self, *args)

    def SimFlowEnergyTransSto_UseSideInletNodeName(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_UseSideInletNodeName(self, *args)

    def SimFlowEnergyTransSto_UseSideOutletNodeName(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_UseSideOutletNodeName(self, *args)

    def SimFlowEnergyTransSto_UseSideEffect(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_UseSideEffect(self, *args)

    def SimFlowEnergyTransSto_SrcSideInletNodeName(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_SrcSideInletNodeName(self, *args)

    def SimFlowEnergyTransSto_SrcSideOutletNodeName(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_SrcSideOutletNodeName(self, *args)

    def SimFlowEnergyTransSto_SrcSideEffect(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_SrcSideEffect(self, *args)

    def SimFlowEnergyTransSto_UseSideDesignFlowRate(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_UseSideDesignFlowRate(self, *args)

    def SimFlowEnergyTransSto_SrcSideDesignFlowRate(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_SrcSideDesignFlowRate(self, *args)

    def SimFlowEnergyTransSto_directWaterHeatingRecovTime(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_directWaterHeatingRecovTime(self, *args)

    def SimFlowEnergyTransSto_SourceSideFlowCntrlMode(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_SourceSideFlowCntrlMode(self, *args)

    def SimFlowEnergyTransSto_IndirectAlternateSetptTempSchedName(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_SimFlowEnergyTransSto_IndirectAlternateSetptTempSchedName(self, *args)

    def T24DraftFanPwr(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_T24DraftFanPwr(self, *args)

    def T24EnergyFactor(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_T24EnergyFactor(self, *args)

    def T24ElecIgnit(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_T24ElecIgnit(self, *args)

    def T24PilotEnergy(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_T24PilotEnergy(self, *args)

    def T24RecEff(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_T24RecEff(self, *args)

    def T24StdbyLossFrac(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_T24StdbyLossFrac(self, *args)

    def T24ConstructStatus2(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_T24ConstructStatus2(self, *args)

    def T24WtrHtrType(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_T24WtrHtrType(self, *args)

    def __init__(self, *args):
        this = _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.new_SimFlowEnergyTransferStorage_HotWaterTank_Mixed(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def _clone(self, f=0, c=None):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed__clone(self, f, c)
    __swig_destroy__ = _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.delete_SimFlowEnergyTransferStorage_HotWaterTank_Mixed
    __del__ = lambda self: None
SimFlowEnergyTransferStorage_HotWaterTank_Mixed_swigregister = _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_swigregister
SimFlowEnergyTransferStorage_HotWaterTank_Mixed_swigregister(SimFlowEnergyTransferStorage_HotWaterTank_Mixed)

class SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence(base.sequence_common):
    __swig_setmethods__ = {}
    for _s in [base.sequence_common]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence, name, value)
    __swig_getmethods__ = {}
    for _s in [base.sequence_common]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.new_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def assign(self, n, x):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence_assign(self, n, x)

    def begin(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence_begin(self, *args)

    def end(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence_end(self, *args)

    def rbegin(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence_rbegin(self, *args)

    def rend(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence_rend(self, *args)

    def at(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence_at(self, *args)

    def front(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence_front(self, *args)

    def back(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence_back(self, *args)

    def push_back(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence_push_back(self, *args)

    def pop_back(self):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence_pop_back(self)

    def detach_back(self, pop=True):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence_detach_back(self, pop)

    def insert(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence_insert(self, *args)

    def erase(self, *args):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence_erase(self, *args)

    def detach(self, position, r, erase=True):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence_detach(self, position, r, erase)

    def swap(self, x):
        return _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence_swap(self, x)
    __swig_destroy__ = _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.delete_SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence
    __del__ = lambda self: None
SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence_swigregister = _SimFlowEnergyTransferStorage_HotWaterTank_Mixed.SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence_swigregister
SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence_swigregister(SimFlowEnergyTransferStorage_HotWaterTank_Mixed_sequence)

# This file is compatible with both classic and new-style classes.


