// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimCost_UtilityCost_Tariff.hxx"

#include "utilcost_comp_computestep_1_30.hxx"

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      // SimCost_UtilityCost_Tariff
      // 

      const SimCost_UtilityCost_Tariff::SimCost_Name_optional& SimCost_UtilityCost_Tariff::
      SimCost_Name () const
      {
        return this->SimCost_Name_;
      }

      SimCost_UtilityCost_Tariff::SimCost_Name_optional& SimCost_UtilityCost_Tariff::
      SimCost_Name ()
      {
        return this->SimCost_Name_;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_Name (const SimCost_Name_type& x)
      {
        this->SimCost_Name_.set (x);
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_Name (const SimCost_Name_optional& x)
      {
        this->SimCost_Name_ = x;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_Name (::std::auto_ptr< SimCost_Name_type > x)
      {
        this->SimCost_Name_.set (x);
      }

      const SimCost_UtilityCost_Tariff::SimCost_OutputMeterName_optional& SimCost_UtilityCost_Tariff::
      SimCost_OutputMeterName () const
      {
        return this->SimCost_OutputMeterName_;
      }

      SimCost_UtilityCost_Tariff::SimCost_OutputMeterName_optional& SimCost_UtilityCost_Tariff::
      SimCost_OutputMeterName ()
      {
        return this->SimCost_OutputMeterName_;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_OutputMeterName (const SimCost_OutputMeterName_type& x)
      {
        this->SimCost_OutputMeterName_.set (x);
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_OutputMeterName (const SimCost_OutputMeterName_optional& x)
      {
        this->SimCost_OutputMeterName_ = x;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_OutputMeterName (::std::auto_ptr< SimCost_OutputMeterName_type > x)
      {
        this->SimCost_OutputMeterName_.set (x);
      }

      const SimCost_UtilityCost_Tariff::SimCost_ConvFactorChoice_optional& SimCost_UtilityCost_Tariff::
      SimCost_ConvFactorChoice () const
      {
        return this->SimCost_ConvFactorChoice_;
      }

      SimCost_UtilityCost_Tariff::SimCost_ConvFactorChoice_optional& SimCost_UtilityCost_Tariff::
      SimCost_ConvFactorChoice ()
      {
        return this->SimCost_ConvFactorChoice_;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_ConvFactorChoice (const SimCost_ConvFactorChoice_type& x)
      {
        this->SimCost_ConvFactorChoice_.set (x);
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_ConvFactorChoice (const SimCost_ConvFactorChoice_optional& x)
      {
        this->SimCost_ConvFactorChoice_ = x;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_ConvFactorChoice (::std::auto_ptr< SimCost_ConvFactorChoice_type > x)
      {
        this->SimCost_ConvFactorChoice_.set (x);
      }

      const SimCost_UtilityCost_Tariff::SimCost_EnergyConvFactor_optional& SimCost_UtilityCost_Tariff::
      SimCost_EnergyConvFactor () const
      {
        return this->SimCost_EnergyConvFactor_;
      }

      SimCost_UtilityCost_Tariff::SimCost_EnergyConvFactor_optional& SimCost_UtilityCost_Tariff::
      SimCost_EnergyConvFactor ()
      {
        return this->SimCost_EnergyConvFactor_;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_EnergyConvFactor (const SimCost_EnergyConvFactor_type& x)
      {
        this->SimCost_EnergyConvFactor_.set (x);
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_EnergyConvFactor (const SimCost_EnergyConvFactor_optional& x)
      {
        this->SimCost_EnergyConvFactor_ = x;
      }

      const SimCost_UtilityCost_Tariff::SimCost_DemandConvFactor_optional& SimCost_UtilityCost_Tariff::
      SimCost_DemandConvFactor () const
      {
        return this->SimCost_DemandConvFactor_;
      }

      SimCost_UtilityCost_Tariff::SimCost_DemandConvFactor_optional& SimCost_UtilityCost_Tariff::
      SimCost_DemandConvFactor ()
      {
        return this->SimCost_DemandConvFactor_;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_DemandConvFactor (const SimCost_DemandConvFactor_type& x)
      {
        this->SimCost_DemandConvFactor_.set (x);
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_DemandConvFactor (const SimCost_DemandConvFactor_optional& x)
      {
        this->SimCost_DemandConvFactor_ = x;
      }

      const SimCost_UtilityCost_Tariff::SimCost_TimeUsePeriodSchedName_optional& SimCost_UtilityCost_Tariff::
      SimCost_TimeUsePeriodSchedName () const
      {
        return this->SimCost_TimeUsePeriodSchedName_;
      }

      SimCost_UtilityCost_Tariff::SimCost_TimeUsePeriodSchedName_optional& SimCost_UtilityCost_Tariff::
      SimCost_TimeUsePeriodSchedName ()
      {
        return this->SimCost_TimeUsePeriodSchedName_;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_TimeUsePeriodSchedName (const SimCost_TimeUsePeriodSchedName_type& x)
      {
        this->SimCost_TimeUsePeriodSchedName_.set (x);
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_TimeUsePeriodSchedName (const SimCost_TimeUsePeriodSchedName_optional& x)
      {
        this->SimCost_TimeUsePeriodSchedName_ = x;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_TimeUsePeriodSchedName (::std::auto_ptr< SimCost_TimeUsePeriodSchedName_type > x)
      {
        this->SimCost_TimeUsePeriodSchedName_.set (x);
      }

      const SimCost_UtilityCost_Tariff::SimCost_SeasonSchedName_optional& SimCost_UtilityCost_Tariff::
      SimCost_SeasonSchedName () const
      {
        return this->SimCost_SeasonSchedName_;
      }

      SimCost_UtilityCost_Tariff::SimCost_SeasonSchedName_optional& SimCost_UtilityCost_Tariff::
      SimCost_SeasonSchedName ()
      {
        return this->SimCost_SeasonSchedName_;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_SeasonSchedName (const SimCost_SeasonSchedName_type& x)
      {
        this->SimCost_SeasonSchedName_.set (x);
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_SeasonSchedName (const SimCost_SeasonSchedName_optional& x)
      {
        this->SimCost_SeasonSchedName_ = x;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_SeasonSchedName (::std::auto_ptr< SimCost_SeasonSchedName_type > x)
      {
        this->SimCost_SeasonSchedName_.set (x);
      }

      const SimCost_UtilityCost_Tariff::SimCost_MonthSchedName_optional& SimCost_UtilityCost_Tariff::
      SimCost_MonthSchedName () const
      {
        return this->SimCost_MonthSchedName_;
      }

      SimCost_UtilityCost_Tariff::SimCost_MonthSchedName_optional& SimCost_UtilityCost_Tariff::
      SimCost_MonthSchedName ()
      {
        return this->SimCost_MonthSchedName_;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_MonthSchedName (const SimCost_MonthSchedName_type& x)
      {
        this->SimCost_MonthSchedName_.set (x);
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_MonthSchedName (const SimCost_MonthSchedName_optional& x)
      {
        this->SimCost_MonthSchedName_ = x;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_MonthSchedName (::std::auto_ptr< SimCost_MonthSchedName_type > x)
      {
        this->SimCost_MonthSchedName_.set (x);
      }

      const SimCost_UtilityCost_Tariff::SimCost_DemandWindLength_optional& SimCost_UtilityCost_Tariff::
      SimCost_DemandWindLength () const
      {
        return this->SimCost_DemandWindLength_;
      }

      SimCost_UtilityCost_Tariff::SimCost_DemandWindLength_optional& SimCost_UtilityCost_Tariff::
      SimCost_DemandWindLength ()
      {
        return this->SimCost_DemandWindLength_;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_DemandWindLength (const SimCost_DemandWindLength_type& x)
      {
        this->SimCost_DemandWindLength_.set (x);
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_DemandWindLength (const SimCost_DemandWindLength_optional& x)
      {
        this->SimCost_DemandWindLength_ = x;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_DemandWindLength (::std::auto_ptr< SimCost_DemandWindLength_type > x)
      {
        this->SimCost_DemandWindLength_.set (x);
      }

      const SimCost_UtilityCost_Tariff::SimCost_MonthlyChargeVarName_optional& SimCost_UtilityCost_Tariff::
      SimCost_MonthlyChargeVarName () const
      {
        return this->SimCost_MonthlyChargeVarName_;
      }

      SimCost_UtilityCost_Tariff::SimCost_MonthlyChargeVarName_optional& SimCost_UtilityCost_Tariff::
      SimCost_MonthlyChargeVarName ()
      {
        return this->SimCost_MonthlyChargeVarName_;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_MonthlyChargeVarName (const SimCost_MonthlyChargeVarName_type& x)
      {
        this->SimCost_MonthlyChargeVarName_.set (x);
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_MonthlyChargeVarName (const SimCost_MonthlyChargeVarName_optional& x)
      {
        this->SimCost_MonthlyChargeVarName_ = x;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_MonthlyChargeVarName (::std::auto_ptr< SimCost_MonthlyChargeVarName_type > x)
      {
        this->SimCost_MonthlyChargeVarName_.set (x);
      }

      const SimCost_UtilityCost_Tariff::SimCost_MinMonthlyChargeVarName_optional& SimCost_UtilityCost_Tariff::
      SimCost_MinMonthlyChargeVarName () const
      {
        return this->SimCost_MinMonthlyChargeVarName_;
      }

      SimCost_UtilityCost_Tariff::SimCost_MinMonthlyChargeVarName_optional& SimCost_UtilityCost_Tariff::
      SimCost_MinMonthlyChargeVarName ()
      {
        return this->SimCost_MinMonthlyChargeVarName_;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_MinMonthlyChargeVarName (const SimCost_MinMonthlyChargeVarName_type& x)
      {
        this->SimCost_MinMonthlyChargeVarName_.set (x);
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_MinMonthlyChargeVarName (const SimCost_MinMonthlyChargeVarName_optional& x)
      {
        this->SimCost_MinMonthlyChargeVarName_ = x;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_MinMonthlyChargeVarName (::std::auto_ptr< SimCost_MinMonthlyChargeVarName_type > x)
      {
        this->SimCost_MinMonthlyChargeVarName_.set (x);
      }

      const SimCost_UtilityCost_Tariff::SimCost_RealTimePricingChargeSchedName_optional& SimCost_UtilityCost_Tariff::
      SimCost_RealTimePricingChargeSchedName () const
      {
        return this->SimCost_RealTimePricingChargeSchedName_;
      }

      SimCost_UtilityCost_Tariff::SimCost_RealTimePricingChargeSchedName_optional& SimCost_UtilityCost_Tariff::
      SimCost_RealTimePricingChargeSchedName ()
      {
        return this->SimCost_RealTimePricingChargeSchedName_;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_RealTimePricingChargeSchedName (const SimCost_RealTimePricingChargeSchedName_type& x)
      {
        this->SimCost_RealTimePricingChargeSchedName_.set (x);
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_RealTimePricingChargeSchedName (const SimCost_RealTimePricingChargeSchedName_optional& x)
      {
        this->SimCost_RealTimePricingChargeSchedName_ = x;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_RealTimePricingChargeSchedName (::std::auto_ptr< SimCost_RealTimePricingChargeSchedName_type > x)
      {
        this->SimCost_RealTimePricingChargeSchedName_.set (x);
      }

      const SimCost_UtilityCost_Tariff::SimCost_CustomerBaselineLoadSchedName_optional& SimCost_UtilityCost_Tariff::
      SimCost_CustomerBaselineLoadSchedName () const
      {
        return this->SimCost_CustomerBaselineLoadSchedName_;
      }

      SimCost_UtilityCost_Tariff::SimCost_CustomerBaselineLoadSchedName_optional& SimCost_UtilityCost_Tariff::
      SimCost_CustomerBaselineLoadSchedName ()
      {
        return this->SimCost_CustomerBaselineLoadSchedName_;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_CustomerBaselineLoadSchedName (const SimCost_CustomerBaselineLoadSchedName_type& x)
      {
        this->SimCost_CustomerBaselineLoadSchedName_.set (x);
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_CustomerBaselineLoadSchedName (const SimCost_CustomerBaselineLoadSchedName_optional& x)
      {
        this->SimCost_CustomerBaselineLoadSchedName_ = x;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_CustomerBaselineLoadSchedName (::std::auto_ptr< SimCost_CustomerBaselineLoadSchedName_type > x)
      {
        this->SimCost_CustomerBaselineLoadSchedName_.set (x);
      }

      const SimCost_UtilityCost_Tariff::SimCost_GroupName_optional& SimCost_UtilityCost_Tariff::
      SimCost_GroupName () const
      {
        return this->SimCost_GroupName_;
      }

      SimCost_UtilityCost_Tariff::SimCost_GroupName_optional& SimCost_UtilityCost_Tariff::
      SimCost_GroupName ()
      {
        return this->SimCost_GroupName_;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_GroupName (const SimCost_GroupName_type& x)
      {
        this->SimCost_GroupName_.set (x);
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_GroupName (const SimCost_GroupName_optional& x)
      {
        this->SimCost_GroupName_ = x;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_GroupName (::std::auto_ptr< SimCost_GroupName_type > x)
      {
        this->SimCost_GroupName_.set (x);
      }

      const SimCost_UtilityCost_Tariff::SimCost_BuyOrSell_optional& SimCost_UtilityCost_Tariff::
      SimCost_BuyOrSell () const
      {
        return this->SimCost_BuyOrSell_;
      }

      SimCost_UtilityCost_Tariff::SimCost_BuyOrSell_optional& SimCost_UtilityCost_Tariff::
      SimCost_BuyOrSell ()
      {
        return this->SimCost_BuyOrSell_;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_BuyOrSell (const SimCost_BuyOrSell_type& x)
      {
        this->SimCost_BuyOrSell_.set (x);
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_BuyOrSell (const SimCost_BuyOrSell_optional& x)
      {
        this->SimCost_BuyOrSell_ = x;
      }

      void SimCost_UtilityCost_Tariff::
      SimCost_BuyOrSell (::std::auto_ptr< SimCost_BuyOrSell_type > x)
      {
        this->SimCost_BuyOrSell_.set (x);
      }

      const SimCost_UtilityCost_Tariff::UtilCost_Comp_Name_optional& SimCost_UtilityCost_Tariff::
      UtilCost_Comp_Name () const
      {
        return this->UtilCost_Comp_Name_;
      }

      SimCost_UtilityCost_Tariff::UtilCost_Comp_Name_optional& SimCost_UtilityCost_Tariff::
      UtilCost_Comp_Name ()
      {
        return this->UtilCost_Comp_Name_;
      }

      void SimCost_UtilityCost_Tariff::
      UtilCost_Comp_Name (const UtilCost_Comp_Name_type& x)
      {
        this->UtilCost_Comp_Name_.set (x);
      }

      void SimCost_UtilityCost_Tariff::
      UtilCost_Comp_Name (const UtilCost_Comp_Name_optional& x)
      {
        this->UtilCost_Comp_Name_ = x;
      }

      void SimCost_UtilityCost_Tariff::
      UtilCost_Comp_Name (::std::auto_ptr< UtilCost_Comp_Name_type > x)
      {
        this->UtilCost_Comp_Name_.set (x);
      }

      const SimCost_UtilityCost_Tariff::UtilCost_Comp_TariffName_optional& SimCost_UtilityCost_Tariff::
      UtilCost_Comp_TariffName () const
      {
        return this->UtilCost_Comp_TariffName_;
      }

      SimCost_UtilityCost_Tariff::UtilCost_Comp_TariffName_optional& SimCost_UtilityCost_Tariff::
      UtilCost_Comp_TariffName ()
      {
        return this->UtilCost_Comp_TariffName_;
      }

      void SimCost_UtilityCost_Tariff::
      UtilCost_Comp_TariffName (const UtilCost_Comp_TariffName_type& x)
      {
        this->UtilCost_Comp_TariffName_.set (x);
      }

      void SimCost_UtilityCost_Tariff::
      UtilCost_Comp_TariffName (const UtilCost_Comp_TariffName_optional& x)
      {
        this->UtilCost_Comp_TariffName_ = x;
      }

      void SimCost_UtilityCost_Tariff::
      UtilCost_Comp_TariffName (::std::auto_ptr< UtilCost_Comp_TariffName_type > x)
      {
        this->UtilCost_Comp_TariffName_.set (x);
      }

      const SimCost_UtilityCost_Tariff::UtilCost_Comp_ComputeStep_1_30_optional& SimCost_UtilityCost_Tariff::
      UtilCost_Comp_ComputeStep_1_30 () const
      {
        return this->UtilCost_Comp_ComputeStep_1_30_;
      }

      SimCost_UtilityCost_Tariff::UtilCost_Comp_ComputeStep_1_30_optional& SimCost_UtilityCost_Tariff::
      UtilCost_Comp_ComputeStep_1_30 ()
      {
        return this->UtilCost_Comp_ComputeStep_1_30_;
      }

      void SimCost_UtilityCost_Tariff::
      UtilCost_Comp_ComputeStep_1_30 (const UtilCost_Comp_ComputeStep_1_30_type& x)
      {
        this->UtilCost_Comp_ComputeStep_1_30_.set (x);
      }

      void SimCost_UtilityCost_Tariff::
      UtilCost_Comp_ComputeStep_1_30 (const UtilCost_Comp_ComputeStep_1_30_optional& x)
      {
        this->UtilCost_Comp_ComputeStep_1_30_ = x;
      }

      void SimCost_UtilityCost_Tariff::
      UtilCost_Comp_ComputeStep_1_30 (::std::auto_ptr< UtilCost_Comp_ComputeStep_1_30_type > x)
      {
        this->UtilCost_Comp_ComputeStep_1_30_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      // SimCost_UtilityCost_Tariff
      //

      SimCost_UtilityCost_Tariff::
      SimCost_UtilityCost_Tariff ()
      : ::schema::simxml::ResourcesGeneral::SimCost_UtilityCost (),
        SimCost_Name_ (this),
        SimCost_OutputMeterName_ (this),
        SimCost_ConvFactorChoice_ (this),
        SimCost_EnergyConvFactor_ (this),
        SimCost_DemandConvFactor_ (this),
        SimCost_TimeUsePeriodSchedName_ (this),
        SimCost_SeasonSchedName_ (this),
        SimCost_MonthSchedName_ (this),
        SimCost_DemandWindLength_ (this),
        SimCost_MonthlyChargeVarName_ (this),
        SimCost_MinMonthlyChargeVarName_ (this),
        SimCost_RealTimePricingChargeSchedName_ (this),
        SimCost_CustomerBaselineLoadSchedName_ (this),
        SimCost_GroupName_ (this),
        SimCost_BuyOrSell_ (this),
        UtilCost_Comp_Name_ (this),
        UtilCost_Comp_TariffName_ (this),
        UtilCost_Comp_ComputeStep_1_30_ (this)
      {
      }

      SimCost_UtilityCost_Tariff::
      SimCost_UtilityCost_Tariff (const RefId_type& RefId)
      : ::schema::simxml::ResourcesGeneral::SimCost_UtilityCost (RefId),
        SimCost_Name_ (this),
        SimCost_OutputMeterName_ (this),
        SimCost_ConvFactorChoice_ (this),
        SimCost_EnergyConvFactor_ (this),
        SimCost_DemandConvFactor_ (this),
        SimCost_TimeUsePeriodSchedName_ (this),
        SimCost_SeasonSchedName_ (this),
        SimCost_MonthSchedName_ (this),
        SimCost_DemandWindLength_ (this),
        SimCost_MonthlyChargeVarName_ (this),
        SimCost_MinMonthlyChargeVarName_ (this),
        SimCost_RealTimePricingChargeSchedName_ (this),
        SimCost_CustomerBaselineLoadSchedName_ (this),
        SimCost_GroupName_ (this),
        SimCost_BuyOrSell_ (this),
        UtilCost_Comp_Name_ (this),
        UtilCost_Comp_TariffName_ (this),
        UtilCost_Comp_ComputeStep_1_30_ (this)
      {
      }

      SimCost_UtilityCost_Tariff::
      SimCost_UtilityCost_Tariff (const SimCost_UtilityCost_Tariff& x,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
      : ::schema::simxml::ResourcesGeneral::SimCost_UtilityCost (x, f, c),
        SimCost_Name_ (x.SimCost_Name_, f, this),
        SimCost_OutputMeterName_ (x.SimCost_OutputMeterName_, f, this),
        SimCost_ConvFactorChoice_ (x.SimCost_ConvFactorChoice_, f, this),
        SimCost_EnergyConvFactor_ (x.SimCost_EnergyConvFactor_, f, this),
        SimCost_DemandConvFactor_ (x.SimCost_DemandConvFactor_, f, this),
        SimCost_TimeUsePeriodSchedName_ (x.SimCost_TimeUsePeriodSchedName_, f, this),
        SimCost_SeasonSchedName_ (x.SimCost_SeasonSchedName_, f, this),
        SimCost_MonthSchedName_ (x.SimCost_MonthSchedName_, f, this),
        SimCost_DemandWindLength_ (x.SimCost_DemandWindLength_, f, this),
        SimCost_MonthlyChargeVarName_ (x.SimCost_MonthlyChargeVarName_, f, this),
        SimCost_MinMonthlyChargeVarName_ (x.SimCost_MinMonthlyChargeVarName_, f, this),
        SimCost_RealTimePricingChargeSchedName_ (x.SimCost_RealTimePricingChargeSchedName_, f, this),
        SimCost_CustomerBaselineLoadSchedName_ (x.SimCost_CustomerBaselineLoadSchedName_, f, this),
        SimCost_GroupName_ (x.SimCost_GroupName_, f, this),
        SimCost_BuyOrSell_ (x.SimCost_BuyOrSell_, f, this),
        UtilCost_Comp_Name_ (x.UtilCost_Comp_Name_, f, this),
        UtilCost_Comp_TariffName_ (x.UtilCost_Comp_TariffName_, f, this),
        UtilCost_Comp_ComputeStep_1_30_ (x.UtilCost_Comp_ComputeStep_1_30_, f, this)
      {
      }

      SimCost_UtilityCost_Tariff::
      SimCost_UtilityCost_Tariff (const ::xercesc::DOMElement& e,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
      : ::schema::simxml::ResourcesGeneral::SimCost_UtilityCost (e, f | ::xml_schema::flags::base, c),
        SimCost_Name_ (this),
        SimCost_OutputMeterName_ (this),
        SimCost_ConvFactorChoice_ (this),
        SimCost_EnergyConvFactor_ (this),
        SimCost_DemandConvFactor_ (this),
        SimCost_TimeUsePeriodSchedName_ (this),
        SimCost_SeasonSchedName_ (this),
        SimCost_MonthSchedName_ (this),
        SimCost_DemandWindLength_ (this),
        SimCost_MonthlyChargeVarName_ (this),
        SimCost_MinMonthlyChargeVarName_ (this),
        SimCost_RealTimePricingChargeSchedName_ (this),
        SimCost_CustomerBaselineLoadSchedName_ (this),
        SimCost_GroupName_ (this),
        SimCost_BuyOrSell_ (this),
        UtilCost_Comp_Name_ (this),
        UtilCost_Comp_TariffName_ (this),
        UtilCost_Comp_ComputeStep_1_30_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimCost_UtilityCost_Tariff::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::ResourcesGeneral::SimCost_UtilityCost::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimCost_Name
          //
          if (n.name () == "SimCost_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimCost_Name_type > r (
              SimCost_Name_traits::create (i, f, this));

            if (!this->SimCost_Name_)
            {
              this->SimCost_Name_.set (r);
              continue;
            }
          }

          // SimCost_OutputMeterName
          //
          if (n.name () == "SimCost_OutputMeterName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimCost_OutputMeterName_type > r (
              SimCost_OutputMeterName_traits::create (i, f, this));

            if (!this->SimCost_OutputMeterName_)
            {
              this->SimCost_OutputMeterName_.set (r);
              continue;
            }
          }

          // SimCost_ConvFactorChoice
          //
          if (n.name () == "SimCost_ConvFactorChoice" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimCost_ConvFactorChoice_type > r (
              SimCost_ConvFactorChoice_traits::create (i, f, this));

            if (!this->SimCost_ConvFactorChoice_)
            {
              this->SimCost_ConvFactorChoice_.set (r);
              continue;
            }
          }

          // SimCost_EnergyConvFactor
          //
          if (n.name () == "SimCost_EnergyConvFactor" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimCost_EnergyConvFactor_)
            {
              this->SimCost_EnergyConvFactor_.set (SimCost_EnergyConvFactor_traits::create (i, f, this));
              continue;
            }
          }

          // SimCost_DemandConvFactor
          //
          if (n.name () == "SimCost_DemandConvFactor" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimCost_DemandConvFactor_)
            {
              this->SimCost_DemandConvFactor_.set (SimCost_DemandConvFactor_traits::create (i, f, this));
              continue;
            }
          }

          // SimCost_TimeUsePeriodSchedName
          //
          if (n.name () == "SimCost_TimeUsePeriodSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimCost_TimeUsePeriodSchedName_type > r (
              SimCost_TimeUsePeriodSchedName_traits::create (i, f, this));

            if (!this->SimCost_TimeUsePeriodSchedName_)
            {
              this->SimCost_TimeUsePeriodSchedName_.set (r);
              continue;
            }
          }

          // SimCost_SeasonSchedName
          //
          if (n.name () == "SimCost_SeasonSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimCost_SeasonSchedName_type > r (
              SimCost_SeasonSchedName_traits::create (i, f, this));

            if (!this->SimCost_SeasonSchedName_)
            {
              this->SimCost_SeasonSchedName_.set (r);
              continue;
            }
          }

          // SimCost_MonthSchedName
          //
          if (n.name () == "SimCost_MonthSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimCost_MonthSchedName_type > r (
              SimCost_MonthSchedName_traits::create (i, f, this));

            if (!this->SimCost_MonthSchedName_)
            {
              this->SimCost_MonthSchedName_.set (r);
              continue;
            }
          }

          // SimCost_DemandWindLength
          //
          if (n.name () == "SimCost_DemandWindLength" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimCost_DemandWindLength_type > r (
              SimCost_DemandWindLength_traits::create (i, f, this));

            if (!this->SimCost_DemandWindLength_)
            {
              this->SimCost_DemandWindLength_.set (r);
              continue;
            }
          }

          // SimCost_MonthlyChargeVarName
          //
          if (n.name () == "SimCost_MonthlyChargeVarName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimCost_MonthlyChargeVarName_type > r (
              SimCost_MonthlyChargeVarName_traits::create (i, f, this));

            if (!this->SimCost_MonthlyChargeVarName_)
            {
              this->SimCost_MonthlyChargeVarName_.set (r);
              continue;
            }
          }

          // SimCost_MinMonthlyChargeVarName
          //
          if (n.name () == "SimCost_MinMonthlyChargeVarName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimCost_MinMonthlyChargeVarName_type > r (
              SimCost_MinMonthlyChargeVarName_traits::create (i, f, this));

            if (!this->SimCost_MinMonthlyChargeVarName_)
            {
              this->SimCost_MinMonthlyChargeVarName_.set (r);
              continue;
            }
          }

          // SimCost_RealTimePricingChargeSchedName
          //
          if (n.name () == "SimCost_RealTimePricingChargeSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimCost_RealTimePricingChargeSchedName_type > r (
              SimCost_RealTimePricingChargeSchedName_traits::create (i, f, this));

            if (!this->SimCost_RealTimePricingChargeSchedName_)
            {
              this->SimCost_RealTimePricingChargeSchedName_.set (r);
              continue;
            }
          }

          // SimCost_CustomerBaselineLoadSchedName
          //
          if (n.name () == "SimCost_CustomerBaselineLoadSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimCost_CustomerBaselineLoadSchedName_type > r (
              SimCost_CustomerBaselineLoadSchedName_traits::create (i, f, this));

            if (!this->SimCost_CustomerBaselineLoadSchedName_)
            {
              this->SimCost_CustomerBaselineLoadSchedName_.set (r);
              continue;
            }
          }

          // SimCost_GroupName
          //
          if (n.name () == "SimCost_GroupName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimCost_GroupName_type > r (
              SimCost_GroupName_traits::create (i, f, this));

            if (!this->SimCost_GroupName_)
            {
              this->SimCost_GroupName_.set (r);
              continue;
            }
          }

          // SimCost_BuyOrSell
          //
          if (n.name () == "SimCost_BuyOrSell" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimCost_BuyOrSell_type > r (
              SimCost_BuyOrSell_traits::create (i, f, this));

            if (!this->SimCost_BuyOrSell_)
            {
              this->SimCost_BuyOrSell_.set (r);
              continue;
            }
          }

          // UtilCost_Comp_Name
          //
          if (n.name () == "UtilCost_Comp_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< UtilCost_Comp_Name_type > r (
              UtilCost_Comp_Name_traits::create (i, f, this));

            if (!this->UtilCost_Comp_Name_)
            {
              this->UtilCost_Comp_Name_.set (r);
              continue;
            }
          }

          // UtilCost_Comp_TariffName
          //
          if (n.name () == "UtilCost_Comp_TariffName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< UtilCost_Comp_TariffName_type > r (
              UtilCost_Comp_TariffName_traits::create (i, f, this));

            if (!this->UtilCost_Comp_TariffName_)
            {
              this->UtilCost_Comp_TariffName_.set (r);
              continue;
            }
          }

          // UtilCost_Comp_ComputeStep_1_30
          //
          if (n.name () == "UtilCost_Comp_ComputeStep_1_30" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< UtilCost_Comp_ComputeStep_1_30_type > r (
              UtilCost_Comp_ComputeStep_1_30_traits::create (i, f, this));

            if (!this->UtilCost_Comp_ComputeStep_1_30_)
            {
              this->UtilCost_Comp_ComputeStep_1_30_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimCost_UtilityCost_Tariff* SimCost_UtilityCost_Tariff::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimCost_UtilityCost_Tariff (*this, f, c);
      }

      SimCost_UtilityCost_Tariff& SimCost_UtilityCost_Tariff::
      operator= (const SimCost_UtilityCost_Tariff& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::ResourcesGeneral::SimCost_UtilityCost& > (*this) = x;
          this->SimCost_Name_ = x.SimCost_Name_;
          this->SimCost_OutputMeterName_ = x.SimCost_OutputMeterName_;
          this->SimCost_ConvFactorChoice_ = x.SimCost_ConvFactorChoice_;
          this->SimCost_EnergyConvFactor_ = x.SimCost_EnergyConvFactor_;
          this->SimCost_DemandConvFactor_ = x.SimCost_DemandConvFactor_;
          this->SimCost_TimeUsePeriodSchedName_ = x.SimCost_TimeUsePeriodSchedName_;
          this->SimCost_SeasonSchedName_ = x.SimCost_SeasonSchedName_;
          this->SimCost_MonthSchedName_ = x.SimCost_MonthSchedName_;
          this->SimCost_DemandWindLength_ = x.SimCost_DemandWindLength_;
          this->SimCost_MonthlyChargeVarName_ = x.SimCost_MonthlyChargeVarName_;
          this->SimCost_MinMonthlyChargeVarName_ = x.SimCost_MinMonthlyChargeVarName_;
          this->SimCost_RealTimePricingChargeSchedName_ = x.SimCost_RealTimePricingChargeSchedName_;
          this->SimCost_CustomerBaselineLoadSchedName_ = x.SimCost_CustomerBaselineLoadSchedName_;
          this->SimCost_GroupName_ = x.SimCost_GroupName_;
          this->SimCost_BuyOrSell_ = x.SimCost_BuyOrSell_;
          this->UtilCost_Comp_Name_ = x.UtilCost_Comp_Name_;
          this->UtilCost_Comp_TariffName_ = x.UtilCost_Comp_TariffName_;
          this->UtilCost_Comp_ComputeStep_1_30_ = x.UtilCost_Comp_ComputeStep_1_30_;
        }

        return *this;
      }

      SimCost_UtilityCost_Tariff::
      ~SimCost_UtilityCost_Tariff ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

