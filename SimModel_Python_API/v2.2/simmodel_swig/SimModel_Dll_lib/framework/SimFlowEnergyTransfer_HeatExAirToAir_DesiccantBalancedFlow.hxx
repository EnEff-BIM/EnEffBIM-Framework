// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef SIM_FLOW_ENERGY_TRANSFER_HEAT_EX_AIR_TO_AIR_DESICCANT_BALANCED_FLOW_HXX
#define SIM_FLOW_ENERGY_TRANSFER_HEAT_EX_AIR_TO_AIR_DESICCANT_BALANCED_FLOW_HXX

#ifndef XSD_USE_CHAR
#define XSD_USE_CHAR
#endif

#ifndef XSD_CXX_TREE_USE_CHAR
#define XSD_CXX_TREE_USE_CHAR
#endif

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/config.hxx>

#if (XSD_INT_VERSION != 4000000L)
#error XSD runtime version mismatch
#endif

#include <xsd/cxx/pre.hxx>

#include <xsd/cxx/xml/char-utf8.hxx>

#include <xsd/cxx/tree/exceptions.hxx>
#include <xsd/cxx/tree/elements.hxx>
#include <xsd/cxx/tree/types.hxx>

#include <xsd/cxx/xml/error-handler.hxx>

#include <xsd/cxx/xml/dom/auto-ptr.hxx>

#include <xsd/cxx/tree/parsing.hxx>
#include <xsd/cxx/tree/parsing/byte.hxx>
#include <xsd/cxx/tree/parsing/unsigned-byte.hxx>
#include <xsd/cxx/tree/parsing/short.hxx>
#include <xsd/cxx/tree/parsing/unsigned-short.hxx>
#include <xsd/cxx/tree/parsing/int.hxx>
#include <xsd/cxx/tree/parsing/unsigned-int.hxx>
#include <xsd/cxx/tree/parsing/long.hxx>
#include <xsd/cxx/tree/parsing/unsigned-long.hxx>
#include <xsd/cxx/tree/parsing/boolean.hxx>
#include <xsd/cxx/tree/parsing/float.hxx>
#include <xsd/cxx/tree/parsing/double.hxx>
#include <xsd/cxx/tree/parsing/decimal.hxx>

namespace xml_schema
{
  // anyType and anySimpleType.
  //
  typedef ::xsd::cxx::tree::type type;
  typedef ::xsd::cxx::tree::simple_type< char, type > simple_type;
  typedef ::xsd::cxx::tree::type container;

  // 8-bit
  //
  typedef signed char byte;
  typedef unsigned char unsigned_byte;

  // 16-bit
  //
  typedef short short_;
  typedef unsigned short unsigned_short;

  // 32-bit
  //
  typedef int int_;
  typedef unsigned int unsigned_int;

  // 64-bit
  //
  typedef long long long_;
  typedef unsigned long long unsigned_long;

  // Supposed to be arbitrary-length integral types.
  //
  typedef long long integer;
  typedef long long non_positive_integer;
  typedef unsigned long long non_negative_integer;
  typedef unsigned long long positive_integer;
  typedef long long negative_integer;

  // Boolean.
  //
  typedef bool boolean;

  // Floating-point types.
  //
  typedef float float_;
  typedef double double_;
  typedef double decimal;

  // String types.
  //
  typedef ::xsd::cxx::tree::string< char, simple_type > string;
  typedef ::xsd::cxx::tree::normalized_string< char, string > normalized_string;
  typedef ::xsd::cxx::tree::token< char, normalized_string > token;
  typedef ::xsd::cxx::tree::name< char, token > name;
  typedef ::xsd::cxx::tree::nmtoken< char, token > nmtoken;
  typedef ::xsd::cxx::tree::nmtokens< char, simple_type, nmtoken > nmtokens;
  typedef ::xsd::cxx::tree::ncname< char, name > ncname;
  typedef ::xsd::cxx::tree::language< char, token > language;

  // ID/IDREF.
  //
  typedef ::xsd::cxx::tree::id< char, ncname > id;
  typedef ::xsd::cxx::tree::idref< char, ncname, type > idref;
  typedef ::xsd::cxx::tree::idrefs< char, simple_type, idref > idrefs;

  // URI.
  //
  typedef ::xsd::cxx::tree::uri< char, simple_type > uri;

  // Qualified name.
  //
  typedef ::xsd::cxx::tree::qname< char, simple_type, uri, ncname > qname;

  // Binary.
  //
  typedef ::xsd::cxx::tree::buffer< char > buffer;
  typedef ::xsd::cxx::tree::base64_binary< char, simple_type > base64_binary;
  typedef ::xsd::cxx::tree::hex_binary< char, simple_type > hex_binary;

  // Date/time.
  //
  typedef ::xsd::cxx::tree::time_zone time_zone;
  typedef ::xsd::cxx::tree::date< char, simple_type > date;
  typedef ::xsd::cxx::tree::date_time< char, simple_type > date_time;
  typedef ::xsd::cxx::tree::duration< char, simple_type > duration;
  typedef ::xsd::cxx::tree::gday< char, simple_type > gday;
  typedef ::xsd::cxx::tree::gmonth< char, simple_type > gmonth;
  typedef ::xsd::cxx::tree::gmonth_day< char, simple_type > gmonth_day;
  typedef ::xsd::cxx::tree::gyear< char, simple_type > gyear;
  typedef ::xsd::cxx::tree::gyear_month< char, simple_type > gyear_month;
  typedef ::xsd::cxx::tree::time< char, simple_type > time;

  // Entity.
  //
  typedef ::xsd::cxx::tree::entity< char, ncname > entity;
  typedef ::xsd::cxx::tree::entities< char, simple_type, entity > entities;

  typedef ::xsd::cxx::tree::content_order content_order;
  // Flags and properties.
  //
  typedef ::xsd::cxx::tree::flags flags;
  typedef ::xsd::cxx::tree::properties< char > properties;

  // Parsing/serialization diagnostics.
  //
  typedef ::xsd::cxx::tree::severity severity;
  typedef ::xsd::cxx::tree::error< char > error;
  typedef ::xsd::cxx::tree::diagnostics< char > diagnostics;

  // Exceptions.
  //
  typedef ::xsd::cxx::tree::exception< char > exception;
  typedef ::xsd::cxx::tree::bounds< char > bounds;
  typedef ::xsd::cxx::tree::duplicate_id< char > duplicate_id;
  typedef ::xsd::cxx::tree::parsing< char > parsing;
  typedef ::xsd::cxx::tree::expected_element< char > expected_element;
  typedef ::xsd::cxx::tree::unexpected_element< char > unexpected_element;
  typedef ::xsd::cxx::tree::expected_attribute< char > expected_attribute;
  typedef ::xsd::cxx::tree::unexpected_enumerator< char > unexpected_enumerator;
  typedef ::xsd::cxx::tree::expected_text_content< char > expected_text_content;
  typedef ::xsd::cxx::tree::no_prefix_mapping< char > no_prefix_mapping;
  typedef ::xsd::cxx::tree::no_type_info< char > no_type_info;
  typedef ::xsd::cxx::tree::not_derived< char > not_derived;

  // Error handler callback interface.
  //
  typedef ::xsd::cxx::xml::error_handler< char > error_handler;

  // DOM interaction.
  //
  namespace dom
  {
    // Automatic pointer for DOMDocument.
    //
    using ::xsd::cxx::xml::dom::auto_ptr;

#ifndef XSD_CXX_TREE_TREE_NODE_KEY__XML_SCHEMA
#define XSD_CXX_TREE_TREE_NODE_KEY__XML_SCHEMA
    // DOM user data key for back pointers to tree nodes.
    //
    const XMLCh* const tree_node_key = ::xsd::cxx::tree::user_data_keys::node;
#endif
  }
}

// Forward declarations.
//
namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow;
    }
  }
}


#include <memory>    // ::std::auto_ptr
#include <limits>    // std::numeric_limits
#include <algorithm> // std::binary_search

#include <xsd/cxx/xml/char-utf8.hxx>

#include <xsd/cxx/tree/exceptions.hxx>
#include <xsd/cxx/tree/elements.hxx>
#include <xsd/cxx/tree/containers.hxx>
#include <xsd/cxx/tree/list.hxx>

#include <xsd/cxx/xml/dom/parsing-header.hxx>

#include "simflowenergytransfer_heatexairtoair.hxx"

namespace schema
{
  namespace simxml
  {
    namespace SimModelCore
    {
      class doubleList;
    }
  }
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow: public ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatExAirToAir
      {
        public:
        // SimFlowEnergyTrans_ProcAirInletNodeName
        //
        typedef ::xml_schema::string SimFlowEnergyTrans_ProcAirInletNodeName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_ProcAirInletNodeName_type > SimFlowEnergyTrans_ProcAirInletNodeName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_ProcAirInletNodeName_type, char > SimFlowEnergyTrans_ProcAirInletNodeName_traits;

        const SimFlowEnergyTrans_ProcAirInletNodeName_optional&
        SimFlowEnergyTrans_ProcAirInletNodeName () const;

        SimFlowEnergyTrans_ProcAirInletNodeName_optional&
        SimFlowEnergyTrans_ProcAirInletNodeName ();

        void
        SimFlowEnergyTrans_ProcAirInletNodeName (const SimFlowEnergyTrans_ProcAirInletNodeName_type& x);

        void
        SimFlowEnergyTrans_ProcAirInletNodeName (const SimFlowEnergyTrans_ProcAirInletNodeName_optional& x);

        void
        SimFlowEnergyTrans_ProcAirInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_ProcAirInletNodeName_type > p);

        // SimFlowEnergyTrans_ProcAirOutletNodeName
        //
        typedef ::xml_schema::string SimFlowEnergyTrans_ProcAirOutletNodeName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_ProcAirOutletNodeName_type > SimFlowEnergyTrans_ProcAirOutletNodeName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_ProcAirOutletNodeName_type, char > SimFlowEnergyTrans_ProcAirOutletNodeName_traits;

        const SimFlowEnergyTrans_ProcAirOutletNodeName_optional&
        SimFlowEnergyTrans_ProcAirOutletNodeName () const;

        SimFlowEnergyTrans_ProcAirOutletNodeName_optional&
        SimFlowEnergyTrans_ProcAirOutletNodeName ();

        void
        SimFlowEnergyTrans_ProcAirOutletNodeName (const SimFlowEnergyTrans_ProcAirOutletNodeName_type& x);

        void
        SimFlowEnergyTrans_ProcAirOutletNodeName (const SimFlowEnergyTrans_ProcAirOutletNodeName_optional& x);

        void
        SimFlowEnergyTrans_ProcAirOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_ProcAirOutletNodeName_type > p);

        // SimFlowEnergyTrans_RegenAirInletNodeName
        //
        typedef ::xml_schema::string SimFlowEnergyTrans_RegenAirInletNodeName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_RegenAirInletNodeName_type > SimFlowEnergyTrans_RegenAirInletNodeName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_RegenAirInletNodeName_type, char > SimFlowEnergyTrans_RegenAirInletNodeName_traits;

        const SimFlowEnergyTrans_RegenAirInletNodeName_optional&
        SimFlowEnergyTrans_RegenAirInletNodeName () const;

        SimFlowEnergyTrans_RegenAirInletNodeName_optional&
        SimFlowEnergyTrans_RegenAirInletNodeName ();

        void
        SimFlowEnergyTrans_RegenAirInletNodeName (const SimFlowEnergyTrans_RegenAirInletNodeName_type& x);

        void
        SimFlowEnergyTrans_RegenAirInletNodeName (const SimFlowEnergyTrans_RegenAirInletNodeName_optional& x);

        void
        SimFlowEnergyTrans_RegenAirInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_RegenAirInletNodeName_type > p);

        // SimFlowEnergyTrans_RegenAirOutletNodeName
        //
        typedef ::xml_schema::string SimFlowEnergyTrans_RegenAirOutletNodeName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_RegenAirOutletNodeName_type > SimFlowEnergyTrans_RegenAirOutletNodeName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_RegenAirOutletNodeName_type, char > SimFlowEnergyTrans_RegenAirOutletNodeName_traits;

        const SimFlowEnergyTrans_RegenAirOutletNodeName_optional&
        SimFlowEnergyTrans_RegenAirOutletNodeName () const;

        SimFlowEnergyTrans_RegenAirOutletNodeName_optional&
        SimFlowEnergyTrans_RegenAirOutletNodeName ();

        void
        SimFlowEnergyTrans_RegenAirOutletNodeName (const SimFlowEnergyTrans_RegenAirOutletNodeName_type& x);

        void
        SimFlowEnergyTrans_RegenAirOutletNodeName (const SimFlowEnergyTrans_RegenAirOutletNodeName_optional& x);

        void
        SimFlowEnergyTrans_RegenAirOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_RegenAirOutletNodeName_type > p);

        // SimFlowEnergyTrans_HeatExchngPerfObjType
        //
        typedef ::xml_schema::string SimFlowEnergyTrans_HeatExchngPerfObjType_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_HeatExchngPerfObjType_type > SimFlowEnergyTrans_HeatExchngPerfObjType_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_HeatExchngPerfObjType_type, char > SimFlowEnergyTrans_HeatExchngPerfObjType_traits;

        const SimFlowEnergyTrans_HeatExchngPerfObjType_optional&
        SimFlowEnergyTrans_HeatExchngPerfObjType () const;

        SimFlowEnergyTrans_HeatExchngPerfObjType_optional&
        SimFlowEnergyTrans_HeatExchngPerfObjType ();

        void
        SimFlowEnergyTrans_HeatExchngPerfObjType (const SimFlowEnergyTrans_HeatExchngPerfObjType_type& x);

        void
        SimFlowEnergyTrans_HeatExchngPerfObjType (const SimFlowEnergyTrans_HeatExchngPerfObjType_optional& x);

        void
        SimFlowEnergyTrans_HeatExchngPerfObjType (::std::auto_ptr< SimFlowEnergyTrans_HeatExchngPerfObjType_type > p);

        // SimFlowEnergyTrans_HeatExchngPerfName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_HeatExchngPerfName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_HeatExchngPerfName_type > SimFlowEnergyTrans_HeatExchngPerfName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_HeatExchngPerfName_type, char > SimFlowEnergyTrans_HeatExchngPerfName_traits;

        const SimFlowEnergyTrans_HeatExchngPerfName_optional&
        SimFlowEnergyTrans_HeatExchngPerfName () const;

        SimFlowEnergyTrans_HeatExchngPerfName_optional&
        SimFlowEnergyTrans_HeatExchngPerfName ();

        void
        SimFlowEnergyTrans_HeatExchngPerfName (const SimFlowEnergyTrans_HeatExchngPerfName_type& x);

        void
        SimFlowEnergyTrans_HeatExchngPerfName (const SimFlowEnergyTrans_HeatExchngPerfName_optional& x);

        void
        SimFlowEnergyTrans_HeatExchngPerfName (::std::auto_ptr< SimFlowEnergyTrans_HeatExchngPerfName_type > p);

        // HeatExch_Desic_BalFlow_PerfDataType1_Name
        //
        typedef ::xml_schema::string HeatExch_Desic_BalFlow_PerfDataType1_Name_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_Name_type > HeatExch_Desic_BalFlow_PerfDataType1_Name_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_Name_type, char > HeatExch_Desic_BalFlow_PerfDataType1_Name_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_Name_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_Name () const;

        HeatExch_Desic_BalFlow_PerfDataType1_Name_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_Name ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_Name (const HeatExch_Desic_BalFlow_PerfDataType1_Name_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_Name (const HeatExch_Desic_BalFlow_PerfDataType1_Name_optional& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_Name (::std::auto_ptr< HeatExch_Desic_BalFlow_PerfDataType1_Name_type > p);

        // HeatExch_Desic_BalFlow_PerfDataType1_NomAirFlowRate
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_NomAirFlowRate_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_NomAirFlowRate_type > HeatExch_Desic_BalFlow_PerfDataType1_NomAirFlowRate_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_NomAirFlowRate_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_NomAirFlowRate_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_NomAirFlowRate_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_NomAirFlowRate () const;

        HeatExch_Desic_BalFlow_PerfDataType1_NomAirFlowRate_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_NomAirFlowRate ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_NomAirFlowRate (const HeatExch_Desic_BalFlow_PerfDataType1_NomAirFlowRate_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_NomAirFlowRate (const HeatExch_Desic_BalFlow_PerfDataType1_NomAirFlowRate_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_NomAirFaceVelo
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_NomAirFaceVelo_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_NomAirFaceVelo_type > HeatExch_Desic_BalFlow_PerfDataType1_NomAirFaceVelo_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_NomAirFaceVelo_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_NomAirFaceVelo_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_NomAirFaceVelo_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_NomAirFaceVelo () const;

        HeatExch_Desic_BalFlow_PerfDataType1_NomAirFaceVelo_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_NomAirFaceVelo ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_NomAirFaceVelo (const HeatExch_Desic_BalFlow_PerfDataType1_NomAirFaceVelo_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_NomAirFaceVelo (const HeatExch_Desic_BalFlow_PerfDataType1_NomAirFaceVelo_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_NomElecPwr
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_NomElecPwr_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_NomElecPwr_type > HeatExch_Desic_BalFlow_PerfDataType1_NomElecPwr_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_NomElecPwr_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_NomElecPwr_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_NomElecPwr_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_NomElecPwr () const;

        HeatExch_Desic_BalFlow_PerfDataType1_NomElecPwr_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_NomElecPwr ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_NomElecPwr (const HeatExch_Desic_BalFlow_PerfDataType1_NomElecPwr_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_NomElecPwr (const HeatExch_Desic_BalFlow_PerfDataType1_NomElecPwr_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_TempEquaCoef_1_8
        //
        typedef ::schema::simxml::SimModelCore::doubleList HeatExch_Desic_BalFlow_PerfDataType1_TempEquaCoef_1_8_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_TempEquaCoef_1_8_type > HeatExch_Desic_BalFlow_PerfDataType1_TempEquaCoef_1_8_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_TempEquaCoef_1_8_type, char > HeatExch_Desic_BalFlow_PerfDataType1_TempEquaCoef_1_8_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_TempEquaCoef_1_8_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_TempEquaCoef_1_8 () const;

        HeatExch_Desic_BalFlow_PerfDataType1_TempEquaCoef_1_8_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_TempEquaCoef_1_8 ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_TempEquaCoef_1_8 (const HeatExch_Desic_BalFlow_PerfDataType1_TempEquaCoef_1_8_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_TempEquaCoef_1_8 (const HeatExch_Desic_BalFlow_PerfDataType1_TempEquaCoef_1_8_optional& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_TempEquaCoef_1_8 (::std::auto_ptr< HeatExch_Desic_BalFlow_PerfDataType1_TempEquaCoef_1_8_type > p);

        // HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForTempEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForTempEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForTempEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForTempEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForTempEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForTempEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForTempEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForTempEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForTempEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForTempEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForTempEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForTempEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForTempEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForTempEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForTempEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForTempEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForTempEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForTempEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForTempEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForTempEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForTempEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForTempEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForTempEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForTempEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForTempEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForTempEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForTempEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForTempEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForTempEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForTempEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForTempEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForTempEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForTempEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForTempEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForTempEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForTempEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForTempEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForTempEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForTempEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForTempEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForTempEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForTempEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForTempEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForTempEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForTempEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForTempEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForTempEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForTempEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForTempEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForTempEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForTempEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForTempEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForTempEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForTempEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForTempEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForTempEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForTempEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForTempEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForTempEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForTempEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForTempEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForTempEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForTempEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForTempEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForTempEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForTempEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForTempEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForTempEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForTempEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForTempEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForTempEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForTempEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForTempEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForTempEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForTempEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForTempEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForTempEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForTempEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForTempEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForTempEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForTempEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForTempEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForTempEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForTempEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForTempEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForTempEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForTempEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForTempEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForTempEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForTempEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForTempEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForTempEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForTempEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForTempEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForTempEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForTempEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForTempEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForTempEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForTempEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForTempEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirTempForTempEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirTempForTempEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirTempForTempEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirTempForTempEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirTempForTempEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirTempForTempEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirTempForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirTempForTempEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirTempForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirTempForTempEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirTempForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirTempForTempEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirTempForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirTempForTempEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirTempForTempEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirTempForTempEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirTempForTempEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirTempForTempEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirTempForTempEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirTempForTempEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirTempForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirTempForTempEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirTempForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirTempForTempEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirTempForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirTempForTempEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirTempForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirTempForTempEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForTempEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForTempEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForTempEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForTempEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForTempEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForTempEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForTempEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForTempEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForTempEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForTempEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForTempEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForTempEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForTempEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForTempEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForTempEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForTempEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForTempEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForTempEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForTempEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForTempEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForTempEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForTempEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForTempEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForTempEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForTempEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForTempEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForTempEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForTempEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForTempEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForTempEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForTempEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForTempEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForTempEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForTempEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForTempEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForTempEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForTempEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForTempEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForTempEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForTempEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForTempEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForTempEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_HumidRatioEquaCoef_1_8
        //
        typedef ::schema::simxml::SimModelCore::doubleList HeatExch_Desic_BalFlow_PerfDataType1_HumidRatioEquaCoef_1_8_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_HumidRatioEquaCoef_1_8_type > HeatExch_Desic_BalFlow_PerfDataType1_HumidRatioEquaCoef_1_8_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_HumidRatioEquaCoef_1_8_type, char > HeatExch_Desic_BalFlow_PerfDataType1_HumidRatioEquaCoef_1_8_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_HumidRatioEquaCoef_1_8_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_HumidRatioEquaCoef_1_8 () const;

        HeatExch_Desic_BalFlow_PerfDataType1_HumidRatioEquaCoef_1_8_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_HumidRatioEquaCoef_1_8 ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_HumidRatioEquaCoef_1_8 (const HeatExch_Desic_BalFlow_PerfDataType1_HumidRatioEquaCoef_1_8_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_HumidRatioEquaCoef_1_8 (const HeatExch_Desic_BalFlow_PerfDataType1_HumidRatioEquaCoef_1_8_optional& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_HumidRatioEquaCoef_1_8 (::std::auto_ptr< HeatExch_Desic_BalFlow_PerfDataType1_HumidRatioEquaCoef_1_8_type > p);

        // HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForHumidRatioEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForHumidRatioEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForHumidRatioEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForHumidRatioEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForHumidRatioEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForHumidRatioEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForHumidRatioEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForHumidRatioEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForHumidRatioEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForHumidRatioEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForHumidRatioEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForHumidRatioEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForHumidRatioEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForHumidRatioEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForHumidRatioEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForHumidRatioEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForHumidRatioEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForHumidRatioEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForHumidRatioEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForHumidRatioEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForHumidRatioEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForHumidRatioEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForHumidRatioEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForHumidRatioEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForHumidRatioEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForHumidRatioEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForHumidRatioEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForHumidRatioEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForHumidRatioEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForHumidRatioEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForHumidRatioEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForHumidRatioEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForHumidRatioEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForHumidRatioEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForHumidRatioEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForHumidRatioEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForHumidRatioEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForHumidRatioEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForHumidRatioEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForHumidRatioEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForHumidRatioEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForHumidRatioEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForHumidRatioEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForHumidRatioEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForHumidRatioEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForHumidRatioEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForHumidRatioEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForHumidRatioEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForHumidRatioEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForHumidRatioEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForHumidRatioEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForHumidRatioEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForHumidRatioEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForHumidRatioEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForHumidRatioEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForHumidRatioEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForHumidRatioEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForHumidRatioEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForHumidRatioEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForHumidRatioEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForHumidRatioEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForHumidRatioEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForHumidRatioEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForHumidRatioEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForHumidRatioEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForHumidRatioEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForHumidRatioEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForHumidRatioEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForHumidRatioEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForHumidRatioEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForHumidRatioEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForHumidRatioEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForHumidRatioEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForHumidRatioEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForHumidRatioEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForHumidRatioEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForHumidRatioEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForHumidRatioEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForHumidRatioEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForHumidRatioEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForHumidRatioEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForHumidRatioEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForHumidRatioEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForHumidRatioEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForHumidRatioEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForHumidRatioEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForHumidRatioEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForHumidRatioEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForHumidRatioEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForHumidRatioEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForHumidRatioEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForHumidRatioEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForHumidRatioEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForHumidRatioEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForHumidRatioEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForHumidRatioEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForHumidRatioEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForHumidRatioEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForHumidRatioEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForHumidRatioEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirHumidRatioForHumidRatioEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirHumidRatioForHumidRatioEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirHumidRatioForHumidRatioEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirHumidRatioForHumidRatioEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirHumidRatioForHumidRatioEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirHumidRatioForHumidRatioEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirHumidRatioForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirHumidRatioForHumidRatioEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirHumidRatioForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirHumidRatioForHumidRatioEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirHumidRatioForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirHumidRatioForHumidRatioEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirHumidRatioForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirHumidRatioForHumidRatioEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirHumidRatioForHumidRatioEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirHumidRatioForHumidRatioEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirHumidRatioForHumidRatioEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirHumidRatioForHumidRatioEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirHumidRatioForHumidRatioEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirHumidRatioForHumidRatioEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirHumidRatioForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirHumidRatioForHumidRatioEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirHumidRatioForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirHumidRatioForHumidRatioEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirHumidRatioForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirHumidRatioForHumidRatioEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirHumidRatioForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirHumidRatioForHumidRatioEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForHumidRatioEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForHumidRatioEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForHumidRatioEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForHumidRatioEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForHumidRatioEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForHumidRatioEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForHumidRatioEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForHumidRatioEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForHumidRatioEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForHumidRatioEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForHumidRatioEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForHumidRatioEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForHumidRatioEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForHumidRatioEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForHumidRatioEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForHumidRatioEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForHumidRatioEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForHumidRatioEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForHumidRatioEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForHumidRatioEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForHumidRatioEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForHumidRatioEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForHumidRatioEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForHumidRatioEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForHumidRatioEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForHumidRatioEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForHumidRatioEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForHumidRatioEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForHumidRatioEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForHumidRatioEqua_optional& x);

        // HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForHumidRatioEqua
        //
        typedef ::xml_schema::double_ HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForHumidRatioEqua_type;
        typedef ::xsd::cxx::tree::optional< HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForHumidRatioEqua_type > HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForHumidRatioEqua_optional;
        typedef ::xsd::cxx::tree::traits< HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForHumidRatioEqua_type, char, ::xsd::cxx::tree::schema_type::double_ > HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForHumidRatioEqua_traits;

        const HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForHumidRatioEqua () const;

        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForHumidRatioEqua_optional&
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForHumidRatioEqua ();

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForHumidRatioEqua_type& x);

        void
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForHumidRatioEqua (const HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForHumidRatioEqua_optional& x);

        // Constructors.
        //
        SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow ();

        SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow (const RefId_type&);

        SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow (const ::xercesc::DOMElement& e,
                                                                    ::xml_schema::flags f = 0,
                                                                    ::xml_schema::container* c = 0);

        SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow (const SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow& x,
                                                                    ::xml_schema::flags f = 0,
                                                                    ::xml_schema::container* c = 0);

        virtual SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow*
        _clone (::xml_schema::flags f = 0,
                ::xml_schema::container* c = 0) const;

        SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow&
        operator= (const SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow& x);

        virtual 
        ~SimFlowEnergyTransfer_HeatExAirToAir_DesiccantBalancedFlow ();

        // Implementation.
        //
        protected:
        void
        parse (::xsd::cxx::xml::dom::parser< char >&,
               ::xml_schema::flags);

        protected:
        SimFlowEnergyTrans_ProcAirInletNodeName_optional SimFlowEnergyTrans_ProcAirInletNodeName_;
        SimFlowEnergyTrans_ProcAirOutletNodeName_optional SimFlowEnergyTrans_ProcAirOutletNodeName_;
        SimFlowEnergyTrans_RegenAirInletNodeName_optional SimFlowEnergyTrans_RegenAirInletNodeName_;
        SimFlowEnergyTrans_RegenAirOutletNodeName_optional SimFlowEnergyTrans_RegenAirOutletNodeName_;
        SimFlowEnergyTrans_HeatExchngPerfObjType_optional SimFlowEnergyTrans_HeatExchngPerfObjType_;
        SimFlowEnergyTrans_HeatExchngPerfName_optional SimFlowEnergyTrans_HeatExchngPerfName_;
        HeatExch_Desic_BalFlow_PerfDataType1_Name_optional HeatExch_Desic_BalFlow_PerfDataType1_Name_;
        HeatExch_Desic_BalFlow_PerfDataType1_NomAirFlowRate_optional HeatExch_Desic_BalFlow_PerfDataType1_NomAirFlowRate_;
        HeatExch_Desic_BalFlow_PerfDataType1_NomAirFaceVelo_optional HeatExch_Desic_BalFlow_PerfDataType1_NomAirFaceVelo_;
        HeatExch_Desic_BalFlow_PerfDataType1_NomElecPwr_optional HeatExch_Desic_BalFlow_PerfDataType1_NomElecPwr_;
        HeatExch_Desic_BalFlow_PerfDataType1_TempEquaCoef_1_8_optional HeatExch_Desic_BalFlow_PerfDataType1_TempEquaCoef_1_8_;
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForTempEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForTempEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForTempEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForTempEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForTempEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForTempEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForTempEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForTempEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForTempEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForTempEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForTempEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForTempEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForTempEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForTempEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForTempEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForTempEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForTempEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForTempEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForTempEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForTempEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirTempForTempEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirTempForTempEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirTempForTempEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirTempForTempEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForTempEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForTempEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForTempEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForTempEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForTempEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForTempEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForTempEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForTempEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_HumidRatioEquaCoef_1_8_optional HeatExch_Desic_BalFlow_PerfDataType1_HumidRatioEquaCoef_1_8_;
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForHumidRatioEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirHumidRatioForHumidRatioEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForHumidRatioEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirHumidRatioForHumidRatioEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForHumidRatioEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirTempForHumidRatioEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForHumidRatioEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirTempForHumidRatioEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForHumidRatioEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirHumidRatioForHumidRatioEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForHumidRatioEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirHumidRatioForHumidRatioEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForHumidRatioEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirTempForHumidRatioEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForHumidRatioEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirTempForHumidRatioEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForHumidRatioEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MinRegenAirVeloForHumidRatioEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForHumidRatioEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenAirVeloForHumidRatioEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirHumidRatioForHumidRatioEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MinRegenOutletAirHumidRatioForHumidRatioEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirHumidRatioForHumidRatioEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenOutInletAirHumidRatioForHumidRatioEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForHumidRatioEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MinRegenInletAirRelHumidForHumidRatioEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForHumidRatioEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MaxRegenInletAirRelHumidForHumidRatioEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForHumidRatioEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MinProcInletAirRelHumidForHumidRatioEqua_;
        HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForHumidRatioEqua_optional HeatExch_Desic_BalFlow_PerfDataType1_MaxProcInletAirRelHumidForHumidRatioEqua_;
      };
    }
  }
}

#include <iosfwd>

#include <xercesc/sax/InputSource.hpp>
#include <xercesc/dom/DOMDocument.hpp>
#include <xercesc/dom/DOMErrorHandler.hpp>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

#endif // SIM_FLOW_ENERGY_TRANSFER_HEAT_EX_AIR_TO_AIR_DESICCANT_BALANCED_FLOW_HXX
