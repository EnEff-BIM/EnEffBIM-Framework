// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimRefrigerationSystemElement_Subcooler.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimRefrigerationSystemElement_Subcooler
      // 

      const SimRefrigerationSystemElement_Subcooler::SimRefrigSysElem_Name_optional& SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_Name () const
      {
        return this->SimRefrigSysElem_Name_;
      }

      SimRefrigerationSystemElement_Subcooler::SimRefrigSysElem_Name_optional& SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_Name ()
      {
        return this->SimRefrigSysElem_Name_;
      }

      void SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_Name (const SimRefrigSysElem_Name_type& x)
      {
        this->SimRefrigSysElem_Name_.set (x);
      }

      void SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_Name (const SimRefrigSysElem_Name_optional& x)
      {
        this->SimRefrigSysElem_Name_ = x;
      }

      void SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_Name (::std::auto_ptr< SimRefrigSysElem_Name_type > x)
      {
        this->SimRefrigSysElem_Name_.set (x);
      }

      const SimRefrigerationSystemElement_Subcooler::SimRefrigSysElem_SubcoolerType_optional& SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_SubcoolerType () const
      {
        return this->SimRefrigSysElem_SubcoolerType_;
      }

      SimRefrigerationSystemElement_Subcooler::SimRefrigSysElem_SubcoolerType_optional& SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_SubcoolerType ()
      {
        return this->SimRefrigSysElem_SubcoolerType_;
      }

      void SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_SubcoolerType (const SimRefrigSysElem_SubcoolerType_type& x)
      {
        this->SimRefrigSysElem_SubcoolerType_.set (x);
      }

      void SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_SubcoolerType (const SimRefrigSysElem_SubcoolerType_optional& x)
      {
        this->SimRefrigSysElem_SubcoolerType_ = x;
      }

      void SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_SubcoolerType (::std::auto_ptr< SimRefrigSysElem_SubcoolerType_type > x)
      {
        this->SimRefrigSysElem_SubcoolerType_.set (x);
      }

      const SimRefrigerationSystemElement_Subcooler::SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff_optional& SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff () const
      {
        return this->SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff_;
      }

      SimRefrigerationSystemElement_Subcooler::SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff_optional& SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff ()
      {
        return this->SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff_;
      }

      void SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff (const SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff_type& x)
      {
        this->SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff_.set (x);
      }

      void SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff (const SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff_optional& x)
      {
        this->SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff_ = x;
      }

      const SimRefrigerationSystemElement_Subcooler::SimRefrigSysElem_DesignLiqInletTemp_optional& SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_DesignLiqInletTemp () const
      {
        return this->SimRefrigSysElem_DesignLiqInletTemp_;
      }

      SimRefrigerationSystemElement_Subcooler::SimRefrigSysElem_DesignLiqInletTemp_optional& SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_DesignLiqInletTemp ()
      {
        return this->SimRefrigSysElem_DesignLiqInletTemp_;
      }

      void SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_DesignLiqInletTemp (const SimRefrigSysElem_DesignLiqInletTemp_type& x)
      {
        this->SimRefrigSysElem_DesignLiqInletTemp_.set (x);
      }

      void SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_DesignLiqInletTemp (const SimRefrigSysElem_DesignLiqInletTemp_optional& x)
      {
        this->SimRefrigSysElem_DesignLiqInletTemp_ = x;
      }

      const SimRefrigerationSystemElement_Subcooler::SimRefrigSysElem_DesignVaporInletTemp_optional& SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_DesignVaporInletTemp () const
      {
        return this->SimRefrigSysElem_DesignVaporInletTemp_;
      }

      SimRefrigerationSystemElement_Subcooler::SimRefrigSysElem_DesignVaporInletTemp_optional& SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_DesignVaporInletTemp ()
      {
        return this->SimRefrigSysElem_DesignVaporInletTemp_;
      }

      void SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_DesignVaporInletTemp (const SimRefrigSysElem_DesignVaporInletTemp_type& x)
      {
        this->SimRefrigSysElem_DesignVaporInletTemp_.set (x);
      }

      void SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_DesignVaporInletTemp (const SimRefrigSysElem_DesignVaporInletTemp_optional& x)
      {
        this->SimRefrigSysElem_DesignVaporInletTemp_ = x;
      }

      const SimRefrigerationSystemElement_Subcooler::SimRefrigSysElem_CapProvidSys_optional& SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_CapProvidSys () const
      {
        return this->SimRefrigSysElem_CapProvidSys_;
      }

      SimRefrigerationSystemElement_Subcooler::SimRefrigSysElem_CapProvidSys_optional& SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_CapProvidSys ()
      {
        return this->SimRefrigSysElem_CapProvidSys_;
      }

      void SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_CapProvidSys (const SimRefrigSysElem_CapProvidSys_type& x)
      {
        this->SimRefrigSysElem_CapProvidSys_.set (x);
      }

      void SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_CapProvidSys (const SimRefrigSysElem_CapProvidSys_optional& x)
      {
        this->SimRefrigSysElem_CapProvidSys_ = x;
      }

      void SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_CapProvidSys (::std::auto_ptr< SimRefrigSysElem_CapProvidSys_type > x)
      {
        this->SimRefrigSysElem_CapProvidSys_.set (x);
      }

      const SimRefrigerationSystemElement_Subcooler::SimRefrigSysElem_OutletCntlTemp_optional& SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_OutletCntlTemp () const
      {
        return this->SimRefrigSysElem_OutletCntlTemp_;
      }

      SimRefrigerationSystemElement_Subcooler::SimRefrigSysElem_OutletCntlTemp_optional& SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_OutletCntlTemp ()
      {
        return this->SimRefrigSysElem_OutletCntlTemp_;
      }

      void SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_OutletCntlTemp (const SimRefrigSysElem_OutletCntlTemp_type& x)
      {
        this->SimRefrigSysElem_OutletCntlTemp_.set (x);
      }

      void SimRefrigerationSystemElement_Subcooler::
      SimRefrigSysElem_OutletCntlTemp (const SimRefrigSysElem_OutletCntlTemp_optional& x)
      {
        this->SimRefrigSysElem_OutletCntlTemp_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimRefrigerationSystemElement_Subcooler
      //

      SimRefrigerationSystemElement_Subcooler::
      SimRefrigerationSystemElement_Subcooler ()
      : ::schema::simxml::MepModel::SimRefrigerationSystemElement (),
        SimRefrigSysElem_Name_ (this),
        SimRefrigSysElem_SubcoolerType_ (this),
        SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff_ (this),
        SimRefrigSysElem_DesignLiqInletTemp_ (this),
        SimRefrigSysElem_DesignVaporInletTemp_ (this),
        SimRefrigSysElem_CapProvidSys_ (this),
        SimRefrigSysElem_OutletCntlTemp_ (this)
      {
      }

      SimRefrigerationSystemElement_Subcooler::
      SimRefrigerationSystemElement_Subcooler (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimRefrigerationSystemElement (RefId),
        SimRefrigSysElem_Name_ (this),
        SimRefrigSysElem_SubcoolerType_ (this),
        SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff_ (this),
        SimRefrigSysElem_DesignLiqInletTemp_ (this),
        SimRefrigSysElem_DesignVaporInletTemp_ (this),
        SimRefrigSysElem_CapProvidSys_ (this),
        SimRefrigSysElem_OutletCntlTemp_ (this)
      {
      }

      SimRefrigerationSystemElement_Subcooler::
      SimRefrigerationSystemElement_Subcooler (const SimRefrigerationSystemElement_Subcooler& x,
                                               ::xml_schema::flags f,
                                               ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimRefrigerationSystemElement (x, f, c),
        SimRefrigSysElem_Name_ (x.SimRefrigSysElem_Name_, f, this),
        SimRefrigSysElem_SubcoolerType_ (x.SimRefrigSysElem_SubcoolerType_, f, this),
        SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff_ (x.SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff_, f, this),
        SimRefrigSysElem_DesignLiqInletTemp_ (x.SimRefrigSysElem_DesignLiqInletTemp_, f, this),
        SimRefrigSysElem_DesignVaporInletTemp_ (x.SimRefrigSysElem_DesignVaporInletTemp_, f, this),
        SimRefrigSysElem_CapProvidSys_ (x.SimRefrigSysElem_CapProvidSys_, f, this),
        SimRefrigSysElem_OutletCntlTemp_ (x.SimRefrigSysElem_OutletCntlTemp_, f, this)
      {
      }

      SimRefrigerationSystemElement_Subcooler::
      SimRefrigerationSystemElement_Subcooler (const ::xercesc::DOMElement& e,
                                               ::xml_schema::flags f,
                                               ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimRefrigerationSystemElement (e, f | ::xml_schema::flags::base, c),
        SimRefrigSysElem_Name_ (this),
        SimRefrigSysElem_SubcoolerType_ (this),
        SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff_ (this),
        SimRefrigSysElem_DesignLiqInletTemp_ (this),
        SimRefrigSysElem_DesignVaporInletTemp_ (this),
        SimRefrigSysElem_CapProvidSys_ (this),
        SimRefrigSysElem_OutletCntlTemp_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimRefrigerationSystemElement_Subcooler::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimRefrigerationSystemElement::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimRefrigSysElem_Name
          //
          if (n.name () == "SimRefrigSysElem_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimRefrigSysElem_Name_type > r (
              SimRefrigSysElem_Name_traits::create (i, f, this));

            if (!this->SimRefrigSysElem_Name_)
            {
              this->SimRefrigSysElem_Name_.set (r);
              continue;
            }
          }

          // SimRefrigSysElem_SubcoolerType
          //
          if (n.name () == "SimRefrigSysElem_SubcoolerType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimRefrigSysElem_SubcoolerType_type > r (
              SimRefrigSysElem_SubcoolerType_traits::create (i, f, this));

            if (!this->SimRefrigSysElem_SubcoolerType_)
            {
              this->SimRefrigSysElem_SubcoolerType_.set (r);
              continue;
            }
          }

          // SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff
          //
          if (n.name () == "SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff_)
            {
              this->SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff_.set (SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff_traits::create (i, f, this));
              continue;
            }
          }

          // SimRefrigSysElem_DesignLiqInletTemp
          //
          if (n.name () == "SimRefrigSysElem_DesignLiqInletTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimRefrigSysElem_DesignLiqInletTemp_)
            {
              this->SimRefrigSysElem_DesignLiqInletTemp_.set (SimRefrigSysElem_DesignLiqInletTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimRefrigSysElem_DesignVaporInletTemp
          //
          if (n.name () == "SimRefrigSysElem_DesignVaporInletTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimRefrigSysElem_DesignVaporInletTemp_)
            {
              this->SimRefrigSysElem_DesignVaporInletTemp_.set (SimRefrigSysElem_DesignVaporInletTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimRefrigSysElem_CapProvidSys
          //
          if (n.name () == "SimRefrigSysElem_CapProvidSys" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimRefrigSysElem_CapProvidSys_type > r (
              SimRefrigSysElem_CapProvidSys_traits::create (i, f, this));

            if (!this->SimRefrigSysElem_CapProvidSys_)
            {
              this->SimRefrigSysElem_CapProvidSys_.set (r);
              continue;
            }
          }

          // SimRefrigSysElem_OutletCntlTemp
          //
          if (n.name () == "SimRefrigSysElem_OutletCntlTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimRefrigSysElem_OutletCntlTemp_)
            {
              this->SimRefrigSysElem_OutletCntlTemp_.set (SimRefrigSysElem_OutletCntlTemp_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimRefrigerationSystemElement_Subcooler* SimRefrigerationSystemElement_Subcooler::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimRefrigerationSystemElement_Subcooler (*this, f, c);
      }

      SimRefrigerationSystemElement_Subcooler& SimRefrigerationSystemElement_Subcooler::
      operator= (const SimRefrigerationSystemElement_Subcooler& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimRefrigerationSystemElement& > (*this) = x;
          this->SimRefrigSysElem_Name_ = x.SimRefrigSysElem_Name_;
          this->SimRefrigSysElem_SubcoolerType_ = x.SimRefrigSysElem_SubcoolerType_;
          this->SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff_ = x.SimRefrigSysElem_LiqSuctionDesignSubcoolingTempDiff_;
          this->SimRefrigSysElem_DesignLiqInletTemp_ = x.SimRefrigSysElem_DesignLiqInletTemp_;
          this->SimRefrigSysElem_DesignVaporInletTemp_ = x.SimRefrigSysElem_DesignVaporInletTemp_;
          this->SimRefrigSysElem_CapProvidSys_ = x.SimRefrigSysElem_CapProvidSys_;
          this->SimRefrigSysElem_OutletCntlTemp_ = x.SimRefrigSysElem_OutletCntlTemp_;
        }

        return *this;
      }

      SimRefrigerationSystemElement_Subcooler::
      ~SimRefrigerationSystemElement_Subcooler ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

