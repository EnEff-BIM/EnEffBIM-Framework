// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow
      // 

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::SimFlowEnergyTrans_RatedAirFlowRate_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_RatedAirFlowRate () const
      {
        return this->SimFlowEnergyTrans_RatedAirFlowRate_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::SimFlowEnergyTrans_RatedAirFlowRate_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_RatedAirFlowRate ()
      {
        return this->SimFlowEnergyTrans_RatedAirFlowRate_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_RatedAirFlowRate (const SimFlowEnergyTrans_RatedAirFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_RatedAirFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_RatedAirFlowRate (const SimFlowEnergyTrans_RatedAirFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_RatedAirFlowRate_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::SimFlowEnergyTrans_CoilAirInletNode_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_CoilAirInletNode () const
      {
        return this->SimFlowEnergyTrans_CoilAirInletNode_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::SimFlowEnergyTrans_CoilAirInletNode_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_CoilAirInletNode ()
      {
        return this->SimFlowEnergyTrans_CoilAirInletNode_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_CoilAirInletNode (const SimFlowEnergyTrans_CoilAirInletNode_type& x)
      {
        this->SimFlowEnergyTrans_CoilAirInletNode_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_CoilAirInletNode (const SimFlowEnergyTrans_CoilAirInletNode_optional& x)
      {
        this->SimFlowEnergyTrans_CoilAirInletNode_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_CoilAirInletNode (::std::auto_ptr< SimFlowEnergyTrans_CoilAirInletNode_type > x)
      {
        this->SimFlowEnergyTrans_CoilAirInletNode_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::SimFlowEnergyTrans_CoilAirOutletNode_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_CoilAirOutletNode () const
      {
        return this->SimFlowEnergyTrans_CoilAirOutletNode_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::SimFlowEnergyTrans_CoilAirOutletNode_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_CoilAirOutletNode ()
      {
        return this->SimFlowEnergyTrans_CoilAirOutletNode_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_CoilAirOutletNode (const SimFlowEnergyTrans_CoilAirOutletNode_type& x)
      {
        this->SimFlowEnergyTrans_CoilAirOutletNode_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_CoilAirOutletNode (const SimFlowEnergyTrans_CoilAirOutletNode_optional& x)
      {
        this->SimFlowEnergyTrans_CoilAirOutletNode_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_CoilAirOutletNode (::std::auto_ptr< SimFlowEnergyTrans_CoilAirOutletNode_type > x)
      {
        this->SimFlowEnergyTrans_CoilAirOutletNode_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::SimFlowEnergyTrans_AvailSched_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_AvailSched () const
      {
        return this->SimFlowEnergyTrans_AvailSched_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::SimFlowEnergyTrans_AvailSched_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_AvailSched ()
      {
        return this->SimFlowEnergyTrans_AvailSched_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_AvailSched (const SimFlowEnergyTrans_AvailSched_type& x)
      {
        this->SimFlowEnergyTrans_AvailSched_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_AvailSched (const SimFlowEnergyTrans_AvailSched_optional& x)
      {
        this->SimFlowEnergyTrans_AvailSched_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_AvailSched (::std::auto_ptr< SimFlowEnergyTrans_AvailSched_type > x)
      {
        this->SimFlowEnergyTrans_AvailSched_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::SimFlowEnergyTrans_GrossRatedHeatCap_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_GrossRatedHeatCap () const
      {
        return this->SimFlowEnergyTrans_GrossRatedHeatCap_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::SimFlowEnergyTrans_GrossRatedHeatCap_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_GrossRatedHeatCap ()
      {
        return this->SimFlowEnergyTrans_GrossRatedHeatCap_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_GrossRatedHeatCap (const SimFlowEnergyTrans_GrossRatedHeatCap_type& x)
      {
        this->SimFlowEnergyTrans_GrossRatedHeatCap_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_GrossRatedHeatCap (const SimFlowEnergyTrans_GrossRatedHeatCap_optional& x)
      {
        this->SimFlowEnergyTrans_GrossRatedHeatCap_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName () const
      {
        return this->SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName ()
      {
        return this->SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName (const SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName (const SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName () const
      {
        return this->SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName ()
      {
        return this->SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName (const SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName (const SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName (::std::auto_ptr< SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow
      //

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow ()
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatingCoilDX (),
        SimFlowEnergyTrans_RatedAirFlowRate_ (this),
        SimFlowEnergyTrans_CoilAirInletNode_ (this),
        SimFlowEnergyTrans_CoilAirOutletNode_ (this),
        SimFlowEnergyTrans_AvailSched_ (this),
        SimFlowEnergyTrans_GrossRatedHeatCap_ (this),
        SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName_ (this),
        SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName_ (this)
      {
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatingCoilDX (RefId),
        SimFlowEnergyTrans_RatedAirFlowRate_ (this),
        SimFlowEnergyTrans_CoilAirInletNode_ (this),
        SimFlowEnergyTrans_CoilAirOutletNode_ (this),
        SimFlowEnergyTrans_AvailSched_ (this),
        SimFlowEnergyTrans_GrossRatedHeatCap_ (this),
        SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName_ (this),
        SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName_ (this)
      {
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow (const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow& x,
                                                                                   ::xml_schema::flags f,
                                                                                   ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatingCoilDX (x, f, c),
        SimFlowEnergyTrans_RatedAirFlowRate_ (x.SimFlowEnergyTrans_RatedAirFlowRate_, f, this),
        SimFlowEnergyTrans_CoilAirInletNode_ (x.SimFlowEnergyTrans_CoilAirInletNode_, f, this),
        SimFlowEnergyTrans_CoilAirOutletNode_ (x.SimFlowEnergyTrans_CoilAirOutletNode_, f, this),
        SimFlowEnergyTrans_AvailSched_ (x.SimFlowEnergyTrans_AvailSched_, f, this),
        SimFlowEnergyTrans_GrossRatedHeatCap_ (x.SimFlowEnergyTrans_GrossRatedHeatCap_, f, this),
        SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName_ (x.SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName_, f, this),
        SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName_ (x.SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName_, f, this)
      {
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow (const ::xercesc::DOMElement& e,
                                                                                   ::xml_schema::flags f,
                                                                                   ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatingCoilDX (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTrans_RatedAirFlowRate_ (this),
        SimFlowEnergyTrans_CoilAirInletNode_ (this),
        SimFlowEnergyTrans_CoilAirOutletNode_ (this),
        SimFlowEnergyTrans_AvailSched_ (this),
        SimFlowEnergyTrans_GrossRatedHeatCap_ (this),
        SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName_ (this),
        SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatingCoilDX::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTrans_RatedAirFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_RatedAirFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedAirFlowRate_)
            {
              this->SimFlowEnergyTrans_RatedAirFlowRate_.set (SimFlowEnergyTrans_RatedAirFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_CoilAirInletNode
          //
          if (n.name () == "SimFlowEnergyTrans_CoilAirInletNode" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CoilAirInletNode_type > r (
              SimFlowEnergyTrans_CoilAirInletNode_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CoilAirInletNode_)
            {
              this->SimFlowEnergyTrans_CoilAirInletNode_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CoilAirOutletNode
          //
          if (n.name () == "SimFlowEnergyTrans_CoilAirOutletNode" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CoilAirOutletNode_type > r (
              SimFlowEnergyTrans_CoilAirOutletNode_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CoilAirOutletNode_)
            {
              this->SimFlowEnergyTrans_CoilAirOutletNode_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_AvailSched
          //
          if (n.name () == "SimFlowEnergyTrans_AvailSched" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AvailSched_type > r (
              SimFlowEnergyTrans_AvailSched_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AvailSched_)
            {
              this->SimFlowEnergyTrans_AvailSched_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_GrossRatedHeatCap
          //
          if (n.name () == "SimFlowEnergyTrans_GrossRatedHeatCap" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_GrossRatedHeatCap_)
            {
              this->SimFlowEnergyTrans_GrossRatedHeatCap_.set (SimFlowEnergyTrans_GrossRatedHeatCap_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName_type > r (
              SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName_)
            {
              this->SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName_type > r (
              SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName_)
            {
              this->SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow* SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow (*this, f, c);
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      operator= (const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatingCoilDX& > (*this) = x;
          this->SimFlowEnergyTrans_RatedAirFlowRate_ = x.SimFlowEnergyTrans_RatedAirFlowRate_;
          this->SimFlowEnergyTrans_CoilAirInletNode_ = x.SimFlowEnergyTrans_CoilAirInletNode_;
          this->SimFlowEnergyTrans_CoilAirOutletNode_ = x.SimFlowEnergyTrans_CoilAirOutletNode_;
          this->SimFlowEnergyTrans_AvailSched_ = x.SimFlowEnergyTrans_AvailSched_;
          this->SimFlowEnergyTrans_GrossRatedHeatCap_ = x.SimFlowEnergyTrans_GrossRatedHeatCap_;
          this->SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName_ = x.SimFlowEnergyTrans_HeatingCapRatioModifierFuncTempCurveName_;
          this->SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName_ = x.SimFlowEnergyTrans_HeatingCapModifierFuncFlowFractionCurveName_;
        }

        return *this;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow::
      ~SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDxVariableRefrigerantFlow ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

