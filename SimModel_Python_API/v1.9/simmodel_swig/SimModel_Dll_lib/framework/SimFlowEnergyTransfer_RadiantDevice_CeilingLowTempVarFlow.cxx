// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow
      // 

      const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_Name_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_Name () const
      {
        return this->SimFlowEnergyTrans_Name_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_Name_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_Name ()
      {
        return this->SimFlowEnergyTrans_Name_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_Name (const SimFlowEnergyTrans_Name_type& x)
      {
        this->SimFlowEnergyTrans_Name_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_Name (const SimFlowEnergyTrans_Name_optional& x)
      {
        this->SimFlowEnergyTrans_Name_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_Name (::std::auto_ptr< SimFlowEnergyTrans_Name_type > x)
      {
        this->SimFlowEnergyTrans_Name_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_AvailSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_AvailSchedName () const
      {
        return this->SimFlowEnergyTrans_AvailSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_AvailSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_AvailSchedName ()
      {
        return this->SimFlowEnergyTrans_AvailSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_AvailSchedName (const SimFlowEnergyTrans_AvailSchedName_type& x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_AvailSchedName (const SimFlowEnergyTrans_AvailSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_AvailSchedName (::std::auto_ptr< SimFlowEnergyTrans_AvailSchedName_type > x)
      {
        this->SimFlowEnergyTrans_AvailSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_ZoneName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_ZoneName () const
      {
        return this->SimFlowEnergyTrans_ZoneName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_ZoneName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_ZoneName ()
      {
        return this->SimFlowEnergyTrans_ZoneName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_ZoneName (const SimFlowEnergyTrans_ZoneName_type& x)
      {
        this->SimFlowEnergyTrans_ZoneName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_ZoneName (const SimFlowEnergyTrans_ZoneName_optional& x)
      {
        this->SimFlowEnergyTrans_ZoneName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_ZoneName (::std::auto_ptr< SimFlowEnergyTrans_ZoneName_type > x)
      {
        this->SimFlowEnergyTrans_ZoneName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName () const
      {
        return this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName ()
      {
        return this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName (const SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_type& x)
      {
        this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName (const SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_optional& x)
      {
        this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName (::std::auto_ptr< SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_type > x)
      {
        this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_HydronicTubingsideDiam_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HydronicTubingsideDiam () const
      {
        return this->SimFlowEnergyTrans_HydronicTubingsideDiam_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_HydronicTubingsideDiam_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HydronicTubingsideDiam ()
      {
        return this->SimFlowEnergyTrans_HydronicTubingsideDiam_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HydronicTubingsideDiam (const SimFlowEnergyTrans_HydronicTubingsideDiam_type& x)
      {
        this->SimFlowEnergyTrans_HydronicTubingsideDiam_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HydronicTubingsideDiam (const SimFlowEnergyTrans_HydronicTubingsideDiam_optional& x)
      {
        this->SimFlowEnergyTrans_HydronicTubingsideDiam_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_HydronicTubingLength_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HydronicTubingLength () const
      {
        return this->SimFlowEnergyTrans_HydronicTubingLength_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_HydronicTubingLength_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HydronicTubingLength ()
      {
        return this->SimFlowEnergyTrans_HydronicTubingLength_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HydronicTubingLength (const SimFlowEnergyTrans_HydronicTubingLength_type& x)
      {
        this->SimFlowEnergyTrans_HydronicTubingLength_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HydronicTubingLength (const SimFlowEnergyTrans_HydronicTubingLength_optional& x)
      {
        this->SimFlowEnergyTrans_HydronicTubingLength_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_TempCntlType_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_TempCntlType () const
      {
        return this->SimFlowEnergyTrans_TempCntlType_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_TempCntlType_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_TempCntlType ()
      {
        return this->SimFlowEnergyTrans_TempCntlType_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_TempCntlType (const SimFlowEnergyTrans_TempCntlType_type& x)
      {
        this->SimFlowEnergyTrans_TempCntlType_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_TempCntlType (const SimFlowEnergyTrans_TempCntlType_optional& x)
      {
        this->SimFlowEnergyTrans_TempCntlType_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_TempCntlType (::std::auto_ptr< SimFlowEnergyTrans_TempCntlType_type > x)
      {
        this->SimFlowEnergyTrans_TempCntlType_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_MaxHotWaterFlow_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_MaxHotWaterFlow () const
      {
        return this->SimFlowEnergyTrans_MaxHotWaterFlow_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_MaxHotWaterFlow_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_MaxHotWaterFlow ()
      {
        return this->SimFlowEnergyTrans_MaxHotWaterFlow_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_MaxHotWaterFlow (const SimFlowEnergyTrans_MaxHotWaterFlow_type& x)
      {
        this->SimFlowEnergyTrans_MaxHotWaterFlow_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_MaxHotWaterFlow (const SimFlowEnergyTrans_MaxHotWaterFlow_optional& x)
      {
        this->SimFlowEnergyTrans_MaxHotWaterFlow_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_HeatingWaterInletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HeatingWaterInletNodeName () const
      {
        return this->SimFlowEnergyTrans_HeatingWaterInletNodeName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_HeatingWaterInletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HeatingWaterInletNodeName ()
      {
        return this->SimFlowEnergyTrans_HeatingWaterInletNodeName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HeatingWaterInletNodeName (const SimFlowEnergyTrans_HeatingWaterInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingWaterInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HeatingWaterInletNodeName (const SimFlowEnergyTrans_HeatingWaterInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingWaterInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HeatingWaterInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_HeatingWaterInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingWaterInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_HeatingWaterOutletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HeatingWaterOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_HeatingWaterOutletNodeName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_HeatingWaterOutletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HeatingWaterOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_HeatingWaterOutletNodeName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HeatingWaterOutletNodeName (const SimFlowEnergyTrans_HeatingWaterOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingWaterOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HeatingWaterOutletNodeName (const SimFlowEnergyTrans_HeatingWaterOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingWaterOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HeatingWaterOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_HeatingWaterOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingWaterOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_HeatingCntlThrottlingRange_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HeatingCntlThrottlingRange () const
      {
        return this->SimFlowEnergyTrans_HeatingCntlThrottlingRange_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_HeatingCntlThrottlingRange_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HeatingCntlThrottlingRange ()
      {
        return this->SimFlowEnergyTrans_HeatingCntlThrottlingRange_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HeatingCntlThrottlingRange (const SimFlowEnergyTrans_HeatingCntlThrottlingRange_type& x)
      {
        this->SimFlowEnergyTrans_HeatingCntlThrottlingRange_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HeatingCntlThrottlingRange (const SimFlowEnergyTrans_HeatingCntlThrottlingRange_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingCntlThrottlingRange_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_HeatingCntlTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HeatingCntlTempSchedName () const
      {
        return this->SimFlowEnergyTrans_HeatingCntlTempSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_HeatingCntlTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HeatingCntlTempSchedName ()
      {
        return this->SimFlowEnergyTrans_HeatingCntlTempSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HeatingCntlTempSchedName (const SimFlowEnergyTrans_HeatingCntlTempSchedName_type& x)
      {
        this->SimFlowEnergyTrans_HeatingCntlTempSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HeatingCntlTempSchedName (const SimFlowEnergyTrans_HeatingCntlTempSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_HeatingCntlTempSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_HeatingCntlTempSchedName (::std::auto_ptr< SimFlowEnergyTrans_HeatingCntlTempSchedName_type > x)
      {
        this->SimFlowEnergyTrans_HeatingCntlTempSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_MaxColdWaterFlow_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_MaxColdWaterFlow () const
      {
        return this->SimFlowEnergyTrans_MaxColdWaterFlow_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_MaxColdWaterFlow_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_MaxColdWaterFlow ()
      {
        return this->SimFlowEnergyTrans_MaxColdWaterFlow_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_MaxColdWaterFlow (const SimFlowEnergyTrans_MaxColdWaterFlow_type& x)
      {
        this->SimFlowEnergyTrans_MaxColdWaterFlow_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_MaxColdWaterFlow (const SimFlowEnergyTrans_MaxColdWaterFlow_optional& x)
      {
        this->SimFlowEnergyTrans_MaxColdWaterFlow_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_CoolingWaterInletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CoolingWaterInletNodeName () const
      {
        return this->SimFlowEnergyTrans_CoolingWaterInletNodeName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_CoolingWaterInletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CoolingWaterInletNodeName ()
      {
        return this->SimFlowEnergyTrans_CoolingWaterInletNodeName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CoolingWaterInletNodeName (const SimFlowEnergyTrans_CoolingWaterInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_CoolingWaterInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CoolingWaterInletNodeName (const SimFlowEnergyTrans_CoolingWaterInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_CoolingWaterInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CoolingWaterInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_CoolingWaterInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_CoolingWaterInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_CoolingWaterOutletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CoolingWaterOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_CoolingWaterOutletNodeName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_CoolingWaterOutletNodeName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CoolingWaterOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_CoolingWaterOutletNodeName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CoolingWaterOutletNodeName (const SimFlowEnergyTrans_CoolingWaterOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_CoolingWaterOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CoolingWaterOutletNodeName (const SimFlowEnergyTrans_CoolingWaterOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_CoolingWaterOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CoolingWaterOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_CoolingWaterOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_CoolingWaterOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_CoolingCntlThrottlingRange_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CoolingCntlThrottlingRange () const
      {
        return this->SimFlowEnergyTrans_CoolingCntlThrottlingRange_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_CoolingCntlThrottlingRange_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CoolingCntlThrottlingRange ()
      {
        return this->SimFlowEnergyTrans_CoolingCntlThrottlingRange_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CoolingCntlThrottlingRange (const SimFlowEnergyTrans_CoolingCntlThrottlingRange_type& x)
      {
        this->SimFlowEnergyTrans_CoolingCntlThrottlingRange_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CoolingCntlThrottlingRange (const SimFlowEnergyTrans_CoolingCntlThrottlingRange_optional& x)
      {
        this->SimFlowEnergyTrans_CoolingCntlThrottlingRange_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_CoolingCntlTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CoolingCntlTempSchedName () const
      {
        return this->SimFlowEnergyTrans_CoolingCntlTempSchedName_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_CoolingCntlTempSchedName_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CoolingCntlTempSchedName ()
      {
        return this->SimFlowEnergyTrans_CoolingCntlTempSchedName_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CoolingCntlTempSchedName (const SimFlowEnergyTrans_CoolingCntlTempSchedName_type& x)
      {
        this->SimFlowEnergyTrans_CoolingCntlTempSchedName_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CoolingCntlTempSchedName (const SimFlowEnergyTrans_CoolingCntlTempSchedName_optional& x)
      {
        this->SimFlowEnergyTrans_CoolingCntlTempSchedName_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CoolingCntlTempSchedName (::std::auto_ptr< SimFlowEnergyTrans_CoolingCntlTempSchedName_type > x)
      {
        this->SimFlowEnergyTrans_CoolingCntlTempSchedName_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_CondensationCntlType_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CondensationCntlType () const
      {
        return this->SimFlowEnergyTrans_CondensationCntlType_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_CondensationCntlType_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CondensationCntlType ()
      {
        return this->SimFlowEnergyTrans_CondensationCntlType_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CondensationCntlType (const SimFlowEnergyTrans_CondensationCntlType_type& x)
      {
        this->SimFlowEnergyTrans_CondensationCntlType_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CondensationCntlType (const SimFlowEnergyTrans_CondensationCntlType_optional& x)
      {
        this->SimFlowEnergyTrans_CondensationCntlType_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CondensationCntlType (::std::auto_ptr< SimFlowEnergyTrans_CondensationCntlType_type > x)
      {
        this->SimFlowEnergyTrans_CondensationCntlType_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_CondensationCntlDewpointfset_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CondensationCntlDewpointfset () const
      {
        return this->SimFlowEnergyTrans_CondensationCntlDewpointfset_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_CondensationCntlDewpointfset_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CondensationCntlDewpointfset ()
      {
        return this->SimFlowEnergyTrans_CondensationCntlDewpointfset_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CondensationCntlDewpointfset (const SimFlowEnergyTrans_CondensationCntlDewpointfset_type& x)
      {
        this->SimFlowEnergyTrans_CondensationCntlDewpointfset_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CondensationCntlDewpointfset (const SimFlowEnergyTrans_CondensationCntlDewpointfset_optional& x)
      {
        this->SimFlowEnergyTrans_CondensationCntlDewpointfset_ = x;
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_NumofCircuits_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_NumofCircuits () const
      {
        return this->SimFlowEnergyTrans_NumofCircuits_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_NumofCircuits_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_NumofCircuits ()
      {
        return this->SimFlowEnergyTrans_NumofCircuits_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_NumofCircuits (const SimFlowEnergyTrans_NumofCircuits_type& x)
      {
        this->SimFlowEnergyTrans_NumofCircuits_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_NumofCircuits (const SimFlowEnergyTrans_NumofCircuits_optional& x)
      {
        this->SimFlowEnergyTrans_NumofCircuits_ = x;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_NumofCircuits (::std::auto_ptr< SimFlowEnergyTrans_NumofCircuits_type > x)
      {
        this->SimFlowEnergyTrans_NumofCircuits_.set (x);
      }

      const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_CircuitLength_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CircuitLength () const
      {
        return this->SimFlowEnergyTrans_CircuitLength_;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::SimFlowEnergyTrans_CircuitLength_optional& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CircuitLength ()
      {
        return this->SimFlowEnergyTrans_CircuitLength_;
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CircuitLength (const SimFlowEnergyTrans_CircuitLength_type& x)
      {
        this->SimFlowEnergyTrans_CircuitLength_.set (x);
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTrans_CircuitLength (const SimFlowEnergyTrans_CircuitLength_optional& x)
      {
        this->SimFlowEnergyTrans_CircuitLength_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow
      //

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow ()
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_RadiantDevice (),
        SimFlowEnergyTrans_Name_ (this),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_ZoneName_ (this),
        SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_ (this),
        SimFlowEnergyTrans_HydronicTubingsideDiam_ (this),
        SimFlowEnergyTrans_HydronicTubingLength_ (this),
        SimFlowEnergyTrans_TempCntlType_ (this),
        SimFlowEnergyTrans_MaxHotWaterFlow_ (this),
        SimFlowEnergyTrans_HeatingWaterInletNodeName_ (this),
        SimFlowEnergyTrans_HeatingWaterOutletNodeName_ (this),
        SimFlowEnergyTrans_HeatingCntlThrottlingRange_ (this),
        SimFlowEnergyTrans_HeatingCntlTempSchedName_ (this),
        SimFlowEnergyTrans_MaxColdWaterFlow_ (this),
        SimFlowEnergyTrans_CoolingWaterInletNodeName_ (this),
        SimFlowEnergyTrans_CoolingWaterOutletNodeName_ (this),
        SimFlowEnergyTrans_CoolingCntlThrottlingRange_ (this),
        SimFlowEnergyTrans_CoolingCntlTempSchedName_ (this),
        SimFlowEnergyTrans_CondensationCntlType_ (this),
        SimFlowEnergyTrans_CondensationCntlDewpointfset_ (this),
        SimFlowEnergyTrans_NumofCircuits_ (this),
        SimFlowEnergyTrans_CircuitLength_ (this)
      {
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_RadiantDevice (RefId),
        SimFlowEnergyTrans_Name_ (this),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_ZoneName_ (this),
        SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_ (this),
        SimFlowEnergyTrans_HydronicTubingsideDiam_ (this),
        SimFlowEnergyTrans_HydronicTubingLength_ (this),
        SimFlowEnergyTrans_TempCntlType_ (this),
        SimFlowEnergyTrans_MaxHotWaterFlow_ (this),
        SimFlowEnergyTrans_HeatingWaterInletNodeName_ (this),
        SimFlowEnergyTrans_HeatingWaterOutletNodeName_ (this),
        SimFlowEnergyTrans_HeatingCntlThrottlingRange_ (this),
        SimFlowEnergyTrans_HeatingCntlTempSchedName_ (this),
        SimFlowEnergyTrans_MaxColdWaterFlow_ (this),
        SimFlowEnergyTrans_CoolingWaterInletNodeName_ (this),
        SimFlowEnergyTrans_CoolingWaterOutletNodeName_ (this),
        SimFlowEnergyTrans_CoolingCntlThrottlingRange_ (this),
        SimFlowEnergyTrans_CoolingCntlTempSchedName_ (this),
        SimFlowEnergyTrans_CondensationCntlType_ (this),
        SimFlowEnergyTrans_CondensationCntlDewpointfset_ (this),
        SimFlowEnergyTrans_NumofCircuits_ (this),
        SimFlowEnergyTrans_CircuitLength_ (this)
      {
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow (const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow& x,
                                                                 ::xml_schema::flags f,
                                                                 ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_RadiantDevice (x, f, c),
        SimFlowEnergyTrans_Name_ (x.SimFlowEnergyTrans_Name_, f, this),
        SimFlowEnergyTrans_AvailSchedName_ (x.SimFlowEnergyTrans_AvailSchedName_, f, this),
        SimFlowEnergyTrans_ZoneName_ (x.SimFlowEnergyTrans_ZoneName_, f, this),
        SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_ (x.SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_, f, this),
        SimFlowEnergyTrans_HydronicTubingsideDiam_ (x.SimFlowEnergyTrans_HydronicTubingsideDiam_, f, this),
        SimFlowEnergyTrans_HydronicTubingLength_ (x.SimFlowEnergyTrans_HydronicTubingLength_, f, this),
        SimFlowEnergyTrans_TempCntlType_ (x.SimFlowEnergyTrans_TempCntlType_, f, this),
        SimFlowEnergyTrans_MaxHotWaterFlow_ (x.SimFlowEnergyTrans_MaxHotWaterFlow_, f, this),
        SimFlowEnergyTrans_HeatingWaterInletNodeName_ (x.SimFlowEnergyTrans_HeatingWaterInletNodeName_, f, this),
        SimFlowEnergyTrans_HeatingWaterOutletNodeName_ (x.SimFlowEnergyTrans_HeatingWaterOutletNodeName_, f, this),
        SimFlowEnergyTrans_HeatingCntlThrottlingRange_ (x.SimFlowEnergyTrans_HeatingCntlThrottlingRange_, f, this),
        SimFlowEnergyTrans_HeatingCntlTempSchedName_ (x.SimFlowEnergyTrans_HeatingCntlTempSchedName_, f, this),
        SimFlowEnergyTrans_MaxColdWaterFlow_ (x.SimFlowEnergyTrans_MaxColdWaterFlow_, f, this),
        SimFlowEnergyTrans_CoolingWaterInletNodeName_ (x.SimFlowEnergyTrans_CoolingWaterInletNodeName_, f, this),
        SimFlowEnergyTrans_CoolingWaterOutletNodeName_ (x.SimFlowEnergyTrans_CoolingWaterOutletNodeName_, f, this),
        SimFlowEnergyTrans_CoolingCntlThrottlingRange_ (x.SimFlowEnergyTrans_CoolingCntlThrottlingRange_, f, this),
        SimFlowEnergyTrans_CoolingCntlTempSchedName_ (x.SimFlowEnergyTrans_CoolingCntlTempSchedName_, f, this),
        SimFlowEnergyTrans_CondensationCntlType_ (x.SimFlowEnergyTrans_CondensationCntlType_, f, this),
        SimFlowEnergyTrans_CondensationCntlDewpointfset_ (x.SimFlowEnergyTrans_CondensationCntlDewpointfset_, f, this),
        SimFlowEnergyTrans_NumofCircuits_ (x.SimFlowEnergyTrans_NumofCircuits_, f, this),
        SimFlowEnergyTrans_CircuitLength_ (x.SimFlowEnergyTrans_CircuitLength_, f, this)
      {
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow (const ::xercesc::DOMElement& e,
                                                                 ::xml_schema::flags f,
                                                                 ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_RadiantDevice (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTrans_Name_ (this),
        SimFlowEnergyTrans_AvailSchedName_ (this),
        SimFlowEnergyTrans_ZoneName_ (this),
        SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_ (this),
        SimFlowEnergyTrans_HydronicTubingsideDiam_ (this),
        SimFlowEnergyTrans_HydronicTubingLength_ (this),
        SimFlowEnergyTrans_TempCntlType_ (this),
        SimFlowEnergyTrans_MaxHotWaterFlow_ (this),
        SimFlowEnergyTrans_HeatingWaterInletNodeName_ (this),
        SimFlowEnergyTrans_HeatingWaterOutletNodeName_ (this),
        SimFlowEnergyTrans_HeatingCntlThrottlingRange_ (this),
        SimFlowEnergyTrans_HeatingCntlTempSchedName_ (this),
        SimFlowEnergyTrans_MaxColdWaterFlow_ (this),
        SimFlowEnergyTrans_CoolingWaterInletNodeName_ (this),
        SimFlowEnergyTrans_CoolingWaterOutletNodeName_ (this),
        SimFlowEnergyTrans_CoolingCntlThrottlingRange_ (this),
        SimFlowEnergyTrans_CoolingCntlTempSchedName_ (this),
        SimFlowEnergyTrans_CondensationCntlType_ (this),
        SimFlowEnergyTrans_CondensationCntlDewpointfset_ (this),
        SimFlowEnergyTrans_NumofCircuits_ (this),
        SimFlowEnergyTrans_CircuitLength_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimFlowEnergyTransfer_RadiantDevice::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTrans_Name
          //
          if (n.name () == "SimFlowEnergyTrans_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Name_type > r (
              SimFlowEnergyTrans_Name_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Name_)
            {
              this->SimFlowEnergyTrans_Name_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_AvailSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_AvailSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_AvailSchedName_type > r (
              SimFlowEnergyTrans_AvailSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_AvailSchedName_)
            {
              this->SimFlowEnergyTrans_AvailSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_ZoneName
          //
          if (n.name () == "SimFlowEnergyTrans_ZoneName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_ZoneName_type > r (
              SimFlowEnergyTrans_ZoneName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_ZoneName_)
            {
              this->SimFlowEnergyTrans_ZoneName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName
          //
          if (n.name () == "SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_type > r (
              SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_)
            {
              this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HydronicTubingsideDiam
          //
          if (n.name () == "SimFlowEnergyTrans_HydronicTubingsideDiam" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_HydronicTubingsideDiam_)
            {
              this->SimFlowEnergyTrans_HydronicTubingsideDiam_.set (SimFlowEnergyTrans_HydronicTubingsideDiam_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_HydronicTubingLength
          //
          if (n.name () == "SimFlowEnergyTrans_HydronicTubingLength" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_HydronicTubingLength_)
            {
              this->SimFlowEnergyTrans_HydronicTubingLength_.set (SimFlowEnergyTrans_HydronicTubingLength_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_TempCntlType
          //
          if (n.name () == "SimFlowEnergyTrans_TempCntlType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_TempCntlType_type > r (
              SimFlowEnergyTrans_TempCntlType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_TempCntlType_)
            {
              this->SimFlowEnergyTrans_TempCntlType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_MaxHotWaterFlow
          //
          if (n.name () == "SimFlowEnergyTrans_MaxHotWaterFlow" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MaxHotWaterFlow_)
            {
              this->SimFlowEnergyTrans_MaxHotWaterFlow_.set (SimFlowEnergyTrans_MaxHotWaterFlow_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingWaterInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingWaterInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingWaterInletNodeName_type > r (
              SimFlowEnergyTrans_HeatingWaterInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingWaterInletNodeName_)
            {
              this->SimFlowEnergyTrans_HeatingWaterInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingWaterOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingWaterOutletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingWaterOutletNodeName_type > r (
              SimFlowEnergyTrans_HeatingWaterOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingWaterOutletNodeName_)
            {
              this->SimFlowEnergyTrans_HeatingWaterOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingCntlThrottlingRange
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingCntlThrottlingRange" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_HeatingCntlThrottlingRange_)
            {
              this->SimFlowEnergyTrans_HeatingCntlThrottlingRange_.set (SimFlowEnergyTrans_HeatingCntlThrottlingRange_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_HeatingCntlTempSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_HeatingCntlTempSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_HeatingCntlTempSchedName_type > r (
              SimFlowEnergyTrans_HeatingCntlTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_HeatingCntlTempSchedName_)
            {
              this->SimFlowEnergyTrans_HeatingCntlTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_MaxColdWaterFlow
          //
          if (n.name () == "SimFlowEnergyTrans_MaxColdWaterFlow" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MaxColdWaterFlow_)
            {
              this->SimFlowEnergyTrans_MaxColdWaterFlow_.set (SimFlowEnergyTrans_MaxColdWaterFlow_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_CoolingWaterInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_CoolingWaterInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CoolingWaterInletNodeName_type > r (
              SimFlowEnergyTrans_CoolingWaterInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CoolingWaterInletNodeName_)
            {
              this->SimFlowEnergyTrans_CoolingWaterInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CoolingWaterOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_CoolingWaterOutletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CoolingWaterOutletNodeName_type > r (
              SimFlowEnergyTrans_CoolingWaterOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CoolingWaterOutletNodeName_)
            {
              this->SimFlowEnergyTrans_CoolingWaterOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CoolingCntlThrottlingRange
          //
          if (n.name () == "SimFlowEnergyTrans_CoolingCntlThrottlingRange" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_CoolingCntlThrottlingRange_)
            {
              this->SimFlowEnergyTrans_CoolingCntlThrottlingRange_.set (SimFlowEnergyTrans_CoolingCntlThrottlingRange_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_CoolingCntlTempSchedName
          //
          if (n.name () == "SimFlowEnergyTrans_CoolingCntlTempSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CoolingCntlTempSchedName_type > r (
              SimFlowEnergyTrans_CoolingCntlTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CoolingCntlTempSchedName_)
            {
              this->SimFlowEnergyTrans_CoolingCntlTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CondensationCntlType
          //
          if (n.name () == "SimFlowEnergyTrans_CondensationCntlType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_CondensationCntlType_type > r (
              SimFlowEnergyTrans_CondensationCntlType_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_CondensationCntlType_)
            {
              this->SimFlowEnergyTrans_CondensationCntlType_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CondensationCntlDewpointfset
          //
          if (n.name () == "SimFlowEnergyTrans_CondensationCntlDewpointfset" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_CondensationCntlDewpointfset_)
            {
              this->SimFlowEnergyTrans_CondensationCntlDewpointfset_.set (SimFlowEnergyTrans_CondensationCntlDewpointfset_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_NumofCircuits
          //
          if (n.name () == "SimFlowEnergyTrans_NumofCircuits" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_NumofCircuits_type > r (
              SimFlowEnergyTrans_NumofCircuits_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_NumofCircuits_)
            {
              this->SimFlowEnergyTrans_NumofCircuits_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_CircuitLength
          //
          if (n.name () == "SimFlowEnergyTrans_CircuitLength" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_CircuitLength_)
            {
              this->SimFlowEnergyTrans_CircuitLength_.set (SimFlowEnergyTrans_CircuitLength_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow* SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow (*this, f, c);
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow& SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      operator= (const SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimFlowEnergyTransfer_RadiantDevice& > (*this) = x;
          this->SimFlowEnergyTrans_Name_ = x.SimFlowEnergyTrans_Name_;
          this->SimFlowEnergyTrans_AvailSchedName_ = x.SimFlowEnergyTrans_AvailSchedName_;
          this->SimFlowEnergyTrans_ZoneName_ = x.SimFlowEnergyTrans_ZoneName_;
          this->SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_ = x.SimFlowEnergyTrans_SurfNameOrRadiantSurfGroupName_;
          this->SimFlowEnergyTrans_HydronicTubingsideDiam_ = x.SimFlowEnergyTrans_HydronicTubingsideDiam_;
          this->SimFlowEnergyTrans_HydronicTubingLength_ = x.SimFlowEnergyTrans_HydronicTubingLength_;
          this->SimFlowEnergyTrans_TempCntlType_ = x.SimFlowEnergyTrans_TempCntlType_;
          this->SimFlowEnergyTrans_MaxHotWaterFlow_ = x.SimFlowEnergyTrans_MaxHotWaterFlow_;
          this->SimFlowEnergyTrans_HeatingWaterInletNodeName_ = x.SimFlowEnergyTrans_HeatingWaterInletNodeName_;
          this->SimFlowEnergyTrans_HeatingWaterOutletNodeName_ = x.SimFlowEnergyTrans_HeatingWaterOutletNodeName_;
          this->SimFlowEnergyTrans_HeatingCntlThrottlingRange_ = x.SimFlowEnergyTrans_HeatingCntlThrottlingRange_;
          this->SimFlowEnergyTrans_HeatingCntlTempSchedName_ = x.SimFlowEnergyTrans_HeatingCntlTempSchedName_;
          this->SimFlowEnergyTrans_MaxColdWaterFlow_ = x.SimFlowEnergyTrans_MaxColdWaterFlow_;
          this->SimFlowEnergyTrans_CoolingWaterInletNodeName_ = x.SimFlowEnergyTrans_CoolingWaterInletNodeName_;
          this->SimFlowEnergyTrans_CoolingWaterOutletNodeName_ = x.SimFlowEnergyTrans_CoolingWaterOutletNodeName_;
          this->SimFlowEnergyTrans_CoolingCntlThrottlingRange_ = x.SimFlowEnergyTrans_CoolingCntlThrottlingRange_;
          this->SimFlowEnergyTrans_CoolingCntlTempSchedName_ = x.SimFlowEnergyTrans_CoolingCntlTempSchedName_;
          this->SimFlowEnergyTrans_CondensationCntlType_ = x.SimFlowEnergyTrans_CondensationCntlType_;
          this->SimFlowEnergyTrans_CondensationCntlDewpointfset_ = x.SimFlowEnergyTrans_CondensationCntlDewpointfset_;
          this->SimFlowEnergyTrans_NumofCircuits_ = x.SimFlowEnergyTrans_NumofCircuits_;
          this->SimFlowEnergyTrans_CircuitLength_ = x.SimFlowEnergyTrans_CircuitLength_;
        }

        return *this;
      }

      SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow::
      ~SimFlowEnergyTransfer_RadiantDevice_CeilingLowTempVarFlow ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

