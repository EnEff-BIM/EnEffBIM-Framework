// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench
      // 

      const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_InNodeName_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_InNodeName () const
      {
        return this->SimFlowEnergyTrans_InNodeName_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_InNodeName_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_InNodeName ()
      {
        return this->SimFlowEnergyTrans_InNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_InNodeName (const SimFlowEnergyTrans_InNodeName_type& x)
      {
        this->SimFlowEnergyTrans_InNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_InNodeName (const SimFlowEnergyTrans_InNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_InNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_InNodeName (::std::auto_ptr< SimFlowEnergyTrans_InNodeName_type > x)
      {
        this->SimFlowEnergyTrans_InNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_OutNodeName_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_OutNodeName () const
      {
        return this->SimFlowEnergyTrans_OutNodeName_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_OutNodeName_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_OutNodeName ()
      {
        return this->SimFlowEnergyTrans_OutNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_OutNodeName (const SimFlowEnergyTrans_OutNodeName_type& x)
      {
        this->SimFlowEnergyTrans_OutNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_OutNodeName (const SimFlowEnergyTrans_OutNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_OutNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_OutNodeName (::std::auto_ptr< SimFlowEnergyTrans_OutNodeName_type > x)
      {
        this->SimFlowEnergyTrans_OutNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_DesignFlowRate_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_DesignFlowRate () const
      {
        return this->SimFlowEnergyTrans_DesignFlowRate_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_DesignFlowRate_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_DesignFlowRate ()
      {
        return this->SimFlowEnergyTrans_DesignFlowRate_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_DesignFlowRate (const SimFlowEnergyTrans_DesignFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_DesignFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_DesignFlowRate (const SimFlowEnergyTrans_DesignFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_DesignFlowRate_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_PipeThermalCond_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_PipeThermalCond () const
      {
        return this->SimFlowEnergyTrans_PipeThermalCond_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_PipeThermalCond_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_PipeThermalCond ()
      {
        return this->SimFlowEnergyTrans_PipeThermalCond_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_PipeThermalCond (const SimFlowEnergyTrans_PipeThermalCond_type& x)
      {
        this->SimFlowEnergyTrans_PipeThermalCond_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_PipeThermalCond (const SimFlowEnergyTrans_PipeThermalCond_optional& x)
      {
        this->SimFlowEnergyTrans_PipeThermalCond_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec () const
      {
        return this->SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec ()
      {
        return this->SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec (const SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec_type& x)
      {
        this->SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec (const SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec_optional& x)
      {
        this->SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_NumofTrenches_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_NumofTrenches () const
      {
        return this->SimFlowEnergyTrans_NumofTrenches_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_NumofTrenches_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_NumofTrenches ()
      {
        return this->SimFlowEnergyTrans_NumofTrenches_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_NumofTrenches (const SimFlowEnergyTrans_NumofTrenches_type& x)
      {
        this->SimFlowEnergyTrans_NumofTrenches_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_NumofTrenches (const SimFlowEnergyTrans_NumofTrenches_optional& x)
      {
        this->SimFlowEnergyTrans_NumofTrenches_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_HorizontalSpacingBtwnPipes_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_HorizontalSpacingBtwnPipes () const
      {
        return this->SimFlowEnergyTrans_HorizontalSpacingBtwnPipes_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_HorizontalSpacingBtwnPipes_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_HorizontalSpacingBtwnPipes ()
      {
        return this->SimFlowEnergyTrans_HorizontalSpacingBtwnPipes_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_HorizontalSpacingBtwnPipes (const SimFlowEnergyTrans_HorizontalSpacingBtwnPipes_type& x)
      {
        this->SimFlowEnergyTrans_HorizontalSpacingBtwnPipes_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_HorizontalSpacingBtwnPipes (const SimFlowEnergyTrans_HorizontalSpacingBtwnPipes_optional& x)
      {
        this->SimFlowEnergyTrans_HorizontalSpacingBtwnPipes_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_PipeInnerDiameter_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_PipeInnerDiameter () const
      {
        return this->SimFlowEnergyTrans_PipeInnerDiameter_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_PipeInnerDiameter_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_PipeInnerDiameter ()
      {
        return this->SimFlowEnergyTrans_PipeInnerDiameter_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_PipeInnerDiameter (const SimFlowEnergyTrans_PipeInnerDiameter_type& x)
      {
        this->SimFlowEnergyTrans_PipeInnerDiameter_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_PipeInnerDiameter (const SimFlowEnergyTrans_PipeInnerDiameter_optional& x)
      {
        this->SimFlowEnergyTrans_PipeInnerDiameter_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_PipeOuterDiameter_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_PipeOuterDiameter () const
      {
        return this->SimFlowEnergyTrans_PipeOuterDiameter_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_PipeOuterDiameter_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_PipeOuterDiameter ()
      {
        return this->SimFlowEnergyTrans_PipeOuterDiameter_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_PipeOuterDiameter (const SimFlowEnergyTrans_PipeOuterDiameter_type& x)
      {
        this->SimFlowEnergyTrans_PipeOuterDiameter_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_PipeOuterDiameter (const SimFlowEnergyTrans_PipeOuterDiameter_optional& x)
      {
        this->SimFlowEnergyTrans_PipeOuterDiameter_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_BurialDepth_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_BurialDepth () const
      {
        return this->SimFlowEnergyTrans_BurialDepth_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_BurialDepth_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_BurialDepth ()
      {
        return this->SimFlowEnergyTrans_BurialDepth_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_BurialDepth (const SimFlowEnergyTrans_BurialDepth_type& x)
      {
        this->SimFlowEnergyTrans_BurialDepth_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_BurialDepth (const SimFlowEnergyTrans_BurialDepth_optional& x)
      {
        this->SimFlowEnergyTrans_BurialDepth_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_SoilThermalCond_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_SoilThermalCond () const
      {
        return this->SimFlowEnergyTrans_SoilThermalCond_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_SoilThermalCond_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_SoilThermalCond ()
      {
        return this->SimFlowEnergyTrans_SoilThermalCond_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_SoilThermalCond (const SimFlowEnergyTrans_SoilThermalCond_type& x)
      {
        this->SimFlowEnergyTrans_SoilThermalCond_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_SoilThermalCond (const SimFlowEnergyTrans_SoilThermalCond_optional& x)
      {
        this->SimFlowEnergyTrans_SoilThermalCond_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_SoilDens_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_SoilDens () const
      {
        return this->SimFlowEnergyTrans_SoilDens_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_SoilDens_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_SoilDens ()
      {
        return this->SimFlowEnergyTrans_SoilDens_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_SoilDens (const SimFlowEnergyTrans_SoilDens_type& x)
      {
        this->SimFlowEnergyTrans_SoilDens_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_SoilDens (const SimFlowEnergyTrans_SoilDens_optional& x)
      {
        this->SimFlowEnergyTrans_SoilDens_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_SoilSpecificHeat_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_SoilSpecificHeat () const
      {
        return this->SimFlowEnergyTrans_SoilSpecificHeat_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_SoilSpecificHeat_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_SoilSpecificHeat ()
      {
        return this->SimFlowEnergyTrans_SoilSpecificHeat_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_SoilSpecificHeat (const SimFlowEnergyTrans_SoilSpecificHeat_type& x)
      {
        this->SimFlowEnergyTrans_SoilSpecificHeat_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_SoilSpecificHeat (const SimFlowEnergyTrans_SoilSpecificHeat_optional& x)
      {
        this->SimFlowEnergyTrans_SoilSpecificHeat_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_PipeDensity_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_PipeDensity () const
      {
        return this->SimFlowEnergyTrans_PipeDensity_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_PipeDensity_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_PipeDensity ()
      {
        return this->SimFlowEnergyTrans_PipeDensity_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_PipeDensity (const SimFlowEnergyTrans_PipeDensity_type& x)
      {
        this->SimFlowEnergyTrans_PipeDensity_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_PipeDensity (const SimFlowEnergyTrans_PipeDensity_optional& x)
      {
        this->SimFlowEnergyTrans_PipeDensity_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_PipeSpecificHeat_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_PipeSpecificHeat () const
      {
        return this->SimFlowEnergyTrans_PipeSpecificHeat_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_PipeSpecificHeat_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_PipeSpecificHeat ()
      {
        return this->SimFlowEnergyTrans_PipeSpecificHeat_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_PipeSpecificHeat (const SimFlowEnergyTrans_PipeSpecificHeat_type& x)
      {
        this->SimFlowEnergyTrans_PipeSpecificHeat_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_PipeSpecificHeat (const SimFlowEnergyTrans_PipeSpecificHeat_optional& x)
      {
        this->SimFlowEnergyTrans_PipeSpecificHeat_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_SoilMoisContentPercent_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_SoilMoisContentPercent () const
      {
        return this->SimFlowEnergyTrans_SoilMoisContentPercent_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_SoilMoisContentPercent_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_SoilMoisContentPercent ()
      {
        return this->SimFlowEnergyTrans_SoilMoisContentPercent_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_SoilMoisContentPercent (const SimFlowEnergyTrans_SoilMoisContentPercent_type& x)
      {
        this->SimFlowEnergyTrans_SoilMoisContentPercent_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_SoilMoisContentPercent (const SimFlowEnergyTrans_SoilMoisContentPercent_optional& x)
      {
        this->SimFlowEnergyTrans_SoilMoisContentPercent_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_SoilMoisContentPercentatSaturation_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_SoilMoisContentPercentatSaturation () const
      {
        return this->SimFlowEnergyTrans_SoilMoisContentPercentatSaturation_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_SoilMoisContentPercentatSaturation_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_SoilMoisContentPercentatSaturation ()
      {
        return this->SimFlowEnergyTrans_SoilMoisContentPercentatSaturation_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_SoilMoisContentPercentatSaturation (const SimFlowEnergyTrans_SoilMoisContentPercentatSaturation_type& x)
      {
        this->SimFlowEnergyTrans_SoilMoisContentPercentatSaturation_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_SoilMoisContentPercentatSaturation (const SimFlowEnergyTrans_SoilMoisContentPercentatSaturation_optional& x)
      {
        this->SimFlowEnergyTrans_SoilMoisContentPercentatSaturation_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp () const
      {
        return this->SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp ()
      {
        return this->SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp (const SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp_type& x)
      {
        this->SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp (const SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp_optional& x)
      {
        this->SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp () const
      {
        return this->SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp ()
      {
        return this->SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp (const SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp_type& x)
      {
        this->SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp (const SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp_optional& x)
      {
        this->SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp () const
      {
        return this->SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp ()
      {
        return this->SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp (const SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp_type& x)
      {
        this->SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp (const SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp_optional& x)
      {
        this->SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_EvapotranspirationGroundCoverParam_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_EvapotranspirationGroundCoverParam () const
      {
        return this->SimFlowEnergyTrans_EvapotranspirationGroundCoverParam_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::SimFlowEnergyTrans_EvapotranspirationGroundCoverParam_optional& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_EvapotranspirationGroundCoverParam ()
      {
        return this->SimFlowEnergyTrans_EvapotranspirationGroundCoverParam_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_EvapotranspirationGroundCoverParam (const SimFlowEnergyTrans_EvapotranspirationGroundCoverParam_type& x)
      {
        this->SimFlowEnergyTrans_EvapotranspirationGroundCoverParam_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTrans_EvapotranspirationGroundCoverParam (const SimFlowEnergyTrans_EvapotranspirationGroundCoverParam_optional& x)
      {
        this->SimFlowEnergyTrans_EvapotranspirationGroundCoverParam_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench
      //

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench ()
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatExEarthToWater (),
        SimFlowEnergyTrans_InNodeName_ (this),
        SimFlowEnergyTrans_OutNodeName_ (this),
        SimFlowEnergyTrans_DesignFlowRate_ (this),
        SimFlowEnergyTrans_PipeThermalCond_ (this),
        SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec_ (this),
        SimFlowEnergyTrans_NumofTrenches_ (this),
        SimFlowEnergyTrans_HorizontalSpacingBtwnPipes_ (this),
        SimFlowEnergyTrans_PipeInnerDiameter_ (this),
        SimFlowEnergyTrans_PipeOuterDiameter_ (this),
        SimFlowEnergyTrans_BurialDepth_ (this),
        SimFlowEnergyTrans_SoilThermalCond_ (this),
        SimFlowEnergyTrans_SoilDens_ (this),
        SimFlowEnergyTrans_SoilSpecificHeat_ (this),
        SimFlowEnergyTrans_PipeDensity_ (this),
        SimFlowEnergyTrans_PipeSpecificHeat_ (this),
        SimFlowEnergyTrans_SoilMoisContentPercent_ (this),
        SimFlowEnergyTrans_SoilMoisContentPercentatSaturation_ (this),
        SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp_ (this),
        SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp_ (this),
        SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp_ (this),
        SimFlowEnergyTrans_EvapotranspirationGroundCoverParam_ (this)
      {
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatExEarthToWater (RefId),
        SimFlowEnergyTrans_InNodeName_ (this),
        SimFlowEnergyTrans_OutNodeName_ (this),
        SimFlowEnergyTrans_DesignFlowRate_ (this),
        SimFlowEnergyTrans_PipeThermalCond_ (this),
        SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec_ (this),
        SimFlowEnergyTrans_NumofTrenches_ (this),
        SimFlowEnergyTrans_HorizontalSpacingBtwnPipes_ (this),
        SimFlowEnergyTrans_PipeInnerDiameter_ (this),
        SimFlowEnergyTrans_PipeOuterDiameter_ (this),
        SimFlowEnergyTrans_BurialDepth_ (this),
        SimFlowEnergyTrans_SoilThermalCond_ (this),
        SimFlowEnergyTrans_SoilDens_ (this),
        SimFlowEnergyTrans_SoilSpecificHeat_ (this),
        SimFlowEnergyTrans_PipeDensity_ (this),
        SimFlowEnergyTrans_PipeSpecificHeat_ (this),
        SimFlowEnergyTrans_SoilMoisContentPercent_ (this),
        SimFlowEnergyTrans_SoilMoisContentPercentatSaturation_ (this),
        SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp_ (this),
        SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp_ (this),
        SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp_ (this),
        SimFlowEnergyTrans_EvapotranspirationGroundCoverParam_ (this)
      {
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench (const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench& x,
                                                                 ::xml_schema::flags f,
                                                                 ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatExEarthToWater (x, f, c),
        SimFlowEnergyTrans_InNodeName_ (x.SimFlowEnergyTrans_InNodeName_, f, this),
        SimFlowEnergyTrans_OutNodeName_ (x.SimFlowEnergyTrans_OutNodeName_, f, this),
        SimFlowEnergyTrans_DesignFlowRate_ (x.SimFlowEnergyTrans_DesignFlowRate_, f, this),
        SimFlowEnergyTrans_PipeThermalCond_ (x.SimFlowEnergyTrans_PipeThermalCond_, f, this),
        SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec_ (x.SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec_, f, this),
        SimFlowEnergyTrans_NumofTrenches_ (x.SimFlowEnergyTrans_NumofTrenches_, f, this),
        SimFlowEnergyTrans_HorizontalSpacingBtwnPipes_ (x.SimFlowEnergyTrans_HorizontalSpacingBtwnPipes_, f, this),
        SimFlowEnergyTrans_PipeInnerDiameter_ (x.SimFlowEnergyTrans_PipeInnerDiameter_, f, this),
        SimFlowEnergyTrans_PipeOuterDiameter_ (x.SimFlowEnergyTrans_PipeOuterDiameter_, f, this),
        SimFlowEnergyTrans_BurialDepth_ (x.SimFlowEnergyTrans_BurialDepth_, f, this),
        SimFlowEnergyTrans_SoilThermalCond_ (x.SimFlowEnergyTrans_SoilThermalCond_, f, this),
        SimFlowEnergyTrans_SoilDens_ (x.SimFlowEnergyTrans_SoilDens_, f, this),
        SimFlowEnergyTrans_SoilSpecificHeat_ (x.SimFlowEnergyTrans_SoilSpecificHeat_, f, this),
        SimFlowEnergyTrans_PipeDensity_ (x.SimFlowEnergyTrans_PipeDensity_, f, this),
        SimFlowEnergyTrans_PipeSpecificHeat_ (x.SimFlowEnergyTrans_PipeSpecificHeat_, f, this),
        SimFlowEnergyTrans_SoilMoisContentPercent_ (x.SimFlowEnergyTrans_SoilMoisContentPercent_, f, this),
        SimFlowEnergyTrans_SoilMoisContentPercentatSaturation_ (x.SimFlowEnergyTrans_SoilMoisContentPercentatSaturation_, f, this),
        SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp_ (x.SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp_, f, this),
        SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp_ (x.SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp_, f, this),
        SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp_ (x.SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp_, f, this),
        SimFlowEnergyTrans_EvapotranspirationGroundCoverParam_ (x.SimFlowEnergyTrans_EvapotranspirationGroundCoverParam_, f, this)
      {
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench (const ::xercesc::DOMElement& e,
                                                                 ::xml_schema::flags f,
                                                                 ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatExEarthToWater (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTrans_InNodeName_ (this),
        SimFlowEnergyTrans_OutNodeName_ (this),
        SimFlowEnergyTrans_DesignFlowRate_ (this),
        SimFlowEnergyTrans_PipeThermalCond_ (this),
        SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec_ (this),
        SimFlowEnergyTrans_NumofTrenches_ (this),
        SimFlowEnergyTrans_HorizontalSpacingBtwnPipes_ (this),
        SimFlowEnergyTrans_PipeInnerDiameter_ (this),
        SimFlowEnergyTrans_PipeOuterDiameter_ (this),
        SimFlowEnergyTrans_BurialDepth_ (this),
        SimFlowEnergyTrans_SoilThermalCond_ (this),
        SimFlowEnergyTrans_SoilDens_ (this),
        SimFlowEnergyTrans_SoilSpecificHeat_ (this),
        SimFlowEnergyTrans_PipeDensity_ (this),
        SimFlowEnergyTrans_PipeSpecificHeat_ (this),
        SimFlowEnergyTrans_SoilMoisContentPercent_ (this),
        SimFlowEnergyTrans_SoilMoisContentPercentatSaturation_ (this),
        SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp_ (this),
        SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp_ (this),
        SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp_ (this),
        SimFlowEnergyTrans_EvapotranspirationGroundCoverParam_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatExEarthToWater::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTrans_InNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_InNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_InNodeName_type > r (
              SimFlowEnergyTrans_InNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_InNodeName_)
            {
              this->SimFlowEnergyTrans_InNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_OutNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_OutNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_OutNodeName_type > r (
              SimFlowEnergyTrans_OutNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_OutNodeName_)
            {
              this->SimFlowEnergyTrans_OutNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_DesignFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_DesignFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_DesignFlowRate_)
            {
              this->SimFlowEnergyTrans_DesignFlowRate_.set (SimFlowEnergyTrans_DesignFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_PipeThermalCond
          //
          if (n.name () == "SimFlowEnergyTrans_PipeThermalCond" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_PipeThermalCond_)
            {
              this->SimFlowEnergyTrans_PipeThermalCond_.set (SimFlowEnergyTrans_PipeThermalCond_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec
          //
          if (n.name () == "SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec_)
            {
              this->SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec_.set (SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_NumofTrenches
          //
          if (n.name () == "SimFlowEnergyTrans_NumofTrenches" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NumofTrenches_)
            {
              this->SimFlowEnergyTrans_NumofTrenches_.set (SimFlowEnergyTrans_NumofTrenches_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_HorizontalSpacingBtwnPipes
          //
          if (n.name () == "SimFlowEnergyTrans_HorizontalSpacingBtwnPipes" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_HorizontalSpacingBtwnPipes_)
            {
              this->SimFlowEnergyTrans_HorizontalSpacingBtwnPipes_.set (SimFlowEnergyTrans_HorizontalSpacingBtwnPipes_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_PipeInnerDiameter
          //
          if (n.name () == "SimFlowEnergyTrans_PipeInnerDiameter" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_PipeInnerDiameter_)
            {
              this->SimFlowEnergyTrans_PipeInnerDiameter_.set (SimFlowEnergyTrans_PipeInnerDiameter_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_PipeOuterDiameter
          //
          if (n.name () == "SimFlowEnergyTrans_PipeOuterDiameter" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_PipeOuterDiameter_)
            {
              this->SimFlowEnergyTrans_PipeOuterDiameter_.set (SimFlowEnergyTrans_PipeOuterDiameter_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_BurialDepth
          //
          if (n.name () == "SimFlowEnergyTrans_BurialDepth" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_BurialDepth_)
            {
              this->SimFlowEnergyTrans_BurialDepth_.set (SimFlowEnergyTrans_BurialDepth_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_SoilThermalCond
          //
          if (n.name () == "SimFlowEnergyTrans_SoilThermalCond" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_SoilThermalCond_)
            {
              this->SimFlowEnergyTrans_SoilThermalCond_.set (SimFlowEnergyTrans_SoilThermalCond_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_SoilDens
          //
          if (n.name () == "SimFlowEnergyTrans_SoilDens" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_SoilDens_)
            {
              this->SimFlowEnergyTrans_SoilDens_.set (SimFlowEnergyTrans_SoilDens_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_SoilSpecificHeat
          //
          if (n.name () == "SimFlowEnergyTrans_SoilSpecificHeat" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_SoilSpecificHeat_)
            {
              this->SimFlowEnergyTrans_SoilSpecificHeat_.set (SimFlowEnergyTrans_SoilSpecificHeat_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_PipeDensity
          //
          if (n.name () == "SimFlowEnergyTrans_PipeDensity" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_PipeDensity_)
            {
              this->SimFlowEnergyTrans_PipeDensity_.set (SimFlowEnergyTrans_PipeDensity_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_PipeSpecificHeat
          //
          if (n.name () == "SimFlowEnergyTrans_PipeSpecificHeat" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_PipeSpecificHeat_)
            {
              this->SimFlowEnergyTrans_PipeSpecificHeat_.set (SimFlowEnergyTrans_PipeSpecificHeat_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_SoilMoisContentPercent
          //
          if (n.name () == "SimFlowEnergyTrans_SoilMoisContentPercent" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_SoilMoisContentPercent_)
            {
              this->SimFlowEnergyTrans_SoilMoisContentPercent_.set (SimFlowEnergyTrans_SoilMoisContentPercent_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_SoilMoisContentPercentatSaturation
          //
          if (n.name () == "SimFlowEnergyTrans_SoilMoisContentPercentatSaturation" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_SoilMoisContentPercentatSaturation_)
            {
              this->SimFlowEnergyTrans_SoilMoisContentPercentatSaturation_.set (SimFlowEnergyTrans_SoilMoisContentPercentatSaturation_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp
          //
          if (n.name () == "SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp_)
            {
              this->SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp_.set (SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp
          //
          if (n.name () == "SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp_)
            {
              this->SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp_.set (SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp
          //
          if (n.name () == "SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp_)
            {
              this->SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp_.set (SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_EvapotranspirationGroundCoverParam
          //
          if (n.name () == "SimFlowEnergyTrans_EvapotranspirationGroundCoverParam" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_EvapotranspirationGroundCoverParam_)
            {
              this->SimFlowEnergyTrans_EvapotranspirationGroundCoverParam_.set (SimFlowEnergyTrans_EvapotranspirationGroundCoverParam_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench* SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench (*this, f, c);
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench& SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      operator= (const SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatExEarthToWater& > (*this) = x;
          this->SimFlowEnergyTrans_InNodeName_ = x.SimFlowEnergyTrans_InNodeName_;
          this->SimFlowEnergyTrans_OutNodeName_ = x.SimFlowEnergyTrans_OutNodeName_;
          this->SimFlowEnergyTrans_DesignFlowRate_ = x.SimFlowEnergyTrans_DesignFlowRate_;
          this->SimFlowEnergyTrans_PipeThermalCond_ = x.SimFlowEnergyTrans_PipeThermalCond_;
          this->SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec_ = x.SimFlowEnergyTrans_TrenchLengthnPipeAxialDirec_;
          this->SimFlowEnergyTrans_NumofTrenches_ = x.SimFlowEnergyTrans_NumofTrenches_;
          this->SimFlowEnergyTrans_HorizontalSpacingBtwnPipes_ = x.SimFlowEnergyTrans_HorizontalSpacingBtwnPipes_;
          this->SimFlowEnergyTrans_PipeInnerDiameter_ = x.SimFlowEnergyTrans_PipeInnerDiameter_;
          this->SimFlowEnergyTrans_PipeOuterDiameter_ = x.SimFlowEnergyTrans_PipeOuterDiameter_;
          this->SimFlowEnergyTrans_BurialDepth_ = x.SimFlowEnergyTrans_BurialDepth_;
          this->SimFlowEnergyTrans_SoilThermalCond_ = x.SimFlowEnergyTrans_SoilThermalCond_;
          this->SimFlowEnergyTrans_SoilDens_ = x.SimFlowEnergyTrans_SoilDens_;
          this->SimFlowEnergyTrans_SoilSpecificHeat_ = x.SimFlowEnergyTrans_SoilSpecificHeat_;
          this->SimFlowEnergyTrans_PipeDensity_ = x.SimFlowEnergyTrans_PipeDensity_;
          this->SimFlowEnergyTrans_PipeSpecificHeat_ = x.SimFlowEnergyTrans_PipeSpecificHeat_;
          this->SimFlowEnergyTrans_SoilMoisContentPercent_ = x.SimFlowEnergyTrans_SoilMoisContentPercent_;
          this->SimFlowEnergyTrans_SoilMoisContentPercentatSaturation_ = x.SimFlowEnergyTrans_SoilMoisContentPercentatSaturation_;
          this->SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp_ = x.SimFlowEnergyTrans_Kusuda_AchenbachAverageSurfaceTemp_;
          this->SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp_ = x.SimFlowEnergyTrans_Kusuda_AchenbachAverageAmplitudeSurfaceTemp_;
          this->SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp_ = x.SimFlowEnergyTrans_Kusuda_AchenbachPhaseShiftMinSurfaceTemp_;
          this->SimFlowEnergyTrans_EvapotranspirationGroundCoverParam_ = x.SimFlowEnergyTrans_EvapotranspirationGroundCoverParam_;
        }

        return *this;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench::
      ~SimFlowEnergyTransfer_HeatExEarthToWater_HorizontalTrench ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

