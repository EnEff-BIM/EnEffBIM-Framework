// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator
      // 

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_Name_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_Name () const
      {
        return this->SimFlowCompEqmt_Name_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_Name_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_Name ()
      {
        return this->SimFlowCompEqmt_Name_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_Name (const SimFlowCompEqmt_Name_type& x)
      {
        this->SimFlowCompEqmt_Name_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_Name (const SimFlowCompEqmt_Name_optional& x)
      {
        this->SimFlowCompEqmt_Name_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_Name (::std::auto_ptr< SimFlowCompEqmt_Name_type > x)
      {
        this->SimFlowCompEqmt_Name_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_AvailSchedName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_AvailSchedName () const
      {
        return this->SimFlowCompEqmt_AvailSchedName_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_AvailSchedName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_AvailSchedName ()
      {
        return this->SimFlowCompEqmt_AvailSchedName_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_AvailSchedName (const SimFlowCompEqmt_AvailSchedName_type& x)
      {
        this->SimFlowCompEqmt_AvailSchedName_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_AvailSchedName (const SimFlowCompEqmt_AvailSchedName_optional& x)
      {
        this->SimFlowCompEqmt_AvailSchedName_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_AvailSchedName (::std::auto_ptr< SimFlowCompEqmt_AvailSchedName_type > x)
      {
        this->SimFlowCompEqmt_AvailSchedName_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_SupplyAirFanName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_SupplyAirFanName () const
      {
        return this->SimFlowCompEqmt_SupplyAirFanName_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_SupplyAirFanName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_SupplyAirFanName ()
      {
        return this->SimFlowCompEqmt_SupplyAirFanName_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_SupplyAirFanName (const SimFlowCompEqmt_SupplyAirFanName_type& x)
      {
        this->SimFlowCompEqmt_SupplyAirFanName_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_SupplyAirFanName (const SimFlowCompEqmt_SupplyAirFanName_optional& x)
      {
        this->SimFlowCompEqmt_SupplyAirFanName_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_SupplyAirFanName (::std::auto_ptr< SimFlowCompEqmt_SupplyAirFanName_type > x)
      {
        this->SimFlowCompEqmt_SupplyAirFanName_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_AvailMngrListName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_AvailMngrListName () const
      {
        return this->SimFlowCompEqmt_AvailMngrListName_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_AvailMngrListName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_AvailMngrListName ()
      {
        return this->SimFlowCompEqmt_AvailMngrListName_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_AvailMngrListName (const SimFlowCompEqmt_AvailMngrListName_type& x)
      {
        this->SimFlowCompEqmt_AvailMngrListName_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_AvailMngrListName (const SimFlowCompEqmt_AvailMngrListName_optional& x)
      {
        this->SimFlowCompEqmt_AvailMngrListName_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_AvailMngrListName (::std::auto_ptr< SimFlowCompEqmt_AvailMngrListName_type > x)
      {
        this->SimFlowCompEqmt_AvailMngrListName_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_HeatExchngName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_HeatExchngName () const
      {
        return this->SimFlowCompEqmt_HeatExchngName_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_HeatExchngName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_HeatExchngName ()
      {
        return this->SimFlowCompEqmt_HeatExchngName_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_HeatExchngName (const SimFlowCompEqmt_HeatExchngName_type& x)
      {
        this->SimFlowCompEqmt_HeatExchngName_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_HeatExchngName (const SimFlowCompEqmt_HeatExchngName_optional& x)
      {
        this->SimFlowCompEqmt_HeatExchngName_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_HeatExchngName (::std::auto_ptr< SimFlowCompEqmt_HeatExchngName_type > x)
      {
        this->SimFlowCompEqmt_HeatExchngName_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_SupplyAirFlowRate_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_SupplyAirFlowRate () const
      {
        return this->SimFlowCompEqmt_SupplyAirFlowRate_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_SupplyAirFlowRate_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_SupplyAirFlowRate ()
      {
        return this->SimFlowCompEqmt_SupplyAirFlowRate_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_SupplyAirFlowRate (const SimFlowCompEqmt_SupplyAirFlowRate_type& x)
      {
        this->SimFlowCompEqmt_SupplyAirFlowRate_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_SupplyAirFlowRate (const SimFlowCompEqmt_SupplyAirFlowRate_optional& x)
      {
        this->SimFlowCompEqmt_SupplyAirFlowRate_ = x;
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_ExhAirFlowRate_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_ExhAirFlowRate () const
      {
        return this->SimFlowCompEqmt_ExhAirFlowRate_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_ExhAirFlowRate_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_ExhAirFlowRate ()
      {
        return this->SimFlowCompEqmt_ExhAirFlowRate_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_ExhAirFlowRate (const SimFlowCompEqmt_ExhAirFlowRate_type& x)
      {
        this->SimFlowCompEqmt_ExhAirFlowRate_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_ExhAirFlowRate (const SimFlowCompEqmt_ExhAirFlowRate_optional& x)
      {
        this->SimFlowCompEqmt_ExhAirFlowRate_ = x;
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_ExhAirFanName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_ExhAirFanName () const
      {
        return this->SimFlowCompEqmt_ExhAirFanName_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_ExhAirFanName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_ExhAirFanName ()
      {
        return this->SimFlowCompEqmt_ExhAirFanName_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_ExhAirFanName (const SimFlowCompEqmt_ExhAirFanName_type& x)
      {
        this->SimFlowCompEqmt_ExhAirFanName_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_ExhAirFanName (const SimFlowCompEqmt_ExhAirFanName_optional& x)
      {
        this->SimFlowCompEqmt_ExhAirFanName_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_ExhAirFanName (::std::auto_ptr< SimFlowCompEqmt_ExhAirFanName_type > x)
      {
        this->SimFlowCompEqmt_ExhAirFanName_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_CntllerName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_CntllerName () const
      {
        return this->SimFlowCompEqmt_CntllerName_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_CntllerName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_CntllerName ()
      {
        return this->SimFlowCompEqmt_CntllerName_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_CntllerName (const SimFlowCompEqmt_CntllerName_type& x)
      {
        this->SimFlowCompEqmt_CntllerName_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_CntllerName (const SimFlowCompEqmt_CntllerName_optional& x)
      {
        this->SimFlowCompEqmt_CntllerName_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_CntllerName (::std::auto_ptr< SimFlowCompEqmt_CntllerName_type > x)
      {
        this->SimFlowCompEqmt_CntllerName_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_VentRatePerUnitFloorArea_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_VentRatePerUnitFloorArea () const
      {
        return this->SimFlowCompEqmt_VentRatePerUnitFloorArea_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_VentRatePerUnitFloorArea_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_VentRatePerUnitFloorArea ()
      {
        return this->SimFlowCompEqmt_VentRatePerUnitFloorArea_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_VentRatePerUnitFloorArea (const SimFlowCompEqmt_VentRatePerUnitFloorArea_type& x)
      {
        this->SimFlowCompEqmt_VentRatePerUnitFloorArea_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_VentRatePerUnitFloorArea (const SimFlowCompEqmt_VentRatePerUnitFloorArea_optional& x)
      {
        this->SimFlowCompEqmt_VentRatePerUnitFloorArea_ = x;
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_VentRatePerOccupant_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_VentRatePerOccupant () const
      {
        return this->SimFlowCompEqmt_VentRatePerOccupant_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::SimFlowCompEqmt_VentRatePerOccupant_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_VentRatePerOccupant ()
      {
        return this->SimFlowCompEqmt_VentRatePerOccupant_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_VentRatePerOccupant (const SimFlowCompEqmt_VentRatePerOccupant_type& x)
      {
        this->SimFlowCompEqmt_VentRatePerOccupant_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompEqmt_VentRatePerOccupant (const SimFlowCompEqmt_VentRatePerOccupant_optional& x)
      {
        this->SimFlowCompEqmt_VentRatePerOccupant_ = x;
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_Name_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_Name () const
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_Name_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_Name_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_Name ()
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_Name_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_Name (const ZoneHVAC_EnergyRecoveryVentControl_Name_type& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_Name_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_Name (const ZoneHVAC_EnergyRecoveryVentControl_Name_optional& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_Name_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_Name (::std::auto_ptr< ZoneHVAC_EnergyRecoveryVentControl_Name_type > x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_Name_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit () const
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit ()
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit (const ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit_type& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit (const ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit_optional& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit_ = x;
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit () const
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit ()
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit (const ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit_type& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit (const ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit_optional& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit_ = x;
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit () const
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit ()
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit (const ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit_type& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit (const ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit_optional& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit_ = x;
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit () const
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit ()
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit (const ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit_type& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit (const ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit_optional& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit_ = x;
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName () const
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName ()
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName (const ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName_type& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName (const ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName_optional& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName (::std::auto_ptr< ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName_type > x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit () const
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit ()
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit (const ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit_type& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit (const ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit_optional& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit (::std::auto_ptr< ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit_type > x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit () const
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit ()
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit (const ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit_type& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit (const ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit_optional& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit (::std::auto_ptr< ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit_type > x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName () const
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName ()
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName (const ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName_type& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName (const ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName_optional& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName (::std::auto_ptr< ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName_type > x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag () const
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag ()
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag (const ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag_type& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag (const ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag_optional& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag (::std::auto_ptr< ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag_type > x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName () const
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName ()
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName (const ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName_type& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName (const ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName_optional& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName (::std::auto_ptr< ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName_type > x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName_.set (x);
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio () const
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio ()
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio (const ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio_type& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio (const ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio_optional& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio_ = x;
      }

      const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio () const
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio_;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio_optional& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio ()
      {
        return this->ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio_;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio (const ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio_type& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio_.set (x);
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio (const ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio_optional& x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio_ = x;
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio (::std::auto_ptr< ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio_type > x)
      {
        this->ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator
      //

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator ()
      : ::schema::simxml::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt (),
        SimFlowCompEqmt_Name_ (this),
        SimFlowCompEqmt_AvailSchedName_ (this),
        SimFlowCompEqmt_SupplyAirFanName_ (this),
        SimFlowCompEqmt_AvailMngrListName_ (this),
        SimFlowCompEqmt_HeatExchngName_ (this),
        SimFlowCompEqmt_SupplyAirFlowRate_ (this),
        SimFlowCompEqmt_ExhAirFlowRate_ (this),
        SimFlowCompEqmt_ExhAirFanName_ (this),
        SimFlowCompEqmt_CntllerName_ (this),
        SimFlowCompEqmt_VentRatePerUnitFloorArea_ (this),
        SimFlowCompEqmt_VentRatePerOccupant_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_Name_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio_ (this)
      {
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt (RefId),
        SimFlowCompEqmt_Name_ (this),
        SimFlowCompEqmt_AvailSchedName_ (this),
        SimFlowCompEqmt_SupplyAirFanName_ (this),
        SimFlowCompEqmt_AvailMngrListName_ (this),
        SimFlowCompEqmt_HeatExchngName_ (this),
        SimFlowCompEqmt_SupplyAirFlowRate_ (this),
        SimFlowCompEqmt_ExhAirFlowRate_ (this),
        SimFlowCompEqmt_ExhAirFanName_ (this),
        SimFlowCompEqmt_CntllerName_ (this),
        SimFlowCompEqmt_VentRatePerUnitFloorArea_ (this),
        SimFlowCompEqmt_VentRatePerOccupant_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_Name_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio_ (this)
      {
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator (const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator& x,
                                                                    ::xml_schema::flags f,
                                                                    ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt (x, f, c),
        SimFlowCompEqmt_Name_ (x.SimFlowCompEqmt_Name_, f, this),
        SimFlowCompEqmt_AvailSchedName_ (x.SimFlowCompEqmt_AvailSchedName_, f, this),
        SimFlowCompEqmt_SupplyAirFanName_ (x.SimFlowCompEqmt_SupplyAirFanName_, f, this),
        SimFlowCompEqmt_AvailMngrListName_ (x.SimFlowCompEqmt_AvailMngrListName_, f, this),
        SimFlowCompEqmt_HeatExchngName_ (x.SimFlowCompEqmt_HeatExchngName_, f, this),
        SimFlowCompEqmt_SupplyAirFlowRate_ (x.SimFlowCompEqmt_SupplyAirFlowRate_, f, this),
        SimFlowCompEqmt_ExhAirFlowRate_ (x.SimFlowCompEqmt_ExhAirFlowRate_, f, this),
        SimFlowCompEqmt_ExhAirFanName_ (x.SimFlowCompEqmt_ExhAirFanName_, f, this),
        SimFlowCompEqmt_CntllerName_ (x.SimFlowCompEqmt_CntllerName_, f, this),
        SimFlowCompEqmt_VentRatePerUnitFloorArea_ (x.SimFlowCompEqmt_VentRatePerUnitFloorArea_, f, this),
        SimFlowCompEqmt_VentRatePerOccupant_ (x.SimFlowCompEqmt_VentRatePerOccupant_, f, this),
        ZoneHVAC_EnergyRecoveryVentControl_Name_ (x.ZoneHVAC_EnergyRecoveryVentControl_Name_, f, this),
        ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit_ (x.ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit_, f, this),
        ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit_ (x.ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit_, f, this),
        ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit_ (x.ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit_, f, this),
        ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit_ (x.ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit_, f, this),
        ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName_ (x.ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName_, f, this),
        ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit_ (x.ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit_, f, this),
        ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit_ (x.ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit_, f, this),
        ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName_ (x.ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName_, f, this),
        ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag_ (x.ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag_, f, this),
        ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName_ (x.ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName_, f, this),
        ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio_ (x.ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio_, f, this),
        ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio_ (x.ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio_, f, this)
      {
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator (const ::xercesc::DOMElement& e,
                                                                    ::xml_schema::flags f,
                                                                    ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt (e, f | ::xml_schema::flags::base, c),
        SimFlowCompEqmt_Name_ (this),
        SimFlowCompEqmt_AvailSchedName_ (this),
        SimFlowCompEqmt_SupplyAirFanName_ (this),
        SimFlowCompEqmt_AvailMngrListName_ (this),
        SimFlowCompEqmt_HeatExchngName_ (this),
        SimFlowCompEqmt_SupplyAirFlowRate_ (this),
        SimFlowCompEqmt_ExhAirFlowRate_ (this),
        SimFlowCompEqmt_ExhAirFanName_ (this),
        SimFlowCompEqmt_CntllerName_ (this),
        SimFlowCompEqmt_VentRatePerUnitFloorArea_ (this),
        SimFlowCompEqmt_VentRatePerOccupant_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_Name_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio_ (this),
        ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowCompEqmt_Name
          //
          if (n.name () == "SimFlowCompEqmt_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_Name_type > r (
              SimFlowCompEqmt_Name_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_Name_)
            {
              this->SimFlowCompEqmt_Name_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_AvailSchedName
          //
          if (n.name () == "SimFlowCompEqmt_AvailSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_AvailSchedName_type > r (
              SimFlowCompEqmt_AvailSchedName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_AvailSchedName_)
            {
              this->SimFlowCompEqmt_AvailSchedName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_SupplyAirFanName
          //
          if (n.name () == "SimFlowCompEqmt_SupplyAirFanName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_SupplyAirFanName_type > r (
              SimFlowCompEqmt_SupplyAirFanName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_SupplyAirFanName_)
            {
              this->SimFlowCompEqmt_SupplyAirFanName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_AvailMngrListName
          //
          if (n.name () == "SimFlowCompEqmt_AvailMngrListName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_AvailMngrListName_type > r (
              SimFlowCompEqmt_AvailMngrListName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_AvailMngrListName_)
            {
              this->SimFlowCompEqmt_AvailMngrListName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_HeatExchngName
          //
          if (n.name () == "SimFlowCompEqmt_HeatExchngName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_HeatExchngName_type > r (
              SimFlowCompEqmt_HeatExchngName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_HeatExchngName_)
            {
              this->SimFlowCompEqmt_HeatExchngName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_SupplyAirFlowRate
          //
          if (n.name () == "SimFlowCompEqmt_SupplyAirFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowCompEqmt_SupplyAirFlowRate_)
            {
              this->SimFlowCompEqmt_SupplyAirFlowRate_.set (SimFlowCompEqmt_SupplyAirFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowCompEqmt_ExhAirFlowRate
          //
          if (n.name () == "SimFlowCompEqmt_ExhAirFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowCompEqmt_ExhAirFlowRate_)
            {
              this->SimFlowCompEqmt_ExhAirFlowRate_.set (SimFlowCompEqmt_ExhAirFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowCompEqmt_ExhAirFanName
          //
          if (n.name () == "SimFlowCompEqmt_ExhAirFanName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_ExhAirFanName_type > r (
              SimFlowCompEqmt_ExhAirFanName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_ExhAirFanName_)
            {
              this->SimFlowCompEqmt_ExhAirFanName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_CntllerName
          //
          if (n.name () == "SimFlowCompEqmt_CntllerName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowCompEqmt_CntllerName_type > r (
              SimFlowCompEqmt_CntllerName_traits::create (i, f, this));

            if (!this->SimFlowCompEqmt_CntllerName_)
            {
              this->SimFlowCompEqmt_CntllerName_.set (r);
              continue;
            }
          }

          // SimFlowCompEqmt_VentRatePerUnitFloorArea
          //
          if (n.name () == "SimFlowCompEqmt_VentRatePerUnitFloorArea" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowCompEqmt_VentRatePerUnitFloorArea_)
            {
              this->SimFlowCompEqmt_VentRatePerUnitFloorArea_.set (SimFlowCompEqmt_VentRatePerUnitFloorArea_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowCompEqmt_VentRatePerOccupant
          //
          if (n.name () == "SimFlowCompEqmt_VentRatePerOccupant" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowCompEqmt_VentRatePerOccupant_)
            {
              this->SimFlowCompEqmt_VentRatePerOccupant_.set (SimFlowCompEqmt_VentRatePerOccupant_traits::create (i, f, this));
              continue;
            }
          }

          // ZoneHVAC_EnergyRecoveryVentControl_Name
          //
          if (n.name () == "ZoneHVAC_EnergyRecoveryVentControl_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< ZoneHVAC_EnergyRecoveryVentControl_Name_type > r (
              ZoneHVAC_EnergyRecoveryVentControl_Name_traits::create (i, f, this));

            if (!this->ZoneHVAC_EnergyRecoveryVentControl_Name_)
            {
              this->ZoneHVAC_EnergyRecoveryVentControl_Name_.set (r);
              continue;
            }
          }

          // ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit
          //
          if (n.name () == "ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit_)
            {
              this->ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit_.set (ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit_traits::create (i, f, this));
              continue;
            }
          }

          // ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit
          //
          if (n.name () == "ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit_)
            {
              this->ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit_.set (ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit_traits::create (i, f, this));
              continue;
            }
          }

          // ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit
          //
          if (n.name () == "ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit_)
            {
              this->ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit_.set (ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit_traits::create (i, f, this));
              continue;
            }
          }

          // ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit
          //
          if (n.name () == "ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit_)
            {
              this->ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit_.set (ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit_traits::create (i, f, this));
              continue;
            }
          }

          // ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName
          //
          if (n.name () == "ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName_type > r (
              ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName_traits::create (i, f, this));

            if (!this->ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName_)
            {
              this->ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName_.set (r);
              continue;
            }
          }

          // ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit
          //
          if (n.name () == "ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit_type > r (
              ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit_traits::create (i, f, this));

            if (!this->ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit_)
            {
              this->ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit_.set (r);
              continue;
            }
          }

          // ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit
          //
          if (n.name () == "ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit_type > r (
              ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit_traits::create (i, f, this));

            if (!this->ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit_)
            {
              this->ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit_.set (r);
              continue;
            }
          }

          // ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName
          //
          if (n.name () == "ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName_type > r (
              ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName_traits::create (i, f, this));

            if (!this->ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName_)
            {
              this->ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName_.set (r);
              continue;
            }
          }

          // ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag
          //
          if (n.name () == "ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag_type > r (
              ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag_traits::create (i, f, this));

            if (!this->ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag_)
            {
              this->ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag_.set (r);
              continue;
            }
          }

          // ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName
          //
          if (n.name () == "ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName_type > r (
              ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName_traits::create (i, f, this));

            if (!this->ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName_)
            {
              this->ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName_.set (r);
              continue;
            }
          }

          // ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio
          //
          if (n.name () == "ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio_)
            {
              this->ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio_.set (ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio_traits::create (i, f, this));
              continue;
            }
          }

          // ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio
          //
          if (n.name () == "ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio_type > r (
              ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio_traits::create (i, f, this));

            if (!this->ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio_)
            {
              this->ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator* SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator (*this, f, c);
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator& SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      operator= (const SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimFlowCompoundEqmt_UnitaryZoneEqmt& > (*this) = x;
          this->SimFlowCompEqmt_Name_ = x.SimFlowCompEqmt_Name_;
          this->SimFlowCompEqmt_AvailSchedName_ = x.SimFlowCompEqmt_AvailSchedName_;
          this->SimFlowCompEqmt_SupplyAirFanName_ = x.SimFlowCompEqmt_SupplyAirFanName_;
          this->SimFlowCompEqmt_AvailMngrListName_ = x.SimFlowCompEqmt_AvailMngrListName_;
          this->SimFlowCompEqmt_HeatExchngName_ = x.SimFlowCompEqmt_HeatExchngName_;
          this->SimFlowCompEqmt_SupplyAirFlowRate_ = x.SimFlowCompEqmt_SupplyAirFlowRate_;
          this->SimFlowCompEqmt_ExhAirFlowRate_ = x.SimFlowCompEqmt_ExhAirFlowRate_;
          this->SimFlowCompEqmt_ExhAirFanName_ = x.SimFlowCompEqmt_ExhAirFanName_;
          this->SimFlowCompEqmt_CntllerName_ = x.SimFlowCompEqmt_CntllerName_;
          this->SimFlowCompEqmt_VentRatePerUnitFloorArea_ = x.SimFlowCompEqmt_VentRatePerUnitFloorArea_;
          this->SimFlowCompEqmt_VentRatePerOccupant_ = x.SimFlowCompEqmt_VentRatePerOccupant_;
          this->ZoneHVAC_EnergyRecoveryVentControl_Name_ = x.ZoneHVAC_EnergyRecoveryVentControl_Name_;
          this->ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit_ = x.ZoneHVAC_EnergyRecoveryVentControl_TempHighLimit_;
          this->ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit_ = x.ZoneHVAC_EnergyRecoveryVentControl_TempLowLimit_;
          this->ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit_ = x.ZoneHVAC_EnergyRecoveryVentControl_EnthalpyHighLimit_;
          this->ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit_ = x.ZoneHVAC_EnergyRecoveryVentControl_DewpointTempLimit_;
          this->ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName_ = x.ZoneHVAC_EnergyRecoveryVentControl_ElecEnthalpyLimitCurveName_;
          this->ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit_ = x.ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirTempLimit_;
          this->ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit_ = x.ZoneHVAC_EnergyRecoveryVentControl_ExhaustAirEnthalpyLimit_;
          this->ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName_ = x.ZoneHVAC_EnergyRecoveryVentControl_TimeOfDayEconFlowCntlSchedName_;
          this->ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag_ = x.ZoneHVAC_EnergyRecoveryVentControl_HighHumidCntlFlag_;
          this->ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName_ = x.ZoneHVAC_EnergyRecoveryVentControl_HumidistatCntlZoneName_;
          this->ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio_ = x.ZoneHVAC_EnergyRecoveryVentControl_HighHumidOutdrAirFlowRatio_;
          this->ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio_ = x.ZoneHVAC_EnergyRecoveryVentControl_CntlHighIndrHumidBasedOnOutdrHumidRatio_;
        }

        return *this;
      }

      SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator::
      ~SimFlowCompoundEqmt_UnitaryZoneEqmt_EnergyRecoveryVentilator ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

