// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimSolarShade_ZoneDetailed.hxx"

#include "doublelist.hxx"

namespace schema
{
  namespace simxml
  {
    namespace BuildingModel
    {
      // SimSolarShade_ZoneDetailed
      // 

      const SimSolarShade_ZoneDetailed::SimSolarShade_Name_optional& SimSolarShade_ZoneDetailed::
      SimSolarShade_Name () const
      {
        return this->SimSolarShade_Name_;
      }

      SimSolarShade_ZoneDetailed::SimSolarShade_Name_optional& SimSolarShade_ZoneDetailed::
      SimSolarShade_Name ()
      {
        return this->SimSolarShade_Name_;
      }

      void SimSolarShade_ZoneDetailed::
      SimSolarShade_Name (const SimSolarShade_Name_type& x)
      {
        this->SimSolarShade_Name_.set (x);
      }

      void SimSolarShade_ZoneDetailed::
      SimSolarShade_Name (const SimSolarShade_Name_optional& x)
      {
        this->SimSolarShade_Name_ = x;
      }

      void SimSolarShade_ZoneDetailed::
      SimSolarShade_Name (::std::auto_ptr< SimSolarShade_Name_type > x)
      {
        this->SimSolarShade_Name_.set (x);
      }

      const SimSolarShade_ZoneDetailed::SimSolarShade_TransSchedName_optional& SimSolarShade_ZoneDetailed::
      SimSolarShade_TransSchedName () const
      {
        return this->SimSolarShade_TransSchedName_;
      }

      SimSolarShade_ZoneDetailed::SimSolarShade_TransSchedName_optional& SimSolarShade_ZoneDetailed::
      SimSolarShade_TransSchedName ()
      {
        return this->SimSolarShade_TransSchedName_;
      }

      void SimSolarShade_ZoneDetailed::
      SimSolarShade_TransSchedName (const SimSolarShade_TransSchedName_type& x)
      {
        this->SimSolarShade_TransSchedName_.set (x);
      }

      void SimSolarShade_ZoneDetailed::
      SimSolarShade_TransSchedName (const SimSolarShade_TransSchedName_optional& x)
      {
        this->SimSolarShade_TransSchedName_ = x;
      }

      void SimSolarShade_ZoneDetailed::
      SimSolarShade_TransSchedName (::std::auto_ptr< SimSolarShade_TransSchedName_type > x)
      {
        this->SimSolarShade_TransSchedName_.set (x);
      }

      const SimSolarShade_ZoneDetailed::SimSolarShade_NumbVerts_optional& SimSolarShade_ZoneDetailed::
      SimSolarShade_NumbVerts () const
      {
        return this->SimSolarShade_NumbVerts_;
      }

      SimSolarShade_ZoneDetailed::SimSolarShade_NumbVerts_optional& SimSolarShade_ZoneDetailed::
      SimSolarShade_NumbVerts ()
      {
        return this->SimSolarShade_NumbVerts_;
      }

      void SimSolarShade_ZoneDetailed::
      SimSolarShade_NumbVerts (const SimSolarShade_NumbVerts_type& x)
      {
        this->SimSolarShade_NumbVerts_.set (x);
      }

      void SimSolarShade_ZoneDetailed::
      SimSolarShade_NumbVerts (const SimSolarShade_NumbVerts_optional& x)
      {
        this->SimSolarShade_NumbVerts_ = x;
      }

      const SimSolarShade_ZoneDetailed::SimSolarShade_BaseSurfName_optional& SimSolarShade_ZoneDetailed::
      SimSolarShade_BaseSurfName () const
      {
        return this->SimSolarShade_BaseSurfName_;
      }

      SimSolarShade_ZoneDetailed::SimSolarShade_BaseSurfName_optional& SimSolarShade_ZoneDetailed::
      SimSolarShade_BaseSurfName ()
      {
        return this->SimSolarShade_BaseSurfName_;
      }

      void SimSolarShade_ZoneDetailed::
      SimSolarShade_BaseSurfName (const SimSolarShade_BaseSurfName_type& x)
      {
        this->SimSolarShade_BaseSurfName_.set (x);
      }

      void SimSolarShade_ZoneDetailed::
      SimSolarShade_BaseSurfName (const SimSolarShade_BaseSurfName_optional& x)
      {
        this->SimSolarShade_BaseSurfName_ = x;
      }

      void SimSolarShade_ZoneDetailed::
      SimSolarShade_BaseSurfName (::std::auto_ptr< SimSolarShade_BaseSurfName_type > x)
      {
        this->SimSolarShade_BaseSurfName_.set (x);
      }

      const SimSolarShade_ZoneDetailed::SimSolarShade_Vertex_1_120_X_Coord_optional& SimSolarShade_ZoneDetailed::
      SimSolarShade_Vertex_1_120_X_Coord () const
      {
        return this->SimSolarShade_Vertex_1_120_X_Coord_;
      }

      SimSolarShade_ZoneDetailed::SimSolarShade_Vertex_1_120_X_Coord_optional& SimSolarShade_ZoneDetailed::
      SimSolarShade_Vertex_1_120_X_Coord ()
      {
        return this->SimSolarShade_Vertex_1_120_X_Coord_;
      }

      void SimSolarShade_ZoneDetailed::
      SimSolarShade_Vertex_1_120_X_Coord (const SimSolarShade_Vertex_1_120_X_Coord_type& x)
      {
        this->SimSolarShade_Vertex_1_120_X_Coord_.set (x);
      }

      void SimSolarShade_ZoneDetailed::
      SimSolarShade_Vertex_1_120_X_Coord (const SimSolarShade_Vertex_1_120_X_Coord_optional& x)
      {
        this->SimSolarShade_Vertex_1_120_X_Coord_ = x;
      }

      void SimSolarShade_ZoneDetailed::
      SimSolarShade_Vertex_1_120_X_Coord (::std::auto_ptr< SimSolarShade_Vertex_1_120_X_Coord_type > x)
      {
        this->SimSolarShade_Vertex_1_120_X_Coord_.set (x);
      }

      const SimSolarShade_ZoneDetailed::SimSolarShade_Vertex_1_120_Y_Coord_optional& SimSolarShade_ZoneDetailed::
      SimSolarShade_Vertex_1_120_Y_Coord () const
      {
        return this->SimSolarShade_Vertex_1_120_Y_Coord_;
      }

      SimSolarShade_ZoneDetailed::SimSolarShade_Vertex_1_120_Y_Coord_optional& SimSolarShade_ZoneDetailed::
      SimSolarShade_Vertex_1_120_Y_Coord ()
      {
        return this->SimSolarShade_Vertex_1_120_Y_Coord_;
      }

      void SimSolarShade_ZoneDetailed::
      SimSolarShade_Vertex_1_120_Y_Coord (const SimSolarShade_Vertex_1_120_Y_Coord_type& x)
      {
        this->SimSolarShade_Vertex_1_120_Y_Coord_.set (x);
      }

      void SimSolarShade_ZoneDetailed::
      SimSolarShade_Vertex_1_120_Y_Coord (const SimSolarShade_Vertex_1_120_Y_Coord_optional& x)
      {
        this->SimSolarShade_Vertex_1_120_Y_Coord_ = x;
      }

      void SimSolarShade_ZoneDetailed::
      SimSolarShade_Vertex_1_120_Y_Coord (::std::auto_ptr< SimSolarShade_Vertex_1_120_Y_Coord_type > x)
      {
        this->SimSolarShade_Vertex_1_120_Y_Coord_.set (x);
      }

      const SimSolarShade_ZoneDetailed::SimSolarShade_Vertex_1_120_Z_Coord_optional& SimSolarShade_ZoneDetailed::
      SimSolarShade_Vertex_1_120_Z_Coord () const
      {
        return this->SimSolarShade_Vertex_1_120_Z_Coord_;
      }

      SimSolarShade_ZoneDetailed::SimSolarShade_Vertex_1_120_Z_Coord_optional& SimSolarShade_ZoneDetailed::
      SimSolarShade_Vertex_1_120_Z_Coord ()
      {
        return this->SimSolarShade_Vertex_1_120_Z_Coord_;
      }

      void SimSolarShade_ZoneDetailed::
      SimSolarShade_Vertex_1_120_Z_Coord (const SimSolarShade_Vertex_1_120_Z_Coord_type& x)
      {
        this->SimSolarShade_Vertex_1_120_Z_Coord_.set (x);
      }

      void SimSolarShade_ZoneDetailed::
      SimSolarShade_Vertex_1_120_Z_Coord (const SimSolarShade_Vertex_1_120_Z_Coord_optional& x)
      {
        this->SimSolarShade_Vertex_1_120_Z_Coord_ = x;
      }

      void SimSolarShade_ZoneDetailed::
      SimSolarShade_Vertex_1_120_Z_Coord (::std::auto_ptr< SimSolarShade_Vertex_1_120_Z_Coord_type > x)
      {
        this->SimSolarShade_Vertex_1_120_Z_Coord_.set (x);
      }

      const SimSolarShade_ZoneDetailed::ShadingProp_Reflectance_ShadingSurfName_optional& SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_ShadingSurfName () const
      {
        return this->ShadingProp_Reflectance_ShadingSurfName_;
      }

      SimSolarShade_ZoneDetailed::ShadingProp_Reflectance_ShadingSurfName_optional& SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_ShadingSurfName ()
      {
        return this->ShadingProp_Reflectance_ShadingSurfName_;
      }

      void SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_ShadingSurfName (const ShadingProp_Reflectance_ShadingSurfName_type& x)
      {
        this->ShadingProp_Reflectance_ShadingSurfName_.set (x);
      }

      void SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_ShadingSurfName (const ShadingProp_Reflectance_ShadingSurfName_optional& x)
      {
        this->ShadingProp_Reflectance_ShadingSurfName_ = x;
      }

      void SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_ShadingSurfName (::std::auto_ptr< ShadingProp_Reflectance_ShadingSurfName_type > x)
      {
        this->ShadingProp_Reflectance_ShadingSurfName_.set (x);
      }

      const SimSolarShade_ZoneDetailed::ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf_optional& SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf () const
      {
        return this->ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf_;
      }

      SimSolarShade_ZoneDetailed::ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf_optional& SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf ()
      {
        return this->ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf_;
      }

      void SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf (const ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf_type& x)
      {
        this->ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf_.set (x);
      }

      void SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf (const ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf_optional& x)
      {
        this->ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf_ = x;
      }

      const SimSolarShade_ZoneDetailed::ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf_optional& SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf () const
      {
        return this->ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf_;
      }

      SimSolarShade_ZoneDetailed::ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf_optional& SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf ()
      {
        return this->ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf_;
      }

      void SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf (const ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf_type& x)
      {
        this->ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf_.set (x);
      }

      void SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf (const ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf_optional& x)
      {
        this->ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf_ = x;
      }

      const SimSolarShade_ZoneDetailed::ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed_optional& SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed () const
      {
        return this->ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed_;
      }

      SimSolarShade_ZoneDetailed::ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed_optional& SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed ()
      {
        return this->ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed_;
      }

      void SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed (const ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed_type& x)
      {
        this->ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed_.set (x);
      }

      void SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed (const ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed_optional& x)
      {
        this->ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed_ = x;
      }

      const SimSolarShade_ZoneDetailed::ShadingProp_Reflectance_GlazingConstructionName_optional& SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_GlazingConstructionName () const
      {
        return this->ShadingProp_Reflectance_GlazingConstructionName_;
      }

      SimSolarShade_ZoneDetailed::ShadingProp_Reflectance_GlazingConstructionName_optional& SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_GlazingConstructionName ()
      {
        return this->ShadingProp_Reflectance_GlazingConstructionName_;
      }

      void SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_GlazingConstructionName (const ShadingProp_Reflectance_GlazingConstructionName_type& x)
      {
        this->ShadingProp_Reflectance_GlazingConstructionName_.set (x);
      }

      void SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_GlazingConstructionName (const ShadingProp_Reflectance_GlazingConstructionName_optional& x)
      {
        this->ShadingProp_Reflectance_GlazingConstructionName_ = x;
      }

      void SimSolarShade_ZoneDetailed::
      ShadingProp_Reflectance_GlazingConstructionName (::std::auto_ptr< ShadingProp_Reflectance_GlazingConstructionName_type > x)
      {
        this->ShadingProp_Reflectance_GlazingConstructionName_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace BuildingModel
    {
      // SimSolarShade_ZoneDetailed
      //

      SimSolarShade_ZoneDetailed::
      SimSolarShade_ZoneDetailed ()
      : ::schema::simxml::BuildingModel::SimSolarShade (),
        SimSolarShade_Name_ (this),
        SimSolarShade_TransSchedName_ (this),
        SimSolarShade_NumbVerts_ (this),
        SimSolarShade_BaseSurfName_ (this),
        SimSolarShade_Vertex_1_120_X_Coord_ (this),
        SimSolarShade_Vertex_1_120_Y_Coord_ (this),
        SimSolarShade_Vertex_1_120_Z_Coord_ (this),
        ShadingProp_Reflectance_ShadingSurfName_ (this),
        ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf_ (this),
        ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf_ (this),
        ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed_ (this),
        ShadingProp_Reflectance_GlazingConstructionName_ (this)
      {
      }

      SimSolarShade_ZoneDetailed::
      SimSolarShade_ZoneDetailed (const RefId_type& RefId)
      : ::schema::simxml::BuildingModel::SimSolarShade (RefId),
        SimSolarShade_Name_ (this),
        SimSolarShade_TransSchedName_ (this),
        SimSolarShade_NumbVerts_ (this),
        SimSolarShade_BaseSurfName_ (this),
        SimSolarShade_Vertex_1_120_X_Coord_ (this),
        SimSolarShade_Vertex_1_120_Y_Coord_ (this),
        SimSolarShade_Vertex_1_120_Z_Coord_ (this),
        ShadingProp_Reflectance_ShadingSurfName_ (this),
        ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf_ (this),
        ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf_ (this),
        ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed_ (this),
        ShadingProp_Reflectance_GlazingConstructionName_ (this)
      {
      }

      SimSolarShade_ZoneDetailed::
      SimSolarShade_ZoneDetailed (const SimSolarShade_ZoneDetailed& x,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
      : ::schema::simxml::BuildingModel::SimSolarShade (x, f, c),
        SimSolarShade_Name_ (x.SimSolarShade_Name_, f, this),
        SimSolarShade_TransSchedName_ (x.SimSolarShade_TransSchedName_, f, this),
        SimSolarShade_NumbVerts_ (x.SimSolarShade_NumbVerts_, f, this),
        SimSolarShade_BaseSurfName_ (x.SimSolarShade_BaseSurfName_, f, this),
        SimSolarShade_Vertex_1_120_X_Coord_ (x.SimSolarShade_Vertex_1_120_X_Coord_, f, this),
        SimSolarShade_Vertex_1_120_Y_Coord_ (x.SimSolarShade_Vertex_1_120_Y_Coord_, f, this),
        SimSolarShade_Vertex_1_120_Z_Coord_ (x.SimSolarShade_Vertex_1_120_Z_Coord_, f, this),
        ShadingProp_Reflectance_ShadingSurfName_ (x.ShadingProp_Reflectance_ShadingSurfName_, f, this),
        ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf_ (x.ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf_, f, this),
        ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf_ (x.ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf_, f, this),
        ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed_ (x.ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed_, f, this),
        ShadingProp_Reflectance_GlazingConstructionName_ (x.ShadingProp_Reflectance_GlazingConstructionName_, f, this)
      {
      }

      SimSolarShade_ZoneDetailed::
      SimSolarShade_ZoneDetailed (const ::xercesc::DOMElement& e,
                                  ::xml_schema::flags f,
                                  ::xml_schema::container* c)
      : ::schema::simxml::BuildingModel::SimSolarShade (e, f | ::xml_schema::flags::base, c),
        SimSolarShade_Name_ (this),
        SimSolarShade_TransSchedName_ (this),
        SimSolarShade_NumbVerts_ (this),
        SimSolarShade_BaseSurfName_ (this),
        SimSolarShade_Vertex_1_120_X_Coord_ (this),
        SimSolarShade_Vertex_1_120_Y_Coord_ (this),
        SimSolarShade_Vertex_1_120_Z_Coord_ (this),
        ShadingProp_Reflectance_ShadingSurfName_ (this),
        ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf_ (this),
        ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf_ (this),
        ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed_ (this),
        ShadingProp_Reflectance_GlazingConstructionName_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimSolarShade_ZoneDetailed::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::BuildingModel::SimSolarShade::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimSolarShade_Name
          //
          if (n.name () == "SimSolarShade_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSolarShade_Name_type > r (
              SimSolarShade_Name_traits::create (i, f, this));

            if (!this->SimSolarShade_Name_)
            {
              this->SimSolarShade_Name_.set (r);
              continue;
            }
          }

          // SimSolarShade_TransSchedName
          //
          if (n.name () == "SimSolarShade_TransSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSolarShade_TransSchedName_type > r (
              SimSolarShade_TransSchedName_traits::create (i, f, this));

            if (!this->SimSolarShade_TransSchedName_)
            {
              this->SimSolarShade_TransSchedName_.set (r);
              continue;
            }
          }

          // SimSolarShade_NumbVerts
          //
          if (n.name () == "SimSolarShade_NumbVerts" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->SimSolarShade_NumbVerts_)
            {
              this->SimSolarShade_NumbVerts_.set (SimSolarShade_NumbVerts_traits::create (i, f, this));
              continue;
            }
          }

          // SimSolarShade_BaseSurfName
          //
          if (n.name () == "SimSolarShade_BaseSurfName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSolarShade_BaseSurfName_type > r (
              SimSolarShade_BaseSurfName_traits::create (i, f, this));

            if (!this->SimSolarShade_BaseSurfName_)
            {
              this->SimSolarShade_BaseSurfName_.set (r);
              continue;
            }
          }

          // SimSolarShade_Vertex_1_120_X_Coord
          //
          if (n.name () == "SimSolarShade_Vertex_1_120_X_Coord" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSolarShade_Vertex_1_120_X_Coord_type > r (
              SimSolarShade_Vertex_1_120_X_Coord_traits::create (i, f, this));

            if (!this->SimSolarShade_Vertex_1_120_X_Coord_)
            {
              this->SimSolarShade_Vertex_1_120_X_Coord_.set (r);
              continue;
            }
          }

          // SimSolarShade_Vertex_1_120_Y_Coord
          //
          if (n.name () == "SimSolarShade_Vertex_1_120_Y_Coord" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSolarShade_Vertex_1_120_Y_Coord_type > r (
              SimSolarShade_Vertex_1_120_Y_Coord_traits::create (i, f, this));

            if (!this->SimSolarShade_Vertex_1_120_Y_Coord_)
            {
              this->SimSolarShade_Vertex_1_120_Y_Coord_.set (r);
              continue;
            }
          }

          // SimSolarShade_Vertex_1_120_Z_Coord
          //
          if (n.name () == "SimSolarShade_Vertex_1_120_Z_Coord" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSolarShade_Vertex_1_120_Z_Coord_type > r (
              SimSolarShade_Vertex_1_120_Z_Coord_traits::create (i, f, this));

            if (!this->SimSolarShade_Vertex_1_120_Z_Coord_)
            {
              this->SimSolarShade_Vertex_1_120_Z_Coord_.set (r);
              continue;
            }
          }

          // ShadingProp_Reflectance_ShadingSurfName
          //
          if (n.name () == "ShadingProp_Reflectance_ShadingSurfName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< ShadingProp_Reflectance_ShadingSurfName_type > r (
              ShadingProp_Reflectance_ShadingSurfName_traits::create (i, f, this));

            if (!this->ShadingProp_Reflectance_ShadingSurfName_)
            {
              this->ShadingProp_Reflectance_ShadingSurfName_.set (r);
              continue;
            }
          }

          // ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf
          //
          if (n.name () == "ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf_)
            {
              this->ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf_.set (ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf_traits::create (i, f, this));
              continue;
            }
          }

          // ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf
          //
          if (n.name () == "ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf_)
            {
              this->ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf_.set (ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf_traits::create (i, f, this));
              continue;
            }
          }

          // ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed
          //
          if (n.name () == "ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed_)
            {
              this->ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed_.set (ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed_traits::create (i, f, this));
              continue;
            }
          }

          // ShadingProp_Reflectance_GlazingConstructionName
          //
          if (n.name () == "ShadingProp_Reflectance_GlazingConstructionName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< ShadingProp_Reflectance_GlazingConstructionName_type > r (
              ShadingProp_Reflectance_GlazingConstructionName_traits::create (i, f, this));

            if (!this->ShadingProp_Reflectance_GlazingConstructionName_)
            {
              this->ShadingProp_Reflectance_GlazingConstructionName_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimSolarShade_ZoneDetailed* SimSolarShade_ZoneDetailed::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimSolarShade_ZoneDetailed (*this, f, c);
      }

      SimSolarShade_ZoneDetailed& SimSolarShade_ZoneDetailed::
      operator= (const SimSolarShade_ZoneDetailed& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::BuildingModel::SimSolarShade& > (*this) = x;
          this->SimSolarShade_Name_ = x.SimSolarShade_Name_;
          this->SimSolarShade_TransSchedName_ = x.SimSolarShade_TransSchedName_;
          this->SimSolarShade_NumbVerts_ = x.SimSolarShade_NumbVerts_;
          this->SimSolarShade_BaseSurfName_ = x.SimSolarShade_BaseSurfName_;
          this->SimSolarShade_Vertex_1_120_X_Coord_ = x.SimSolarShade_Vertex_1_120_X_Coord_;
          this->SimSolarShade_Vertex_1_120_Y_Coord_ = x.SimSolarShade_Vertex_1_120_Y_Coord_;
          this->SimSolarShade_Vertex_1_120_Z_Coord_ = x.SimSolarShade_Vertex_1_120_Z_Coord_;
          this->ShadingProp_Reflectance_ShadingSurfName_ = x.ShadingProp_Reflectance_ShadingSurfName_;
          this->ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf_ = x.ShadingProp_Reflectance_DiffuseSolarReflectanceOfUnglazedPartOfShadingSurf_;
          this->ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf_ = x.ShadingProp_Reflectance_DiffuseVisibleReflectanceOfUnglazedPartOfShadingSurf_;
          this->ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed_ = x.ShadingProp_Reflectance_FractionOfShadingSurfThatIsGlazed_;
          this->ShadingProp_Reflectance_GlazingConstructionName_ = x.ShadingProp_Reflectance_GlazingConstructionName_;
        }

        return *this;
      }

      SimSolarShade_ZoneDetailed::
      ~SimSolarShade_ZoneDetailed ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace BuildingModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

