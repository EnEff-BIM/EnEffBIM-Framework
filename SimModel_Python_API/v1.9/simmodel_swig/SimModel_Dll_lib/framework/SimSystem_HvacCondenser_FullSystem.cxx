// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimSystem_HvacCondenser_FullSystem.hxx"

namespace schema
{
  namespace simxml
  {
    namespace BuildingModel
    {
      // SimSystem_HvacCondenser_FullSystem
      // 

      const SimSystem_HvacCondenser_FullSystem::SimSys_DemandSideOutNodeName_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_DemandSideOutNodeName () const
      {
        return this->SimSys_DemandSideOutNodeName_;
      }

      SimSystem_HvacCondenser_FullSystem::SimSys_DemandSideOutNodeName_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_DemandSideOutNodeName ()
      {
        return this->SimSys_DemandSideOutNodeName_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_DemandSideOutNodeName (const SimSys_DemandSideOutNodeName_type& x)
      {
        this->SimSys_DemandSideOutNodeName_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_DemandSideOutNodeName (const SimSys_DemandSideOutNodeName_optional& x)
      {
        this->SimSys_DemandSideOutNodeName_ = x;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_DemandSideOutNodeName (::std::auto_ptr< SimSys_DemandSideOutNodeName_type > x)
      {
        this->SimSys_DemandSideOutNodeName_.set (x);
      }

      const SimSystem_HvacCondenser_FullSystem::SimSys_FluidType_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_FluidType () const
      {
        return this->SimSys_FluidType_;
      }

      SimSystem_HvacCondenser_FullSystem::SimSys_FluidType_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_FluidType ()
      {
        return this->SimSys_FluidType_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_FluidType (const SimSys_FluidType_type& x)
      {
        this->SimSys_FluidType_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_FluidType (const SimSys_FluidType_optional& x)
      {
        this->SimSys_FluidType_ = x;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_FluidType (::std::auto_ptr< SimSys_FluidType_type > x)
      {
        this->SimSys_FluidType_.set (x);
      }

      const SimSystem_HvacCondenser_FullSystem::SimSys_UserDefFluidType_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_UserDefFluidType () const
      {
        return this->SimSys_UserDefFluidType_;
      }

      SimSystem_HvacCondenser_FullSystem::SimSys_UserDefFluidType_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_UserDefFluidType ()
      {
        return this->SimSys_UserDefFluidType_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_UserDefFluidType (const SimSys_UserDefFluidType_type& x)
      {
        this->SimSys_UserDefFluidType_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_UserDefFluidType (const SimSys_UserDefFluidType_optional& x)
      {
        this->SimSys_UserDefFluidType_ = x;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_UserDefFluidType (::std::auto_ptr< SimSys_UserDefFluidType_type > x)
      {
        this->SimSys_UserDefFluidType_.set (x);
      }

      const SimSystem_HvacCondenser_FullSystem::SimSys_MaxLoopTemp_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_MaxLoopTemp () const
      {
        return this->SimSys_MaxLoopTemp_;
      }

      SimSystem_HvacCondenser_FullSystem::SimSys_MaxLoopTemp_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_MaxLoopTemp ()
      {
        return this->SimSys_MaxLoopTemp_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_MaxLoopTemp (const SimSys_MaxLoopTemp_type& x)
      {
        this->SimSys_MaxLoopTemp_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_MaxLoopTemp (const SimSys_MaxLoopTemp_optional& x)
      {
        this->SimSys_MaxLoopTemp_ = x;
      }

      const SimSystem_HvacCondenser_FullSystem::SimSys_MinLoopTemp_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_MinLoopTemp () const
      {
        return this->SimSys_MinLoopTemp_;
      }

      SimSystem_HvacCondenser_FullSystem::SimSys_MinLoopTemp_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_MinLoopTemp ()
      {
        return this->SimSys_MinLoopTemp_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_MinLoopTemp (const SimSys_MinLoopTemp_type& x)
      {
        this->SimSys_MinLoopTemp_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_MinLoopTemp (const SimSys_MinLoopTemp_optional& x)
      {
        this->SimSys_MinLoopTemp_ = x;
      }

      const SimSystem_HvacCondenser_FullSystem::SimSys_MaxLoopFlowRate_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_MaxLoopFlowRate () const
      {
        return this->SimSys_MaxLoopFlowRate_;
      }

      SimSystem_HvacCondenser_FullSystem::SimSys_MaxLoopFlowRate_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_MaxLoopFlowRate ()
      {
        return this->SimSys_MaxLoopFlowRate_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_MaxLoopFlowRate (const SimSys_MaxLoopFlowRate_type& x)
      {
        this->SimSys_MaxLoopFlowRate_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_MaxLoopFlowRate (const SimSys_MaxLoopFlowRate_optional& x)
      {
        this->SimSys_MaxLoopFlowRate_ = x;
      }

      const SimSystem_HvacCondenser_FullSystem::SimSys_MinLoopFlowRate_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_MinLoopFlowRate () const
      {
        return this->SimSys_MinLoopFlowRate_;
      }

      SimSystem_HvacCondenser_FullSystem::SimSys_MinLoopFlowRate_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_MinLoopFlowRate ()
      {
        return this->SimSys_MinLoopFlowRate_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_MinLoopFlowRate (const SimSys_MinLoopFlowRate_type& x)
      {
        this->SimSys_MinLoopFlowRate_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_MinLoopFlowRate (const SimSys_MinLoopFlowRate_optional& x)
      {
        this->SimSys_MinLoopFlowRate_ = x;
      }

      const SimSystem_HvacCondenser_FullSystem::SimSys_DemandSideInNodeName_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_DemandSideInNodeName () const
      {
        return this->SimSys_DemandSideInNodeName_;
      }

      SimSystem_HvacCondenser_FullSystem::SimSys_DemandSideInNodeName_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_DemandSideInNodeName ()
      {
        return this->SimSys_DemandSideInNodeName_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_DemandSideInNodeName (const SimSys_DemandSideInNodeName_type& x)
      {
        this->SimSys_DemandSideInNodeName_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_DemandSideInNodeName (const SimSys_DemandSideInNodeName_optional& x)
      {
        this->SimSys_DemandSideInNodeName_ = x;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_DemandSideInNodeName (::std::auto_ptr< SimSys_DemandSideInNodeName_type > x)
      {
        this->SimSys_DemandSideInNodeName_.set (x);
      }

      const SimSystem_HvacCondenser_FullSystem::SimSys_LoadDistScheme_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_LoadDistScheme () const
      {
        return this->SimSys_LoadDistScheme_;
      }

      SimSystem_HvacCondenser_FullSystem::SimSys_LoadDistScheme_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_LoadDistScheme ()
      {
        return this->SimSys_LoadDistScheme_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_LoadDistScheme (const SimSys_LoadDistScheme_type& x)
      {
        this->SimSys_LoadDistScheme_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_LoadDistScheme (const SimSys_LoadDistScheme_optional& x)
      {
        this->SimSys_LoadDistScheme_ = x;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_LoadDistScheme (::std::auto_ptr< SimSys_LoadDistScheme_type > x)
      {
        this->SimSys_LoadDistScheme_.set (x);
      }

      const SimSystem_HvacCondenser_FullSystem::SimSys_PresSimType_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_PresSimType () const
      {
        return this->SimSys_PresSimType_;
      }

      SimSystem_HvacCondenser_FullSystem::SimSys_PresSimType_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_PresSimType ()
      {
        return this->SimSys_PresSimType_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_PresSimType (const SimSys_PresSimType_type& x)
      {
        this->SimSys_PresSimType_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_PresSimType (const SimSys_PresSimType_optional& x)
      {
        this->SimSys_PresSimType_ = x;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_PresSimType (::std::auto_ptr< SimSys_PresSimType_type > x)
      {
        this->SimSys_PresSimType_.set (x);
      }

      const SimSystem_HvacCondenser_FullSystem::SimSys_CndnsrEqmtOpSchemeName_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrEqmtOpSchemeName () const
      {
        return this->SimSys_CndnsrEqmtOpSchemeName_;
      }

      SimSystem_HvacCondenser_FullSystem::SimSys_CndnsrEqmtOpSchemeName_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrEqmtOpSchemeName ()
      {
        return this->SimSys_CndnsrEqmtOpSchemeName_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrEqmtOpSchemeName (const SimSys_CndnsrEqmtOpSchemeName_type& x)
      {
        this->SimSys_CndnsrEqmtOpSchemeName_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrEqmtOpSchemeName (const SimSys_CndnsrEqmtOpSchemeName_optional& x)
      {
        this->SimSys_CndnsrEqmtOpSchemeName_ = x;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrEqmtOpSchemeName (::std::auto_ptr< SimSys_CndnsrEqmtOpSchemeName_type > x)
      {
        this->SimSys_CndnsrEqmtOpSchemeName_.set (x);
      }

      const SimSystem_HvacCondenser_FullSystem::SimSys_CondLoopTempSetPtNodeName_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_CondLoopTempSetPtNodeName () const
      {
        return this->SimSys_CondLoopTempSetPtNodeName_;
      }

      SimSystem_HvacCondenser_FullSystem::SimSys_CondLoopTempSetPtNodeName_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_CondLoopTempSetPtNodeName ()
      {
        return this->SimSys_CondLoopTempSetPtNodeName_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CondLoopTempSetPtNodeName (const SimSys_CondLoopTempSetPtNodeName_type& x)
      {
        this->SimSys_CondLoopTempSetPtNodeName_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CondLoopTempSetPtNodeName (const SimSys_CondLoopTempSetPtNodeName_optional& x)
      {
        this->SimSys_CondLoopTempSetPtNodeName_ = x;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CondLoopTempSetPtNodeName (::std::auto_ptr< SimSys_CondLoopTempSetPtNodeName_type > x)
      {
        this->SimSys_CondLoopTempSetPtNodeName_.set (x);
      }

      const SimSystem_HvacCondenser_FullSystem::SimSys_CndnsrLoopVol_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrLoopVol () const
      {
        return this->SimSys_CndnsrLoopVol_;
      }

      SimSystem_HvacCondenser_FullSystem::SimSys_CndnsrLoopVol_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrLoopVol ()
      {
        return this->SimSys_CndnsrLoopVol_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrLoopVol (const SimSys_CndnsrLoopVol_type& x)
      {
        this->SimSys_CndnsrLoopVol_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrLoopVol (const SimSys_CndnsrLoopVol_optional& x)
      {
        this->SimSys_CndnsrLoopVol_ = x;
      }

      const SimSystem_HvacCondenser_FullSystem::SimSys_CndnsrSideInNodeName_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrSideInNodeName () const
      {
        return this->SimSys_CndnsrSideInNodeName_;
      }

      SimSystem_HvacCondenser_FullSystem::SimSys_CndnsrSideInNodeName_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrSideInNodeName ()
      {
        return this->SimSys_CndnsrSideInNodeName_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrSideInNodeName (const SimSys_CndnsrSideInNodeName_type& x)
      {
        this->SimSys_CndnsrSideInNodeName_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrSideInNodeName (const SimSys_CndnsrSideInNodeName_optional& x)
      {
        this->SimSys_CndnsrSideInNodeName_ = x;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrSideInNodeName (::std::auto_ptr< SimSys_CndnsrSideInNodeName_type > x)
      {
        this->SimSys_CndnsrSideInNodeName_.set (x);
      }

      const SimSystem_HvacCondenser_FullSystem::SimSys_CndnsrSideOutNodeName_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrSideOutNodeName () const
      {
        return this->SimSys_CndnsrSideOutNodeName_;
      }

      SimSystem_HvacCondenser_FullSystem::SimSys_CndnsrSideOutNodeName_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrSideOutNodeName ()
      {
        return this->SimSys_CndnsrSideOutNodeName_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrSideOutNodeName (const SimSys_CndnsrSideOutNodeName_type& x)
      {
        this->SimSys_CndnsrSideOutNodeName_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrSideOutNodeName (const SimSys_CndnsrSideOutNodeName_optional& x)
      {
        this->SimSys_CndnsrSideOutNodeName_ = x;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrSideOutNodeName (::std::auto_ptr< SimSys_CndnsrSideOutNodeName_type > x)
      {
        this->SimSys_CndnsrSideOutNodeName_.set (x);
      }

      const SimSystem_HvacCondenser_FullSystem::SimSys_CndnsrSideBranchListName_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrSideBranchListName () const
      {
        return this->SimSys_CndnsrSideBranchListName_;
      }

      SimSystem_HvacCondenser_FullSystem::SimSys_CndnsrSideBranchListName_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrSideBranchListName ()
      {
        return this->SimSys_CndnsrSideBranchListName_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrSideBranchListName (const SimSys_CndnsrSideBranchListName_type& x)
      {
        this->SimSys_CndnsrSideBranchListName_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrSideBranchListName (const SimSys_CndnsrSideBranchListName_optional& x)
      {
        this->SimSys_CndnsrSideBranchListName_ = x;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrSideBranchListName (::std::auto_ptr< SimSys_CndnsrSideBranchListName_type > x)
      {
        this->SimSys_CndnsrSideBranchListName_.set (x);
      }

      const SimSystem_HvacCondenser_FullSystem::SimSys_CndnsrSideConnListName_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrSideConnListName () const
      {
        return this->SimSys_CndnsrSideConnListName_;
      }

      SimSystem_HvacCondenser_FullSystem::SimSys_CndnsrSideConnListName_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrSideConnListName ()
      {
        return this->SimSys_CndnsrSideConnListName_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrSideConnListName (const SimSys_CndnsrSideConnListName_type& x)
      {
        this->SimSys_CndnsrSideConnListName_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrSideConnListName (const SimSys_CndnsrSideConnListName_optional& x)
      {
        this->SimSys_CndnsrSideConnListName_ = x;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrSideConnListName (::std::auto_ptr< SimSys_CndnsrSideConnListName_type > x)
      {
        this->SimSys_CndnsrSideConnListName_.set (x);
      }

      const SimSystem_HvacCondenser_FullSystem::SimSys_CndnsrDemandSideBranchListName_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrDemandSideBranchListName () const
      {
        return this->SimSys_CndnsrDemandSideBranchListName_;
      }

      SimSystem_HvacCondenser_FullSystem::SimSys_CndnsrDemandSideBranchListName_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrDemandSideBranchListName ()
      {
        return this->SimSys_CndnsrDemandSideBranchListName_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrDemandSideBranchListName (const SimSys_CndnsrDemandSideBranchListName_type& x)
      {
        this->SimSys_CndnsrDemandSideBranchListName_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrDemandSideBranchListName (const SimSys_CndnsrDemandSideBranchListName_optional& x)
      {
        this->SimSys_CndnsrDemandSideBranchListName_ = x;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrDemandSideBranchListName (::std::auto_ptr< SimSys_CndnsrDemandSideBranchListName_type > x)
      {
        this->SimSys_CndnsrDemandSideBranchListName_.set (x);
      }

      const SimSystem_HvacCondenser_FullSystem::SimSys_CndnsrDemandSideConnListName_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrDemandSideConnListName () const
      {
        return this->SimSys_CndnsrDemandSideConnListName_;
      }

      SimSystem_HvacCondenser_FullSystem::SimSys_CndnsrDemandSideConnListName_optional& SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrDemandSideConnListName ()
      {
        return this->SimSys_CndnsrDemandSideConnListName_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrDemandSideConnListName (const SimSys_CndnsrDemandSideConnListName_type& x)
      {
        this->SimSys_CndnsrDemandSideConnListName_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrDemandSideConnListName (const SimSys_CndnsrDemandSideConnListName_optional& x)
      {
        this->SimSys_CndnsrDemandSideConnListName_ = x;
      }

      void SimSystem_HvacCondenser_FullSystem::
      SimSys_CndnsrDemandSideConnListName (::std::auto_ptr< SimSys_CndnsrDemandSideConnListName_type > x)
      {
        this->SimSys_CndnsrDemandSideConnListName_.set (x);
      }

      const SimSystem_HvacCondenser_FullSystem::T24Brand_optional& SimSystem_HvacCondenser_FullSystem::
      T24Brand () const
      {
        return this->T24Brand_;
      }

      SimSystem_HvacCondenser_FullSystem::T24Brand_optional& SimSystem_HvacCondenser_FullSystem::
      T24Brand ()
      {
        return this->T24Brand_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24Brand (const T24Brand_type& x)
      {
        this->T24Brand_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24Brand (const T24Brand_optional& x)
      {
        this->T24Brand_ = x;
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24Brand (::std::auto_ptr< T24Brand_type > x)
      {
        this->T24Brand_.set (x);
      }

      const SimSystem_HvacCondenser_FullSystem::T24CollectorType_optional& SimSystem_HvacCondenser_FullSystem::
      T24CollectorType () const
      {
        return this->T24CollectorType_;
      }

      SimSystem_HvacCondenser_FullSystem::T24CollectorType_optional& SimSystem_HvacCondenser_FullSystem::
      T24CollectorType ()
      {
        return this->T24CollectorType_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24CollectorType (const T24CollectorType_type& x)
      {
        this->T24CollectorType_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24CollectorType (const T24CollectorType_optional& x)
      {
        this->T24CollectorType_ = x;
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24CollectorType (::std::auto_ptr< T24CollectorType_type > x)
      {
        this->T24CollectorType_.set (x);
      }

      const SimSystem_HvacCondenser_FullSystem::T24FluidSysCntrlType_optional& SimSystem_HvacCondenser_FullSystem::
      T24FluidSysCntrlType () const
      {
        return this->T24FluidSysCntrlType_;
      }

      SimSystem_HvacCondenser_FullSystem::T24FluidSysCntrlType_optional& SimSystem_HvacCondenser_FullSystem::
      T24FluidSysCntrlType ()
      {
        return this->T24FluidSysCntrlType_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24FluidSysCntrlType (const T24FluidSysCntrlType_type& x)
      {
        this->T24FluidSysCntrlType_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24FluidSysCntrlType (const T24FluidSysCntrlType_optional& x)
      {
        this->T24FluidSysCntrlType_ = x;
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24FluidSysCntrlType (::std::auto_ptr< T24FluidSysCntrlType_type > x)
      {
        this->T24FluidSysCntrlType_.set (x);
      }

      const SimSystem_HvacCondenser_FullSystem::T24Manufacturer_optional& SimSystem_HvacCondenser_FullSystem::
      T24Manufacturer () const
      {
        return this->T24Manufacturer_;
      }

      SimSystem_HvacCondenser_FullSystem::T24Manufacturer_optional& SimSystem_HvacCondenser_FullSystem::
      T24Manufacturer ()
      {
        return this->T24Manufacturer_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24Manufacturer (const T24Manufacturer_type& x)
      {
        this->T24Manufacturer_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24Manufacturer (const T24Manufacturer_optional& x)
      {
        this->T24Manufacturer_ = x;
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24Manufacturer (::std::auto_ptr< T24Manufacturer_type > x)
      {
        this->T24Manufacturer_.set (x);
      }

      const SimSystem_HvacCondenser_FullSystem::T24Mch08A_optional& SimSystem_HvacCondenser_FullSystem::
      T24Mch08A () const
      {
        return this->T24Mch08A_;
      }

      SimSystem_HvacCondenser_FullSystem::T24Mch08A_optional& SimSystem_HvacCondenser_FullSystem::
      T24Mch08A ()
      {
        return this->T24Mch08A_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24Mch08A (const T24Mch08A_type& x)
      {
        this->T24Mch08A_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24Mch08A (const T24Mch08A_optional& x)
      {
        this->T24Mch08A_ = x;
      }

      const SimSystem_HvacCondenser_FullSystem::T24Mch09A_optional& SimSystem_HvacCondenser_FullSystem::
      T24Mch09A () const
      {
        return this->T24Mch09A_;
      }

      SimSystem_HvacCondenser_FullSystem::T24Mch09A_optional& SimSystem_HvacCondenser_FullSystem::
      T24Mch09A ()
      {
        return this->T24Mch09A_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24Mch09A (const T24Mch09A_type& x)
      {
        this->T24Mch09A_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24Mch09A (const T24Mch09A_optional& x)
      {
        this->T24Mch09A_ = x;
      }

      const SimSystem_HvacCondenser_FullSystem::T24Mch10A_optional& SimSystem_HvacCondenser_FullSystem::
      T24Mch10A () const
      {
        return this->T24Mch10A_;
      }

      SimSystem_HvacCondenser_FullSystem::T24Mch10A_optional& SimSystem_HvacCondenser_FullSystem::
      T24Mch10A ()
      {
        return this->T24Mch10A_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24Mch10A (const T24Mch10A_type& x)
      {
        this->T24Mch10A_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24Mch10A (const T24Mch10A_optional& x)
      {
        this->T24Mch10A_ = x;
      }

      const SimSystem_HvacCondenser_FullSystem::T24Mch11A_optional& SimSystem_HvacCondenser_FullSystem::
      T24Mch11A () const
      {
        return this->T24Mch11A_;
      }

      SimSystem_HvacCondenser_FullSystem::T24Mch11A_optional& SimSystem_HvacCondenser_FullSystem::
      T24Mch11A ()
      {
        return this->T24Mch11A_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24Mch11A (const T24Mch11A_type& x)
      {
        this->T24Mch11A_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24Mch11A (const T24Mch11A_optional& x)
      {
        this->T24Mch11A_ = x;
      }

      const SimSystem_HvacCondenser_FullSystem::T24Mch15A_optional& SimSystem_HvacCondenser_FullSystem::
      T24Mch15A () const
      {
        return this->T24Mch15A_;
      }

      SimSystem_HvacCondenser_FullSystem::T24Mch15A_optional& SimSystem_HvacCondenser_FullSystem::
      T24Mch15A ()
      {
        return this->T24Mch15A_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24Mch15A (const T24Mch15A_type& x)
      {
        this->T24Mch15A_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24Mch15A (const T24Mch15A_optional& x)
      {
        this->T24Mch15A_ = x;
      }

      const SimSystem_HvacCondenser_FullSystem::T24Mch17A_optional& SimSystem_HvacCondenser_FullSystem::
      T24Mch17A () const
      {
        return this->T24Mch17A_;
      }

      SimSystem_HvacCondenser_FullSystem::T24Mch17A_optional& SimSystem_HvacCondenser_FullSystem::
      T24Mch17A ()
      {
        return this->T24Mch17A_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24Mch17A (const T24Mch17A_type& x)
      {
        this->T24Mch17A_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24Mch17A (const T24Mch17A_optional& x)
      {
        this->T24Mch17A_ = x;
      }

      const SimSystem_HvacCondenser_FullSystem::T24Mch18A_optional& SimSystem_HvacCondenser_FullSystem::
      T24Mch18A () const
      {
        return this->T24Mch18A_;
      }

      SimSystem_HvacCondenser_FullSystem::T24Mch18A_optional& SimSystem_HvacCondenser_FullSystem::
      T24Mch18A ()
      {
        return this->T24Mch18A_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24Mch18A (const T24Mch18A_type& x)
      {
        this->T24Mch18A_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24Mch18A (const T24Mch18A_optional& x)
      {
        this->T24Mch18A_ = x;
      }

      const SimSystem_HvacCondenser_FullSystem::T24ModelNo_optional& SimSystem_HvacCondenser_FullSystem::
      T24ModelNo () const
      {
        return this->T24ModelNo_;
      }

      SimSystem_HvacCondenser_FullSystem::T24ModelNo_optional& SimSystem_HvacCondenser_FullSystem::
      T24ModelNo ()
      {
        return this->T24ModelNo_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24ModelNo (const T24ModelNo_type& x)
      {
        this->T24ModelNo_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24ModelNo (const T24ModelNo_optional& x)
      {
        this->T24ModelNo_ = x;
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24ModelNo (::std::auto_ptr< T24ModelNo_type > x)
      {
        this->T24ModelNo_.set (x);
      }

      const SimSystem_HvacCondenser_FullSystem::T24ConstructStatus3_optional& SimSystem_HvacCondenser_FullSystem::
      T24ConstructStatus3 () const
      {
        return this->T24ConstructStatus3_;
      }

      SimSystem_HvacCondenser_FullSystem::T24ConstructStatus3_optional& SimSystem_HvacCondenser_FullSystem::
      T24ConstructStatus3 ()
      {
        return this->T24ConstructStatus3_;
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24ConstructStatus3 (const T24ConstructStatus3_type& x)
      {
        this->T24ConstructStatus3_.set (x);
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24ConstructStatus3 (const T24ConstructStatus3_optional& x)
      {
        this->T24ConstructStatus3_ = x;
      }

      void SimSystem_HvacCondenser_FullSystem::
      T24ConstructStatus3 (::std::auto_ptr< T24ConstructStatus3_type > x)
      {
        this->T24ConstructStatus3_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace BuildingModel
    {
      // SimSystem_HvacCondenser_FullSystem
      //

      SimSystem_HvacCondenser_FullSystem::
      SimSystem_HvacCondenser_FullSystem ()
      : ::schema::simxml::BuildingModel::SimSystem_HvacCondenser (),
        SimSys_DemandSideOutNodeName_ (this),
        SimSys_FluidType_ (this),
        SimSys_UserDefFluidType_ (this),
        SimSys_MaxLoopTemp_ (this),
        SimSys_MinLoopTemp_ (this),
        SimSys_MaxLoopFlowRate_ (this),
        SimSys_MinLoopFlowRate_ (this),
        SimSys_DemandSideInNodeName_ (this),
        SimSys_LoadDistScheme_ (this),
        SimSys_PresSimType_ (this),
        SimSys_CndnsrEqmtOpSchemeName_ (this),
        SimSys_CondLoopTempSetPtNodeName_ (this),
        SimSys_CndnsrLoopVol_ (this),
        SimSys_CndnsrSideInNodeName_ (this),
        SimSys_CndnsrSideOutNodeName_ (this),
        SimSys_CndnsrSideBranchListName_ (this),
        SimSys_CndnsrSideConnListName_ (this),
        SimSys_CndnsrDemandSideBranchListName_ (this),
        SimSys_CndnsrDemandSideConnListName_ (this),
        T24Brand_ (this),
        T24CollectorType_ (this),
        T24FluidSysCntrlType_ (this),
        T24Manufacturer_ (this),
        T24Mch08A_ (this),
        T24Mch09A_ (this),
        T24Mch10A_ (this),
        T24Mch11A_ (this),
        T24Mch15A_ (this),
        T24Mch17A_ (this),
        T24Mch18A_ (this),
        T24ModelNo_ (this),
        T24ConstructStatus3_ (this)
      {
      }

      SimSystem_HvacCondenser_FullSystem::
      SimSystem_HvacCondenser_FullSystem (const RefId_type& RefId)
      : ::schema::simxml::BuildingModel::SimSystem_HvacCondenser (RefId),
        SimSys_DemandSideOutNodeName_ (this),
        SimSys_FluidType_ (this),
        SimSys_UserDefFluidType_ (this),
        SimSys_MaxLoopTemp_ (this),
        SimSys_MinLoopTemp_ (this),
        SimSys_MaxLoopFlowRate_ (this),
        SimSys_MinLoopFlowRate_ (this),
        SimSys_DemandSideInNodeName_ (this),
        SimSys_LoadDistScheme_ (this),
        SimSys_PresSimType_ (this),
        SimSys_CndnsrEqmtOpSchemeName_ (this),
        SimSys_CondLoopTempSetPtNodeName_ (this),
        SimSys_CndnsrLoopVol_ (this),
        SimSys_CndnsrSideInNodeName_ (this),
        SimSys_CndnsrSideOutNodeName_ (this),
        SimSys_CndnsrSideBranchListName_ (this),
        SimSys_CndnsrSideConnListName_ (this),
        SimSys_CndnsrDemandSideBranchListName_ (this),
        SimSys_CndnsrDemandSideConnListName_ (this),
        T24Brand_ (this),
        T24CollectorType_ (this),
        T24FluidSysCntrlType_ (this),
        T24Manufacturer_ (this),
        T24Mch08A_ (this),
        T24Mch09A_ (this),
        T24Mch10A_ (this),
        T24Mch11A_ (this),
        T24Mch15A_ (this),
        T24Mch17A_ (this),
        T24Mch18A_ (this),
        T24ModelNo_ (this),
        T24ConstructStatus3_ (this)
      {
      }

      SimSystem_HvacCondenser_FullSystem::
      SimSystem_HvacCondenser_FullSystem (const SimSystem_HvacCondenser_FullSystem& x,
                                          ::xml_schema::flags f,
                                          ::xml_schema::container* c)
      : ::schema::simxml::BuildingModel::SimSystem_HvacCondenser (x, f, c),
        SimSys_DemandSideOutNodeName_ (x.SimSys_DemandSideOutNodeName_, f, this),
        SimSys_FluidType_ (x.SimSys_FluidType_, f, this),
        SimSys_UserDefFluidType_ (x.SimSys_UserDefFluidType_, f, this),
        SimSys_MaxLoopTemp_ (x.SimSys_MaxLoopTemp_, f, this),
        SimSys_MinLoopTemp_ (x.SimSys_MinLoopTemp_, f, this),
        SimSys_MaxLoopFlowRate_ (x.SimSys_MaxLoopFlowRate_, f, this),
        SimSys_MinLoopFlowRate_ (x.SimSys_MinLoopFlowRate_, f, this),
        SimSys_DemandSideInNodeName_ (x.SimSys_DemandSideInNodeName_, f, this),
        SimSys_LoadDistScheme_ (x.SimSys_LoadDistScheme_, f, this),
        SimSys_PresSimType_ (x.SimSys_PresSimType_, f, this),
        SimSys_CndnsrEqmtOpSchemeName_ (x.SimSys_CndnsrEqmtOpSchemeName_, f, this),
        SimSys_CondLoopTempSetPtNodeName_ (x.SimSys_CondLoopTempSetPtNodeName_, f, this),
        SimSys_CndnsrLoopVol_ (x.SimSys_CndnsrLoopVol_, f, this),
        SimSys_CndnsrSideInNodeName_ (x.SimSys_CndnsrSideInNodeName_, f, this),
        SimSys_CndnsrSideOutNodeName_ (x.SimSys_CndnsrSideOutNodeName_, f, this),
        SimSys_CndnsrSideBranchListName_ (x.SimSys_CndnsrSideBranchListName_, f, this),
        SimSys_CndnsrSideConnListName_ (x.SimSys_CndnsrSideConnListName_, f, this),
        SimSys_CndnsrDemandSideBranchListName_ (x.SimSys_CndnsrDemandSideBranchListName_, f, this),
        SimSys_CndnsrDemandSideConnListName_ (x.SimSys_CndnsrDemandSideConnListName_, f, this),
        T24Brand_ (x.T24Brand_, f, this),
        T24CollectorType_ (x.T24CollectorType_, f, this),
        T24FluidSysCntrlType_ (x.T24FluidSysCntrlType_, f, this),
        T24Manufacturer_ (x.T24Manufacturer_, f, this),
        T24Mch08A_ (x.T24Mch08A_, f, this),
        T24Mch09A_ (x.T24Mch09A_, f, this),
        T24Mch10A_ (x.T24Mch10A_, f, this),
        T24Mch11A_ (x.T24Mch11A_, f, this),
        T24Mch15A_ (x.T24Mch15A_, f, this),
        T24Mch17A_ (x.T24Mch17A_, f, this),
        T24Mch18A_ (x.T24Mch18A_, f, this),
        T24ModelNo_ (x.T24ModelNo_, f, this),
        T24ConstructStatus3_ (x.T24ConstructStatus3_, f, this)
      {
      }

      SimSystem_HvacCondenser_FullSystem::
      SimSystem_HvacCondenser_FullSystem (const ::xercesc::DOMElement& e,
                                          ::xml_schema::flags f,
                                          ::xml_schema::container* c)
      : ::schema::simxml::BuildingModel::SimSystem_HvacCondenser (e, f | ::xml_schema::flags::base, c),
        SimSys_DemandSideOutNodeName_ (this),
        SimSys_FluidType_ (this),
        SimSys_UserDefFluidType_ (this),
        SimSys_MaxLoopTemp_ (this),
        SimSys_MinLoopTemp_ (this),
        SimSys_MaxLoopFlowRate_ (this),
        SimSys_MinLoopFlowRate_ (this),
        SimSys_DemandSideInNodeName_ (this),
        SimSys_LoadDistScheme_ (this),
        SimSys_PresSimType_ (this),
        SimSys_CndnsrEqmtOpSchemeName_ (this),
        SimSys_CondLoopTempSetPtNodeName_ (this),
        SimSys_CndnsrLoopVol_ (this),
        SimSys_CndnsrSideInNodeName_ (this),
        SimSys_CndnsrSideOutNodeName_ (this),
        SimSys_CndnsrSideBranchListName_ (this),
        SimSys_CndnsrSideConnListName_ (this),
        SimSys_CndnsrDemandSideBranchListName_ (this),
        SimSys_CndnsrDemandSideConnListName_ (this),
        T24Brand_ (this),
        T24CollectorType_ (this),
        T24FluidSysCntrlType_ (this),
        T24Manufacturer_ (this),
        T24Mch08A_ (this),
        T24Mch09A_ (this),
        T24Mch10A_ (this),
        T24Mch11A_ (this),
        T24Mch15A_ (this),
        T24Mch17A_ (this),
        T24Mch18A_ (this),
        T24ModelNo_ (this),
        T24ConstructStatus3_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimSystem_HvacCondenser_FullSystem::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::BuildingModel::SimSystem_HvacCondenser::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimSys_DemandSideOutNodeName
          //
          if (n.name () == "SimSys_DemandSideOutNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_DemandSideOutNodeName_type > r (
              SimSys_DemandSideOutNodeName_traits::create (i, f, this));

            if (!this->SimSys_DemandSideOutNodeName_)
            {
              this->SimSys_DemandSideOutNodeName_.set (r);
              continue;
            }
          }

          // SimSys_FluidType
          //
          if (n.name () == "SimSys_FluidType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_FluidType_type > r (
              SimSys_FluidType_traits::create (i, f, this));

            if (!this->SimSys_FluidType_)
            {
              this->SimSys_FluidType_.set (r);
              continue;
            }
          }

          // SimSys_UserDefFluidType
          //
          if (n.name () == "SimSys_UserDefFluidType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_UserDefFluidType_type > r (
              SimSys_UserDefFluidType_traits::create (i, f, this));

            if (!this->SimSys_UserDefFluidType_)
            {
              this->SimSys_UserDefFluidType_.set (r);
              continue;
            }
          }

          // SimSys_MaxLoopTemp
          //
          if (n.name () == "SimSys_MaxLoopTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->SimSys_MaxLoopTemp_)
            {
              this->SimSys_MaxLoopTemp_.set (SimSys_MaxLoopTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimSys_MinLoopTemp
          //
          if (n.name () == "SimSys_MinLoopTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->SimSys_MinLoopTemp_)
            {
              this->SimSys_MinLoopTemp_.set (SimSys_MinLoopTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimSys_MaxLoopFlowRate
          //
          if (n.name () == "SimSys_MaxLoopFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->SimSys_MaxLoopFlowRate_)
            {
              this->SimSys_MaxLoopFlowRate_.set (SimSys_MaxLoopFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimSys_MinLoopFlowRate
          //
          if (n.name () == "SimSys_MinLoopFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->SimSys_MinLoopFlowRate_)
            {
              this->SimSys_MinLoopFlowRate_.set (SimSys_MinLoopFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimSys_DemandSideInNodeName
          //
          if (n.name () == "SimSys_DemandSideInNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_DemandSideInNodeName_type > r (
              SimSys_DemandSideInNodeName_traits::create (i, f, this));

            if (!this->SimSys_DemandSideInNodeName_)
            {
              this->SimSys_DemandSideInNodeName_.set (r);
              continue;
            }
          }

          // SimSys_LoadDistScheme
          //
          if (n.name () == "SimSys_LoadDistScheme" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_LoadDistScheme_type > r (
              SimSys_LoadDistScheme_traits::create (i, f, this));

            if (!this->SimSys_LoadDistScheme_)
            {
              this->SimSys_LoadDistScheme_.set (r);
              continue;
            }
          }

          // SimSys_PresSimType
          //
          if (n.name () == "SimSys_PresSimType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_PresSimType_type > r (
              SimSys_PresSimType_traits::create (i, f, this));

            if (!this->SimSys_PresSimType_)
            {
              this->SimSys_PresSimType_.set (r);
              continue;
            }
          }

          // SimSys_CndnsrEqmtOpSchemeName
          //
          if (n.name () == "SimSys_CndnsrEqmtOpSchemeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_CndnsrEqmtOpSchemeName_type > r (
              SimSys_CndnsrEqmtOpSchemeName_traits::create (i, f, this));

            if (!this->SimSys_CndnsrEqmtOpSchemeName_)
            {
              this->SimSys_CndnsrEqmtOpSchemeName_.set (r);
              continue;
            }
          }

          // SimSys_CondLoopTempSetPtNodeName
          //
          if (n.name () == "SimSys_CondLoopTempSetPtNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_CondLoopTempSetPtNodeName_type > r (
              SimSys_CondLoopTempSetPtNodeName_traits::create (i, f, this));

            if (!this->SimSys_CondLoopTempSetPtNodeName_)
            {
              this->SimSys_CondLoopTempSetPtNodeName_.set (r);
              continue;
            }
          }

          // SimSys_CndnsrLoopVol
          //
          if (n.name () == "SimSys_CndnsrLoopVol" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->SimSys_CndnsrLoopVol_)
            {
              this->SimSys_CndnsrLoopVol_.set (SimSys_CndnsrLoopVol_traits::create (i, f, this));
              continue;
            }
          }

          // SimSys_CndnsrSideInNodeName
          //
          if (n.name () == "SimSys_CndnsrSideInNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_CndnsrSideInNodeName_type > r (
              SimSys_CndnsrSideInNodeName_traits::create (i, f, this));

            if (!this->SimSys_CndnsrSideInNodeName_)
            {
              this->SimSys_CndnsrSideInNodeName_.set (r);
              continue;
            }
          }

          // SimSys_CndnsrSideOutNodeName
          //
          if (n.name () == "SimSys_CndnsrSideOutNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_CndnsrSideOutNodeName_type > r (
              SimSys_CndnsrSideOutNodeName_traits::create (i, f, this));

            if (!this->SimSys_CndnsrSideOutNodeName_)
            {
              this->SimSys_CndnsrSideOutNodeName_.set (r);
              continue;
            }
          }

          // SimSys_CndnsrSideBranchListName
          //
          if (n.name () == "SimSys_CndnsrSideBranchListName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_CndnsrSideBranchListName_type > r (
              SimSys_CndnsrSideBranchListName_traits::create (i, f, this));

            if (!this->SimSys_CndnsrSideBranchListName_)
            {
              this->SimSys_CndnsrSideBranchListName_.set (r);
              continue;
            }
          }

          // SimSys_CndnsrSideConnListName
          //
          if (n.name () == "SimSys_CndnsrSideConnListName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_CndnsrSideConnListName_type > r (
              SimSys_CndnsrSideConnListName_traits::create (i, f, this));

            if (!this->SimSys_CndnsrSideConnListName_)
            {
              this->SimSys_CndnsrSideConnListName_.set (r);
              continue;
            }
          }

          // SimSys_CndnsrDemandSideBranchListName
          //
          if (n.name () == "SimSys_CndnsrDemandSideBranchListName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_CndnsrDemandSideBranchListName_type > r (
              SimSys_CndnsrDemandSideBranchListName_traits::create (i, f, this));

            if (!this->SimSys_CndnsrDemandSideBranchListName_)
            {
              this->SimSys_CndnsrDemandSideBranchListName_.set (r);
              continue;
            }
          }

          // SimSys_CndnsrDemandSideConnListName
          //
          if (n.name () == "SimSys_CndnsrDemandSideConnListName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< SimSys_CndnsrDemandSideConnListName_type > r (
              SimSys_CndnsrDemandSideConnListName_traits::create (i, f, this));

            if (!this->SimSys_CndnsrDemandSideConnListName_)
            {
              this->SimSys_CndnsrDemandSideConnListName_.set (r);
              continue;
            }
          }

          // T24Brand
          //
          if (n.name () == "T24Brand" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< T24Brand_type > r (
              T24Brand_traits::create (i, f, this));

            if (!this->T24Brand_)
            {
              this->T24Brand_.set (r);
              continue;
            }
          }

          // T24CollectorType
          //
          if (n.name () == "T24CollectorType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< T24CollectorType_type > r (
              T24CollectorType_traits::create (i, f, this));

            if (!this->T24CollectorType_)
            {
              this->T24CollectorType_.set (r);
              continue;
            }
          }

          // T24FluidSysCntrlType
          //
          if (n.name () == "T24FluidSysCntrlType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< T24FluidSysCntrlType_type > r (
              T24FluidSysCntrlType_traits::create (i, f, this));

            if (!this->T24FluidSysCntrlType_)
            {
              this->T24FluidSysCntrlType_.set (r);
              continue;
            }
          }

          // T24Manufacturer
          //
          if (n.name () == "T24Manufacturer" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< T24Manufacturer_type > r (
              T24Manufacturer_traits::create (i, f, this));

            if (!this->T24Manufacturer_)
            {
              this->T24Manufacturer_.set (r);
              continue;
            }
          }

          // T24Mch08A
          //
          if (n.name () == "T24Mch08A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch08A_)
            {
              this->T24Mch08A_.set (T24Mch08A_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch09A
          //
          if (n.name () == "T24Mch09A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch09A_)
            {
              this->T24Mch09A_.set (T24Mch09A_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch10A
          //
          if (n.name () == "T24Mch10A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch10A_)
            {
              this->T24Mch10A_.set (T24Mch10A_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch11A
          //
          if (n.name () == "T24Mch11A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch11A_)
            {
              this->T24Mch11A_.set (T24Mch11A_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch15A
          //
          if (n.name () == "T24Mch15A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch15A_)
            {
              this->T24Mch15A_.set (T24Mch15A_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch17A
          //
          if (n.name () == "T24Mch17A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch17A_)
            {
              this->T24Mch17A_.set (T24Mch17A_traits::create (i, f, this));
              continue;
            }
          }

          // T24Mch18A
          //
          if (n.name () == "T24Mch18A" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            if (!this->T24Mch18A_)
            {
              this->T24Mch18A_.set (T24Mch18A_traits::create (i, f, this));
              continue;
            }
          }

          // T24ModelNo
          //
          if (n.name () == "T24ModelNo" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< T24ModelNo_type > r (
              T24ModelNo_traits::create (i, f, this));

            if (!this->T24ModelNo_)
            {
              this->T24ModelNo_.set (r);
              continue;
            }
          }

          // T24ConstructStatus3
          //
          if (n.name () == "T24ConstructStatus3" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/BuildingModel")
          {
            ::std::auto_ptr< T24ConstructStatus3_type > r (
              T24ConstructStatus3_traits::create (i, f, this));

            if (!this->T24ConstructStatus3_)
            {
              this->T24ConstructStatus3_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimSystem_HvacCondenser_FullSystem* SimSystem_HvacCondenser_FullSystem::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimSystem_HvacCondenser_FullSystem (*this, f, c);
      }

      SimSystem_HvacCondenser_FullSystem& SimSystem_HvacCondenser_FullSystem::
      operator= (const SimSystem_HvacCondenser_FullSystem& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::BuildingModel::SimSystem_HvacCondenser& > (*this) = x;
          this->SimSys_DemandSideOutNodeName_ = x.SimSys_DemandSideOutNodeName_;
          this->SimSys_FluidType_ = x.SimSys_FluidType_;
          this->SimSys_UserDefFluidType_ = x.SimSys_UserDefFluidType_;
          this->SimSys_MaxLoopTemp_ = x.SimSys_MaxLoopTemp_;
          this->SimSys_MinLoopTemp_ = x.SimSys_MinLoopTemp_;
          this->SimSys_MaxLoopFlowRate_ = x.SimSys_MaxLoopFlowRate_;
          this->SimSys_MinLoopFlowRate_ = x.SimSys_MinLoopFlowRate_;
          this->SimSys_DemandSideInNodeName_ = x.SimSys_DemandSideInNodeName_;
          this->SimSys_LoadDistScheme_ = x.SimSys_LoadDistScheme_;
          this->SimSys_PresSimType_ = x.SimSys_PresSimType_;
          this->SimSys_CndnsrEqmtOpSchemeName_ = x.SimSys_CndnsrEqmtOpSchemeName_;
          this->SimSys_CondLoopTempSetPtNodeName_ = x.SimSys_CondLoopTempSetPtNodeName_;
          this->SimSys_CndnsrLoopVol_ = x.SimSys_CndnsrLoopVol_;
          this->SimSys_CndnsrSideInNodeName_ = x.SimSys_CndnsrSideInNodeName_;
          this->SimSys_CndnsrSideOutNodeName_ = x.SimSys_CndnsrSideOutNodeName_;
          this->SimSys_CndnsrSideBranchListName_ = x.SimSys_CndnsrSideBranchListName_;
          this->SimSys_CndnsrSideConnListName_ = x.SimSys_CndnsrSideConnListName_;
          this->SimSys_CndnsrDemandSideBranchListName_ = x.SimSys_CndnsrDemandSideBranchListName_;
          this->SimSys_CndnsrDemandSideConnListName_ = x.SimSys_CndnsrDemandSideConnListName_;
          this->T24Brand_ = x.T24Brand_;
          this->T24CollectorType_ = x.T24CollectorType_;
          this->T24FluidSysCntrlType_ = x.T24FluidSysCntrlType_;
          this->T24Manufacturer_ = x.T24Manufacturer_;
          this->T24Mch08A_ = x.T24Mch08A_;
          this->T24Mch09A_ = x.T24Mch09A_;
          this->T24Mch10A_ = x.T24Mch10A_;
          this->T24Mch11A_ = x.T24Mch11A_;
          this->T24Mch15A_ = x.T24Mch15A_;
          this->T24Mch17A_ = x.T24Mch17A_;
          this->T24Mch18A_ = x.T24Mch18A_;
          this->T24ModelNo_ = x.T24ModelNo_;
          this->T24ConstructStatus3_ = x.T24ConstructStatus3_;
        }

        return *this;
      }

      SimSystem_HvacCondenser_FullSystem::
      ~SimSystem_HvacCondenser_FullSystem ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace BuildingModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

