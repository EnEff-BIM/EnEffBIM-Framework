// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowMover_PumpSet.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowMover_PumpSet
      // 

      const SimFlowMover_PumpSet::SimFlowMover_Name_optional& SimFlowMover_PumpSet::
      SimFlowMover_Name () const
      {
        return this->SimFlowMover_Name_;
      }

      SimFlowMover_PumpSet::SimFlowMover_Name_optional& SimFlowMover_PumpSet::
      SimFlowMover_Name ()
      {
        return this->SimFlowMover_Name_;
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_Name (const SimFlowMover_Name_type& x)
      {
        this->SimFlowMover_Name_.set (x);
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_Name (const SimFlowMover_Name_optional& x)
      {
        this->SimFlowMover_Name_ = x;
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_Name (::std::auto_ptr< SimFlowMover_Name_type > x)
      {
        this->SimFlowMover_Name_.set (x);
      }

      const SimFlowMover_PumpSet::SimFlowMover_MotorEff_optional& SimFlowMover_PumpSet::
      SimFlowMover_MotorEff () const
      {
        return this->SimFlowMover_MotorEff_;
      }

      SimFlowMover_PumpSet::SimFlowMover_MotorEff_optional& SimFlowMover_PumpSet::
      SimFlowMover_MotorEff ()
      {
        return this->SimFlowMover_MotorEff_;
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_MotorEff (const SimFlowMover_MotorEff_type& x)
      {
        this->SimFlowMover_MotorEff_.set (x);
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_MotorEff (const SimFlowMover_MotorEff_optional& x)
      {
        this->SimFlowMover_MotorEff_ = x;
      }

      const SimFlowMover_PumpSet::SimFlowMover_InNodeName_optional& SimFlowMover_PumpSet::
      SimFlowMover_InNodeName () const
      {
        return this->SimFlowMover_InNodeName_;
      }

      SimFlowMover_PumpSet::SimFlowMover_InNodeName_optional& SimFlowMover_PumpSet::
      SimFlowMover_InNodeName ()
      {
        return this->SimFlowMover_InNodeName_;
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_InNodeName (const SimFlowMover_InNodeName_type& x)
      {
        this->SimFlowMover_InNodeName_.set (x);
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_InNodeName (const SimFlowMover_InNodeName_optional& x)
      {
        this->SimFlowMover_InNodeName_ = x;
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_InNodeName (::std::auto_ptr< SimFlowMover_InNodeName_type > x)
      {
        this->SimFlowMover_InNodeName_.set (x);
      }

      const SimFlowMover_PumpSet::SimFlowMover_OutNodeName_optional& SimFlowMover_PumpSet::
      SimFlowMover_OutNodeName () const
      {
        return this->SimFlowMover_OutNodeName_;
      }

      SimFlowMover_PumpSet::SimFlowMover_OutNodeName_optional& SimFlowMover_PumpSet::
      SimFlowMover_OutNodeName ()
      {
        return this->SimFlowMover_OutNodeName_;
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_OutNodeName (const SimFlowMover_OutNodeName_type& x)
      {
        this->SimFlowMover_OutNodeName_.set (x);
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_OutNodeName (const SimFlowMover_OutNodeName_optional& x)
      {
        this->SimFlowMover_OutNodeName_ = x;
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_OutNodeName (::std::auto_ptr< SimFlowMover_OutNodeName_type > x)
      {
        this->SimFlowMover_OutNodeName_.set (x);
      }

      const SimFlowMover_PumpSet::SimFlowMover_RatedPumpHead_optional& SimFlowMover_PumpSet::
      SimFlowMover_RatedPumpHead () const
      {
        return this->SimFlowMover_RatedPumpHead_;
      }

      SimFlowMover_PumpSet::SimFlowMover_RatedPumpHead_optional& SimFlowMover_PumpSet::
      SimFlowMover_RatedPumpHead ()
      {
        return this->SimFlowMover_RatedPumpHead_;
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_RatedPumpHead (const SimFlowMover_RatedPumpHead_type& x)
      {
        this->SimFlowMover_RatedPumpHead_.set (x);
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_RatedPumpHead (const SimFlowMover_RatedPumpHead_optional& x)
      {
        this->SimFlowMover_RatedPumpHead_ = x;
      }

      const SimFlowMover_PumpSet::SimFlowMover_RatedPowerConsump_optional& SimFlowMover_PumpSet::
      SimFlowMover_RatedPowerConsump () const
      {
        return this->SimFlowMover_RatedPowerConsump_;
      }

      SimFlowMover_PumpSet::SimFlowMover_RatedPowerConsump_optional& SimFlowMover_PumpSet::
      SimFlowMover_RatedPowerConsump ()
      {
        return this->SimFlowMover_RatedPowerConsump_;
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_RatedPowerConsump (const SimFlowMover_RatedPowerConsump_type& x)
      {
        this->SimFlowMover_RatedPowerConsump_.set (x);
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_RatedPowerConsump (const SimFlowMover_RatedPowerConsump_optional& x)
      {
        this->SimFlowMover_RatedPowerConsump_ = x;
      }

      const SimFlowMover_PumpSet::SimFlowMover_FracMotorInEffToFluidStream_optional& SimFlowMover_PumpSet::
      SimFlowMover_FracMotorInEffToFluidStream () const
      {
        return this->SimFlowMover_FracMotorInEffToFluidStream_;
      }

      SimFlowMover_PumpSet::SimFlowMover_FracMotorInEffToFluidStream_optional& SimFlowMover_PumpSet::
      SimFlowMover_FracMotorInEffToFluidStream ()
      {
        return this->SimFlowMover_FracMotorInEffToFluidStream_;
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_FracMotorInEffToFluidStream (const SimFlowMover_FracMotorInEffToFluidStream_type& x)
      {
        this->SimFlowMover_FracMotorInEffToFluidStream_.set (x);
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_FracMotorInEffToFluidStream (const SimFlowMover_FracMotorInEffToFluidStream_optional& x)
      {
        this->SimFlowMover_FracMotorInEffToFluidStream_ = x;
      }

      const SimFlowMover_PumpSet::SimFlowMover_PumpContType_optional& SimFlowMover_PumpSet::
      SimFlowMover_PumpContType () const
      {
        return this->SimFlowMover_PumpContType_;
      }

      SimFlowMover_PumpSet::SimFlowMover_PumpContType_optional& SimFlowMover_PumpSet::
      SimFlowMover_PumpContType ()
      {
        return this->SimFlowMover_PumpContType_;
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_PumpContType (const SimFlowMover_PumpContType_type& x)
      {
        this->SimFlowMover_PumpContType_.set (x);
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_PumpContType (const SimFlowMover_PumpContType_optional& x)
      {
        this->SimFlowMover_PumpContType_ = x;
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_PumpContType (::std::auto_ptr< SimFlowMover_PumpContType_type > x)
      {
        this->SimFlowMover_PumpContType_.set (x);
      }

      const SimFlowMover_PumpSet::SimFlowMover_PumpFlowRateSchedName_optional& SimFlowMover_PumpSet::
      SimFlowMover_PumpFlowRateSchedName () const
      {
        return this->SimFlowMover_PumpFlowRateSchedName_;
      }

      SimFlowMover_PumpSet::SimFlowMover_PumpFlowRateSchedName_optional& SimFlowMover_PumpSet::
      SimFlowMover_PumpFlowRateSchedName ()
      {
        return this->SimFlowMover_PumpFlowRateSchedName_;
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_PumpFlowRateSchedName (const SimFlowMover_PumpFlowRateSchedName_type& x)
      {
        this->SimFlowMover_PumpFlowRateSchedName_.set (x);
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_PumpFlowRateSchedName (const SimFlowMover_PumpFlowRateSchedName_optional& x)
      {
        this->SimFlowMover_PumpFlowRateSchedName_ = x;
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_PumpFlowRateSchedName (::std::auto_ptr< SimFlowMover_PumpFlowRateSchedName_type > x)
      {
        this->SimFlowMover_PumpFlowRateSchedName_.set (x);
      }

      const SimFlowMover_PumpSet::SimFlowMover_ZoneName_optional& SimFlowMover_PumpSet::
      SimFlowMover_ZoneName () const
      {
        return this->SimFlowMover_ZoneName_;
      }

      SimFlowMover_PumpSet::SimFlowMover_ZoneName_optional& SimFlowMover_PumpSet::
      SimFlowMover_ZoneName ()
      {
        return this->SimFlowMover_ZoneName_;
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_ZoneName (const SimFlowMover_ZoneName_type& x)
      {
        this->SimFlowMover_ZoneName_.set (x);
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_ZoneName (const SimFlowMover_ZoneName_optional& x)
      {
        this->SimFlowMover_ZoneName_ = x;
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_ZoneName (::std::auto_ptr< SimFlowMover_ZoneName_type > x)
      {
        this->SimFlowMover_ZoneName_.set (x);
      }

      const SimFlowMover_PumpSet::SimFlowMover_SkinLossRadiativeFract_optional& SimFlowMover_PumpSet::
      SimFlowMover_SkinLossRadiativeFract () const
      {
        return this->SimFlowMover_SkinLossRadiativeFract_;
      }

      SimFlowMover_PumpSet::SimFlowMover_SkinLossRadiativeFract_optional& SimFlowMover_PumpSet::
      SimFlowMover_SkinLossRadiativeFract ()
      {
        return this->SimFlowMover_SkinLossRadiativeFract_;
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_SkinLossRadiativeFract (const SimFlowMover_SkinLossRadiativeFract_type& x)
      {
        this->SimFlowMover_SkinLossRadiativeFract_.set (x);
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_SkinLossRadiativeFract (const SimFlowMover_SkinLossRadiativeFract_optional& x)
      {
        this->SimFlowMover_SkinLossRadiativeFract_ = x;
      }

      const SimFlowMover_PumpSet::SimFlowMover_TotalRatedFlowRate_optional& SimFlowMover_PumpSet::
      SimFlowMover_TotalRatedFlowRate () const
      {
        return this->SimFlowMover_TotalRatedFlowRate_;
      }

      SimFlowMover_PumpSet::SimFlowMover_TotalRatedFlowRate_optional& SimFlowMover_PumpSet::
      SimFlowMover_TotalRatedFlowRate ()
      {
        return this->SimFlowMover_TotalRatedFlowRate_;
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_TotalRatedFlowRate (const SimFlowMover_TotalRatedFlowRate_type& x)
      {
        this->SimFlowMover_TotalRatedFlowRate_.set (x);
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_TotalRatedFlowRate (const SimFlowMover_TotalRatedFlowRate_optional& x)
      {
        this->SimFlowMover_TotalRatedFlowRate_ = x;
      }

      const SimFlowMover_PumpSet::SimFlowMover_NumbPumpsInBank_optional& SimFlowMover_PumpSet::
      SimFlowMover_NumbPumpsInBank () const
      {
        return this->SimFlowMover_NumbPumpsInBank_;
      }

      SimFlowMover_PumpSet::SimFlowMover_NumbPumpsInBank_optional& SimFlowMover_PumpSet::
      SimFlowMover_NumbPumpsInBank ()
      {
        return this->SimFlowMover_NumbPumpsInBank_;
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_NumbPumpsInBank (const SimFlowMover_NumbPumpsInBank_type& x)
      {
        this->SimFlowMover_NumbPumpsInBank_.set (x);
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_NumbPumpsInBank (const SimFlowMover_NumbPumpsInBank_optional& x)
      {
        this->SimFlowMover_NumbPumpsInBank_ = x;
      }

      const SimFlowMover_PumpSet::SimFlowMover_FlowSeqContScheme_optional& SimFlowMover_PumpSet::
      SimFlowMover_FlowSeqContScheme () const
      {
        return this->SimFlowMover_FlowSeqContScheme_;
      }

      SimFlowMover_PumpSet::SimFlowMover_FlowSeqContScheme_optional& SimFlowMover_PumpSet::
      SimFlowMover_FlowSeqContScheme ()
      {
        return this->SimFlowMover_FlowSeqContScheme_;
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_FlowSeqContScheme (const SimFlowMover_FlowSeqContScheme_type& x)
      {
        this->SimFlowMover_FlowSeqContScheme_.set (x);
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_FlowSeqContScheme (const SimFlowMover_FlowSeqContScheme_optional& x)
      {
        this->SimFlowMover_FlowSeqContScheme_ = x;
      }

      void SimFlowMover_PumpSet::
      SimFlowMover_FlowSeqContScheme (::std::auto_ptr< SimFlowMover_FlowSeqContScheme_type > x)
      {
        this->SimFlowMover_FlowSeqContScheme_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowMover_PumpSet
      //

      SimFlowMover_PumpSet::
      SimFlowMover_PumpSet ()
      : ::schema::simxml::MepModel::SimFlowMover (),
        SimFlowMover_Name_ (this),
        SimFlowMover_MotorEff_ (this),
        SimFlowMover_InNodeName_ (this),
        SimFlowMover_OutNodeName_ (this),
        SimFlowMover_RatedPumpHead_ (this),
        SimFlowMover_RatedPowerConsump_ (this),
        SimFlowMover_FracMotorInEffToFluidStream_ (this),
        SimFlowMover_PumpContType_ (this),
        SimFlowMover_PumpFlowRateSchedName_ (this),
        SimFlowMover_ZoneName_ (this),
        SimFlowMover_SkinLossRadiativeFract_ (this),
        SimFlowMover_TotalRatedFlowRate_ (this),
        SimFlowMover_NumbPumpsInBank_ (this),
        SimFlowMover_FlowSeqContScheme_ (this)
      {
      }

      SimFlowMover_PumpSet::
      SimFlowMover_PumpSet (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimFlowMover (RefId),
        SimFlowMover_Name_ (this),
        SimFlowMover_MotorEff_ (this),
        SimFlowMover_InNodeName_ (this),
        SimFlowMover_OutNodeName_ (this),
        SimFlowMover_RatedPumpHead_ (this),
        SimFlowMover_RatedPowerConsump_ (this),
        SimFlowMover_FracMotorInEffToFluidStream_ (this),
        SimFlowMover_PumpContType_ (this),
        SimFlowMover_PumpFlowRateSchedName_ (this),
        SimFlowMover_ZoneName_ (this),
        SimFlowMover_SkinLossRadiativeFract_ (this),
        SimFlowMover_TotalRatedFlowRate_ (this),
        SimFlowMover_NumbPumpsInBank_ (this),
        SimFlowMover_FlowSeqContScheme_ (this)
      {
      }

      SimFlowMover_PumpSet::
      SimFlowMover_PumpSet (const SimFlowMover_PumpSet& x,
                            ::xml_schema::flags f,
                            ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowMover (x, f, c),
        SimFlowMover_Name_ (x.SimFlowMover_Name_, f, this),
        SimFlowMover_MotorEff_ (x.SimFlowMover_MotorEff_, f, this),
        SimFlowMover_InNodeName_ (x.SimFlowMover_InNodeName_, f, this),
        SimFlowMover_OutNodeName_ (x.SimFlowMover_OutNodeName_, f, this),
        SimFlowMover_RatedPumpHead_ (x.SimFlowMover_RatedPumpHead_, f, this),
        SimFlowMover_RatedPowerConsump_ (x.SimFlowMover_RatedPowerConsump_, f, this),
        SimFlowMover_FracMotorInEffToFluidStream_ (x.SimFlowMover_FracMotorInEffToFluidStream_, f, this),
        SimFlowMover_PumpContType_ (x.SimFlowMover_PumpContType_, f, this),
        SimFlowMover_PumpFlowRateSchedName_ (x.SimFlowMover_PumpFlowRateSchedName_, f, this),
        SimFlowMover_ZoneName_ (x.SimFlowMover_ZoneName_, f, this),
        SimFlowMover_SkinLossRadiativeFract_ (x.SimFlowMover_SkinLossRadiativeFract_, f, this),
        SimFlowMover_TotalRatedFlowRate_ (x.SimFlowMover_TotalRatedFlowRate_, f, this),
        SimFlowMover_NumbPumpsInBank_ (x.SimFlowMover_NumbPumpsInBank_, f, this),
        SimFlowMover_FlowSeqContScheme_ (x.SimFlowMover_FlowSeqContScheme_, f, this)
      {
      }

      SimFlowMover_PumpSet::
      SimFlowMover_PumpSet (const ::xercesc::DOMElement& e,
                            ::xml_schema::flags f,
                            ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowMover (e, f | ::xml_schema::flags::base, c),
        SimFlowMover_Name_ (this),
        SimFlowMover_MotorEff_ (this),
        SimFlowMover_InNodeName_ (this),
        SimFlowMover_OutNodeName_ (this),
        SimFlowMover_RatedPumpHead_ (this),
        SimFlowMover_RatedPowerConsump_ (this),
        SimFlowMover_FracMotorInEffToFluidStream_ (this),
        SimFlowMover_PumpContType_ (this),
        SimFlowMover_PumpFlowRateSchedName_ (this),
        SimFlowMover_ZoneName_ (this),
        SimFlowMover_SkinLossRadiativeFract_ (this),
        SimFlowMover_TotalRatedFlowRate_ (this),
        SimFlowMover_NumbPumpsInBank_ (this),
        SimFlowMover_FlowSeqContScheme_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowMover_PumpSet::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimFlowMover::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowMover_Name
          //
          if (n.name () == "SimFlowMover_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowMover_Name_type > r (
              SimFlowMover_Name_traits::create (i, f, this));

            if (!this->SimFlowMover_Name_)
            {
              this->SimFlowMover_Name_.set (r);
              continue;
            }
          }

          // SimFlowMover_MotorEff
          //
          if (n.name () == "SimFlowMover_MotorEff" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowMover_MotorEff_)
            {
              this->SimFlowMover_MotorEff_.set (SimFlowMover_MotorEff_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowMover_InNodeName
          //
          if (n.name () == "SimFlowMover_InNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowMover_InNodeName_type > r (
              SimFlowMover_InNodeName_traits::create (i, f, this));

            if (!this->SimFlowMover_InNodeName_)
            {
              this->SimFlowMover_InNodeName_.set (r);
              continue;
            }
          }

          // SimFlowMover_OutNodeName
          //
          if (n.name () == "SimFlowMover_OutNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowMover_OutNodeName_type > r (
              SimFlowMover_OutNodeName_traits::create (i, f, this));

            if (!this->SimFlowMover_OutNodeName_)
            {
              this->SimFlowMover_OutNodeName_.set (r);
              continue;
            }
          }

          // SimFlowMover_RatedPumpHead
          //
          if (n.name () == "SimFlowMover_RatedPumpHead" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowMover_RatedPumpHead_)
            {
              this->SimFlowMover_RatedPumpHead_.set (SimFlowMover_RatedPumpHead_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowMover_RatedPowerConsump
          //
          if (n.name () == "SimFlowMover_RatedPowerConsump" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowMover_RatedPowerConsump_)
            {
              this->SimFlowMover_RatedPowerConsump_.set (SimFlowMover_RatedPowerConsump_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowMover_FracMotorInEffToFluidStream
          //
          if (n.name () == "SimFlowMover_FracMotorInEffToFluidStream" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowMover_FracMotorInEffToFluidStream_)
            {
              this->SimFlowMover_FracMotorInEffToFluidStream_.set (SimFlowMover_FracMotorInEffToFluidStream_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowMover_PumpContType
          //
          if (n.name () == "SimFlowMover_PumpContType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowMover_PumpContType_type > r (
              SimFlowMover_PumpContType_traits::create (i, f, this));

            if (!this->SimFlowMover_PumpContType_)
            {
              this->SimFlowMover_PumpContType_.set (r);
              continue;
            }
          }

          // SimFlowMover_PumpFlowRateSchedName
          //
          if (n.name () == "SimFlowMover_PumpFlowRateSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowMover_PumpFlowRateSchedName_type > r (
              SimFlowMover_PumpFlowRateSchedName_traits::create (i, f, this));

            if (!this->SimFlowMover_PumpFlowRateSchedName_)
            {
              this->SimFlowMover_PumpFlowRateSchedName_.set (r);
              continue;
            }
          }

          // SimFlowMover_ZoneName
          //
          if (n.name () == "SimFlowMover_ZoneName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowMover_ZoneName_type > r (
              SimFlowMover_ZoneName_traits::create (i, f, this));

            if (!this->SimFlowMover_ZoneName_)
            {
              this->SimFlowMover_ZoneName_.set (r);
              continue;
            }
          }

          // SimFlowMover_SkinLossRadiativeFract
          //
          if (n.name () == "SimFlowMover_SkinLossRadiativeFract" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowMover_SkinLossRadiativeFract_)
            {
              this->SimFlowMover_SkinLossRadiativeFract_.set (SimFlowMover_SkinLossRadiativeFract_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowMover_TotalRatedFlowRate
          //
          if (n.name () == "SimFlowMover_TotalRatedFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowMover_TotalRatedFlowRate_)
            {
              this->SimFlowMover_TotalRatedFlowRate_.set (SimFlowMover_TotalRatedFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowMover_NumbPumpsInBank
          //
          if (n.name () == "SimFlowMover_NumbPumpsInBank" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowMover_NumbPumpsInBank_)
            {
              this->SimFlowMover_NumbPumpsInBank_.set (SimFlowMover_NumbPumpsInBank_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowMover_FlowSeqContScheme
          //
          if (n.name () == "SimFlowMover_FlowSeqContScheme" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowMover_FlowSeqContScheme_type > r (
              SimFlowMover_FlowSeqContScheme_traits::create (i, f, this));

            if (!this->SimFlowMover_FlowSeqContScheme_)
            {
              this->SimFlowMover_FlowSeqContScheme_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowMover_PumpSet* SimFlowMover_PumpSet::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowMover_PumpSet (*this, f, c);
      }

      SimFlowMover_PumpSet& SimFlowMover_PumpSet::
      operator= (const SimFlowMover_PumpSet& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimFlowMover& > (*this) = x;
          this->SimFlowMover_Name_ = x.SimFlowMover_Name_;
          this->SimFlowMover_MotorEff_ = x.SimFlowMover_MotorEff_;
          this->SimFlowMover_InNodeName_ = x.SimFlowMover_InNodeName_;
          this->SimFlowMover_OutNodeName_ = x.SimFlowMover_OutNodeName_;
          this->SimFlowMover_RatedPumpHead_ = x.SimFlowMover_RatedPumpHead_;
          this->SimFlowMover_RatedPowerConsump_ = x.SimFlowMover_RatedPowerConsump_;
          this->SimFlowMover_FracMotorInEffToFluidStream_ = x.SimFlowMover_FracMotorInEffToFluidStream_;
          this->SimFlowMover_PumpContType_ = x.SimFlowMover_PumpContType_;
          this->SimFlowMover_PumpFlowRateSchedName_ = x.SimFlowMover_PumpFlowRateSchedName_;
          this->SimFlowMover_ZoneName_ = x.SimFlowMover_ZoneName_;
          this->SimFlowMover_SkinLossRadiativeFract_ = x.SimFlowMover_SkinLossRadiativeFract_;
          this->SimFlowMover_TotalRatedFlowRate_ = x.SimFlowMover_TotalRatedFlowRate_;
          this->SimFlowMover_NumbPumpsInBank_ = x.SimFlowMover_NumbPumpsInBank_;
          this->SimFlowMover_FlowSeqContScheme_ = x.SimFlowMover_FlowSeqContScheme_;
        }

        return *this;
      }

      SimFlowMover_PumpSet::
      ~SimFlowMover_PumpSet ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

