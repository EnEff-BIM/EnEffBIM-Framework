// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate.hxx"

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      // SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate
      // 

      const SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_ZoneOrZoneListName_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_ZoneOrZoneListName () const
      {
        return this->SimInfiltrationOrVentilation_ZoneOrZoneListName_;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_ZoneOrZoneListName_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_ZoneOrZoneListName ()
      {
        return this->SimInfiltrationOrVentilation_ZoneOrZoneListName_;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_ZoneOrZoneListName (const SimInfiltrationOrVentilation_ZoneOrZoneListName_type& x)
      {
        this->SimInfiltrationOrVentilation_ZoneOrZoneListName_.set (x);
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_ZoneOrZoneListName (const SimInfiltrationOrVentilation_ZoneOrZoneListName_optional& x)
      {
        this->SimInfiltrationOrVentilation_ZoneOrZoneListName_ = x;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_ZoneOrZoneListName (::std::auto_ptr< SimInfiltrationOrVentilation_ZoneOrZoneListName_type > x)
      {
        this->SimInfiltrationOrVentilation_ZoneOrZoneListName_.set (x);
      }

      const SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_SchedName_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_SchedName () const
      {
        return this->SimInfiltrationOrVentilation_SchedName_;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_SchedName_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_SchedName ()
      {
        return this->SimInfiltrationOrVentilation_SchedName_;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_SchedName (const SimInfiltrationOrVentilation_SchedName_type& x)
      {
        this->SimInfiltrationOrVentilation_SchedName_.set (x);
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_SchedName (const SimInfiltrationOrVentilation_SchedName_optional& x)
      {
        this->SimInfiltrationOrVentilation_SchedName_ = x;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_SchedName (::std::auto_ptr< SimInfiltrationOrVentilation_SchedName_type > x)
      {
        this->SimInfiltrationOrVentilation_SchedName_.set (x);
      }

      const SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_DesignFlowRateCalcMeth_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_DesignFlowRateCalcMeth () const
      {
        return this->SimInfiltrationOrVentilation_DesignFlowRateCalcMeth_;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_DesignFlowRateCalcMeth_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_DesignFlowRateCalcMeth ()
      {
        return this->SimInfiltrationOrVentilation_DesignFlowRateCalcMeth_;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_DesignFlowRateCalcMeth (const SimInfiltrationOrVentilation_DesignFlowRateCalcMeth_type& x)
      {
        this->SimInfiltrationOrVentilation_DesignFlowRateCalcMeth_.set (x);
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_DesignFlowRateCalcMeth (const SimInfiltrationOrVentilation_DesignFlowRateCalcMeth_optional& x)
      {
        this->SimInfiltrationOrVentilation_DesignFlowRateCalcMeth_ = x;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_DesignFlowRateCalcMeth (::std::auto_ptr< SimInfiltrationOrVentilation_DesignFlowRateCalcMeth_type > x)
      {
        this->SimInfiltrationOrVentilation_DesignFlowRateCalcMeth_.set (x);
      }

      const SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_DesignFlowRate_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_DesignFlowRate () const
      {
        return this->SimInfiltrationOrVentilation_DesignFlowRate_;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_DesignFlowRate_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_DesignFlowRate ()
      {
        return this->SimInfiltrationOrVentilation_DesignFlowRate_;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_DesignFlowRate (const SimInfiltrationOrVentilation_DesignFlowRate_type& x)
      {
        this->SimInfiltrationOrVentilation_DesignFlowRate_.set (x);
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_DesignFlowRate (const SimInfiltrationOrVentilation_DesignFlowRate_optional& x)
      {
        this->SimInfiltrationOrVentilation_DesignFlowRate_ = x;
      }

      const SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_AirChngPerHour_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_AirChngPerHour () const
      {
        return this->SimInfiltrationOrVentilation_AirChngPerHour_;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_AirChngPerHour_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_AirChngPerHour ()
      {
        return this->SimInfiltrationOrVentilation_AirChngPerHour_;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_AirChngPerHour (const SimInfiltrationOrVentilation_AirChngPerHour_type& x)
      {
        this->SimInfiltrationOrVentilation_AirChngPerHour_.set (x);
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_AirChngPerHour (const SimInfiltrationOrVentilation_AirChngPerHour_optional& x)
      {
        this->SimInfiltrationOrVentilation_AirChngPerHour_ = x;
      }

      const SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_ConstantTermCoeff_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_ConstantTermCoeff () const
      {
        return this->SimInfiltrationOrVentilation_ConstantTermCoeff_;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_ConstantTermCoeff_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_ConstantTermCoeff ()
      {
        return this->SimInfiltrationOrVentilation_ConstantTermCoeff_;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_ConstantTermCoeff (const SimInfiltrationOrVentilation_ConstantTermCoeff_type& x)
      {
        this->SimInfiltrationOrVentilation_ConstantTermCoeff_.set (x);
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_ConstantTermCoeff (const SimInfiltrationOrVentilation_ConstantTermCoeff_optional& x)
      {
        this->SimInfiltrationOrVentilation_ConstantTermCoeff_ = x;
      }

      const SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_TempTermCoeff_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_TempTermCoeff () const
      {
        return this->SimInfiltrationOrVentilation_TempTermCoeff_;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_TempTermCoeff_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_TempTermCoeff ()
      {
        return this->SimInfiltrationOrVentilation_TempTermCoeff_;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_TempTermCoeff (const SimInfiltrationOrVentilation_TempTermCoeff_type& x)
      {
        this->SimInfiltrationOrVentilation_TempTermCoeff_.set (x);
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_TempTermCoeff (const SimInfiltrationOrVentilation_TempTermCoeff_optional& x)
      {
        this->SimInfiltrationOrVentilation_TempTermCoeff_ = x;
      }

      const SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_VelTermCoeff_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_VelTermCoeff () const
      {
        return this->SimInfiltrationOrVentilation_VelTermCoeff_;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_VelTermCoeff_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_VelTermCoeff ()
      {
        return this->SimInfiltrationOrVentilation_VelTermCoeff_;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_VelTermCoeff (const SimInfiltrationOrVentilation_VelTermCoeff_type& x)
      {
        this->SimInfiltrationOrVentilation_VelTermCoeff_.set (x);
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_VelTermCoeff (const SimInfiltrationOrVentilation_VelTermCoeff_optional& x)
      {
        this->SimInfiltrationOrVentilation_VelTermCoeff_ = x;
      }

      const SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_VelSquaredTermCoeff_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_VelSquaredTermCoeff () const
      {
        return this->SimInfiltrationOrVentilation_VelSquaredTermCoeff_;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_VelSquaredTermCoeff_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_VelSquaredTermCoeff ()
      {
        return this->SimInfiltrationOrVentilation_VelSquaredTermCoeff_;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_VelSquaredTermCoeff (const SimInfiltrationOrVentilation_VelSquaredTermCoeff_type& x)
      {
        this->SimInfiltrationOrVentilation_VelSquaredTermCoeff_.set (x);
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_VelSquaredTermCoeff (const SimInfiltrationOrVentilation_VelSquaredTermCoeff_optional& x)
      {
        this->SimInfiltrationOrVentilation_VelSquaredTermCoeff_ = x;
      }

      const SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea () const
      {
        return this->SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea_;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea ()
      {
        return this->SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea_;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea (const SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea_type& x)
      {
        this->SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea_.set (x);
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea (const SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea_optional& x)
      {
        this->SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea_ = x;
      }

      const SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_FlowRatePerPerson_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_FlowRatePerPerson () const
      {
        return this->SimInfiltrationOrVentilation_FlowRatePerPerson_;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_FlowRatePerPerson_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_FlowRatePerPerson ()
      {
        return this->SimInfiltrationOrVentilation_FlowRatePerPerson_;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_FlowRatePerPerson (const SimInfiltrationOrVentilation_FlowRatePerPerson_type& x)
      {
        this->SimInfiltrationOrVentilation_FlowRatePerPerson_.set (x);
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_FlowRatePerPerson (const SimInfiltrationOrVentilation_FlowRatePerPerson_optional& x)
      {
        this->SimInfiltrationOrVentilation_FlowRatePerPerson_ = x;
      }

      const SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_VentType_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_VentType () const
      {
        return this->SimInfiltrationOrVentilation_VentType_;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_VentType_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_VentType ()
      {
        return this->SimInfiltrationOrVentilation_VentType_;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_VentType (const SimInfiltrationOrVentilation_VentType_type& x)
      {
        this->SimInfiltrationOrVentilation_VentType_.set (x);
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_VentType (const SimInfiltrationOrVentilation_VentType_optional& x)
      {
        this->SimInfiltrationOrVentilation_VentType_ = x;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_VentType (::std::auto_ptr< SimInfiltrationOrVentilation_VentType_type > x)
      {
        this->SimInfiltrationOrVentilation_VentType_.set (x);
      }

      const SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_FanPresRise_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_FanPresRise () const
      {
        return this->SimInfiltrationOrVentilation_FanPresRise_;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_FanPresRise_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_FanPresRise ()
      {
        return this->SimInfiltrationOrVentilation_FanPresRise_;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_FanPresRise (const SimInfiltrationOrVentilation_FanPresRise_type& x)
      {
        this->SimInfiltrationOrVentilation_FanPresRise_.set (x);
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_FanPresRise (const SimInfiltrationOrVentilation_FanPresRise_optional& x)
      {
        this->SimInfiltrationOrVentilation_FanPresRise_ = x;
      }

      const SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_FanTotalEff_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_FanTotalEff () const
      {
        return this->SimInfiltrationOrVentilation_FanTotalEff_;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::SimInfiltrationOrVentilation_FanTotalEff_optional& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_FanTotalEff ()
      {
        return this->SimInfiltrationOrVentilation_FanTotalEff_;
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_FanTotalEff (const SimInfiltrationOrVentilation_FanTotalEff_type& x)
      {
        this->SimInfiltrationOrVentilation_FanTotalEff_.set (x);
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_FanTotalEff (const SimInfiltrationOrVentilation_FanTotalEff_optional& x)
      {
        this->SimInfiltrationOrVentilation_FanTotalEff_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      // SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate
      //

      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate ()
      : ::schema::simxml::ResourcesGeneral::SimInfiltrationOrVentilation_ZoneVentilation (),
        SimInfiltrationOrVentilation_ZoneOrZoneListName_ (this),
        SimInfiltrationOrVentilation_SchedName_ (this),
        SimInfiltrationOrVentilation_DesignFlowRateCalcMeth_ (this),
        SimInfiltrationOrVentilation_DesignFlowRate_ (this),
        SimInfiltrationOrVentilation_AirChngPerHour_ (this),
        SimInfiltrationOrVentilation_ConstantTermCoeff_ (this),
        SimInfiltrationOrVentilation_TempTermCoeff_ (this),
        SimInfiltrationOrVentilation_VelTermCoeff_ (this),
        SimInfiltrationOrVentilation_VelSquaredTermCoeff_ (this),
        SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea_ (this),
        SimInfiltrationOrVentilation_FlowRatePerPerson_ (this),
        SimInfiltrationOrVentilation_VentType_ (this),
        SimInfiltrationOrVentilation_FanPresRise_ (this),
        SimInfiltrationOrVentilation_FanTotalEff_ (this)
      {
      }

      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate (const RefId_type& RefId)
      : ::schema::simxml::ResourcesGeneral::SimInfiltrationOrVentilation_ZoneVentilation (RefId),
        SimInfiltrationOrVentilation_ZoneOrZoneListName_ (this),
        SimInfiltrationOrVentilation_SchedName_ (this),
        SimInfiltrationOrVentilation_DesignFlowRateCalcMeth_ (this),
        SimInfiltrationOrVentilation_DesignFlowRate_ (this),
        SimInfiltrationOrVentilation_AirChngPerHour_ (this),
        SimInfiltrationOrVentilation_ConstantTermCoeff_ (this),
        SimInfiltrationOrVentilation_TempTermCoeff_ (this),
        SimInfiltrationOrVentilation_VelTermCoeff_ (this),
        SimInfiltrationOrVentilation_VelSquaredTermCoeff_ (this),
        SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea_ (this),
        SimInfiltrationOrVentilation_FlowRatePerPerson_ (this),
        SimInfiltrationOrVentilation_VentType_ (this),
        SimInfiltrationOrVentilation_FanPresRise_ (this),
        SimInfiltrationOrVentilation_FanTotalEff_ (this)
      {
      }

      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate (const SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate& x,
                                                                   ::xml_schema::flags f,
                                                                   ::xml_schema::container* c)
      : ::schema::simxml::ResourcesGeneral::SimInfiltrationOrVentilation_ZoneVentilation (x, f, c),
        SimInfiltrationOrVentilation_ZoneOrZoneListName_ (x.SimInfiltrationOrVentilation_ZoneOrZoneListName_, f, this),
        SimInfiltrationOrVentilation_SchedName_ (x.SimInfiltrationOrVentilation_SchedName_, f, this),
        SimInfiltrationOrVentilation_DesignFlowRateCalcMeth_ (x.SimInfiltrationOrVentilation_DesignFlowRateCalcMeth_, f, this),
        SimInfiltrationOrVentilation_DesignFlowRate_ (x.SimInfiltrationOrVentilation_DesignFlowRate_, f, this),
        SimInfiltrationOrVentilation_AirChngPerHour_ (x.SimInfiltrationOrVentilation_AirChngPerHour_, f, this),
        SimInfiltrationOrVentilation_ConstantTermCoeff_ (x.SimInfiltrationOrVentilation_ConstantTermCoeff_, f, this),
        SimInfiltrationOrVentilation_TempTermCoeff_ (x.SimInfiltrationOrVentilation_TempTermCoeff_, f, this),
        SimInfiltrationOrVentilation_VelTermCoeff_ (x.SimInfiltrationOrVentilation_VelTermCoeff_, f, this),
        SimInfiltrationOrVentilation_VelSquaredTermCoeff_ (x.SimInfiltrationOrVentilation_VelSquaredTermCoeff_, f, this),
        SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea_ (x.SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea_, f, this),
        SimInfiltrationOrVentilation_FlowRatePerPerson_ (x.SimInfiltrationOrVentilation_FlowRatePerPerson_, f, this),
        SimInfiltrationOrVentilation_VentType_ (x.SimInfiltrationOrVentilation_VentType_, f, this),
        SimInfiltrationOrVentilation_FanPresRise_ (x.SimInfiltrationOrVentilation_FanPresRise_, f, this),
        SimInfiltrationOrVentilation_FanTotalEff_ (x.SimInfiltrationOrVentilation_FanTotalEff_, f, this)
      {
      }

      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate (const ::xercesc::DOMElement& e,
                                                                   ::xml_schema::flags f,
                                                                   ::xml_schema::container* c)
      : ::schema::simxml::ResourcesGeneral::SimInfiltrationOrVentilation_ZoneVentilation (e, f | ::xml_schema::flags::base, c),
        SimInfiltrationOrVentilation_ZoneOrZoneListName_ (this),
        SimInfiltrationOrVentilation_SchedName_ (this),
        SimInfiltrationOrVentilation_DesignFlowRateCalcMeth_ (this),
        SimInfiltrationOrVentilation_DesignFlowRate_ (this),
        SimInfiltrationOrVentilation_AirChngPerHour_ (this),
        SimInfiltrationOrVentilation_ConstantTermCoeff_ (this),
        SimInfiltrationOrVentilation_TempTermCoeff_ (this),
        SimInfiltrationOrVentilation_VelTermCoeff_ (this),
        SimInfiltrationOrVentilation_VelSquaredTermCoeff_ (this),
        SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea_ (this),
        SimInfiltrationOrVentilation_FlowRatePerPerson_ (this),
        SimInfiltrationOrVentilation_VentType_ (this),
        SimInfiltrationOrVentilation_FanPresRise_ (this),
        SimInfiltrationOrVentilation_FanTotalEff_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::ResourcesGeneral::SimInfiltrationOrVentilation_ZoneVentilation::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimInfiltrationOrVentilation_ZoneOrZoneListName
          //
          if (n.name () == "SimInfiltrationOrVentilation_ZoneOrZoneListName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimInfiltrationOrVentilation_ZoneOrZoneListName_type > r (
              SimInfiltrationOrVentilation_ZoneOrZoneListName_traits::create (i, f, this));

            if (!this->SimInfiltrationOrVentilation_ZoneOrZoneListName_)
            {
              this->SimInfiltrationOrVentilation_ZoneOrZoneListName_.set (r);
              continue;
            }
          }

          // SimInfiltrationOrVentilation_SchedName
          //
          if (n.name () == "SimInfiltrationOrVentilation_SchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimInfiltrationOrVentilation_SchedName_type > r (
              SimInfiltrationOrVentilation_SchedName_traits::create (i, f, this));

            if (!this->SimInfiltrationOrVentilation_SchedName_)
            {
              this->SimInfiltrationOrVentilation_SchedName_.set (r);
              continue;
            }
          }

          // SimInfiltrationOrVentilation_DesignFlowRateCalcMeth
          //
          if (n.name () == "SimInfiltrationOrVentilation_DesignFlowRateCalcMeth" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimInfiltrationOrVentilation_DesignFlowRateCalcMeth_type > r (
              SimInfiltrationOrVentilation_DesignFlowRateCalcMeth_traits::create (i, f, this));

            if (!this->SimInfiltrationOrVentilation_DesignFlowRateCalcMeth_)
            {
              this->SimInfiltrationOrVentilation_DesignFlowRateCalcMeth_.set (r);
              continue;
            }
          }

          // SimInfiltrationOrVentilation_DesignFlowRate
          //
          if (n.name () == "SimInfiltrationOrVentilation_DesignFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimInfiltrationOrVentilation_DesignFlowRate_)
            {
              this->SimInfiltrationOrVentilation_DesignFlowRate_.set (SimInfiltrationOrVentilation_DesignFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimInfiltrationOrVentilation_AirChngPerHour
          //
          if (n.name () == "SimInfiltrationOrVentilation_AirChngPerHour" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimInfiltrationOrVentilation_AirChngPerHour_)
            {
              this->SimInfiltrationOrVentilation_AirChngPerHour_.set (SimInfiltrationOrVentilation_AirChngPerHour_traits::create (i, f, this));
              continue;
            }
          }

          // SimInfiltrationOrVentilation_ConstantTermCoeff
          //
          if (n.name () == "SimInfiltrationOrVentilation_ConstantTermCoeff" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimInfiltrationOrVentilation_ConstantTermCoeff_)
            {
              this->SimInfiltrationOrVentilation_ConstantTermCoeff_.set (SimInfiltrationOrVentilation_ConstantTermCoeff_traits::create (i, f, this));
              continue;
            }
          }

          // SimInfiltrationOrVentilation_TempTermCoeff
          //
          if (n.name () == "SimInfiltrationOrVentilation_TempTermCoeff" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimInfiltrationOrVentilation_TempTermCoeff_)
            {
              this->SimInfiltrationOrVentilation_TempTermCoeff_.set (SimInfiltrationOrVentilation_TempTermCoeff_traits::create (i, f, this));
              continue;
            }
          }

          // SimInfiltrationOrVentilation_VelTermCoeff
          //
          if (n.name () == "SimInfiltrationOrVentilation_VelTermCoeff" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimInfiltrationOrVentilation_VelTermCoeff_)
            {
              this->SimInfiltrationOrVentilation_VelTermCoeff_.set (SimInfiltrationOrVentilation_VelTermCoeff_traits::create (i, f, this));
              continue;
            }
          }

          // SimInfiltrationOrVentilation_VelSquaredTermCoeff
          //
          if (n.name () == "SimInfiltrationOrVentilation_VelSquaredTermCoeff" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimInfiltrationOrVentilation_VelSquaredTermCoeff_)
            {
              this->SimInfiltrationOrVentilation_VelSquaredTermCoeff_.set (SimInfiltrationOrVentilation_VelSquaredTermCoeff_traits::create (i, f, this));
              continue;
            }
          }

          // SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea
          //
          if (n.name () == "SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea_)
            {
              this->SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea_.set (SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea_traits::create (i, f, this));
              continue;
            }
          }

          // SimInfiltrationOrVentilation_FlowRatePerPerson
          //
          if (n.name () == "SimInfiltrationOrVentilation_FlowRatePerPerson" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimInfiltrationOrVentilation_FlowRatePerPerson_)
            {
              this->SimInfiltrationOrVentilation_FlowRatePerPerson_.set (SimInfiltrationOrVentilation_FlowRatePerPerson_traits::create (i, f, this));
              continue;
            }
          }

          // SimInfiltrationOrVentilation_VentType
          //
          if (n.name () == "SimInfiltrationOrVentilation_VentType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimInfiltrationOrVentilation_VentType_type > r (
              SimInfiltrationOrVentilation_VentType_traits::create (i, f, this));

            if (!this->SimInfiltrationOrVentilation_VentType_)
            {
              this->SimInfiltrationOrVentilation_VentType_.set (r);
              continue;
            }
          }

          // SimInfiltrationOrVentilation_FanPresRise
          //
          if (n.name () == "SimInfiltrationOrVentilation_FanPresRise" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimInfiltrationOrVentilation_FanPresRise_)
            {
              this->SimInfiltrationOrVentilation_FanPresRise_.set (SimInfiltrationOrVentilation_FanPresRise_traits::create (i, f, this));
              continue;
            }
          }

          // SimInfiltrationOrVentilation_FanTotalEff
          //
          if (n.name () == "SimInfiltrationOrVentilation_FanTotalEff" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimInfiltrationOrVentilation_FanTotalEff_)
            {
              this->SimInfiltrationOrVentilation_FanTotalEff_.set (SimInfiltrationOrVentilation_FanTotalEff_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate* SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate (*this, f, c);
      }

      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate& SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      operator= (const SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::ResourcesGeneral::SimInfiltrationOrVentilation_ZoneVentilation& > (*this) = x;
          this->SimInfiltrationOrVentilation_ZoneOrZoneListName_ = x.SimInfiltrationOrVentilation_ZoneOrZoneListName_;
          this->SimInfiltrationOrVentilation_SchedName_ = x.SimInfiltrationOrVentilation_SchedName_;
          this->SimInfiltrationOrVentilation_DesignFlowRateCalcMeth_ = x.SimInfiltrationOrVentilation_DesignFlowRateCalcMeth_;
          this->SimInfiltrationOrVentilation_DesignFlowRate_ = x.SimInfiltrationOrVentilation_DesignFlowRate_;
          this->SimInfiltrationOrVentilation_AirChngPerHour_ = x.SimInfiltrationOrVentilation_AirChngPerHour_;
          this->SimInfiltrationOrVentilation_ConstantTermCoeff_ = x.SimInfiltrationOrVentilation_ConstantTermCoeff_;
          this->SimInfiltrationOrVentilation_TempTermCoeff_ = x.SimInfiltrationOrVentilation_TempTermCoeff_;
          this->SimInfiltrationOrVentilation_VelTermCoeff_ = x.SimInfiltrationOrVentilation_VelTermCoeff_;
          this->SimInfiltrationOrVentilation_VelSquaredTermCoeff_ = x.SimInfiltrationOrVentilation_VelSquaredTermCoeff_;
          this->SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea_ = x.SimInfiltrationOrVentilation_FlowRatePerZoneFlrArea_;
          this->SimInfiltrationOrVentilation_FlowRatePerPerson_ = x.SimInfiltrationOrVentilation_FlowRatePerPerson_;
          this->SimInfiltrationOrVentilation_VentType_ = x.SimInfiltrationOrVentilation_VentType_;
          this->SimInfiltrationOrVentilation_FanPresRise_ = x.SimInfiltrationOrVentilation_FanPresRise_;
          this->SimInfiltrationOrVentilation_FanTotalEff_ = x.SimInfiltrationOrVentilation_FanTotalEff_;
        }

        return *this;
      }

      SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate::
      ~SimInfiltrationOrVentilation_ZoneVentilation_DesignFlowRate ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

