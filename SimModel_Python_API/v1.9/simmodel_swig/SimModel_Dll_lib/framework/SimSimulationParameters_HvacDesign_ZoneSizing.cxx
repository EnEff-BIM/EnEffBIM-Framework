// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimSimulationParameters_HvacDesign_ZoneSizing.hxx"

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      // SimSimulationParameters_HvacDesign_ZoneSizing
      // 

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneOrZoneListName_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneOrZoneListName () const
      {
        return this->SimSimParams_ZoneOrZoneListName_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneOrZoneListName_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneOrZoneListName ()
      {
        return this->SimSimParams_ZoneOrZoneListName_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneOrZoneListName (const SimSimParams_ZoneOrZoneListName_type& x)
      {
        this->SimSimParams_ZoneOrZoneListName_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneOrZoneListName (const SimSimParams_ZoneOrZoneListName_optional& x)
      {
        this->SimSimParams_ZoneOrZoneListName_ = x;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneOrZoneListName (::std::auto_ptr< SimSimParams_ZoneOrZoneListName_type > x)
      {
        this->SimSimParams_ZoneOrZoneListName_.set (x);
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod () const
      {
        return this->SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod ()
      {
        return this->SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod (const SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod_type& x)
      {
        this->SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod (const SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod_optional& x)
      {
        this->SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod_ = x;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod (::std::auto_ptr< SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod_type > x)
      {
        this->SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod_.set (x);
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneCoolDesignSupplyAirTemp_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneCoolDesignSupplyAirTemp () const
      {
        return this->SimSimParams_ZoneCoolDesignSupplyAirTemp_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneCoolDesignSupplyAirTemp_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneCoolDesignSupplyAirTemp ()
      {
        return this->SimSimParams_ZoneCoolDesignSupplyAirTemp_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneCoolDesignSupplyAirTemp (const SimSimParams_ZoneCoolDesignSupplyAirTemp_type& x)
      {
        this->SimSimParams_ZoneCoolDesignSupplyAirTemp_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneCoolDesignSupplyAirTemp (const SimSimParams_ZoneCoolDesignSupplyAirTemp_optional& x)
      {
        this->SimSimParams_ZoneCoolDesignSupplyAirTemp_ = x;
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneCoolingDesignSupplyAirTempDifference_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneCoolingDesignSupplyAirTempDifference () const
      {
        return this->SimSimParams_ZoneCoolingDesignSupplyAirTempDifference_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneCoolingDesignSupplyAirTempDifference_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneCoolingDesignSupplyAirTempDifference ()
      {
        return this->SimSimParams_ZoneCoolingDesignSupplyAirTempDifference_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneCoolingDesignSupplyAirTempDifference (const SimSimParams_ZoneCoolingDesignSupplyAirTempDifference_type& x)
      {
        this->SimSimParams_ZoneCoolingDesignSupplyAirTempDifference_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneCoolingDesignSupplyAirTempDifference (const SimSimParams_ZoneCoolingDesignSupplyAirTempDifference_optional& x)
      {
        this->SimSimParams_ZoneCoolingDesignSupplyAirTempDifference_ = x;
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod () const
      {
        return this->SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod ()
      {
        return this->SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod (const SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod_type& x)
      {
        this->SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod (const SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod_optional& x)
      {
        this->SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod_ = x;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod (::std::auto_ptr< SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod_type > x)
      {
        this->SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod_.set (x);
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneHeatDesignSupplyAirTemp_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneHeatDesignSupplyAirTemp () const
      {
        return this->SimSimParams_ZoneHeatDesignSupplyAirTemp_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneHeatDesignSupplyAirTemp_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneHeatDesignSupplyAirTemp ()
      {
        return this->SimSimParams_ZoneHeatDesignSupplyAirTemp_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneHeatDesignSupplyAirTemp (const SimSimParams_ZoneHeatDesignSupplyAirTemp_type& x)
      {
        this->SimSimParams_ZoneHeatDesignSupplyAirTemp_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneHeatDesignSupplyAirTemp (const SimSimParams_ZoneHeatDesignSupplyAirTemp_optional& x)
      {
        this->SimSimParams_ZoneHeatDesignSupplyAirTemp_ = x;
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneHeatingDesignSupplyAirTempDifference_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneHeatingDesignSupplyAirTempDifference () const
      {
        return this->SimSimParams_ZoneHeatingDesignSupplyAirTempDifference_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneHeatingDesignSupplyAirTempDifference_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneHeatingDesignSupplyAirTempDifference ()
      {
        return this->SimSimParams_ZoneHeatingDesignSupplyAirTempDifference_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneHeatingDesignSupplyAirTempDifference (const SimSimParams_ZoneHeatingDesignSupplyAirTempDifference_type& x)
      {
        this->SimSimParams_ZoneHeatingDesignSupplyAirTempDifference_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneHeatingDesignSupplyAirTempDifference (const SimSimParams_ZoneHeatingDesignSupplyAirTempDifference_optional& x)
      {
        this->SimSimParams_ZoneHeatingDesignSupplyAirTempDifference_ = x;
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneCoolDesignSupplyAirHumidRatio_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneCoolDesignSupplyAirHumidRatio () const
      {
        return this->SimSimParams_ZoneCoolDesignSupplyAirHumidRatio_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneCoolDesignSupplyAirHumidRatio_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneCoolDesignSupplyAirHumidRatio ()
      {
        return this->SimSimParams_ZoneCoolDesignSupplyAirHumidRatio_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneCoolDesignSupplyAirHumidRatio (const SimSimParams_ZoneCoolDesignSupplyAirHumidRatio_type& x)
      {
        this->SimSimParams_ZoneCoolDesignSupplyAirHumidRatio_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneCoolDesignSupplyAirHumidRatio (const SimSimParams_ZoneCoolDesignSupplyAirHumidRatio_optional& x)
      {
        this->SimSimParams_ZoneCoolDesignSupplyAirHumidRatio_ = x;
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneHeatDesignSupplyAirHumidRatio_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneHeatDesignSupplyAirHumidRatio () const
      {
        return this->SimSimParams_ZoneHeatDesignSupplyAirHumidRatio_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneHeatDesignSupplyAirHumidRatio_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneHeatDesignSupplyAirHumidRatio ()
      {
        return this->SimSimParams_ZoneHeatDesignSupplyAirHumidRatio_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneHeatDesignSupplyAirHumidRatio (const SimSimParams_ZoneHeatDesignSupplyAirHumidRatio_type& x)
      {
        this->SimSimParams_ZoneHeatDesignSupplyAirHumidRatio_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneHeatDesignSupplyAirHumidRatio (const SimSimParams_ZoneHeatDesignSupplyAirHumidRatio_optional& x)
      {
        this->SimSimParams_ZoneHeatDesignSupplyAirHumidRatio_ = x;
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_DesignSpecOutdrAirObjName_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_DesignSpecOutdrAirObjName () const
      {
        return this->SimSimParams_DesignSpecOutdrAirObjName_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_DesignSpecOutdrAirObjName_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_DesignSpecOutdrAirObjName ()
      {
        return this->SimSimParams_DesignSpecOutdrAirObjName_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_DesignSpecOutdrAirObjName (const SimSimParams_DesignSpecOutdrAirObjName_type& x)
      {
        this->SimSimParams_DesignSpecOutdrAirObjName_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_DesignSpecOutdrAirObjName (const SimSimParams_DesignSpecOutdrAirObjName_optional& x)
      {
        this->SimSimParams_DesignSpecOutdrAirObjName_ = x;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_DesignSpecOutdrAirObjName (::std::auto_ptr< SimSimParams_DesignSpecOutdrAirObjName_type > x)
      {
        this->SimSimParams_DesignSpecOutdrAirObjName_.set (x);
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneHeatingSizingFactor_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneHeatingSizingFactor () const
      {
        return this->SimSimParams_ZoneHeatingSizingFactor_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneHeatingSizingFactor_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneHeatingSizingFactor ()
      {
        return this->SimSimParams_ZoneHeatingSizingFactor_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneHeatingSizingFactor (const SimSimParams_ZoneHeatingSizingFactor_type& x)
      {
        this->SimSimParams_ZoneHeatingSizingFactor_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneHeatingSizingFactor (const SimSimParams_ZoneHeatingSizingFactor_optional& x)
      {
        this->SimSimParams_ZoneHeatingSizingFactor_ = x;
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneCoolingSizingFactor_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneCoolingSizingFactor () const
      {
        return this->SimSimParams_ZoneCoolingSizingFactor_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_ZoneCoolingSizingFactor_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneCoolingSizingFactor ()
      {
        return this->SimSimParams_ZoneCoolingSizingFactor_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneCoolingSizingFactor (const SimSimParams_ZoneCoolingSizingFactor_type& x)
      {
        this->SimSimParams_ZoneCoolingSizingFactor_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_ZoneCoolingSizingFactor (const SimSimParams_ZoneCoolingSizingFactor_optional& x)
      {
        this->SimSimParams_ZoneCoolingSizingFactor_ = x;
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_CoolDesignAirFlowMethod_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_CoolDesignAirFlowMethod () const
      {
        return this->SimSimParams_CoolDesignAirFlowMethod_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_CoolDesignAirFlowMethod_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_CoolDesignAirFlowMethod ()
      {
        return this->SimSimParams_CoolDesignAirFlowMethod_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_CoolDesignAirFlowMethod (const SimSimParams_CoolDesignAirFlowMethod_type& x)
      {
        this->SimSimParams_CoolDesignAirFlowMethod_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_CoolDesignAirFlowMethod (const SimSimParams_CoolDesignAirFlowMethod_optional& x)
      {
        this->SimSimParams_CoolDesignAirFlowMethod_ = x;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_CoolDesignAirFlowMethod (::std::auto_ptr< SimSimParams_CoolDesignAirFlowMethod_type > x)
      {
        this->SimSimParams_CoolDesignAirFlowMethod_.set (x);
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_CoolDesignAirFlowRate_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_CoolDesignAirFlowRate () const
      {
        return this->SimSimParams_CoolDesignAirFlowRate_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_CoolDesignAirFlowRate_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_CoolDesignAirFlowRate ()
      {
        return this->SimSimParams_CoolDesignAirFlowRate_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_CoolDesignAirFlowRate (const SimSimParams_CoolDesignAirFlowRate_type& x)
      {
        this->SimSimParams_CoolDesignAirFlowRate_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_CoolDesignAirFlowRate (const SimSimParams_CoolDesignAirFlowRate_optional& x)
      {
        this->SimSimParams_CoolDesignAirFlowRate_ = x;
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_CoolMinAirFlowPerZoneFloorArea_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_CoolMinAirFlowPerZoneFloorArea () const
      {
        return this->SimSimParams_CoolMinAirFlowPerZoneFloorArea_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_CoolMinAirFlowPerZoneFloorArea_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_CoolMinAirFlowPerZoneFloorArea ()
      {
        return this->SimSimParams_CoolMinAirFlowPerZoneFloorArea_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_CoolMinAirFlowPerZoneFloorArea (const SimSimParams_CoolMinAirFlowPerZoneFloorArea_type& x)
      {
        this->SimSimParams_CoolMinAirFlowPerZoneFloorArea_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_CoolMinAirFlowPerZoneFloorArea (const SimSimParams_CoolMinAirFlowPerZoneFloorArea_optional& x)
      {
        this->SimSimParams_CoolMinAirFlowPerZoneFloorArea_ = x;
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_CoolMinAirFlow_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_CoolMinAirFlow () const
      {
        return this->SimSimParams_CoolMinAirFlow_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_CoolMinAirFlow_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_CoolMinAirFlow ()
      {
        return this->SimSimParams_CoolMinAirFlow_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_CoolMinAirFlow (const SimSimParams_CoolMinAirFlow_type& x)
      {
        this->SimSimParams_CoolMinAirFlow_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_CoolMinAirFlow (const SimSimParams_CoolMinAirFlow_optional& x)
      {
        this->SimSimParams_CoolMinAirFlow_ = x;
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_CoolMinAirFlowFraction_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_CoolMinAirFlowFraction () const
      {
        return this->SimSimParams_CoolMinAirFlowFraction_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_CoolMinAirFlowFraction_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_CoolMinAirFlowFraction ()
      {
        return this->SimSimParams_CoolMinAirFlowFraction_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_CoolMinAirFlowFraction (const SimSimParams_CoolMinAirFlowFraction_type& x)
      {
        this->SimSimParams_CoolMinAirFlowFraction_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_CoolMinAirFlowFraction (const SimSimParams_CoolMinAirFlowFraction_optional& x)
      {
        this->SimSimParams_CoolMinAirFlowFraction_ = x;
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_HeatDesignAirFlowMethod_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_HeatDesignAirFlowMethod () const
      {
        return this->SimSimParams_HeatDesignAirFlowMethod_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_HeatDesignAirFlowMethod_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_HeatDesignAirFlowMethod ()
      {
        return this->SimSimParams_HeatDesignAirFlowMethod_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_HeatDesignAirFlowMethod (const SimSimParams_HeatDesignAirFlowMethod_type& x)
      {
        this->SimSimParams_HeatDesignAirFlowMethod_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_HeatDesignAirFlowMethod (const SimSimParams_HeatDesignAirFlowMethod_optional& x)
      {
        this->SimSimParams_HeatDesignAirFlowMethod_ = x;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_HeatDesignAirFlowMethod (::std::auto_ptr< SimSimParams_HeatDesignAirFlowMethod_type > x)
      {
        this->SimSimParams_HeatDesignAirFlowMethod_.set (x);
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_HeatDesignAirFlowRate_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_HeatDesignAirFlowRate () const
      {
        return this->SimSimParams_HeatDesignAirFlowRate_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_HeatDesignAirFlowRate_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_HeatDesignAirFlowRate ()
      {
        return this->SimSimParams_HeatDesignAirFlowRate_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_HeatDesignAirFlowRate (const SimSimParams_HeatDesignAirFlowRate_type& x)
      {
        this->SimSimParams_HeatDesignAirFlowRate_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_HeatDesignAirFlowRate (const SimSimParams_HeatDesignAirFlowRate_optional& x)
      {
        this->SimSimParams_HeatDesignAirFlowRate_ = x;
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_HeatMaxAirFlowPerZoneFloorArea_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_HeatMaxAirFlowPerZoneFloorArea () const
      {
        return this->SimSimParams_HeatMaxAirFlowPerZoneFloorArea_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_HeatMaxAirFlowPerZoneFloorArea_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_HeatMaxAirFlowPerZoneFloorArea ()
      {
        return this->SimSimParams_HeatMaxAirFlowPerZoneFloorArea_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_HeatMaxAirFlowPerZoneFloorArea (const SimSimParams_HeatMaxAirFlowPerZoneFloorArea_type& x)
      {
        this->SimSimParams_HeatMaxAirFlowPerZoneFloorArea_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_HeatMaxAirFlowPerZoneFloorArea (const SimSimParams_HeatMaxAirFlowPerZoneFloorArea_optional& x)
      {
        this->SimSimParams_HeatMaxAirFlowPerZoneFloorArea_ = x;
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_HeatMaxAirFlow_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_HeatMaxAirFlow () const
      {
        return this->SimSimParams_HeatMaxAirFlow_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_HeatMaxAirFlow_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_HeatMaxAirFlow ()
      {
        return this->SimSimParams_HeatMaxAirFlow_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_HeatMaxAirFlow (const SimSimParams_HeatMaxAirFlow_type& x)
      {
        this->SimSimParams_HeatMaxAirFlow_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_HeatMaxAirFlow (const SimSimParams_HeatMaxAirFlow_optional& x)
      {
        this->SimSimParams_HeatMaxAirFlow_ = x;
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_HeatMaxAirFlowFraction_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_HeatMaxAirFlowFraction () const
      {
        return this->SimSimParams_HeatMaxAirFlowFraction_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_HeatMaxAirFlowFraction_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_HeatMaxAirFlowFraction ()
      {
        return this->SimSimParams_HeatMaxAirFlowFraction_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_HeatMaxAirFlowFraction (const SimSimParams_HeatMaxAirFlowFraction_type& x)
      {
        this->SimSimParams_HeatMaxAirFlowFraction_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_HeatMaxAirFlowFraction (const SimSimParams_HeatMaxAirFlowFraction_optional& x)
      {
        this->SimSimParams_HeatMaxAirFlowFraction_ = x;
      }

      const SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_DesignSpecZoneAirDistribObjName_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_DesignSpecZoneAirDistribObjName () const
      {
        return this->SimSimParams_DesignSpecZoneAirDistribObjName_;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::SimSimParams_DesignSpecZoneAirDistribObjName_optional& SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_DesignSpecZoneAirDistribObjName ()
      {
        return this->SimSimParams_DesignSpecZoneAirDistribObjName_;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_DesignSpecZoneAirDistribObjName (const SimSimParams_DesignSpecZoneAirDistribObjName_type& x)
      {
        this->SimSimParams_DesignSpecZoneAirDistribObjName_.set (x);
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_DesignSpecZoneAirDistribObjName (const SimSimParams_DesignSpecZoneAirDistribObjName_optional& x)
      {
        this->SimSimParams_DesignSpecZoneAirDistribObjName_ = x;
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimParams_DesignSpecZoneAirDistribObjName (::std::auto_ptr< SimSimParams_DesignSpecZoneAirDistribObjName_type > x)
      {
        this->SimSimParams_DesignSpecZoneAirDistribObjName_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      // SimSimulationParameters_HvacDesign_ZoneSizing
      //

      SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimulationParameters_HvacDesign_ZoneSizing ()
      : ::schema::simxml::ResourcesGeneral::SimSimulationParameters_HvacDesign (),
        SimSimParams_ZoneOrZoneListName_ (this),
        SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod_ (this),
        SimSimParams_ZoneCoolDesignSupplyAirTemp_ (this),
        SimSimParams_ZoneCoolingDesignSupplyAirTempDifference_ (this),
        SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod_ (this),
        SimSimParams_ZoneHeatDesignSupplyAirTemp_ (this),
        SimSimParams_ZoneHeatingDesignSupplyAirTempDifference_ (this),
        SimSimParams_ZoneCoolDesignSupplyAirHumidRatio_ (this),
        SimSimParams_ZoneHeatDesignSupplyAirHumidRatio_ (this),
        SimSimParams_DesignSpecOutdrAirObjName_ (this),
        SimSimParams_ZoneHeatingSizingFactor_ (this),
        SimSimParams_ZoneCoolingSizingFactor_ (this),
        SimSimParams_CoolDesignAirFlowMethod_ (this),
        SimSimParams_CoolDesignAirFlowRate_ (this),
        SimSimParams_CoolMinAirFlowPerZoneFloorArea_ (this),
        SimSimParams_CoolMinAirFlow_ (this),
        SimSimParams_CoolMinAirFlowFraction_ (this),
        SimSimParams_HeatDesignAirFlowMethod_ (this),
        SimSimParams_HeatDesignAirFlowRate_ (this),
        SimSimParams_HeatMaxAirFlowPerZoneFloorArea_ (this),
        SimSimParams_HeatMaxAirFlow_ (this),
        SimSimParams_HeatMaxAirFlowFraction_ (this),
        SimSimParams_DesignSpecZoneAirDistribObjName_ (this)
      {
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimulationParameters_HvacDesign_ZoneSizing (const RefId_type& RefId)
      : ::schema::simxml::ResourcesGeneral::SimSimulationParameters_HvacDesign (RefId),
        SimSimParams_ZoneOrZoneListName_ (this),
        SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod_ (this),
        SimSimParams_ZoneCoolDesignSupplyAirTemp_ (this),
        SimSimParams_ZoneCoolingDesignSupplyAirTempDifference_ (this),
        SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod_ (this),
        SimSimParams_ZoneHeatDesignSupplyAirTemp_ (this),
        SimSimParams_ZoneHeatingDesignSupplyAirTempDifference_ (this),
        SimSimParams_ZoneCoolDesignSupplyAirHumidRatio_ (this),
        SimSimParams_ZoneHeatDesignSupplyAirHumidRatio_ (this),
        SimSimParams_DesignSpecOutdrAirObjName_ (this),
        SimSimParams_ZoneHeatingSizingFactor_ (this),
        SimSimParams_ZoneCoolingSizingFactor_ (this),
        SimSimParams_CoolDesignAirFlowMethod_ (this),
        SimSimParams_CoolDesignAirFlowRate_ (this),
        SimSimParams_CoolMinAirFlowPerZoneFloorArea_ (this),
        SimSimParams_CoolMinAirFlow_ (this),
        SimSimParams_CoolMinAirFlowFraction_ (this),
        SimSimParams_HeatDesignAirFlowMethod_ (this),
        SimSimParams_HeatDesignAirFlowRate_ (this),
        SimSimParams_HeatMaxAirFlowPerZoneFloorArea_ (this),
        SimSimParams_HeatMaxAirFlow_ (this),
        SimSimParams_HeatMaxAirFlowFraction_ (this),
        SimSimParams_DesignSpecZoneAirDistribObjName_ (this)
      {
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimulationParameters_HvacDesign_ZoneSizing (const SimSimulationParameters_HvacDesign_ZoneSizing& x,
                                                     ::xml_schema::flags f,
                                                     ::xml_schema::container* c)
      : ::schema::simxml::ResourcesGeneral::SimSimulationParameters_HvacDesign (x, f, c),
        SimSimParams_ZoneOrZoneListName_ (x.SimSimParams_ZoneOrZoneListName_, f, this),
        SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod_ (x.SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod_, f, this),
        SimSimParams_ZoneCoolDesignSupplyAirTemp_ (x.SimSimParams_ZoneCoolDesignSupplyAirTemp_, f, this),
        SimSimParams_ZoneCoolingDesignSupplyAirTempDifference_ (x.SimSimParams_ZoneCoolingDesignSupplyAirTempDifference_, f, this),
        SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod_ (x.SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod_, f, this),
        SimSimParams_ZoneHeatDesignSupplyAirTemp_ (x.SimSimParams_ZoneHeatDesignSupplyAirTemp_, f, this),
        SimSimParams_ZoneHeatingDesignSupplyAirTempDifference_ (x.SimSimParams_ZoneHeatingDesignSupplyAirTempDifference_, f, this),
        SimSimParams_ZoneCoolDesignSupplyAirHumidRatio_ (x.SimSimParams_ZoneCoolDesignSupplyAirHumidRatio_, f, this),
        SimSimParams_ZoneHeatDesignSupplyAirHumidRatio_ (x.SimSimParams_ZoneHeatDesignSupplyAirHumidRatio_, f, this),
        SimSimParams_DesignSpecOutdrAirObjName_ (x.SimSimParams_DesignSpecOutdrAirObjName_, f, this),
        SimSimParams_ZoneHeatingSizingFactor_ (x.SimSimParams_ZoneHeatingSizingFactor_, f, this),
        SimSimParams_ZoneCoolingSizingFactor_ (x.SimSimParams_ZoneCoolingSizingFactor_, f, this),
        SimSimParams_CoolDesignAirFlowMethod_ (x.SimSimParams_CoolDesignAirFlowMethod_, f, this),
        SimSimParams_CoolDesignAirFlowRate_ (x.SimSimParams_CoolDesignAirFlowRate_, f, this),
        SimSimParams_CoolMinAirFlowPerZoneFloorArea_ (x.SimSimParams_CoolMinAirFlowPerZoneFloorArea_, f, this),
        SimSimParams_CoolMinAirFlow_ (x.SimSimParams_CoolMinAirFlow_, f, this),
        SimSimParams_CoolMinAirFlowFraction_ (x.SimSimParams_CoolMinAirFlowFraction_, f, this),
        SimSimParams_HeatDesignAirFlowMethod_ (x.SimSimParams_HeatDesignAirFlowMethod_, f, this),
        SimSimParams_HeatDesignAirFlowRate_ (x.SimSimParams_HeatDesignAirFlowRate_, f, this),
        SimSimParams_HeatMaxAirFlowPerZoneFloorArea_ (x.SimSimParams_HeatMaxAirFlowPerZoneFloorArea_, f, this),
        SimSimParams_HeatMaxAirFlow_ (x.SimSimParams_HeatMaxAirFlow_, f, this),
        SimSimParams_HeatMaxAirFlowFraction_ (x.SimSimParams_HeatMaxAirFlowFraction_, f, this),
        SimSimParams_DesignSpecZoneAirDistribObjName_ (x.SimSimParams_DesignSpecZoneAirDistribObjName_, f, this)
      {
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::
      SimSimulationParameters_HvacDesign_ZoneSizing (const ::xercesc::DOMElement& e,
                                                     ::xml_schema::flags f,
                                                     ::xml_schema::container* c)
      : ::schema::simxml::ResourcesGeneral::SimSimulationParameters_HvacDesign (e, f | ::xml_schema::flags::base, c),
        SimSimParams_ZoneOrZoneListName_ (this),
        SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod_ (this),
        SimSimParams_ZoneCoolDesignSupplyAirTemp_ (this),
        SimSimParams_ZoneCoolingDesignSupplyAirTempDifference_ (this),
        SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod_ (this),
        SimSimParams_ZoneHeatDesignSupplyAirTemp_ (this),
        SimSimParams_ZoneHeatingDesignSupplyAirTempDifference_ (this),
        SimSimParams_ZoneCoolDesignSupplyAirHumidRatio_ (this),
        SimSimParams_ZoneHeatDesignSupplyAirHumidRatio_ (this),
        SimSimParams_DesignSpecOutdrAirObjName_ (this),
        SimSimParams_ZoneHeatingSizingFactor_ (this),
        SimSimParams_ZoneCoolingSizingFactor_ (this),
        SimSimParams_CoolDesignAirFlowMethod_ (this),
        SimSimParams_CoolDesignAirFlowRate_ (this),
        SimSimParams_CoolMinAirFlowPerZoneFloorArea_ (this),
        SimSimParams_CoolMinAirFlow_ (this),
        SimSimParams_CoolMinAirFlowFraction_ (this),
        SimSimParams_HeatDesignAirFlowMethod_ (this),
        SimSimParams_HeatDesignAirFlowRate_ (this),
        SimSimParams_HeatMaxAirFlowPerZoneFloorArea_ (this),
        SimSimParams_HeatMaxAirFlow_ (this),
        SimSimParams_HeatMaxAirFlowFraction_ (this),
        SimSimParams_DesignSpecZoneAirDistribObjName_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimSimulationParameters_HvacDesign_ZoneSizing::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::ResourcesGeneral::SimSimulationParameters_HvacDesign::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimSimParams_ZoneOrZoneListName
          //
          if (n.name () == "SimSimParams_ZoneOrZoneListName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimSimParams_ZoneOrZoneListName_type > r (
              SimSimParams_ZoneOrZoneListName_traits::create (i, f, this));

            if (!this->SimSimParams_ZoneOrZoneListName_)
            {
              this->SimSimParams_ZoneOrZoneListName_.set (r);
              continue;
            }
          }

          // SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod
          //
          if (n.name () == "SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod_type > r (
              SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod_traits::create (i, f, this));

            if (!this->SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod_)
            {
              this->SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod_.set (r);
              continue;
            }
          }

          // SimSimParams_ZoneCoolDesignSupplyAirTemp
          //
          if (n.name () == "SimSimParams_ZoneCoolDesignSupplyAirTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_ZoneCoolDesignSupplyAirTemp_)
            {
              this->SimSimParams_ZoneCoolDesignSupplyAirTemp_.set (SimSimParams_ZoneCoolDesignSupplyAirTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimParams_ZoneCoolingDesignSupplyAirTempDifference
          //
          if (n.name () == "SimSimParams_ZoneCoolingDesignSupplyAirTempDifference" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_ZoneCoolingDesignSupplyAirTempDifference_)
            {
              this->SimSimParams_ZoneCoolingDesignSupplyAirTempDifference_.set (SimSimParams_ZoneCoolingDesignSupplyAirTempDifference_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod
          //
          if (n.name () == "SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod_type > r (
              SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod_traits::create (i, f, this));

            if (!this->SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod_)
            {
              this->SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod_.set (r);
              continue;
            }
          }

          // SimSimParams_ZoneHeatDesignSupplyAirTemp
          //
          if (n.name () == "SimSimParams_ZoneHeatDesignSupplyAirTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_ZoneHeatDesignSupplyAirTemp_)
            {
              this->SimSimParams_ZoneHeatDesignSupplyAirTemp_.set (SimSimParams_ZoneHeatDesignSupplyAirTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimParams_ZoneHeatingDesignSupplyAirTempDifference
          //
          if (n.name () == "SimSimParams_ZoneHeatingDesignSupplyAirTempDifference" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_ZoneHeatingDesignSupplyAirTempDifference_)
            {
              this->SimSimParams_ZoneHeatingDesignSupplyAirTempDifference_.set (SimSimParams_ZoneHeatingDesignSupplyAirTempDifference_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimParams_ZoneCoolDesignSupplyAirHumidRatio
          //
          if (n.name () == "SimSimParams_ZoneCoolDesignSupplyAirHumidRatio" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_ZoneCoolDesignSupplyAirHumidRatio_)
            {
              this->SimSimParams_ZoneCoolDesignSupplyAirHumidRatio_.set (SimSimParams_ZoneCoolDesignSupplyAirHumidRatio_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimParams_ZoneHeatDesignSupplyAirHumidRatio
          //
          if (n.name () == "SimSimParams_ZoneHeatDesignSupplyAirHumidRatio" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_ZoneHeatDesignSupplyAirHumidRatio_)
            {
              this->SimSimParams_ZoneHeatDesignSupplyAirHumidRatio_.set (SimSimParams_ZoneHeatDesignSupplyAirHumidRatio_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimParams_DesignSpecOutdrAirObjName
          //
          if (n.name () == "SimSimParams_DesignSpecOutdrAirObjName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimSimParams_DesignSpecOutdrAirObjName_type > r (
              SimSimParams_DesignSpecOutdrAirObjName_traits::create (i, f, this));

            if (!this->SimSimParams_DesignSpecOutdrAirObjName_)
            {
              this->SimSimParams_DesignSpecOutdrAirObjName_.set (r);
              continue;
            }
          }

          // SimSimParams_ZoneHeatingSizingFactor
          //
          if (n.name () == "SimSimParams_ZoneHeatingSizingFactor" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_ZoneHeatingSizingFactor_)
            {
              this->SimSimParams_ZoneHeatingSizingFactor_.set (SimSimParams_ZoneHeatingSizingFactor_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimParams_ZoneCoolingSizingFactor
          //
          if (n.name () == "SimSimParams_ZoneCoolingSizingFactor" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_ZoneCoolingSizingFactor_)
            {
              this->SimSimParams_ZoneCoolingSizingFactor_.set (SimSimParams_ZoneCoolingSizingFactor_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimParams_CoolDesignAirFlowMethod
          //
          if (n.name () == "SimSimParams_CoolDesignAirFlowMethod" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimSimParams_CoolDesignAirFlowMethod_type > r (
              SimSimParams_CoolDesignAirFlowMethod_traits::create (i, f, this));

            if (!this->SimSimParams_CoolDesignAirFlowMethod_)
            {
              this->SimSimParams_CoolDesignAirFlowMethod_.set (r);
              continue;
            }
          }

          // SimSimParams_CoolDesignAirFlowRate
          //
          if (n.name () == "SimSimParams_CoolDesignAirFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_CoolDesignAirFlowRate_)
            {
              this->SimSimParams_CoolDesignAirFlowRate_.set (SimSimParams_CoolDesignAirFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimParams_CoolMinAirFlowPerZoneFloorArea
          //
          if (n.name () == "SimSimParams_CoolMinAirFlowPerZoneFloorArea" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_CoolMinAirFlowPerZoneFloorArea_)
            {
              this->SimSimParams_CoolMinAirFlowPerZoneFloorArea_.set (SimSimParams_CoolMinAirFlowPerZoneFloorArea_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimParams_CoolMinAirFlow
          //
          if (n.name () == "SimSimParams_CoolMinAirFlow" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_CoolMinAirFlow_)
            {
              this->SimSimParams_CoolMinAirFlow_.set (SimSimParams_CoolMinAirFlow_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimParams_CoolMinAirFlowFraction
          //
          if (n.name () == "SimSimParams_CoolMinAirFlowFraction" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_CoolMinAirFlowFraction_)
            {
              this->SimSimParams_CoolMinAirFlowFraction_.set (SimSimParams_CoolMinAirFlowFraction_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimParams_HeatDesignAirFlowMethod
          //
          if (n.name () == "SimSimParams_HeatDesignAirFlowMethod" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimSimParams_HeatDesignAirFlowMethod_type > r (
              SimSimParams_HeatDesignAirFlowMethod_traits::create (i, f, this));

            if (!this->SimSimParams_HeatDesignAirFlowMethod_)
            {
              this->SimSimParams_HeatDesignAirFlowMethod_.set (r);
              continue;
            }
          }

          // SimSimParams_HeatDesignAirFlowRate
          //
          if (n.name () == "SimSimParams_HeatDesignAirFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_HeatDesignAirFlowRate_)
            {
              this->SimSimParams_HeatDesignAirFlowRate_.set (SimSimParams_HeatDesignAirFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimParams_HeatMaxAirFlowPerZoneFloorArea
          //
          if (n.name () == "SimSimParams_HeatMaxAirFlowPerZoneFloorArea" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_HeatMaxAirFlowPerZoneFloorArea_)
            {
              this->SimSimParams_HeatMaxAirFlowPerZoneFloorArea_.set (SimSimParams_HeatMaxAirFlowPerZoneFloorArea_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimParams_HeatMaxAirFlow
          //
          if (n.name () == "SimSimParams_HeatMaxAirFlow" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_HeatMaxAirFlow_)
            {
              this->SimSimParams_HeatMaxAirFlow_.set (SimSimParams_HeatMaxAirFlow_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimParams_HeatMaxAirFlowFraction
          //
          if (n.name () == "SimSimParams_HeatMaxAirFlowFraction" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_HeatMaxAirFlowFraction_)
            {
              this->SimSimParams_HeatMaxAirFlowFraction_.set (SimSimParams_HeatMaxAirFlowFraction_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimParams_DesignSpecZoneAirDistribObjName
          //
          if (n.name () == "SimSimParams_DesignSpecZoneAirDistribObjName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimSimParams_DesignSpecZoneAirDistribObjName_type > r (
              SimSimParams_DesignSpecZoneAirDistribObjName_traits::create (i, f, this));

            if (!this->SimSimParams_DesignSpecZoneAirDistribObjName_)
            {
              this->SimSimParams_DesignSpecZoneAirDistribObjName_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimSimulationParameters_HvacDesign_ZoneSizing* SimSimulationParameters_HvacDesign_ZoneSizing::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimSimulationParameters_HvacDesign_ZoneSizing (*this, f, c);
      }

      SimSimulationParameters_HvacDesign_ZoneSizing& SimSimulationParameters_HvacDesign_ZoneSizing::
      operator= (const SimSimulationParameters_HvacDesign_ZoneSizing& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::ResourcesGeneral::SimSimulationParameters_HvacDesign& > (*this) = x;
          this->SimSimParams_ZoneOrZoneListName_ = x.SimSimParams_ZoneOrZoneListName_;
          this->SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod_ = x.SimSimParams_ZoneCoolingDesignSupplyAirTempInputMethod_;
          this->SimSimParams_ZoneCoolDesignSupplyAirTemp_ = x.SimSimParams_ZoneCoolDesignSupplyAirTemp_;
          this->SimSimParams_ZoneCoolingDesignSupplyAirTempDifference_ = x.SimSimParams_ZoneCoolingDesignSupplyAirTempDifference_;
          this->SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod_ = x.SimSimParams_ZoneHeatingDesignSupplyAirTempInputMethod_;
          this->SimSimParams_ZoneHeatDesignSupplyAirTemp_ = x.SimSimParams_ZoneHeatDesignSupplyAirTemp_;
          this->SimSimParams_ZoneHeatingDesignSupplyAirTempDifference_ = x.SimSimParams_ZoneHeatingDesignSupplyAirTempDifference_;
          this->SimSimParams_ZoneCoolDesignSupplyAirHumidRatio_ = x.SimSimParams_ZoneCoolDesignSupplyAirHumidRatio_;
          this->SimSimParams_ZoneHeatDesignSupplyAirHumidRatio_ = x.SimSimParams_ZoneHeatDesignSupplyAirHumidRatio_;
          this->SimSimParams_DesignSpecOutdrAirObjName_ = x.SimSimParams_DesignSpecOutdrAirObjName_;
          this->SimSimParams_ZoneHeatingSizingFactor_ = x.SimSimParams_ZoneHeatingSizingFactor_;
          this->SimSimParams_ZoneCoolingSizingFactor_ = x.SimSimParams_ZoneCoolingSizingFactor_;
          this->SimSimParams_CoolDesignAirFlowMethod_ = x.SimSimParams_CoolDesignAirFlowMethod_;
          this->SimSimParams_CoolDesignAirFlowRate_ = x.SimSimParams_CoolDesignAirFlowRate_;
          this->SimSimParams_CoolMinAirFlowPerZoneFloorArea_ = x.SimSimParams_CoolMinAirFlowPerZoneFloorArea_;
          this->SimSimParams_CoolMinAirFlow_ = x.SimSimParams_CoolMinAirFlow_;
          this->SimSimParams_CoolMinAirFlowFraction_ = x.SimSimParams_CoolMinAirFlowFraction_;
          this->SimSimParams_HeatDesignAirFlowMethod_ = x.SimSimParams_HeatDesignAirFlowMethod_;
          this->SimSimParams_HeatDesignAirFlowRate_ = x.SimSimParams_HeatDesignAirFlowRate_;
          this->SimSimParams_HeatMaxAirFlowPerZoneFloorArea_ = x.SimSimParams_HeatMaxAirFlowPerZoneFloorArea_;
          this->SimSimParams_HeatMaxAirFlow_ = x.SimSimParams_HeatMaxAirFlow_;
          this->SimSimParams_HeatMaxAirFlowFraction_ = x.SimSimParams_HeatMaxAirFlowFraction_;
          this->SimSimParams_DesignSpecZoneAirDistribObjName_ = x.SimSimParams_DesignSpecZoneAirDistribObjName_;
        }

        return *this;
      }

      SimSimulationParameters_HvacDesign_ZoneSizing::
      ~SimSimulationParameters_HvacDesign_ZoneSizing ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

