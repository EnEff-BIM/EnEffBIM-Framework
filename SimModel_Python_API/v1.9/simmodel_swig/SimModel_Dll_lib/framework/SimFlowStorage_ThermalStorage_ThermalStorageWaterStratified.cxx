// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified.hxx"

#include "doublelist.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified
      // 

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_TankVol_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TankVol () const
      {
        return this->SimFlowSto_TankVol_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_TankVol_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TankVol ()
      {
        return this->SimFlowSto_TankVol_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TankVol (const SimFlowSto_TankVol_type& x)
      {
        this->SimFlowSto_TankVol_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TankVol (const SimFlowSto_TankVol_optional& x)
      {
        this->SimFlowSto_TankVol_ = x;
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_SetpointTempSchedName_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SetpointTempSchedName () const
      {
        return this->SimFlowSto_SetpointTempSchedName_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_SetpointTempSchedName_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SetpointTempSchedName ()
      {
        return this->SimFlowSto_SetpointTempSchedName_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SetpointTempSchedName (const SimFlowSto_SetpointTempSchedName_type& x)
      {
        this->SimFlowSto_SetpointTempSchedName_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SetpointTempSchedName (const SimFlowSto_SetpointTempSchedName_optional& x)
      {
        this->SimFlowSto_SetpointTempSchedName_ = x;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SetpointTempSchedName (::std::auto_ptr< SimFlowSto_SetpointTempSchedName_type > x)
      {
        this->SimFlowSto_SetpointTempSchedName_.set (x);
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_DeadbandTempDifference_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_DeadbandTempDifference () const
      {
        return this->SimFlowSto_DeadbandTempDifference_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_DeadbandTempDifference_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_DeadbandTempDifference ()
      {
        return this->SimFlowSto_DeadbandTempDifference_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_DeadbandTempDifference (const SimFlowSto_DeadbandTempDifference_type& x)
      {
        this->SimFlowSto_DeadbandTempDifference_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_DeadbandTempDifference (const SimFlowSto_DeadbandTempDifference_optional& x)
      {
        this->SimFlowSto_DeadbandTempDifference_ = x;
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_MinTempLimit_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_MinTempLimit () const
      {
        return this->SimFlowSto_MinTempLimit_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_MinTempLimit_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_MinTempLimit ()
      {
        return this->SimFlowSto_MinTempLimit_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_MinTempLimit (const SimFlowSto_MinTempLimit_type& x)
      {
        this->SimFlowSto_MinTempLimit_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_MinTempLimit (const SimFlowSto_MinTempLimit_optional& x)
      {
        this->SimFlowSto_MinTempLimit_ = x;
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_NomCoolingCap_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_NomCoolingCap () const
      {
        return this->SimFlowSto_NomCoolingCap_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_NomCoolingCap_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_NomCoolingCap ()
      {
        return this->SimFlowSto_NomCoolingCap_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_NomCoolingCap (const SimFlowSto_NomCoolingCap_type& x)
      {
        this->SimFlowSto_NomCoolingCap_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_NomCoolingCap (const SimFlowSto_NomCoolingCap_optional& x)
      {
        this->SimFlowSto_NomCoolingCap_ = x;
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_AmbTempdic_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AmbTempdic () const
      {
        return this->SimFlowSto_AmbTempdic_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_AmbTempdic_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AmbTempdic ()
      {
        return this->SimFlowSto_AmbTempdic_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AmbTempdic (const SimFlowSto_AmbTempdic_type& x)
      {
        this->SimFlowSto_AmbTempdic_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AmbTempdic (const SimFlowSto_AmbTempdic_optional& x)
      {
        this->SimFlowSto_AmbTempdic_ = x;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AmbTempdic (::std::auto_ptr< SimFlowSto_AmbTempdic_type > x)
      {
        this->SimFlowSto_AmbTempdic_.set (x);
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_AmbTempSchedName_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AmbTempSchedName () const
      {
        return this->SimFlowSto_AmbTempSchedName_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_AmbTempSchedName_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AmbTempSchedName ()
      {
        return this->SimFlowSto_AmbTempSchedName_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AmbTempSchedName (const SimFlowSto_AmbTempSchedName_type& x)
      {
        this->SimFlowSto_AmbTempSchedName_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AmbTempSchedName (const SimFlowSto_AmbTempSchedName_optional& x)
      {
        this->SimFlowSto_AmbTempSchedName_ = x;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AmbTempSchedName (::std::auto_ptr< SimFlowSto_AmbTempSchedName_type > x)
      {
        this->SimFlowSto_AmbTempSchedName_.set (x);
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_AmbTempZoneName_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AmbTempZoneName () const
      {
        return this->SimFlowSto_AmbTempZoneName_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_AmbTempZoneName_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AmbTempZoneName ()
      {
        return this->SimFlowSto_AmbTempZoneName_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AmbTempZoneName (const SimFlowSto_AmbTempZoneName_type& x)
      {
        this->SimFlowSto_AmbTempZoneName_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AmbTempZoneName (const SimFlowSto_AmbTempZoneName_optional& x)
      {
        this->SimFlowSto_AmbTempZoneName_ = x;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AmbTempZoneName (::std::auto_ptr< SimFlowSto_AmbTempZoneName_type > x)
      {
        this->SimFlowSto_AmbTempZoneName_.set (x);
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_AmbTempOutdrAirNodeName_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AmbTempOutdrAirNodeName () const
      {
        return this->SimFlowSto_AmbTempOutdrAirNodeName_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_AmbTempOutdrAirNodeName_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AmbTempOutdrAirNodeName ()
      {
        return this->SimFlowSto_AmbTempOutdrAirNodeName_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AmbTempOutdrAirNodeName (const SimFlowSto_AmbTempOutdrAirNodeName_type& x)
      {
        this->SimFlowSto_AmbTempOutdrAirNodeName_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AmbTempOutdrAirNodeName (const SimFlowSto_AmbTempOutdrAirNodeName_optional& x)
      {
        this->SimFlowSto_AmbTempOutdrAirNodeName_ = x;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AmbTempOutdrAirNodeName (::std::auto_ptr< SimFlowSto_AmbTempOutdrAirNodeName_type > x)
      {
        this->SimFlowSto_AmbTempOutdrAirNodeName_.set (x);
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_UseSideInletNodeName_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideInletNodeName () const
      {
        return this->SimFlowSto_UseSideInletNodeName_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_UseSideInletNodeName_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideInletNodeName ()
      {
        return this->SimFlowSto_UseSideInletNodeName_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideInletNodeName (const SimFlowSto_UseSideInletNodeName_type& x)
      {
        this->SimFlowSto_UseSideInletNodeName_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideInletNodeName (const SimFlowSto_UseSideInletNodeName_optional& x)
      {
        this->SimFlowSto_UseSideInletNodeName_ = x;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideInletNodeName (::std::auto_ptr< SimFlowSto_UseSideInletNodeName_type > x)
      {
        this->SimFlowSto_UseSideInletNodeName_.set (x);
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_UseSideOutletNodeName_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideOutletNodeName () const
      {
        return this->SimFlowSto_UseSideOutletNodeName_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_UseSideOutletNodeName_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideOutletNodeName ()
      {
        return this->SimFlowSto_UseSideOutletNodeName_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideOutletNodeName (const SimFlowSto_UseSideOutletNodeName_type& x)
      {
        this->SimFlowSto_UseSideOutletNodeName_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideOutletNodeName (const SimFlowSto_UseSideOutletNodeName_optional& x)
      {
        this->SimFlowSto_UseSideOutletNodeName_ = x;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideOutletNodeName (::std::auto_ptr< SimFlowSto_UseSideOutletNodeName_type > x)
      {
        this->SimFlowSto_UseSideOutletNodeName_.set (x);
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_UseSideHeatTransEffect_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideHeatTransEffect () const
      {
        return this->SimFlowSto_UseSideHeatTransEffect_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_UseSideHeatTransEffect_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideHeatTransEffect ()
      {
        return this->SimFlowSto_UseSideHeatTransEffect_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideHeatTransEffect (const SimFlowSto_UseSideHeatTransEffect_type& x)
      {
        this->SimFlowSto_UseSideHeatTransEffect_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideHeatTransEffect (const SimFlowSto_UseSideHeatTransEffect_optional& x)
      {
        this->SimFlowSto_UseSideHeatTransEffect_ = x;
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_UseSideAvailSchedName_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideAvailSchedName () const
      {
        return this->SimFlowSto_UseSideAvailSchedName_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_UseSideAvailSchedName_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideAvailSchedName ()
      {
        return this->SimFlowSto_UseSideAvailSchedName_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideAvailSchedName (const SimFlowSto_UseSideAvailSchedName_type& x)
      {
        this->SimFlowSto_UseSideAvailSchedName_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideAvailSchedName (const SimFlowSto_UseSideAvailSchedName_optional& x)
      {
        this->SimFlowSto_UseSideAvailSchedName_ = x;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideAvailSchedName (::std::auto_ptr< SimFlowSto_UseSideAvailSchedName_type > x)
      {
        this->SimFlowSto_UseSideAvailSchedName_.set (x);
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_UseSideDesignFlowRate_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideDesignFlowRate () const
      {
        return this->SimFlowSto_UseSideDesignFlowRate_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_UseSideDesignFlowRate_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideDesignFlowRate ()
      {
        return this->SimFlowSto_UseSideDesignFlowRate_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideDesignFlowRate (const SimFlowSto_UseSideDesignFlowRate_type& x)
      {
        this->SimFlowSto_UseSideDesignFlowRate_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideDesignFlowRate (const SimFlowSto_UseSideDesignFlowRate_optional& x)
      {
        this->SimFlowSto_UseSideDesignFlowRate_ = x;
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_SrcSideInletNodeName_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideInletNodeName () const
      {
        return this->SimFlowSto_SrcSideInletNodeName_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_SrcSideInletNodeName_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideInletNodeName ()
      {
        return this->SimFlowSto_SrcSideInletNodeName_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideInletNodeName (const SimFlowSto_SrcSideInletNodeName_type& x)
      {
        this->SimFlowSto_SrcSideInletNodeName_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideInletNodeName (const SimFlowSto_SrcSideInletNodeName_optional& x)
      {
        this->SimFlowSto_SrcSideInletNodeName_ = x;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideInletNodeName (::std::auto_ptr< SimFlowSto_SrcSideInletNodeName_type > x)
      {
        this->SimFlowSto_SrcSideInletNodeName_.set (x);
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_SrcSideOutletNodeName_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideOutletNodeName () const
      {
        return this->SimFlowSto_SrcSideOutletNodeName_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_SrcSideOutletNodeName_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideOutletNodeName ()
      {
        return this->SimFlowSto_SrcSideOutletNodeName_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideOutletNodeName (const SimFlowSto_SrcSideOutletNodeName_type& x)
      {
        this->SimFlowSto_SrcSideOutletNodeName_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideOutletNodeName (const SimFlowSto_SrcSideOutletNodeName_optional& x)
      {
        this->SimFlowSto_SrcSideOutletNodeName_ = x;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideOutletNodeName (::std::auto_ptr< SimFlowSto_SrcSideOutletNodeName_type > x)
      {
        this->SimFlowSto_SrcSideOutletNodeName_.set (x);
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_SrcSideHeatTransEffect_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideHeatTransEffect () const
      {
        return this->SimFlowSto_SrcSideHeatTransEffect_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_SrcSideHeatTransEffect_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideHeatTransEffect ()
      {
        return this->SimFlowSto_SrcSideHeatTransEffect_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideHeatTransEffect (const SimFlowSto_SrcSideHeatTransEffect_type& x)
      {
        this->SimFlowSto_SrcSideHeatTransEffect_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideHeatTransEffect (const SimFlowSto_SrcSideHeatTransEffect_optional& x)
      {
        this->SimFlowSto_SrcSideHeatTransEffect_ = x;
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_SrcSideAvailSchedName_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideAvailSchedName () const
      {
        return this->SimFlowSto_SrcSideAvailSchedName_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_SrcSideAvailSchedName_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideAvailSchedName ()
      {
        return this->SimFlowSto_SrcSideAvailSchedName_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideAvailSchedName (const SimFlowSto_SrcSideAvailSchedName_type& x)
      {
        this->SimFlowSto_SrcSideAvailSchedName_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideAvailSchedName (const SimFlowSto_SrcSideAvailSchedName_optional& x)
      {
        this->SimFlowSto_SrcSideAvailSchedName_ = x;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideAvailSchedName (::std::auto_ptr< SimFlowSto_SrcSideAvailSchedName_type > x)
      {
        this->SimFlowSto_SrcSideAvailSchedName_.set (x);
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_SrcSideDesignFlowRate_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideDesignFlowRate () const
      {
        return this->SimFlowSto_SrcSideDesignFlowRate_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_SrcSideDesignFlowRate_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideDesignFlowRate ()
      {
        return this->SimFlowSto_SrcSideDesignFlowRate_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideDesignFlowRate (const SimFlowSto_SrcSideDesignFlowRate_type& x)
      {
        this->SimFlowSto_SrcSideDesignFlowRate_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideDesignFlowRate (const SimFlowSto_SrcSideDesignFlowRate_optional& x)
      {
        this->SimFlowSto_SrcSideDesignFlowRate_ = x;
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_TankRecovTime_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TankRecovTime () const
      {
        return this->SimFlowSto_TankRecovTime_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_TankRecovTime_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TankRecovTime ()
      {
        return this->SimFlowSto_TankRecovTime_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TankRecovTime (const SimFlowSto_TankRecovTime_type& x)
      {
        this->SimFlowSto_TankRecovTime_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TankRecovTime (const SimFlowSto_TankRecovTime_optional& x)
      {
        this->SimFlowSto_TankRecovTime_ = x;
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_TankHeight_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TankHeight () const
      {
        return this->SimFlowSto_TankHeight_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_TankHeight_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TankHeight ()
      {
        return this->SimFlowSto_TankHeight_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TankHeight (const SimFlowSto_TankHeight_type& x)
      {
        this->SimFlowSto_TankHeight_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TankHeight (const SimFlowSto_TankHeight_optional& x)
      {
        this->SimFlowSto_TankHeight_ = x;
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_TankShape_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TankShape () const
      {
        return this->SimFlowSto_TankShape_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_TankShape_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TankShape ()
      {
        return this->SimFlowSto_TankShape_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TankShape (const SimFlowSto_TankShape_type& x)
      {
        this->SimFlowSto_TankShape_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TankShape (const SimFlowSto_TankShape_optional& x)
      {
        this->SimFlowSto_TankShape_ = x;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TankShape (::std::auto_ptr< SimFlowSto_TankShape_type > x)
      {
        this->SimFlowSto_TankShape_.set (x);
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_TankPerimeter_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TankPerimeter () const
      {
        return this->SimFlowSto_TankPerimeter_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_TankPerimeter_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TankPerimeter ()
      {
        return this->SimFlowSto_TankPerimeter_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TankPerimeter (const SimFlowSto_TankPerimeter_type& x)
      {
        this->SimFlowSto_TankPerimeter_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TankPerimeter (const SimFlowSto_TankPerimeter_optional& x)
      {
        this->SimFlowSto_TankPerimeter_ = x;
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_TempSensorHeight_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TempSensorHeight () const
      {
        return this->SimFlowSto_TempSensorHeight_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_TempSensorHeight_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TempSensorHeight ()
      {
        return this->SimFlowSto_TempSensorHeight_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TempSensorHeight (const SimFlowSto_TempSensorHeight_type& x)
      {
        this->SimFlowSto_TempSensorHeight_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_TempSensorHeight (const SimFlowSto_TempSensorHeight_optional& x)
      {
        this->SimFlowSto_TempSensorHeight_ = x;
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp () const
      {
        return this->SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp ()
      {
        return this->SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp (const SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_type& x)
      {
        this->SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp (const SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_optional& x)
      {
        this->SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_ = x;
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_UseSideInletHeight_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideInletHeight () const
      {
        return this->SimFlowSto_UseSideInletHeight_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_UseSideInletHeight_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideInletHeight ()
      {
        return this->SimFlowSto_UseSideInletHeight_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideInletHeight (const SimFlowSto_UseSideInletHeight_type& x)
      {
        this->SimFlowSto_UseSideInletHeight_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideInletHeight (const SimFlowSto_UseSideInletHeight_optional& x)
      {
        this->SimFlowSto_UseSideInletHeight_ = x;
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_UseSideOutletHeight_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideOutletHeight () const
      {
        return this->SimFlowSto_UseSideOutletHeight_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_UseSideOutletHeight_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideOutletHeight ()
      {
        return this->SimFlowSto_UseSideOutletHeight_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideOutletHeight (const SimFlowSto_UseSideOutletHeight_type& x)
      {
        this->SimFlowSto_UseSideOutletHeight_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_UseSideOutletHeight (const SimFlowSto_UseSideOutletHeight_optional& x)
      {
        this->SimFlowSto_UseSideOutletHeight_ = x;
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_SrcSideInletHeight_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideInletHeight () const
      {
        return this->SimFlowSto_SrcSideInletHeight_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_SrcSideInletHeight_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideInletHeight ()
      {
        return this->SimFlowSto_SrcSideInletHeight_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideInletHeight (const SimFlowSto_SrcSideInletHeight_type& x)
      {
        this->SimFlowSto_SrcSideInletHeight_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideInletHeight (const SimFlowSto_SrcSideInletHeight_optional& x)
      {
        this->SimFlowSto_SrcSideInletHeight_ = x;
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_SrcSideOutletHeight_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideOutletHeight () const
      {
        return this->SimFlowSto_SrcSideOutletHeight_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_SrcSideOutletHeight_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideOutletHeight ()
      {
        return this->SimFlowSto_SrcSideOutletHeight_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideOutletHeight (const SimFlowSto_SrcSideOutletHeight_type& x)
      {
        this->SimFlowSto_SrcSideOutletHeight_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_SrcSideOutletHeight (const SimFlowSto_SrcSideOutletHeight_optional& x)
      {
        this->SimFlowSto_SrcSideOutletHeight_ = x;
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_InletMode_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_InletMode () const
      {
        return this->SimFlowSto_InletMode_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_InletMode_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_InletMode ()
      {
        return this->SimFlowSto_InletMode_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_InletMode (const SimFlowSto_InletMode_type& x)
      {
        this->SimFlowSto_InletMode_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_InletMode (const SimFlowSto_InletMode_optional& x)
      {
        this->SimFlowSto_InletMode_ = x;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_InletMode (::std::auto_ptr< SimFlowSto_InletMode_type > x)
      {
        this->SimFlowSto_InletMode_.set (x);
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_NumNodes_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_NumNodes () const
      {
        return this->SimFlowSto_NumNodes_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_NumNodes_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_NumNodes ()
      {
        return this->SimFlowSto_NumNodes_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_NumNodes (const SimFlowSto_NumNodes_type& x)
      {
        this->SimFlowSto_NumNodes_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_NumNodes (const SimFlowSto_NumNodes_optional& x)
      {
        this->SimFlowSto_NumNodes_ = x;
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_AddDestratCond_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AddDestratCond () const
      {
        return this->SimFlowSto_AddDestratCond_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_AddDestratCond_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AddDestratCond ()
      {
        return this->SimFlowSto_AddDestratCond_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AddDestratCond (const SimFlowSto_AddDestratCond_type& x)
      {
        this->SimFlowSto_AddDestratCond_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_AddDestratCond (const SimFlowSto_AddDestratCond_optional& x)
      {
        this->SimFlowSto_AddDestratCond_ = x;
      }

      const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_NodeAddLossCoef_1_10_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_NodeAddLossCoef_1_10 () const
      {
        return this->SimFlowSto_NodeAddLossCoef_1_10_;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::SimFlowSto_NodeAddLossCoef_1_10_optional& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_NodeAddLossCoef_1_10 ()
      {
        return this->SimFlowSto_NodeAddLossCoef_1_10_;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_NodeAddLossCoef_1_10 (const SimFlowSto_NodeAddLossCoef_1_10_type& x)
      {
        this->SimFlowSto_NodeAddLossCoef_1_10_.set (x);
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_NodeAddLossCoef_1_10 (const SimFlowSto_NodeAddLossCoef_1_10_optional& x)
      {
        this->SimFlowSto_NodeAddLossCoef_1_10_ = x;
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowSto_NodeAddLossCoef_1_10 (::std::auto_ptr< SimFlowSto_NodeAddLossCoef_1_10_type > x)
      {
        this->SimFlowSto_NodeAddLossCoef_1_10_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified
      //

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified ()
      : ::schema::simxml::MepModel::SimFlowStorage_ThermalStorage (),
        SimFlowSto_TankVol_ (this),
        SimFlowSto_SetpointTempSchedName_ (this),
        SimFlowSto_DeadbandTempDifference_ (this),
        SimFlowSto_MinTempLimit_ (this),
        SimFlowSto_NomCoolingCap_ (this),
        SimFlowSto_AmbTempdic_ (this),
        SimFlowSto_AmbTempSchedName_ (this),
        SimFlowSto_AmbTempZoneName_ (this),
        SimFlowSto_AmbTempOutdrAirNodeName_ (this),
        SimFlowSto_UseSideInletNodeName_ (this),
        SimFlowSto_UseSideOutletNodeName_ (this),
        SimFlowSto_UseSideHeatTransEffect_ (this),
        SimFlowSto_UseSideAvailSchedName_ (this),
        SimFlowSto_UseSideDesignFlowRate_ (this),
        SimFlowSto_SrcSideInletNodeName_ (this),
        SimFlowSto_SrcSideOutletNodeName_ (this),
        SimFlowSto_SrcSideHeatTransEffect_ (this),
        SimFlowSto_SrcSideAvailSchedName_ (this),
        SimFlowSto_SrcSideDesignFlowRate_ (this),
        SimFlowSto_TankRecovTime_ (this),
        SimFlowSto_TankHeight_ (this),
        SimFlowSto_TankShape_ (this),
        SimFlowSto_TankPerimeter_ (this),
        SimFlowSto_TempSensorHeight_ (this),
        SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_ (this),
        SimFlowSto_UseSideInletHeight_ (this),
        SimFlowSto_UseSideOutletHeight_ (this),
        SimFlowSto_SrcSideInletHeight_ (this),
        SimFlowSto_SrcSideOutletHeight_ (this),
        SimFlowSto_InletMode_ (this),
        SimFlowSto_NumNodes_ (this),
        SimFlowSto_AddDestratCond_ (this),
        SimFlowSto_NodeAddLossCoef_1_10_ (this)
      {
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimFlowStorage_ThermalStorage (RefId),
        SimFlowSto_TankVol_ (this),
        SimFlowSto_SetpointTempSchedName_ (this),
        SimFlowSto_DeadbandTempDifference_ (this),
        SimFlowSto_MinTempLimit_ (this),
        SimFlowSto_NomCoolingCap_ (this),
        SimFlowSto_AmbTempdic_ (this),
        SimFlowSto_AmbTempSchedName_ (this),
        SimFlowSto_AmbTempZoneName_ (this),
        SimFlowSto_AmbTempOutdrAirNodeName_ (this),
        SimFlowSto_UseSideInletNodeName_ (this),
        SimFlowSto_UseSideOutletNodeName_ (this),
        SimFlowSto_UseSideHeatTransEffect_ (this),
        SimFlowSto_UseSideAvailSchedName_ (this),
        SimFlowSto_UseSideDesignFlowRate_ (this),
        SimFlowSto_SrcSideInletNodeName_ (this),
        SimFlowSto_SrcSideOutletNodeName_ (this),
        SimFlowSto_SrcSideHeatTransEffect_ (this),
        SimFlowSto_SrcSideAvailSchedName_ (this),
        SimFlowSto_SrcSideDesignFlowRate_ (this),
        SimFlowSto_TankRecovTime_ (this),
        SimFlowSto_TankHeight_ (this),
        SimFlowSto_TankShape_ (this),
        SimFlowSto_TankPerimeter_ (this),
        SimFlowSto_TempSensorHeight_ (this),
        SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_ (this),
        SimFlowSto_UseSideInletHeight_ (this),
        SimFlowSto_UseSideOutletHeight_ (this),
        SimFlowSto_SrcSideInletHeight_ (this),
        SimFlowSto_SrcSideOutletHeight_ (this),
        SimFlowSto_InletMode_ (this),
        SimFlowSto_NumNodes_ (this),
        SimFlowSto_AddDestratCond_ (this),
        SimFlowSto_NodeAddLossCoef_1_10_ (this)
      {
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified (const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified& x,
                                                                   ::xml_schema::flags f,
                                                                   ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowStorage_ThermalStorage (x, f, c),
        SimFlowSto_TankVol_ (x.SimFlowSto_TankVol_, f, this),
        SimFlowSto_SetpointTempSchedName_ (x.SimFlowSto_SetpointTempSchedName_, f, this),
        SimFlowSto_DeadbandTempDifference_ (x.SimFlowSto_DeadbandTempDifference_, f, this),
        SimFlowSto_MinTempLimit_ (x.SimFlowSto_MinTempLimit_, f, this),
        SimFlowSto_NomCoolingCap_ (x.SimFlowSto_NomCoolingCap_, f, this),
        SimFlowSto_AmbTempdic_ (x.SimFlowSto_AmbTempdic_, f, this),
        SimFlowSto_AmbTempSchedName_ (x.SimFlowSto_AmbTempSchedName_, f, this),
        SimFlowSto_AmbTempZoneName_ (x.SimFlowSto_AmbTempZoneName_, f, this),
        SimFlowSto_AmbTempOutdrAirNodeName_ (x.SimFlowSto_AmbTempOutdrAirNodeName_, f, this),
        SimFlowSto_UseSideInletNodeName_ (x.SimFlowSto_UseSideInletNodeName_, f, this),
        SimFlowSto_UseSideOutletNodeName_ (x.SimFlowSto_UseSideOutletNodeName_, f, this),
        SimFlowSto_UseSideHeatTransEffect_ (x.SimFlowSto_UseSideHeatTransEffect_, f, this),
        SimFlowSto_UseSideAvailSchedName_ (x.SimFlowSto_UseSideAvailSchedName_, f, this),
        SimFlowSto_UseSideDesignFlowRate_ (x.SimFlowSto_UseSideDesignFlowRate_, f, this),
        SimFlowSto_SrcSideInletNodeName_ (x.SimFlowSto_SrcSideInletNodeName_, f, this),
        SimFlowSto_SrcSideOutletNodeName_ (x.SimFlowSto_SrcSideOutletNodeName_, f, this),
        SimFlowSto_SrcSideHeatTransEffect_ (x.SimFlowSto_SrcSideHeatTransEffect_, f, this),
        SimFlowSto_SrcSideAvailSchedName_ (x.SimFlowSto_SrcSideAvailSchedName_, f, this),
        SimFlowSto_SrcSideDesignFlowRate_ (x.SimFlowSto_SrcSideDesignFlowRate_, f, this),
        SimFlowSto_TankRecovTime_ (x.SimFlowSto_TankRecovTime_, f, this),
        SimFlowSto_TankHeight_ (x.SimFlowSto_TankHeight_, f, this),
        SimFlowSto_TankShape_ (x.SimFlowSto_TankShape_, f, this),
        SimFlowSto_TankPerimeter_ (x.SimFlowSto_TankPerimeter_, f, this),
        SimFlowSto_TempSensorHeight_ (x.SimFlowSto_TempSensorHeight_, f, this),
        SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_ (x.SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_, f, this),
        SimFlowSto_UseSideInletHeight_ (x.SimFlowSto_UseSideInletHeight_, f, this),
        SimFlowSto_UseSideOutletHeight_ (x.SimFlowSto_UseSideOutletHeight_, f, this),
        SimFlowSto_SrcSideInletHeight_ (x.SimFlowSto_SrcSideInletHeight_, f, this),
        SimFlowSto_SrcSideOutletHeight_ (x.SimFlowSto_SrcSideOutletHeight_, f, this),
        SimFlowSto_InletMode_ (x.SimFlowSto_InletMode_, f, this),
        SimFlowSto_NumNodes_ (x.SimFlowSto_NumNodes_, f, this),
        SimFlowSto_AddDestratCond_ (x.SimFlowSto_AddDestratCond_, f, this),
        SimFlowSto_NodeAddLossCoef_1_10_ (x.SimFlowSto_NodeAddLossCoef_1_10_, f, this)
      {
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified (const ::xercesc::DOMElement& e,
                                                                   ::xml_schema::flags f,
                                                                   ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowStorage_ThermalStorage (e, f | ::xml_schema::flags::base, c),
        SimFlowSto_TankVol_ (this),
        SimFlowSto_SetpointTempSchedName_ (this),
        SimFlowSto_DeadbandTempDifference_ (this),
        SimFlowSto_MinTempLimit_ (this),
        SimFlowSto_NomCoolingCap_ (this),
        SimFlowSto_AmbTempdic_ (this),
        SimFlowSto_AmbTempSchedName_ (this),
        SimFlowSto_AmbTempZoneName_ (this),
        SimFlowSto_AmbTempOutdrAirNodeName_ (this),
        SimFlowSto_UseSideInletNodeName_ (this),
        SimFlowSto_UseSideOutletNodeName_ (this),
        SimFlowSto_UseSideHeatTransEffect_ (this),
        SimFlowSto_UseSideAvailSchedName_ (this),
        SimFlowSto_UseSideDesignFlowRate_ (this),
        SimFlowSto_SrcSideInletNodeName_ (this),
        SimFlowSto_SrcSideOutletNodeName_ (this),
        SimFlowSto_SrcSideHeatTransEffect_ (this),
        SimFlowSto_SrcSideAvailSchedName_ (this),
        SimFlowSto_SrcSideDesignFlowRate_ (this),
        SimFlowSto_TankRecovTime_ (this),
        SimFlowSto_TankHeight_ (this),
        SimFlowSto_TankShape_ (this),
        SimFlowSto_TankPerimeter_ (this),
        SimFlowSto_TempSensorHeight_ (this),
        SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_ (this),
        SimFlowSto_UseSideInletHeight_ (this),
        SimFlowSto_UseSideOutletHeight_ (this),
        SimFlowSto_SrcSideInletHeight_ (this),
        SimFlowSto_SrcSideOutletHeight_ (this),
        SimFlowSto_InletMode_ (this),
        SimFlowSto_NumNodes_ (this),
        SimFlowSto_AddDestratCond_ (this),
        SimFlowSto_NodeAddLossCoef_1_10_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimFlowStorage_ThermalStorage::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowSto_TankVol
          //
          if (n.name () == "SimFlowSto_TankVol" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowSto_TankVol_)
            {
              this->SimFlowSto_TankVol_.set (SimFlowSto_TankVol_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowSto_SetpointTempSchedName
          //
          if (n.name () == "SimFlowSto_SetpointTempSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowSto_SetpointTempSchedName_type > r (
              SimFlowSto_SetpointTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowSto_SetpointTempSchedName_)
            {
              this->SimFlowSto_SetpointTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowSto_DeadbandTempDifference
          //
          if (n.name () == "SimFlowSto_DeadbandTempDifference" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowSto_DeadbandTempDifference_)
            {
              this->SimFlowSto_DeadbandTempDifference_.set (SimFlowSto_DeadbandTempDifference_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowSto_MinTempLimit
          //
          if (n.name () == "SimFlowSto_MinTempLimit" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowSto_MinTempLimit_)
            {
              this->SimFlowSto_MinTempLimit_.set (SimFlowSto_MinTempLimit_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowSto_NomCoolingCap
          //
          if (n.name () == "SimFlowSto_NomCoolingCap" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowSto_NomCoolingCap_)
            {
              this->SimFlowSto_NomCoolingCap_.set (SimFlowSto_NomCoolingCap_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowSto_AmbTempdic
          //
          if (n.name () == "SimFlowSto_AmbTempdic" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowSto_AmbTempdic_type > r (
              SimFlowSto_AmbTempdic_traits::create (i, f, this));

            if (!this->SimFlowSto_AmbTempdic_)
            {
              this->SimFlowSto_AmbTempdic_.set (r);
              continue;
            }
          }

          // SimFlowSto_AmbTempSchedName
          //
          if (n.name () == "SimFlowSto_AmbTempSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowSto_AmbTempSchedName_type > r (
              SimFlowSto_AmbTempSchedName_traits::create (i, f, this));

            if (!this->SimFlowSto_AmbTempSchedName_)
            {
              this->SimFlowSto_AmbTempSchedName_.set (r);
              continue;
            }
          }

          // SimFlowSto_AmbTempZoneName
          //
          if (n.name () == "SimFlowSto_AmbTempZoneName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowSto_AmbTempZoneName_type > r (
              SimFlowSto_AmbTempZoneName_traits::create (i, f, this));

            if (!this->SimFlowSto_AmbTempZoneName_)
            {
              this->SimFlowSto_AmbTempZoneName_.set (r);
              continue;
            }
          }

          // SimFlowSto_AmbTempOutdrAirNodeName
          //
          if (n.name () == "SimFlowSto_AmbTempOutdrAirNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowSto_AmbTempOutdrAirNodeName_type > r (
              SimFlowSto_AmbTempOutdrAirNodeName_traits::create (i, f, this));

            if (!this->SimFlowSto_AmbTempOutdrAirNodeName_)
            {
              this->SimFlowSto_AmbTempOutdrAirNodeName_.set (r);
              continue;
            }
          }

          // SimFlowSto_UseSideInletNodeName
          //
          if (n.name () == "SimFlowSto_UseSideInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowSto_UseSideInletNodeName_type > r (
              SimFlowSto_UseSideInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowSto_UseSideInletNodeName_)
            {
              this->SimFlowSto_UseSideInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowSto_UseSideOutletNodeName
          //
          if (n.name () == "SimFlowSto_UseSideOutletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowSto_UseSideOutletNodeName_type > r (
              SimFlowSto_UseSideOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowSto_UseSideOutletNodeName_)
            {
              this->SimFlowSto_UseSideOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowSto_UseSideHeatTransEffect
          //
          if (n.name () == "SimFlowSto_UseSideHeatTransEffect" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowSto_UseSideHeatTransEffect_)
            {
              this->SimFlowSto_UseSideHeatTransEffect_.set (SimFlowSto_UseSideHeatTransEffect_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowSto_UseSideAvailSchedName
          //
          if (n.name () == "SimFlowSto_UseSideAvailSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowSto_UseSideAvailSchedName_type > r (
              SimFlowSto_UseSideAvailSchedName_traits::create (i, f, this));

            if (!this->SimFlowSto_UseSideAvailSchedName_)
            {
              this->SimFlowSto_UseSideAvailSchedName_.set (r);
              continue;
            }
          }

          // SimFlowSto_UseSideDesignFlowRate
          //
          if (n.name () == "SimFlowSto_UseSideDesignFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowSto_UseSideDesignFlowRate_)
            {
              this->SimFlowSto_UseSideDesignFlowRate_.set (SimFlowSto_UseSideDesignFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowSto_SrcSideInletNodeName
          //
          if (n.name () == "SimFlowSto_SrcSideInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowSto_SrcSideInletNodeName_type > r (
              SimFlowSto_SrcSideInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowSto_SrcSideInletNodeName_)
            {
              this->SimFlowSto_SrcSideInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowSto_SrcSideOutletNodeName
          //
          if (n.name () == "SimFlowSto_SrcSideOutletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowSto_SrcSideOutletNodeName_type > r (
              SimFlowSto_SrcSideOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowSto_SrcSideOutletNodeName_)
            {
              this->SimFlowSto_SrcSideOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowSto_SrcSideHeatTransEffect
          //
          if (n.name () == "SimFlowSto_SrcSideHeatTransEffect" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowSto_SrcSideHeatTransEffect_)
            {
              this->SimFlowSto_SrcSideHeatTransEffect_.set (SimFlowSto_SrcSideHeatTransEffect_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowSto_SrcSideAvailSchedName
          //
          if (n.name () == "SimFlowSto_SrcSideAvailSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowSto_SrcSideAvailSchedName_type > r (
              SimFlowSto_SrcSideAvailSchedName_traits::create (i, f, this));

            if (!this->SimFlowSto_SrcSideAvailSchedName_)
            {
              this->SimFlowSto_SrcSideAvailSchedName_.set (r);
              continue;
            }
          }

          // SimFlowSto_SrcSideDesignFlowRate
          //
          if (n.name () == "SimFlowSto_SrcSideDesignFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowSto_SrcSideDesignFlowRate_)
            {
              this->SimFlowSto_SrcSideDesignFlowRate_.set (SimFlowSto_SrcSideDesignFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowSto_TankRecovTime
          //
          if (n.name () == "SimFlowSto_TankRecovTime" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowSto_TankRecovTime_)
            {
              this->SimFlowSto_TankRecovTime_.set (SimFlowSto_TankRecovTime_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowSto_TankHeight
          //
          if (n.name () == "SimFlowSto_TankHeight" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowSto_TankHeight_)
            {
              this->SimFlowSto_TankHeight_.set (SimFlowSto_TankHeight_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowSto_TankShape
          //
          if (n.name () == "SimFlowSto_TankShape" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowSto_TankShape_type > r (
              SimFlowSto_TankShape_traits::create (i, f, this));

            if (!this->SimFlowSto_TankShape_)
            {
              this->SimFlowSto_TankShape_.set (r);
              continue;
            }
          }

          // SimFlowSto_TankPerimeter
          //
          if (n.name () == "SimFlowSto_TankPerimeter" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowSto_TankPerimeter_)
            {
              this->SimFlowSto_TankPerimeter_.set (SimFlowSto_TankPerimeter_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowSto_TempSensorHeight
          //
          if (n.name () == "SimFlowSto_TempSensorHeight" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowSto_TempSensorHeight_)
            {
              this->SimFlowSto_TempSensorHeight_.set (SimFlowSto_TempSensorHeight_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp
          //
          if (n.name () == "SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_)
            {
              this->SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_.set (SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowSto_UseSideInletHeight
          //
          if (n.name () == "SimFlowSto_UseSideInletHeight" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowSto_UseSideInletHeight_)
            {
              this->SimFlowSto_UseSideInletHeight_.set (SimFlowSto_UseSideInletHeight_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowSto_UseSideOutletHeight
          //
          if (n.name () == "SimFlowSto_UseSideOutletHeight" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowSto_UseSideOutletHeight_)
            {
              this->SimFlowSto_UseSideOutletHeight_.set (SimFlowSto_UseSideOutletHeight_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowSto_SrcSideInletHeight
          //
          if (n.name () == "SimFlowSto_SrcSideInletHeight" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowSto_SrcSideInletHeight_)
            {
              this->SimFlowSto_SrcSideInletHeight_.set (SimFlowSto_SrcSideInletHeight_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowSto_SrcSideOutletHeight
          //
          if (n.name () == "SimFlowSto_SrcSideOutletHeight" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowSto_SrcSideOutletHeight_)
            {
              this->SimFlowSto_SrcSideOutletHeight_.set (SimFlowSto_SrcSideOutletHeight_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowSto_InletMode
          //
          if (n.name () == "SimFlowSto_InletMode" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowSto_InletMode_type > r (
              SimFlowSto_InletMode_traits::create (i, f, this));

            if (!this->SimFlowSto_InletMode_)
            {
              this->SimFlowSto_InletMode_.set (r);
              continue;
            }
          }

          // SimFlowSto_NumNodes
          //
          if (n.name () == "SimFlowSto_NumNodes" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowSto_NumNodes_)
            {
              this->SimFlowSto_NumNodes_.set (SimFlowSto_NumNodes_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowSto_AddDestratCond
          //
          if (n.name () == "SimFlowSto_AddDestratCond" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowSto_AddDestratCond_)
            {
              this->SimFlowSto_AddDestratCond_.set (SimFlowSto_AddDestratCond_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowSto_NodeAddLossCoef_1_10
          //
          if (n.name () == "SimFlowSto_NodeAddLossCoef_1_10" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowSto_NodeAddLossCoef_1_10_type > r (
              SimFlowSto_NodeAddLossCoef_1_10_traits::create (i, f, this));

            if (!this->SimFlowSto_NodeAddLossCoef_1_10_)
            {
              this->SimFlowSto_NodeAddLossCoef_1_10_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified* SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified (*this, f, c);
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified& SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      operator= (const SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimFlowStorage_ThermalStorage& > (*this) = x;
          this->SimFlowSto_TankVol_ = x.SimFlowSto_TankVol_;
          this->SimFlowSto_SetpointTempSchedName_ = x.SimFlowSto_SetpointTempSchedName_;
          this->SimFlowSto_DeadbandTempDifference_ = x.SimFlowSto_DeadbandTempDifference_;
          this->SimFlowSto_MinTempLimit_ = x.SimFlowSto_MinTempLimit_;
          this->SimFlowSto_NomCoolingCap_ = x.SimFlowSto_NomCoolingCap_;
          this->SimFlowSto_AmbTempdic_ = x.SimFlowSto_AmbTempdic_;
          this->SimFlowSto_AmbTempSchedName_ = x.SimFlowSto_AmbTempSchedName_;
          this->SimFlowSto_AmbTempZoneName_ = x.SimFlowSto_AmbTempZoneName_;
          this->SimFlowSto_AmbTempOutdrAirNodeName_ = x.SimFlowSto_AmbTempOutdrAirNodeName_;
          this->SimFlowSto_UseSideInletNodeName_ = x.SimFlowSto_UseSideInletNodeName_;
          this->SimFlowSto_UseSideOutletNodeName_ = x.SimFlowSto_UseSideOutletNodeName_;
          this->SimFlowSto_UseSideHeatTransEffect_ = x.SimFlowSto_UseSideHeatTransEffect_;
          this->SimFlowSto_UseSideAvailSchedName_ = x.SimFlowSto_UseSideAvailSchedName_;
          this->SimFlowSto_UseSideDesignFlowRate_ = x.SimFlowSto_UseSideDesignFlowRate_;
          this->SimFlowSto_SrcSideInletNodeName_ = x.SimFlowSto_SrcSideInletNodeName_;
          this->SimFlowSto_SrcSideOutletNodeName_ = x.SimFlowSto_SrcSideOutletNodeName_;
          this->SimFlowSto_SrcSideHeatTransEffect_ = x.SimFlowSto_SrcSideHeatTransEffect_;
          this->SimFlowSto_SrcSideAvailSchedName_ = x.SimFlowSto_SrcSideAvailSchedName_;
          this->SimFlowSto_SrcSideDesignFlowRate_ = x.SimFlowSto_SrcSideDesignFlowRate_;
          this->SimFlowSto_TankRecovTime_ = x.SimFlowSto_TankRecovTime_;
          this->SimFlowSto_TankHeight_ = x.SimFlowSto_TankHeight_;
          this->SimFlowSto_TankShape_ = x.SimFlowSto_TankShape_;
          this->SimFlowSto_TankPerimeter_ = x.SimFlowSto_TankPerimeter_;
          this->SimFlowSto_TempSensorHeight_ = x.SimFlowSto_TempSensorHeight_;
          this->SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_ = x.SimFlowSto_UniformSkinLossCoefPerUnitAreaToAmbTemp_;
          this->SimFlowSto_UseSideInletHeight_ = x.SimFlowSto_UseSideInletHeight_;
          this->SimFlowSto_UseSideOutletHeight_ = x.SimFlowSto_UseSideOutletHeight_;
          this->SimFlowSto_SrcSideInletHeight_ = x.SimFlowSto_SrcSideInletHeight_;
          this->SimFlowSto_SrcSideOutletHeight_ = x.SimFlowSto_SrcSideOutletHeight_;
          this->SimFlowSto_InletMode_ = x.SimFlowSto_InletMode_;
          this->SimFlowSto_NumNodes_ = x.SimFlowSto_NumNodes_;
          this->SimFlowSto_AddDestratCond_ = x.SimFlowSto_AddDestratCond_;
          this->SimFlowSto_NodeAddLossCoef_1_10_ = x.SimFlowSto_NodeAddLossCoef_1_10_;
        }

        return *this;
      }

      SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified::
      ~SimFlowStorage_ThermalStorage_ThermalStorageWaterStratified ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

