// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimSimulationParameters_SimulationControl_RunPeriodCustomRange.hxx"

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      // SimSimulationParameters_SimulationControl_RunPeriodCustomRange
      // 

      const SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_Name_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_Name () const
      {
        return this->SimSimParams_Name_;
      }

      SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_Name_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_Name ()
      {
        return this->SimSimParams_Name_;
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_Name (const SimSimParams_Name_type& x)
      {
        this->SimSimParams_Name_.set (x);
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_Name (const SimSimParams_Name_optional& x)
      {
        this->SimSimParams_Name_ = x;
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_Name (::std::auto_ptr< SimSimParams_Name_type > x)
      {
        this->SimSimParams_Name_.set (x);
      }

      const SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_BeginMonth_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_BeginMonth () const
      {
        return this->SimSimParams_BeginMonth_;
      }

      SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_BeginMonth_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_BeginMonth ()
      {
        return this->SimSimParams_BeginMonth_;
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_BeginMonth (const SimSimParams_BeginMonth_type& x)
      {
        this->SimSimParams_BeginMonth_.set (x);
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_BeginMonth (const SimSimParams_BeginMonth_optional& x)
      {
        this->SimSimParams_BeginMonth_ = x;
      }

      const SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_BeginDayMonth_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_BeginDayMonth () const
      {
        return this->SimSimParams_BeginDayMonth_;
      }

      SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_BeginDayMonth_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_BeginDayMonth ()
      {
        return this->SimSimParams_BeginDayMonth_;
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_BeginDayMonth (const SimSimParams_BeginDayMonth_type& x)
      {
        this->SimSimParams_BeginDayMonth_.set (x);
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_BeginDayMonth (const SimSimParams_BeginDayMonth_optional& x)
      {
        this->SimSimParams_BeginDayMonth_ = x;
      }

      const SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_EndMonth_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_EndMonth () const
      {
        return this->SimSimParams_EndMonth_;
      }

      SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_EndMonth_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_EndMonth ()
      {
        return this->SimSimParams_EndMonth_;
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_EndMonth (const SimSimParams_EndMonth_type& x)
      {
        this->SimSimParams_EndMonth_.set (x);
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_EndMonth (const SimSimParams_EndMonth_optional& x)
      {
        this->SimSimParams_EndMonth_ = x;
      }

      const SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_EndDayMonth_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_EndDayMonth () const
      {
        return this->SimSimParams_EndDayMonth_;
      }

      SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_EndDayMonth_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_EndDayMonth ()
      {
        return this->SimSimParams_EndDayMonth_;
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_EndDayMonth (const SimSimParams_EndDayMonth_type& x)
      {
        this->SimSimParams_EndDayMonth_.set (x);
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_EndDayMonth (const SimSimParams_EndDayMonth_optional& x)
      {
        this->SimSimParams_EndDayMonth_ = x;
      }

      const SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_DayOfWeekStartDay_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_DayOfWeekStartDay () const
      {
        return this->SimSimParams_DayOfWeekStartDay_;
      }

      SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_DayOfWeekStartDay_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_DayOfWeekStartDay ()
      {
        return this->SimSimParams_DayOfWeekStartDay_;
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_DayOfWeekStartDay (const SimSimParams_DayOfWeekStartDay_type& x)
      {
        this->SimSimParams_DayOfWeekStartDay_.set (x);
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_DayOfWeekStartDay (const SimSimParams_DayOfWeekStartDay_optional& x)
      {
        this->SimSimParams_DayOfWeekStartDay_ = x;
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_DayOfWeekStartDay (::std::auto_ptr< SimSimParams_DayOfWeekStartDay_type > x)
      {
        this->SimSimParams_DayOfWeekStartDay_.set (x);
      }

      const SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_UseWeatherFileHolidays_SpecialDays_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_UseWeatherFileHolidays_SpecialDays () const
      {
        return this->SimSimParams_UseWeatherFileHolidays_SpecialDays_;
      }

      SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_UseWeatherFileHolidays_SpecialDays_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_UseWeatherFileHolidays_SpecialDays ()
      {
        return this->SimSimParams_UseWeatherFileHolidays_SpecialDays_;
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_UseWeatherFileHolidays_SpecialDays (const SimSimParams_UseWeatherFileHolidays_SpecialDays_type& x)
      {
        this->SimSimParams_UseWeatherFileHolidays_SpecialDays_.set (x);
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_UseWeatherFileHolidays_SpecialDays (const SimSimParams_UseWeatherFileHolidays_SpecialDays_optional& x)
      {
        this->SimSimParams_UseWeatherFileHolidays_SpecialDays_ = x;
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_UseWeatherFileHolidays_SpecialDays (::std::auto_ptr< SimSimParams_UseWeatherFileHolidays_SpecialDays_type > x)
      {
        this->SimSimParams_UseWeatherFileHolidays_SpecialDays_.set (x);
      }

      const SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_UseWtherFileDylghtSavingPer_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_UseWtherFileDylghtSavingPer () const
      {
        return this->SimSimParams_UseWtherFileDylghtSavingPer_;
      }

      SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_UseWtherFileDylghtSavingPer_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_UseWtherFileDylghtSavingPer ()
      {
        return this->SimSimParams_UseWtherFileDylghtSavingPer_;
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_UseWtherFileDylghtSavingPer (const SimSimParams_UseWtherFileDylghtSavingPer_type& x)
      {
        this->SimSimParams_UseWtherFileDylghtSavingPer_.set (x);
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_UseWtherFileDylghtSavingPer (const SimSimParams_UseWtherFileDylghtSavingPer_optional& x)
      {
        this->SimSimParams_UseWtherFileDylghtSavingPer_ = x;
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_UseWtherFileDylghtSavingPer (::std::auto_ptr< SimSimParams_UseWtherFileDylghtSavingPer_type > x)
      {
        this->SimSimParams_UseWtherFileDylghtSavingPer_.set (x);
      }

      const SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_ApplyWkndHolidayRule_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_ApplyWkndHolidayRule () const
      {
        return this->SimSimParams_ApplyWkndHolidayRule_;
      }

      SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_ApplyWkndHolidayRule_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_ApplyWkndHolidayRule ()
      {
        return this->SimSimParams_ApplyWkndHolidayRule_;
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_ApplyWkndHolidayRule (const SimSimParams_ApplyWkndHolidayRule_type& x)
      {
        this->SimSimParams_ApplyWkndHolidayRule_.set (x);
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_ApplyWkndHolidayRule (const SimSimParams_ApplyWkndHolidayRule_optional& x)
      {
        this->SimSimParams_ApplyWkndHolidayRule_ = x;
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_ApplyWkndHolidayRule (::std::auto_ptr< SimSimParams_ApplyWkndHolidayRule_type > x)
      {
        this->SimSimParams_ApplyWkndHolidayRule_.set (x);
      }

      const SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_UseWeatherFileRaindics_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_UseWeatherFileRaindics () const
      {
        return this->SimSimParams_UseWeatherFileRaindics_;
      }

      SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_UseWeatherFileRaindics_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_UseWeatherFileRaindics ()
      {
        return this->SimSimParams_UseWeatherFileRaindics_;
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_UseWeatherFileRaindics (const SimSimParams_UseWeatherFileRaindics_type& x)
      {
        this->SimSimParams_UseWeatherFileRaindics_.set (x);
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_UseWeatherFileRaindics (const SimSimParams_UseWeatherFileRaindics_optional& x)
      {
        this->SimSimParams_UseWeatherFileRaindics_ = x;
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_UseWeatherFileRaindics (::std::auto_ptr< SimSimParams_UseWeatherFileRaindics_type > x)
      {
        this->SimSimParams_UseWeatherFileRaindics_.set (x);
      }

      const SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_UseWeatherFileSnowdics_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_UseWeatherFileSnowdics () const
      {
        return this->SimSimParams_UseWeatherFileSnowdics_;
      }

      SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_UseWeatherFileSnowdics_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_UseWeatherFileSnowdics ()
      {
        return this->SimSimParams_UseWeatherFileSnowdics_;
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_UseWeatherFileSnowdics (const SimSimParams_UseWeatherFileSnowdics_type& x)
      {
        this->SimSimParams_UseWeatherFileSnowdics_.set (x);
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_UseWeatherFileSnowdics (const SimSimParams_UseWeatherFileSnowdics_optional& x)
      {
        this->SimSimParams_UseWeatherFileSnowdics_ = x;
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_UseWeatherFileSnowdics (::std::auto_ptr< SimSimParams_UseWeatherFileSnowdics_type > x)
      {
        this->SimSimParams_UseWeatherFileSnowdics_.set (x);
      }

      const SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_BeginYear_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_BeginYear () const
      {
        return this->SimSimParams_BeginYear_;
      }

      SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_BeginYear_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_BeginYear ()
      {
        return this->SimSimParams_BeginYear_;
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_BeginYear (const SimSimParams_BeginYear_type& x)
      {
        this->SimSimParams_BeginYear_.set (x);
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_BeginYear (const SimSimParams_BeginYear_optional& x)
      {
        this->SimSimParams_BeginYear_ = x;
      }

      const SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_EndYear_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_EndYear () const
      {
        return this->SimSimParams_EndYear_;
      }

      SimSimulationParameters_SimulationControl_RunPeriodCustomRange::SimSimParams_EndYear_optional& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_EndYear ()
      {
        return this->SimSimParams_EndYear_;
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_EndYear (const SimSimParams_EndYear_type& x)
      {
        this->SimSimParams_EndYear_.set (x);
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimParams_EndYear (const SimSimParams_EndYear_optional& x)
      {
        this->SimSimParams_EndYear_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      // SimSimulationParameters_SimulationControl_RunPeriodCustomRange
      //

      SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimulationParameters_SimulationControl_RunPeriodCustomRange ()
      : ::schema::simxml::ResourcesGeneral::SimSimulationParameters_SimulationControl (),
        SimSimParams_Name_ (this),
        SimSimParams_BeginMonth_ (this),
        SimSimParams_BeginDayMonth_ (this),
        SimSimParams_EndMonth_ (this),
        SimSimParams_EndDayMonth_ (this),
        SimSimParams_DayOfWeekStartDay_ (this),
        SimSimParams_UseWeatherFileHolidays_SpecialDays_ (this),
        SimSimParams_UseWtherFileDylghtSavingPer_ (this),
        SimSimParams_ApplyWkndHolidayRule_ (this),
        SimSimParams_UseWeatherFileRaindics_ (this),
        SimSimParams_UseWeatherFileSnowdics_ (this),
        SimSimParams_BeginYear_ (this),
        SimSimParams_EndYear_ (this)
      {
      }

      SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimulationParameters_SimulationControl_RunPeriodCustomRange (const RefId_type& RefId)
      : ::schema::simxml::ResourcesGeneral::SimSimulationParameters_SimulationControl (RefId),
        SimSimParams_Name_ (this),
        SimSimParams_BeginMonth_ (this),
        SimSimParams_BeginDayMonth_ (this),
        SimSimParams_EndMonth_ (this),
        SimSimParams_EndDayMonth_ (this),
        SimSimParams_DayOfWeekStartDay_ (this),
        SimSimParams_UseWeatherFileHolidays_SpecialDays_ (this),
        SimSimParams_UseWtherFileDylghtSavingPer_ (this),
        SimSimParams_ApplyWkndHolidayRule_ (this),
        SimSimParams_UseWeatherFileRaindics_ (this),
        SimSimParams_UseWeatherFileSnowdics_ (this),
        SimSimParams_BeginYear_ (this),
        SimSimParams_EndYear_ (this)
      {
      }

      SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimulationParameters_SimulationControl_RunPeriodCustomRange (const SimSimulationParameters_SimulationControl_RunPeriodCustomRange& x,
                                                                      ::xml_schema::flags f,
                                                                      ::xml_schema::container* c)
      : ::schema::simxml::ResourcesGeneral::SimSimulationParameters_SimulationControl (x, f, c),
        SimSimParams_Name_ (x.SimSimParams_Name_, f, this),
        SimSimParams_BeginMonth_ (x.SimSimParams_BeginMonth_, f, this),
        SimSimParams_BeginDayMonth_ (x.SimSimParams_BeginDayMonth_, f, this),
        SimSimParams_EndMonth_ (x.SimSimParams_EndMonth_, f, this),
        SimSimParams_EndDayMonth_ (x.SimSimParams_EndDayMonth_, f, this),
        SimSimParams_DayOfWeekStartDay_ (x.SimSimParams_DayOfWeekStartDay_, f, this),
        SimSimParams_UseWeatherFileHolidays_SpecialDays_ (x.SimSimParams_UseWeatherFileHolidays_SpecialDays_, f, this),
        SimSimParams_UseWtherFileDylghtSavingPer_ (x.SimSimParams_UseWtherFileDylghtSavingPer_, f, this),
        SimSimParams_ApplyWkndHolidayRule_ (x.SimSimParams_ApplyWkndHolidayRule_, f, this),
        SimSimParams_UseWeatherFileRaindics_ (x.SimSimParams_UseWeatherFileRaindics_, f, this),
        SimSimParams_UseWeatherFileSnowdics_ (x.SimSimParams_UseWeatherFileSnowdics_, f, this),
        SimSimParams_BeginYear_ (x.SimSimParams_BeginYear_, f, this),
        SimSimParams_EndYear_ (x.SimSimParams_EndYear_, f, this)
      {
      }

      SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      SimSimulationParameters_SimulationControl_RunPeriodCustomRange (const ::xercesc::DOMElement& e,
                                                                      ::xml_schema::flags f,
                                                                      ::xml_schema::container* c)
      : ::schema::simxml::ResourcesGeneral::SimSimulationParameters_SimulationControl (e, f | ::xml_schema::flags::base, c),
        SimSimParams_Name_ (this),
        SimSimParams_BeginMonth_ (this),
        SimSimParams_BeginDayMonth_ (this),
        SimSimParams_EndMonth_ (this),
        SimSimParams_EndDayMonth_ (this),
        SimSimParams_DayOfWeekStartDay_ (this),
        SimSimParams_UseWeatherFileHolidays_SpecialDays_ (this),
        SimSimParams_UseWtherFileDylghtSavingPer_ (this),
        SimSimParams_ApplyWkndHolidayRule_ (this),
        SimSimParams_UseWeatherFileRaindics_ (this),
        SimSimParams_UseWeatherFileSnowdics_ (this),
        SimSimParams_BeginYear_ (this),
        SimSimParams_EndYear_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::ResourcesGeneral::SimSimulationParameters_SimulationControl::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimSimParams_Name
          //
          if (n.name () == "SimSimParams_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimSimParams_Name_type > r (
              SimSimParams_Name_traits::create (i, f, this));

            if (!this->SimSimParams_Name_)
            {
              this->SimSimParams_Name_.set (r);
              continue;
            }
          }

          // SimSimParams_BeginMonth
          //
          if (n.name () == "SimSimParams_BeginMonth" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_BeginMonth_)
            {
              this->SimSimParams_BeginMonth_.set (SimSimParams_BeginMonth_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimParams_BeginDayMonth
          //
          if (n.name () == "SimSimParams_BeginDayMonth" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_BeginDayMonth_)
            {
              this->SimSimParams_BeginDayMonth_.set (SimSimParams_BeginDayMonth_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimParams_EndMonth
          //
          if (n.name () == "SimSimParams_EndMonth" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_EndMonth_)
            {
              this->SimSimParams_EndMonth_.set (SimSimParams_EndMonth_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimParams_EndDayMonth
          //
          if (n.name () == "SimSimParams_EndDayMonth" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_EndDayMonth_)
            {
              this->SimSimParams_EndDayMonth_.set (SimSimParams_EndDayMonth_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimParams_DayOfWeekStartDay
          //
          if (n.name () == "SimSimParams_DayOfWeekStartDay" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimSimParams_DayOfWeekStartDay_type > r (
              SimSimParams_DayOfWeekStartDay_traits::create (i, f, this));

            if (!this->SimSimParams_DayOfWeekStartDay_)
            {
              this->SimSimParams_DayOfWeekStartDay_.set (r);
              continue;
            }
          }

          // SimSimParams_UseWeatherFileHolidays_SpecialDays
          //
          if (n.name () == "SimSimParams_UseWeatherFileHolidays_SpecialDays" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimSimParams_UseWeatherFileHolidays_SpecialDays_type > r (
              SimSimParams_UseWeatherFileHolidays_SpecialDays_traits::create (i, f, this));

            if (!this->SimSimParams_UseWeatherFileHolidays_SpecialDays_)
            {
              this->SimSimParams_UseWeatherFileHolidays_SpecialDays_.set (r);
              continue;
            }
          }

          // SimSimParams_UseWtherFileDylghtSavingPer
          //
          if (n.name () == "SimSimParams_UseWtherFileDylghtSavingPer" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimSimParams_UseWtherFileDylghtSavingPer_type > r (
              SimSimParams_UseWtherFileDylghtSavingPer_traits::create (i, f, this));

            if (!this->SimSimParams_UseWtherFileDylghtSavingPer_)
            {
              this->SimSimParams_UseWtherFileDylghtSavingPer_.set (r);
              continue;
            }
          }

          // SimSimParams_ApplyWkndHolidayRule
          //
          if (n.name () == "SimSimParams_ApplyWkndHolidayRule" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimSimParams_ApplyWkndHolidayRule_type > r (
              SimSimParams_ApplyWkndHolidayRule_traits::create (i, f, this));

            if (!this->SimSimParams_ApplyWkndHolidayRule_)
            {
              this->SimSimParams_ApplyWkndHolidayRule_.set (r);
              continue;
            }
          }

          // SimSimParams_UseWeatherFileRaindics
          //
          if (n.name () == "SimSimParams_UseWeatherFileRaindics" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimSimParams_UseWeatherFileRaindics_type > r (
              SimSimParams_UseWeatherFileRaindics_traits::create (i, f, this));

            if (!this->SimSimParams_UseWeatherFileRaindics_)
            {
              this->SimSimParams_UseWeatherFileRaindics_.set (r);
              continue;
            }
          }

          // SimSimParams_UseWeatherFileSnowdics
          //
          if (n.name () == "SimSimParams_UseWeatherFileSnowdics" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimSimParams_UseWeatherFileSnowdics_type > r (
              SimSimParams_UseWeatherFileSnowdics_traits::create (i, f, this));

            if (!this->SimSimParams_UseWeatherFileSnowdics_)
            {
              this->SimSimParams_UseWeatherFileSnowdics_.set (r);
              continue;
            }
          }

          // SimSimParams_BeginYear
          //
          if (n.name () == "SimSimParams_BeginYear" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_BeginYear_)
            {
              this->SimSimParams_BeginYear_.set (SimSimParams_BeginYear_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimParams_EndYear
          //
          if (n.name () == "SimSimParams_EndYear" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimParams_EndYear_)
            {
              this->SimSimParams_EndYear_.set (SimSimParams_EndYear_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimSimulationParameters_SimulationControl_RunPeriodCustomRange* SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimSimulationParameters_SimulationControl_RunPeriodCustomRange (*this, f, c);
      }

      SimSimulationParameters_SimulationControl_RunPeriodCustomRange& SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      operator= (const SimSimulationParameters_SimulationControl_RunPeriodCustomRange& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::ResourcesGeneral::SimSimulationParameters_SimulationControl& > (*this) = x;
          this->SimSimParams_Name_ = x.SimSimParams_Name_;
          this->SimSimParams_BeginMonth_ = x.SimSimParams_BeginMonth_;
          this->SimSimParams_BeginDayMonth_ = x.SimSimParams_BeginDayMonth_;
          this->SimSimParams_EndMonth_ = x.SimSimParams_EndMonth_;
          this->SimSimParams_EndDayMonth_ = x.SimSimParams_EndDayMonth_;
          this->SimSimParams_DayOfWeekStartDay_ = x.SimSimParams_DayOfWeekStartDay_;
          this->SimSimParams_UseWeatherFileHolidays_SpecialDays_ = x.SimSimParams_UseWeatherFileHolidays_SpecialDays_;
          this->SimSimParams_UseWtherFileDylghtSavingPer_ = x.SimSimParams_UseWtherFileDylghtSavingPer_;
          this->SimSimParams_ApplyWkndHolidayRule_ = x.SimSimParams_ApplyWkndHolidayRule_;
          this->SimSimParams_UseWeatherFileRaindics_ = x.SimSimParams_UseWeatherFileRaindics_;
          this->SimSimParams_UseWeatherFileSnowdics_ = x.SimSimParams_UseWeatherFileSnowdics_;
          this->SimSimParams_BeginYear_ = x.SimSimParams_BeginYear_;
          this->SimSimParams_EndYear_ = x.SimSimParams_EndYear_;
        }

        return *this;
      }

      SimSimulationParameters_SimulationControl_RunPeriodCustomRange::
      ~SimSimulationParameters_SimulationControl_RunPeriodCustomRange ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

