// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap.hxx"

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      // SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap
      // 

      const SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::SimSimulaOutputRequest_Name_optional& SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_Name () const
      {
        return this->SimSimulaOutputRequest_Name_;
      }

      SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::SimSimulaOutputRequest_Name_optional& SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_Name ()
      {
        return this->SimSimulaOutputRequest_Name_;
      }

      void SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_Name (const SimSimulaOutputRequest_Name_type& x)
      {
        this->SimSimulaOutputRequest_Name_.set (x);
      }

      void SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_Name (const SimSimulaOutputRequest_Name_optional& x)
      {
        this->SimSimulaOutputRequest_Name_ = x;
      }

      void SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_Name (::std::auto_ptr< SimSimulaOutputRequest_Name_type > x)
      {
        this->SimSimulaOutputRequest_Name_.set (x);
      }

      const SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::SimSimulaOutputRequest_ZoneName_optional& SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_ZoneName () const
      {
        return this->SimSimulaOutputRequest_ZoneName_;
      }

      SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::SimSimulaOutputRequest_ZoneName_optional& SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_ZoneName ()
      {
        return this->SimSimulaOutputRequest_ZoneName_;
      }

      void SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_ZoneName (const SimSimulaOutputRequest_ZoneName_type& x)
      {
        this->SimSimulaOutputRequest_ZoneName_.set (x);
      }

      void SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_ZoneName (const SimSimulaOutputRequest_ZoneName_optional& x)
      {
        this->SimSimulaOutputRequest_ZoneName_ = x;
      }

      void SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_ZoneName (::std::auto_ptr< SimSimulaOutputRequest_ZoneName_type > x)
      {
        this->SimSimulaOutputRequest_ZoneName_.set (x);
      }

      const SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::SimSimulaOutputRequest_Zheight_optional& SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_Zheight () const
      {
        return this->SimSimulaOutputRequest_Zheight_;
      }

      SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::SimSimulaOutputRequest_Zheight_optional& SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_Zheight ()
      {
        return this->SimSimulaOutputRequest_Zheight_;
      }

      void SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_Zheight (const SimSimulaOutputRequest_Zheight_type& x)
      {
        this->SimSimulaOutputRequest_Zheight_.set (x);
      }

      void SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_Zheight (const SimSimulaOutputRequest_Zheight_optional& x)
      {
        this->SimSimulaOutputRequest_Zheight_ = x;
      }

      const SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::SimSimulaOutputRequest_XMinCoord_optional& SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_XMinCoord () const
      {
        return this->SimSimulaOutputRequest_XMinCoord_;
      }

      SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::SimSimulaOutputRequest_XMinCoord_optional& SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_XMinCoord ()
      {
        return this->SimSimulaOutputRequest_XMinCoord_;
      }

      void SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_XMinCoord (const SimSimulaOutputRequest_XMinCoord_type& x)
      {
        this->SimSimulaOutputRequest_XMinCoord_.set (x);
      }

      void SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_XMinCoord (const SimSimulaOutputRequest_XMinCoord_optional& x)
      {
        this->SimSimulaOutputRequest_XMinCoord_ = x;
      }

      const SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::SimSimulaOutputRequest_XMaxCoord_optional& SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_XMaxCoord () const
      {
        return this->SimSimulaOutputRequest_XMaxCoord_;
      }

      SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::SimSimulaOutputRequest_XMaxCoord_optional& SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_XMaxCoord ()
      {
        return this->SimSimulaOutputRequest_XMaxCoord_;
      }

      void SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_XMaxCoord (const SimSimulaOutputRequest_XMaxCoord_type& x)
      {
        this->SimSimulaOutputRequest_XMaxCoord_.set (x);
      }

      void SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_XMaxCoord (const SimSimulaOutputRequest_XMaxCoord_optional& x)
      {
        this->SimSimulaOutputRequest_XMaxCoord_ = x;
      }

      const SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::SimSimulaOutputRequest_NumofXGridPoints_optional& SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_NumofXGridPoints () const
      {
        return this->SimSimulaOutputRequest_NumofXGridPoints_;
      }

      SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::SimSimulaOutputRequest_NumofXGridPoints_optional& SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_NumofXGridPoints ()
      {
        return this->SimSimulaOutputRequest_NumofXGridPoints_;
      }

      void SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_NumofXGridPoints (const SimSimulaOutputRequest_NumofXGridPoints_type& x)
      {
        this->SimSimulaOutputRequest_NumofXGridPoints_.set (x);
      }

      void SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_NumofXGridPoints (const SimSimulaOutputRequest_NumofXGridPoints_optional& x)
      {
        this->SimSimulaOutputRequest_NumofXGridPoints_ = x;
      }

      const SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::SimSimulaOutputRequest_YMinCoord_optional& SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_YMinCoord () const
      {
        return this->SimSimulaOutputRequest_YMinCoord_;
      }

      SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::SimSimulaOutputRequest_YMinCoord_optional& SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_YMinCoord ()
      {
        return this->SimSimulaOutputRequest_YMinCoord_;
      }

      void SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_YMinCoord (const SimSimulaOutputRequest_YMinCoord_type& x)
      {
        this->SimSimulaOutputRequest_YMinCoord_.set (x);
      }

      void SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_YMinCoord (const SimSimulaOutputRequest_YMinCoord_optional& x)
      {
        this->SimSimulaOutputRequest_YMinCoord_ = x;
      }

      const SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::SimSimulaOutputRequest_YMaxCoord_optional& SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_YMaxCoord () const
      {
        return this->SimSimulaOutputRequest_YMaxCoord_;
      }

      SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::SimSimulaOutputRequest_YMaxCoord_optional& SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_YMaxCoord ()
      {
        return this->SimSimulaOutputRequest_YMaxCoord_;
      }

      void SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_YMaxCoord (const SimSimulaOutputRequest_YMaxCoord_type& x)
      {
        this->SimSimulaOutputRequest_YMaxCoord_.set (x);
      }

      void SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_YMaxCoord (const SimSimulaOutputRequest_YMaxCoord_optional& x)
      {
        this->SimSimulaOutputRequest_YMaxCoord_ = x;
      }

      const SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::SimSimulaOutputRequest_NumofYGridPoints_optional& SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_NumofYGridPoints () const
      {
        return this->SimSimulaOutputRequest_NumofYGridPoints_;
      }

      SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::SimSimulaOutputRequest_NumofYGridPoints_optional& SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_NumofYGridPoints ()
      {
        return this->SimSimulaOutputRequest_NumofYGridPoints_;
      }

      void SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_NumofYGridPoints (const SimSimulaOutputRequest_NumofYGridPoints_type& x)
      {
        this->SimSimulaOutputRequest_NumofYGridPoints_.set (x);
      }

      void SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulaOutputRequest_NumofYGridPoints (const SimSimulaOutputRequest_NumofYGridPoints_optional& x)
      {
        this->SimSimulaOutputRequest_NumofYGridPoints_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      // SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap
      //

      SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap ()
      : ::schema::simxml::ResourcesGeneral::SimSimulationOutputRequest_Daylighting (),
        SimSimulaOutputRequest_Name_ (this),
        SimSimulaOutputRequest_ZoneName_ (this),
        SimSimulaOutputRequest_Zheight_ (this),
        SimSimulaOutputRequest_XMinCoord_ (this),
        SimSimulaOutputRequest_XMaxCoord_ (this),
        SimSimulaOutputRequest_NumofXGridPoints_ (this),
        SimSimulaOutputRequest_YMinCoord_ (this),
        SimSimulaOutputRequest_YMaxCoord_ (this),
        SimSimulaOutputRequest_NumofYGridPoints_ (this)
      {
      }

      SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap (const RefId_type& RefId)
      : ::schema::simxml::ResourcesGeneral::SimSimulationOutputRequest_Daylighting (RefId),
        SimSimulaOutputRequest_Name_ (this),
        SimSimulaOutputRequest_ZoneName_ (this),
        SimSimulaOutputRequest_Zheight_ (this),
        SimSimulaOutputRequest_XMinCoord_ (this),
        SimSimulaOutputRequest_XMaxCoord_ (this),
        SimSimulaOutputRequest_NumofXGridPoints_ (this),
        SimSimulaOutputRequest_YMinCoord_ (this),
        SimSimulaOutputRequest_YMaxCoord_ (this),
        SimSimulaOutputRequest_NumofYGridPoints_ (this)
      {
      }

      SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap (const SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap& x,
                                                                      ::xml_schema::flags f,
                                                                      ::xml_schema::container* c)
      : ::schema::simxml::ResourcesGeneral::SimSimulationOutputRequest_Daylighting (x, f, c),
        SimSimulaOutputRequest_Name_ (x.SimSimulaOutputRequest_Name_, f, this),
        SimSimulaOutputRequest_ZoneName_ (x.SimSimulaOutputRequest_ZoneName_, f, this),
        SimSimulaOutputRequest_Zheight_ (x.SimSimulaOutputRequest_Zheight_, f, this),
        SimSimulaOutputRequest_XMinCoord_ (x.SimSimulaOutputRequest_XMinCoord_, f, this),
        SimSimulaOutputRequest_XMaxCoord_ (x.SimSimulaOutputRequest_XMaxCoord_, f, this),
        SimSimulaOutputRequest_NumofXGridPoints_ (x.SimSimulaOutputRequest_NumofXGridPoints_, f, this),
        SimSimulaOutputRequest_YMinCoord_ (x.SimSimulaOutputRequest_YMinCoord_, f, this),
        SimSimulaOutputRequest_YMaxCoord_ (x.SimSimulaOutputRequest_YMaxCoord_, f, this),
        SimSimulaOutputRequest_NumofYGridPoints_ (x.SimSimulaOutputRequest_NumofYGridPoints_, f, this)
      {
      }

      SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap (const ::xercesc::DOMElement& e,
                                                                      ::xml_schema::flags f,
                                                                      ::xml_schema::container* c)
      : ::schema::simxml::ResourcesGeneral::SimSimulationOutputRequest_Daylighting (e, f | ::xml_schema::flags::base, c),
        SimSimulaOutputRequest_Name_ (this),
        SimSimulaOutputRequest_ZoneName_ (this),
        SimSimulaOutputRequest_Zheight_ (this),
        SimSimulaOutputRequest_XMinCoord_ (this),
        SimSimulaOutputRequest_XMaxCoord_ (this),
        SimSimulaOutputRequest_NumofXGridPoints_ (this),
        SimSimulaOutputRequest_YMinCoord_ (this),
        SimSimulaOutputRequest_YMaxCoord_ (this),
        SimSimulaOutputRequest_NumofYGridPoints_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::ResourcesGeneral::SimSimulationOutputRequest_Daylighting::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimSimulaOutputRequest_Name
          //
          if (n.name () == "SimSimulaOutputRequest_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimSimulaOutputRequest_Name_type > r (
              SimSimulaOutputRequest_Name_traits::create (i, f, this));

            if (!this->SimSimulaOutputRequest_Name_)
            {
              this->SimSimulaOutputRequest_Name_.set (r);
              continue;
            }
          }

          // SimSimulaOutputRequest_ZoneName
          //
          if (n.name () == "SimSimulaOutputRequest_ZoneName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimSimulaOutputRequest_ZoneName_type > r (
              SimSimulaOutputRequest_ZoneName_traits::create (i, f, this));

            if (!this->SimSimulaOutputRequest_ZoneName_)
            {
              this->SimSimulaOutputRequest_ZoneName_.set (r);
              continue;
            }
          }

          // SimSimulaOutputRequest_Zheight
          //
          if (n.name () == "SimSimulaOutputRequest_Zheight" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimulaOutputRequest_Zheight_)
            {
              this->SimSimulaOutputRequest_Zheight_.set (SimSimulaOutputRequest_Zheight_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimulaOutputRequest_XMinCoord
          //
          if (n.name () == "SimSimulaOutputRequest_XMinCoord" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimulaOutputRequest_XMinCoord_)
            {
              this->SimSimulaOutputRequest_XMinCoord_.set (SimSimulaOutputRequest_XMinCoord_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimulaOutputRequest_XMaxCoord
          //
          if (n.name () == "SimSimulaOutputRequest_XMaxCoord" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimulaOutputRequest_XMaxCoord_)
            {
              this->SimSimulaOutputRequest_XMaxCoord_.set (SimSimulaOutputRequest_XMaxCoord_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimulaOutputRequest_NumofXGridPoints
          //
          if (n.name () == "SimSimulaOutputRequest_NumofXGridPoints" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimulaOutputRequest_NumofXGridPoints_)
            {
              this->SimSimulaOutputRequest_NumofXGridPoints_.set (SimSimulaOutputRequest_NumofXGridPoints_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimulaOutputRequest_YMinCoord
          //
          if (n.name () == "SimSimulaOutputRequest_YMinCoord" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimulaOutputRequest_YMinCoord_)
            {
              this->SimSimulaOutputRequest_YMinCoord_.set (SimSimulaOutputRequest_YMinCoord_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimulaOutputRequest_YMaxCoord
          //
          if (n.name () == "SimSimulaOutputRequest_YMaxCoord" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimulaOutputRequest_YMaxCoord_)
            {
              this->SimSimulaOutputRequest_YMaxCoord_.set (SimSimulaOutputRequest_YMaxCoord_traits::create (i, f, this));
              continue;
            }
          }

          // SimSimulaOutputRequest_NumofYGridPoints
          //
          if (n.name () == "SimSimulaOutputRequest_NumofYGridPoints" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimSimulaOutputRequest_NumofYGridPoints_)
            {
              this->SimSimulaOutputRequest_NumofYGridPoints_.set (SimSimulaOutputRequest_NumofYGridPoints_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap* SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap (*this, f, c);
      }

      SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap& SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      operator= (const SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::ResourcesGeneral::SimSimulationOutputRequest_Daylighting& > (*this) = x;
          this->SimSimulaOutputRequest_Name_ = x.SimSimulaOutputRequest_Name_;
          this->SimSimulaOutputRequest_ZoneName_ = x.SimSimulaOutputRequest_ZoneName_;
          this->SimSimulaOutputRequest_Zheight_ = x.SimSimulaOutputRequest_Zheight_;
          this->SimSimulaOutputRequest_XMinCoord_ = x.SimSimulaOutputRequest_XMinCoord_;
          this->SimSimulaOutputRequest_XMaxCoord_ = x.SimSimulaOutputRequest_XMaxCoord_;
          this->SimSimulaOutputRequest_NumofXGridPoints_ = x.SimSimulaOutputRequest_NumofXGridPoints_;
          this->SimSimulaOutputRequest_YMinCoord_ = x.SimSimulaOutputRequest_YMinCoord_;
          this->SimSimulaOutputRequest_YMaxCoord_ = x.SimSimulaOutputRequest_YMaxCoord_;
          this->SimSimulaOutputRequest_NumofYGridPoints_ = x.SimSimulaOutputRequest_NumofYGridPoints_;
        }

        return *this;
      }

      SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap::
      ~SimSimulationOutputRequest_Daylighting_ReportReqIlluminanceMap ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

