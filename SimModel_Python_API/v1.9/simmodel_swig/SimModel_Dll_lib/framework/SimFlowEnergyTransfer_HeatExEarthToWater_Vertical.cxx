// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransfer_HeatExEarthToWater_Vertical.hxx"

#include "doublelist.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatExEarthToWater_Vertical
      // 

      const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_InNodeName_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_InNodeName () const
      {
        return this->SimFlowEnergyTrans_InNodeName_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_InNodeName_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_InNodeName ()
      {
        return this->SimFlowEnergyTrans_InNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_InNodeName (const SimFlowEnergyTrans_InNodeName_type& x)
      {
        this->SimFlowEnergyTrans_InNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_InNodeName (const SimFlowEnergyTrans_InNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_InNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_InNodeName (::std::auto_ptr< SimFlowEnergyTrans_InNodeName_type > x)
      {
        this->SimFlowEnergyTrans_InNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_OutNodeName_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_OutNodeName () const
      {
        return this->SimFlowEnergyTrans_OutNodeName_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_OutNodeName_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_OutNodeName ()
      {
        return this->SimFlowEnergyTrans_OutNodeName_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_OutNodeName (const SimFlowEnergyTrans_OutNodeName_type& x)
      {
        this->SimFlowEnergyTrans_OutNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_OutNodeName (const SimFlowEnergyTrans_OutNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_OutNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_OutNodeName (::std::auto_ptr< SimFlowEnergyTrans_OutNodeName_type > x)
      {
        this->SimFlowEnergyTrans_OutNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_MaxFlowRate_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_MaxFlowRate () const
      {
        return this->SimFlowEnergyTrans_MaxFlowRate_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_MaxFlowRate_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_MaxFlowRate ()
      {
        return this->SimFlowEnergyTrans_MaxFlowRate_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_MaxFlowRate (const SimFlowEnergyTrans_MaxFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_MaxFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_MaxFlowRate (const SimFlowEnergyTrans_MaxFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_MaxFlowRate_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_NumBoreHoles_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_NumBoreHoles () const
      {
        return this->SimFlowEnergyTrans_NumBoreHoles_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_NumBoreHoles_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_NumBoreHoles ()
      {
        return this->SimFlowEnergyTrans_NumBoreHoles_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_NumBoreHoles (const SimFlowEnergyTrans_NumBoreHoles_type& x)
      {
        this->SimFlowEnergyTrans_NumBoreHoles_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_NumBoreHoles (const SimFlowEnergyTrans_NumBoreHoles_optional& x)
      {
        this->SimFlowEnergyTrans_NumBoreHoles_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_BoreHoleLength_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_BoreHoleLength () const
      {
        return this->SimFlowEnergyTrans_BoreHoleLength_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_BoreHoleLength_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_BoreHoleLength ()
      {
        return this->SimFlowEnergyTrans_BoreHoleLength_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_BoreHoleLength (const SimFlowEnergyTrans_BoreHoleLength_type& x)
      {
        this->SimFlowEnergyTrans_BoreHoleLength_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_BoreHoleLength (const SimFlowEnergyTrans_BoreHoleLength_optional& x)
      {
        this->SimFlowEnergyTrans_BoreHoleLength_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_BoreHoleRadius_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_BoreHoleRadius () const
      {
        return this->SimFlowEnergyTrans_BoreHoleRadius_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_BoreHoleRadius_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_BoreHoleRadius ()
      {
        return this->SimFlowEnergyTrans_BoreHoleRadius_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_BoreHoleRadius (const SimFlowEnergyTrans_BoreHoleRadius_type& x)
      {
        this->SimFlowEnergyTrans_BoreHoleRadius_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_BoreHoleRadius (const SimFlowEnergyTrans_BoreHoleRadius_optional& x)
      {
        this->SimFlowEnergyTrans_BoreHoleRadius_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_GroundThermalCond_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GroundThermalCond () const
      {
        return this->SimFlowEnergyTrans_GroundThermalCond_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_GroundThermalCond_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GroundThermalCond ()
      {
        return this->SimFlowEnergyTrans_GroundThermalCond_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GroundThermalCond (const SimFlowEnergyTrans_GroundThermalCond_type& x)
      {
        this->SimFlowEnergyTrans_GroundThermalCond_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GroundThermalCond (const SimFlowEnergyTrans_GroundThermalCond_optional& x)
      {
        this->SimFlowEnergyTrans_GroundThermalCond_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_GroundThermalHeatCap_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GroundThermalHeatCap () const
      {
        return this->SimFlowEnergyTrans_GroundThermalHeatCap_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_GroundThermalHeatCap_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GroundThermalHeatCap ()
      {
        return this->SimFlowEnergyTrans_GroundThermalHeatCap_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GroundThermalHeatCap (const SimFlowEnergyTrans_GroundThermalHeatCap_type& x)
      {
        this->SimFlowEnergyTrans_GroundThermalHeatCap_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GroundThermalHeatCap (const SimFlowEnergyTrans_GroundThermalHeatCap_optional& x)
      {
        this->SimFlowEnergyTrans_GroundThermalHeatCap_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_GroundTemp_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GroundTemp () const
      {
        return this->SimFlowEnergyTrans_GroundTemp_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_GroundTemp_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GroundTemp ()
      {
        return this->SimFlowEnergyTrans_GroundTemp_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GroundTemp (const SimFlowEnergyTrans_GroundTemp_type& x)
      {
        this->SimFlowEnergyTrans_GroundTemp_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GroundTemp (const SimFlowEnergyTrans_GroundTemp_optional& x)
      {
        this->SimFlowEnergyTrans_GroundTemp_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_DesignFlowRate_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_DesignFlowRate () const
      {
        return this->SimFlowEnergyTrans_DesignFlowRate_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_DesignFlowRate_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_DesignFlowRate ()
      {
        return this->SimFlowEnergyTrans_DesignFlowRate_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_DesignFlowRate (const SimFlowEnergyTrans_DesignFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_DesignFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_DesignFlowRate (const SimFlowEnergyTrans_DesignFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_DesignFlowRate_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_GroutThermalCond_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GroutThermalCond () const
      {
        return this->SimFlowEnergyTrans_GroutThermalCond_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_GroutThermalCond_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GroutThermalCond ()
      {
        return this->SimFlowEnergyTrans_GroutThermalCond_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GroutThermalCond (const SimFlowEnergyTrans_GroutThermalCond_type& x)
      {
        this->SimFlowEnergyTrans_GroutThermalCond_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GroutThermalCond (const SimFlowEnergyTrans_GroutThermalCond_optional& x)
      {
        this->SimFlowEnergyTrans_GroutThermalCond_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_PipeThermalCond_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_PipeThermalCond () const
      {
        return this->SimFlowEnergyTrans_PipeThermalCond_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_PipeThermalCond_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_PipeThermalCond ()
      {
        return this->SimFlowEnergyTrans_PipeThermalCond_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_PipeThermalCond (const SimFlowEnergyTrans_PipeThermalCond_type& x)
      {
        this->SimFlowEnergyTrans_PipeThermalCond_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_PipeThermalCond (const SimFlowEnergyTrans_PipeThermalCond_optional& x)
      {
        this->SimFlowEnergyTrans_PipeThermalCond_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_PipeOutDiam_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_PipeOutDiam () const
      {
        return this->SimFlowEnergyTrans_PipeOutDiam_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_PipeOutDiam_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_PipeOutDiam ()
      {
        return this->SimFlowEnergyTrans_PipeOutDiam_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_PipeOutDiam (const SimFlowEnergyTrans_PipeOutDiam_type& x)
      {
        this->SimFlowEnergyTrans_PipeOutDiam_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_PipeOutDiam (const SimFlowEnergyTrans_PipeOutDiam_optional& x)
      {
        this->SimFlowEnergyTrans_PipeOutDiam_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_UTubeDist_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_UTubeDist () const
      {
        return this->SimFlowEnergyTrans_UTubeDist_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_UTubeDist_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_UTubeDist ()
      {
        return this->SimFlowEnergyTrans_UTubeDist_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_UTubeDist (const SimFlowEnergyTrans_UTubeDist_type& x)
      {
        this->SimFlowEnergyTrans_UTubeDist_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_UTubeDist (const SimFlowEnergyTrans_UTubeDist_optional& x)
      {
        this->SimFlowEnergyTrans_UTubeDist_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_PipeThick_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_PipeThick () const
      {
        return this->SimFlowEnergyTrans_PipeThick_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_PipeThick_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_PipeThick ()
      {
        return this->SimFlowEnergyTrans_PipeThick_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_PipeThick (const SimFlowEnergyTrans_PipeThick_type& x)
      {
        this->SimFlowEnergyTrans_PipeThick_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_PipeThick (const SimFlowEnergyTrans_PipeThick_optional& x)
      {
        this->SimFlowEnergyTrans_PipeThick_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_MaxLengthSim_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_MaxLengthSim () const
      {
        return this->SimFlowEnergyTrans_MaxLengthSim_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_MaxLengthSim_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_MaxLengthSim ()
      {
        return this->SimFlowEnergyTrans_MaxLengthSim_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_MaxLengthSim (const SimFlowEnergyTrans_MaxLengthSim_type& x)
      {
        this->SimFlowEnergyTrans_MaxLengthSim_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_MaxLengthSim (const SimFlowEnergyTrans_MaxLengthSim_optional& x)
      {
        this->SimFlowEnergyTrans_MaxLengthSim_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_GFuncRefRatio_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GFuncRefRatio () const
      {
        return this->SimFlowEnergyTrans_GFuncRefRatio_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_GFuncRefRatio_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GFuncRefRatio ()
      {
        return this->SimFlowEnergyTrans_GFuncRefRatio_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GFuncRefRatio (const SimFlowEnergyTrans_GFuncRefRatio_type& x)
      {
        this->SimFlowEnergyTrans_GFuncRefRatio_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GFuncRefRatio (const SimFlowEnergyTrans_GFuncRefRatio_optional& x)
      {
        this->SimFlowEnergyTrans_GFuncRefRatio_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_NumDataPairsTheGFunc_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_NumDataPairsTheGFunc () const
      {
        return this->SimFlowEnergyTrans_NumDataPairsTheGFunc_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_NumDataPairsTheGFunc_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_NumDataPairsTheGFunc ()
      {
        return this->SimFlowEnergyTrans_NumDataPairsTheGFunc_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_NumDataPairsTheGFunc (const SimFlowEnergyTrans_NumDataPairsTheGFunc_type& x)
      {
        this->SimFlowEnergyTrans_NumDataPairsTheGFunc_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_NumDataPairsTheGFunc (const SimFlowEnergyTrans_NumDataPairsTheGFunc_optional& x)
      {
        this->SimFlowEnergyTrans_NumDataPairsTheGFunc_ = x;
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_GFuncLnTTsVal_1_100_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GFuncLnTTsVal_1_100 () const
      {
        return this->SimFlowEnergyTrans_GFuncLnTTsVal_1_100_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_GFuncLnTTsVal_1_100_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GFuncLnTTsVal_1_100 ()
      {
        return this->SimFlowEnergyTrans_GFuncLnTTsVal_1_100_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GFuncLnTTsVal_1_100 (const SimFlowEnergyTrans_GFuncLnTTsVal_1_100_type& x)
      {
        this->SimFlowEnergyTrans_GFuncLnTTsVal_1_100_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GFuncLnTTsVal_1_100 (const SimFlowEnergyTrans_GFuncLnTTsVal_1_100_optional& x)
      {
        this->SimFlowEnergyTrans_GFuncLnTTsVal_1_100_ = x;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GFuncLnTTsVal_1_100 (::std::auto_ptr< SimFlowEnergyTrans_GFuncLnTTsVal_1_100_type > x)
      {
        this->SimFlowEnergyTrans_GFuncLnTTsVal_1_100_.set (x);
      }

      const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_GFuncGVal_1_100_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GFuncGVal_1_100 () const
      {
        return this->SimFlowEnergyTrans_GFuncGVal_1_100_;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::SimFlowEnergyTrans_GFuncGVal_1_100_optional& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GFuncGVal_1_100 ()
      {
        return this->SimFlowEnergyTrans_GFuncGVal_1_100_;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GFuncGVal_1_100 (const SimFlowEnergyTrans_GFuncGVal_1_100_type& x)
      {
        this->SimFlowEnergyTrans_GFuncGVal_1_100_.set (x);
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GFuncGVal_1_100 (const SimFlowEnergyTrans_GFuncGVal_1_100_optional& x)
      {
        this->SimFlowEnergyTrans_GFuncGVal_1_100_ = x;
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTrans_GFuncGVal_1_100 (::std::auto_ptr< SimFlowEnergyTrans_GFuncGVal_1_100_type > x)
      {
        this->SimFlowEnergyTrans_GFuncGVal_1_100_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatExEarthToWater_Vertical
      //

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical ()
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatExEarthToWater (),
        SimFlowEnergyTrans_InNodeName_ (this),
        SimFlowEnergyTrans_OutNodeName_ (this),
        SimFlowEnergyTrans_MaxFlowRate_ (this),
        SimFlowEnergyTrans_NumBoreHoles_ (this),
        SimFlowEnergyTrans_BoreHoleLength_ (this),
        SimFlowEnergyTrans_BoreHoleRadius_ (this),
        SimFlowEnergyTrans_GroundThermalCond_ (this),
        SimFlowEnergyTrans_GroundThermalHeatCap_ (this),
        SimFlowEnergyTrans_GroundTemp_ (this),
        SimFlowEnergyTrans_DesignFlowRate_ (this),
        SimFlowEnergyTrans_GroutThermalCond_ (this),
        SimFlowEnergyTrans_PipeThermalCond_ (this),
        SimFlowEnergyTrans_PipeOutDiam_ (this),
        SimFlowEnergyTrans_UTubeDist_ (this),
        SimFlowEnergyTrans_PipeThick_ (this),
        SimFlowEnergyTrans_MaxLengthSim_ (this),
        SimFlowEnergyTrans_GFuncRefRatio_ (this),
        SimFlowEnergyTrans_NumDataPairsTheGFunc_ (this),
        SimFlowEnergyTrans_GFuncLnTTsVal_1_100_ (this),
        SimFlowEnergyTrans_GFuncGVal_1_100_ (this)
      {
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatExEarthToWater (RefId),
        SimFlowEnergyTrans_InNodeName_ (this),
        SimFlowEnergyTrans_OutNodeName_ (this),
        SimFlowEnergyTrans_MaxFlowRate_ (this),
        SimFlowEnergyTrans_NumBoreHoles_ (this),
        SimFlowEnergyTrans_BoreHoleLength_ (this),
        SimFlowEnergyTrans_BoreHoleRadius_ (this),
        SimFlowEnergyTrans_GroundThermalCond_ (this),
        SimFlowEnergyTrans_GroundThermalHeatCap_ (this),
        SimFlowEnergyTrans_GroundTemp_ (this),
        SimFlowEnergyTrans_DesignFlowRate_ (this),
        SimFlowEnergyTrans_GroutThermalCond_ (this),
        SimFlowEnergyTrans_PipeThermalCond_ (this),
        SimFlowEnergyTrans_PipeOutDiam_ (this),
        SimFlowEnergyTrans_UTubeDist_ (this),
        SimFlowEnergyTrans_PipeThick_ (this),
        SimFlowEnergyTrans_MaxLengthSim_ (this),
        SimFlowEnergyTrans_GFuncRefRatio_ (this),
        SimFlowEnergyTrans_NumDataPairsTheGFunc_ (this),
        SimFlowEnergyTrans_GFuncLnTTsVal_1_100_ (this),
        SimFlowEnergyTrans_GFuncGVal_1_100_ (this)
      {
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical (const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical& x,
                                                         ::xml_schema::flags f,
                                                         ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatExEarthToWater (x, f, c),
        SimFlowEnergyTrans_InNodeName_ (x.SimFlowEnergyTrans_InNodeName_, f, this),
        SimFlowEnergyTrans_OutNodeName_ (x.SimFlowEnergyTrans_OutNodeName_, f, this),
        SimFlowEnergyTrans_MaxFlowRate_ (x.SimFlowEnergyTrans_MaxFlowRate_, f, this),
        SimFlowEnergyTrans_NumBoreHoles_ (x.SimFlowEnergyTrans_NumBoreHoles_, f, this),
        SimFlowEnergyTrans_BoreHoleLength_ (x.SimFlowEnergyTrans_BoreHoleLength_, f, this),
        SimFlowEnergyTrans_BoreHoleRadius_ (x.SimFlowEnergyTrans_BoreHoleRadius_, f, this),
        SimFlowEnergyTrans_GroundThermalCond_ (x.SimFlowEnergyTrans_GroundThermalCond_, f, this),
        SimFlowEnergyTrans_GroundThermalHeatCap_ (x.SimFlowEnergyTrans_GroundThermalHeatCap_, f, this),
        SimFlowEnergyTrans_GroundTemp_ (x.SimFlowEnergyTrans_GroundTemp_, f, this),
        SimFlowEnergyTrans_DesignFlowRate_ (x.SimFlowEnergyTrans_DesignFlowRate_, f, this),
        SimFlowEnergyTrans_GroutThermalCond_ (x.SimFlowEnergyTrans_GroutThermalCond_, f, this),
        SimFlowEnergyTrans_PipeThermalCond_ (x.SimFlowEnergyTrans_PipeThermalCond_, f, this),
        SimFlowEnergyTrans_PipeOutDiam_ (x.SimFlowEnergyTrans_PipeOutDiam_, f, this),
        SimFlowEnergyTrans_UTubeDist_ (x.SimFlowEnergyTrans_UTubeDist_, f, this),
        SimFlowEnergyTrans_PipeThick_ (x.SimFlowEnergyTrans_PipeThick_, f, this),
        SimFlowEnergyTrans_MaxLengthSim_ (x.SimFlowEnergyTrans_MaxLengthSim_, f, this),
        SimFlowEnergyTrans_GFuncRefRatio_ (x.SimFlowEnergyTrans_GFuncRefRatio_, f, this),
        SimFlowEnergyTrans_NumDataPairsTheGFunc_ (x.SimFlowEnergyTrans_NumDataPairsTheGFunc_, f, this),
        SimFlowEnergyTrans_GFuncLnTTsVal_1_100_ (x.SimFlowEnergyTrans_GFuncLnTTsVal_1_100_, f, this),
        SimFlowEnergyTrans_GFuncGVal_1_100_ (x.SimFlowEnergyTrans_GFuncGVal_1_100_, f, this)
      {
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical (const ::xercesc::DOMElement& e,
                                                         ::xml_schema::flags f,
                                                         ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatExEarthToWater (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTrans_InNodeName_ (this),
        SimFlowEnergyTrans_OutNodeName_ (this),
        SimFlowEnergyTrans_MaxFlowRate_ (this),
        SimFlowEnergyTrans_NumBoreHoles_ (this),
        SimFlowEnergyTrans_BoreHoleLength_ (this),
        SimFlowEnergyTrans_BoreHoleRadius_ (this),
        SimFlowEnergyTrans_GroundThermalCond_ (this),
        SimFlowEnergyTrans_GroundThermalHeatCap_ (this),
        SimFlowEnergyTrans_GroundTemp_ (this),
        SimFlowEnergyTrans_DesignFlowRate_ (this),
        SimFlowEnergyTrans_GroutThermalCond_ (this),
        SimFlowEnergyTrans_PipeThermalCond_ (this),
        SimFlowEnergyTrans_PipeOutDiam_ (this),
        SimFlowEnergyTrans_UTubeDist_ (this),
        SimFlowEnergyTrans_PipeThick_ (this),
        SimFlowEnergyTrans_MaxLengthSim_ (this),
        SimFlowEnergyTrans_GFuncRefRatio_ (this),
        SimFlowEnergyTrans_NumDataPairsTheGFunc_ (this),
        SimFlowEnergyTrans_GFuncLnTTsVal_1_100_ (this),
        SimFlowEnergyTrans_GFuncGVal_1_100_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatExEarthToWater::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTrans_InNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_InNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_InNodeName_type > r (
              SimFlowEnergyTrans_InNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_InNodeName_)
            {
              this->SimFlowEnergyTrans_InNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_OutNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_OutNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_OutNodeName_type > r (
              SimFlowEnergyTrans_OutNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_OutNodeName_)
            {
              this->SimFlowEnergyTrans_OutNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_MaxFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_MaxFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MaxFlowRate_)
            {
              this->SimFlowEnergyTrans_MaxFlowRate_.set (SimFlowEnergyTrans_MaxFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_NumBoreHoles
          //
          if (n.name () == "SimFlowEnergyTrans_NumBoreHoles" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NumBoreHoles_)
            {
              this->SimFlowEnergyTrans_NumBoreHoles_.set (SimFlowEnergyTrans_NumBoreHoles_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_BoreHoleLength
          //
          if (n.name () == "SimFlowEnergyTrans_BoreHoleLength" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_BoreHoleLength_)
            {
              this->SimFlowEnergyTrans_BoreHoleLength_.set (SimFlowEnergyTrans_BoreHoleLength_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_BoreHoleRadius
          //
          if (n.name () == "SimFlowEnergyTrans_BoreHoleRadius" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_BoreHoleRadius_)
            {
              this->SimFlowEnergyTrans_BoreHoleRadius_.set (SimFlowEnergyTrans_BoreHoleRadius_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_GroundThermalCond
          //
          if (n.name () == "SimFlowEnergyTrans_GroundThermalCond" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_GroundThermalCond_)
            {
              this->SimFlowEnergyTrans_GroundThermalCond_.set (SimFlowEnergyTrans_GroundThermalCond_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_GroundThermalHeatCap
          //
          if (n.name () == "SimFlowEnergyTrans_GroundThermalHeatCap" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_GroundThermalHeatCap_)
            {
              this->SimFlowEnergyTrans_GroundThermalHeatCap_.set (SimFlowEnergyTrans_GroundThermalHeatCap_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_GroundTemp
          //
          if (n.name () == "SimFlowEnergyTrans_GroundTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_GroundTemp_)
            {
              this->SimFlowEnergyTrans_GroundTemp_.set (SimFlowEnergyTrans_GroundTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_DesignFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_DesignFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_DesignFlowRate_)
            {
              this->SimFlowEnergyTrans_DesignFlowRate_.set (SimFlowEnergyTrans_DesignFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_GroutThermalCond
          //
          if (n.name () == "SimFlowEnergyTrans_GroutThermalCond" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_GroutThermalCond_)
            {
              this->SimFlowEnergyTrans_GroutThermalCond_.set (SimFlowEnergyTrans_GroutThermalCond_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_PipeThermalCond
          //
          if (n.name () == "SimFlowEnergyTrans_PipeThermalCond" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_PipeThermalCond_)
            {
              this->SimFlowEnergyTrans_PipeThermalCond_.set (SimFlowEnergyTrans_PipeThermalCond_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_PipeOutDiam
          //
          if (n.name () == "SimFlowEnergyTrans_PipeOutDiam" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_PipeOutDiam_)
            {
              this->SimFlowEnergyTrans_PipeOutDiam_.set (SimFlowEnergyTrans_PipeOutDiam_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_UTubeDist
          //
          if (n.name () == "SimFlowEnergyTrans_UTubeDist" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_UTubeDist_)
            {
              this->SimFlowEnergyTrans_UTubeDist_.set (SimFlowEnergyTrans_UTubeDist_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_PipeThick
          //
          if (n.name () == "SimFlowEnergyTrans_PipeThick" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_PipeThick_)
            {
              this->SimFlowEnergyTrans_PipeThick_.set (SimFlowEnergyTrans_PipeThick_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_MaxLengthSim
          //
          if (n.name () == "SimFlowEnergyTrans_MaxLengthSim" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MaxLengthSim_)
            {
              this->SimFlowEnergyTrans_MaxLengthSim_.set (SimFlowEnergyTrans_MaxLengthSim_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_GFuncRefRatio
          //
          if (n.name () == "SimFlowEnergyTrans_GFuncRefRatio" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_GFuncRefRatio_)
            {
              this->SimFlowEnergyTrans_GFuncRefRatio_.set (SimFlowEnergyTrans_GFuncRefRatio_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_NumDataPairsTheGFunc
          //
          if (n.name () == "SimFlowEnergyTrans_NumDataPairsTheGFunc" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NumDataPairsTheGFunc_)
            {
              this->SimFlowEnergyTrans_NumDataPairsTheGFunc_.set (SimFlowEnergyTrans_NumDataPairsTheGFunc_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_GFuncLnTTsVal_1_100
          //
          if (n.name () == "SimFlowEnergyTrans_GFuncLnTTsVal_1_100" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_GFuncLnTTsVal_1_100_type > r (
              SimFlowEnergyTrans_GFuncLnTTsVal_1_100_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_GFuncLnTTsVal_1_100_)
            {
              this->SimFlowEnergyTrans_GFuncLnTTsVal_1_100_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_GFuncGVal_1_100
          //
          if (n.name () == "SimFlowEnergyTrans_GFuncGVal_1_100" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_GFuncGVal_1_100_type > r (
              SimFlowEnergyTrans_GFuncGVal_1_100_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_GFuncGVal_1_100_)
            {
              this->SimFlowEnergyTrans_GFuncGVal_1_100_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical* SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransfer_HeatExEarthToWater_Vertical (*this, f, c);
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical& SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      operator= (const SimFlowEnergyTransfer_HeatExEarthToWater_Vertical& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatExEarthToWater& > (*this) = x;
          this->SimFlowEnergyTrans_InNodeName_ = x.SimFlowEnergyTrans_InNodeName_;
          this->SimFlowEnergyTrans_OutNodeName_ = x.SimFlowEnergyTrans_OutNodeName_;
          this->SimFlowEnergyTrans_MaxFlowRate_ = x.SimFlowEnergyTrans_MaxFlowRate_;
          this->SimFlowEnergyTrans_NumBoreHoles_ = x.SimFlowEnergyTrans_NumBoreHoles_;
          this->SimFlowEnergyTrans_BoreHoleLength_ = x.SimFlowEnergyTrans_BoreHoleLength_;
          this->SimFlowEnergyTrans_BoreHoleRadius_ = x.SimFlowEnergyTrans_BoreHoleRadius_;
          this->SimFlowEnergyTrans_GroundThermalCond_ = x.SimFlowEnergyTrans_GroundThermalCond_;
          this->SimFlowEnergyTrans_GroundThermalHeatCap_ = x.SimFlowEnergyTrans_GroundThermalHeatCap_;
          this->SimFlowEnergyTrans_GroundTemp_ = x.SimFlowEnergyTrans_GroundTemp_;
          this->SimFlowEnergyTrans_DesignFlowRate_ = x.SimFlowEnergyTrans_DesignFlowRate_;
          this->SimFlowEnergyTrans_GroutThermalCond_ = x.SimFlowEnergyTrans_GroutThermalCond_;
          this->SimFlowEnergyTrans_PipeThermalCond_ = x.SimFlowEnergyTrans_PipeThermalCond_;
          this->SimFlowEnergyTrans_PipeOutDiam_ = x.SimFlowEnergyTrans_PipeOutDiam_;
          this->SimFlowEnergyTrans_UTubeDist_ = x.SimFlowEnergyTrans_UTubeDist_;
          this->SimFlowEnergyTrans_PipeThick_ = x.SimFlowEnergyTrans_PipeThick_;
          this->SimFlowEnergyTrans_MaxLengthSim_ = x.SimFlowEnergyTrans_MaxLengthSim_;
          this->SimFlowEnergyTrans_GFuncRefRatio_ = x.SimFlowEnergyTrans_GFuncRefRatio_;
          this->SimFlowEnergyTrans_NumDataPairsTheGFunc_ = x.SimFlowEnergyTrans_NumDataPairsTheGFunc_;
          this->SimFlowEnergyTrans_GFuncLnTTsVal_1_100_ = x.SimFlowEnergyTrans_GFuncLnTTsVal_1_100_;
          this->SimFlowEnergyTrans_GFuncGVal_1_100_ = x.SimFlowEnergyTrans_GFuncGVal_1_100_;
        }

        return *this;
      }

      SimFlowEnergyTransfer_HeatExEarthToWater_Vertical::
      ~SimFlowEnergyTransfer_HeatExEarthToWater_Vertical ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

