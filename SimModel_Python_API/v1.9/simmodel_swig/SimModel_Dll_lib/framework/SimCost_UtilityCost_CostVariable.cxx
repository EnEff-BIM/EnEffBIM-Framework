// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimCost_UtilityCost_CostVariable.hxx"

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      // SimCost_UtilityCost_CostVariable
      // 

      const SimCost_UtilityCost_CostVariable::SimCost_Name_optional& SimCost_UtilityCost_CostVariable::
      SimCost_Name () const
      {
        return this->SimCost_Name_;
      }

      SimCost_UtilityCost_CostVariable::SimCost_Name_optional& SimCost_UtilityCost_CostVariable::
      SimCost_Name ()
      {
        return this->SimCost_Name_;
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_Name (const SimCost_Name_type& x)
      {
        this->SimCost_Name_.set (x);
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_Name (const SimCost_Name_optional& x)
      {
        this->SimCost_Name_ = x;
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_Name (::std::auto_ptr< SimCost_Name_type > x)
      {
        this->SimCost_Name_.set (x);
      }

      const SimCost_UtilityCost_CostVariable::SimCost_TariffName_optional& SimCost_UtilityCost_CostVariable::
      SimCost_TariffName () const
      {
        return this->SimCost_TariffName_;
      }

      SimCost_UtilityCost_CostVariable::SimCost_TariffName_optional& SimCost_UtilityCost_CostVariable::
      SimCost_TariffName ()
      {
        return this->SimCost_TariffName_;
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_TariffName (const SimCost_TariffName_type& x)
      {
        this->SimCost_TariffName_.set (x);
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_TariffName (const SimCost_TariffName_optional& x)
      {
        this->SimCost_TariffName_ = x;
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_TariffName (::std::auto_ptr< SimCost_TariffName_type > x)
      {
        this->SimCost_TariffName_.set (x);
      }

      const SimCost_UtilityCost_CostVariable::SimCost_VarType_optional& SimCost_UtilityCost_CostVariable::
      SimCost_VarType () const
      {
        return this->SimCost_VarType_;
      }

      SimCost_UtilityCost_CostVariable::SimCost_VarType_optional& SimCost_UtilityCost_CostVariable::
      SimCost_VarType ()
      {
        return this->SimCost_VarType_;
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_VarType (const SimCost_VarType_type& x)
      {
        this->SimCost_VarType_.set (x);
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_VarType (const SimCost_VarType_optional& x)
      {
        this->SimCost_VarType_ = x;
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_VarType (::std::auto_ptr< SimCost_VarType_type > x)
      {
        this->SimCost_VarType_.set (x);
      }

      const SimCost_UtilityCost_CostVariable::SimCost_JanuaryVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_JanuaryVal () const
      {
        return this->SimCost_JanuaryVal_;
      }

      SimCost_UtilityCost_CostVariable::SimCost_JanuaryVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_JanuaryVal ()
      {
        return this->SimCost_JanuaryVal_;
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_JanuaryVal (const SimCost_JanuaryVal_type& x)
      {
        this->SimCost_JanuaryVal_.set (x);
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_JanuaryVal (const SimCost_JanuaryVal_optional& x)
      {
        this->SimCost_JanuaryVal_ = x;
      }

      const SimCost_UtilityCost_CostVariable::SimCost_FebruaryVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_FebruaryVal () const
      {
        return this->SimCost_FebruaryVal_;
      }

      SimCost_UtilityCost_CostVariable::SimCost_FebruaryVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_FebruaryVal ()
      {
        return this->SimCost_FebruaryVal_;
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_FebruaryVal (const SimCost_FebruaryVal_type& x)
      {
        this->SimCost_FebruaryVal_.set (x);
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_FebruaryVal (const SimCost_FebruaryVal_optional& x)
      {
        this->SimCost_FebruaryVal_ = x;
      }

      const SimCost_UtilityCost_CostVariable::SimCost_MarchVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_MarchVal () const
      {
        return this->SimCost_MarchVal_;
      }

      SimCost_UtilityCost_CostVariable::SimCost_MarchVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_MarchVal ()
      {
        return this->SimCost_MarchVal_;
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_MarchVal (const SimCost_MarchVal_type& x)
      {
        this->SimCost_MarchVal_.set (x);
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_MarchVal (const SimCost_MarchVal_optional& x)
      {
        this->SimCost_MarchVal_ = x;
      }

      const SimCost_UtilityCost_CostVariable::SimCost_AprilVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_AprilVal () const
      {
        return this->SimCost_AprilVal_;
      }

      SimCost_UtilityCost_CostVariable::SimCost_AprilVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_AprilVal ()
      {
        return this->SimCost_AprilVal_;
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_AprilVal (const SimCost_AprilVal_type& x)
      {
        this->SimCost_AprilVal_.set (x);
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_AprilVal (const SimCost_AprilVal_optional& x)
      {
        this->SimCost_AprilVal_ = x;
      }

      const SimCost_UtilityCost_CostVariable::SimCost_MayVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_MayVal () const
      {
        return this->SimCost_MayVal_;
      }

      SimCost_UtilityCost_CostVariable::SimCost_MayVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_MayVal ()
      {
        return this->SimCost_MayVal_;
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_MayVal (const SimCost_MayVal_type& x)
      {
        this->SimCost_MayVal_.set (x);
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_MayVal (const SimCost_MayVal_optional& x)
      {
        this->SimCost_MayVal_ = x;
      }

      const SimCost_UtilityCost_CostVariable::SimCost_JuneVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_JuneVal () const
      {
        return this->SimCost_JuneVal_;
      }

      SimCost_UtilityCost_CostVariable::SimCost_JuneVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_JuneVal ()
      {
        return this->SimCost_JuneVal_;
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_JuneVal (const SimCost_JuneVal_type& x)
      {
        this->SimCost_JuneVal_.set (x);
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_JuneVal (const SimCost_JuneVal_optional& x)
      {
        this->SimCost_JuneVal_ = x;
      }

      const SimCost_UtilityCost_CostVariable::SimCost_JulyVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_JulyVal () const
      {
        return this->SimCost_JulyVal_;
      }

      SimCost_UtilityCost_CostVariable::SimCost_JulyVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_JulyVal ()
      {
        return this->SimCost_JulyVal_;
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_JulyVal (const SimCost_JulyVal_type& x)
      {
        this->SimCost_JulyVal_.set (x);
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_JulyVal (const SimCost_JulyVal_optional& x)
      {
        this->SimCost_JulyVal_ = x;
      }

      const SimCost_UtilityCost_CostVariable::SimCost_AugVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_AugVal () const
      {
        return this->SimCost_AugVal_;
      }

      SimCost_UtilityCost_CostVariable::SimCost_AugVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_AugVal ()
      {
        return this->SimCost_AugVal_;
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_AugVal (const SimCost_AugVal_type& x)
      {
        this->SimCost_AugVal_.set (x);
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_AugVal (const SimCost_AugVal_optional& x)
      {
        this->SimCost_AugVal_ = x;
      }

      const SimCost_UtilityCost_CostVariable::SimCost_SeptemberVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_SeptemberVal () const
      {
        return this->SimCost_SeptemberVal_;
      }

      SimCost_UtilityCost_CostVariable::SimCost_SeptemberVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_SeptemberVal ()
      {
        return this->SimCost_SeptemberVal_;
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_SeptemberVal (const SimCost_SeptemberVal_type& x)
      {
        this->SimCost_SeptemberVal_.set (x);
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_SeptemberVal (const SimCost_SeptemberVal_optional& x)
      {
        this->SimCost_SeptemberVal_ = x;
      }

      const SimCost_UtilityCost_CostVariable::SimCost_OctoberVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_OctoberVal () const
      {
        return this->SimCost_OctoberVal_;
      }

      SimCost_UtilityCost_CostVariable::SimCost_OctoberVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_OctoberVal ()
      {
        return this->SimCost_OctoberVal_;
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_OctoberVal (const SimCost_OctoberVal_type& x)
      {
        this->SimCost_OctoberVal_.set (x);
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_OctoberVal (const SimCost_OctoberVal_optional& x)
      {
        this->SimCost_OctoberVal_ = x;
      }

      const SimCost_UtilityCost_CostVariable::SimCost_NovemberVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_NovemberVal () const
      {
        return this->SimCost_NovemberVal_;
      }

      SimCost_UtilityCost_CostVariable::SimCost_NovemberVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_NovemberVal ()
      {
        return this->SimCost_NovemberVal_;
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_NovemberVal (const SimCost_NovemberVal_type& x)
      {
        this->SimCost_NovemberVal_.set (x);
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_NovemberVal (const SimCost_NovemberVal_optional& x)
      {
        this->SimCost_NovemberVal_ = x;
      }

      const SimCost_UtilityCost_CostVariable::SimCost_DecemberVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_DecemberVal () const
      {
        return this->SimCost_DecemberVal_;
      }

      SimCost_UtilityCost_CostVariable::SimCost_DecemberVal_optional& SimCost_UtilityCost_CostVariable::
      SimCost_DecemberVal ()
      {
        return this->SimCost_DecemberVal_;
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_DecemberVal (const SimCost_DecemberVal_type& x)
      {
        this->SimCost_DecemberVal_.set (x);
      }

      void SimCost_UtilityCost_CostVariable::
      SimCost_DecemberVal (const SimCost_DecemberVal_optional& x)
      {
        this->SimCost_DecemberVal_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
      // SimCost_UtilityCost_CostVariable
      //

      SimCost_UtilityCost_CostVariable::
      SimCost_UtilityCost_CostVariable ()
      : ::schema::simxml::ResourcesGeneral::SimCost_UtilityCost (),
        SimCost_Name_ (this),
        SimCost_TariffName_ (this),
        SimCost_VarType_ (this),
        SimCost_JanuaryVal_ (this),
        SimCost_FebruaryVal_ (this),
        SimCost_MarchVal_ (this),
        SimCost_AprilVal_ (this),
        SimCost_MayVal_ (this),
        SimCost_JuneVal_ (this),
        SimCost_JulyVal_ (this),
        SimCost_AugVal_ (this),
        SimCost_SeptemberVal_ (this),
        SimCost_OctoberVal_ (this),
        SimCost_NovemberVal_ (this),
        SimCost_DecemberVal_ (this)
      {
      }

      SimCost_UtilityCost_CostVariable::
      SimCost_UtilityCost_CostVariable (const RefId_type& RefId)
      : ::schema::simxml::ResourcesGeneral::SimCost_UtilityCost (RefId),
        SimCost_Name_ (this),
        SimCost_TariffName_ (this),
        SimCost_VarType_ (this),
        SimCost_JanuaryVal_ (this),
        SimCost_FebruaryVal_ (this),
        SimCost_MarchVal_ (this),
        SimCost_AprilVal_ (this),
        SimCost_MayVal_ (this),
        SimCost_JuneVal_ (this),
        SimCost_JulyVal_ (this),
        SimCost_AugVal_ (this),
        SimCost_SeptemberVal_ (this),
        SimCost_OctoberVal_ (this),
        SimCost_NovemberVal_ (this),
        SimCost_DecemberVal_ (this)
      {
      }

      SimCost_UtilityCost_CostVariable::
      SimCost_UtilityCost_CostVariable (const SimCost_UtilityCost_CostVariable& x,
                                        ::xml_schema::flags f,
                                        ::xml_schema::container* c)
      : ::schema::simxml::ResourcesGeneral::SimCost_UtilityCost (x, f, c),
        SimCost_Name_ (x.SimCost_Name_, f, this),
        SimCost_TariffName_ (x.SimCost_TariffName_, f, this),
        SimCost_VarType_ (x.SimCost_VarType_, f, this),
        SimCost_JanuaryVal_ (x.SimCost_JanuaryVal_, f, this),
        SimCost_FebruaryVal_ (x.SimCost_FebruaryVal_, f, this),
        SimCost_MarchVal_ (x.SimCost_MarchVal_, f, this),
        SimCost_AprilVal_ (x.SimCost_AprilVal_, f, this),
        SimCost_MayVal_ (x.SimCost_MayVal_, f, this),
        SimCost_JuneVal_ (x.SimCost_JuneVal_, f, this),
        SimCost_JulyVal_ (x.SimCost_JulyVal_, f, this),
        SimCost_AugVal_ (x.SimCost_AugVal_, f, this),
        SimCost_SeptemberVal_ (x.SimCost_SeptemberVal_, f, this),
        SimCost_OctoberVal_ (x.SimCost_OctoberVal_, f, this),
        SimCost_NovemberVal_ (x.SimCost_NovemberVal_, f, this),
        SimCost_DecemberVal_ (x.SimCost_DecemberVal_, f, this)
      {
      }

      SimCost_UtilityCost_CostVariable::
      SimCost_UtilityCost_CostVariable (const ::xercesc::DOMElement& e,
                                        ::xml_schema::flags f,
                                        ::xml_schema::container* c)
      : ::schema::simxml::ResourcesGeneral::SimCost_UtilityCost (e, f | ::xml_schema::flags::base, c),
        SimCost_Name_ (this),
        SimCost_TariffName_ (this),
        SimCost_VarType_ (this),
        SimCost_JanuaryVal_ (this),
        SimCost_FebruaryVal_ (this),
        SimCost_MarchVal_ (this),
        SimCost_AprilVal_ (this),
        SimCost_MayVal_ (this),
        SimCost_JuneVal_ (this),
        SimCost_JulyVal_ (this),
        SimCost_AugVal_ (this),
        SimCost_SeptemberVal_ (this),
        SimCost_OctoberVal_ (this),
        SimCost_NovemberVal_ (this),
        SimCost_DecemberVal_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimCost_UtilityCost_CostVariable::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::ResourcesGeneral::SimCost_UtilityCost::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimCost_Name
          //
          if (n.name () == "SimCost_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimCost_Name_type > r (
              SimCost_Name_traits::create (i, f, this));

            if (!this->SimCost_Name_)
            {
              this->SimCost_Name_.set (r);
              continue;
            }
          }

          // SimCost_TariffName
          //
          if (n.name () == "SimCost_TariffName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimCost_TariffName_type > r (
              SimCost_TariffName_traits::create (i, f, this));

            if (!this->SimCost_TariffName_)
            {
              this->SimCost_TariffName_.set (r);
              continue;
            }
          }

          // SimCost_VarType
          //
          if (n.name () == "SimCost_VarType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            ::std::auto_ptr< SimCost_VarType_type > r (
              SimCost_VarType_traits::create (i, f, this));

            if (!this->SimCost_VarType_)
            {
              this->SimCost_VarType_.set (r);
              continue;
            }
          }

          // SimCost_JanuaryVal
          //
          if (n.name () == "SimCost_JanuaryVal" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimCost_JanuaryVal_)
            {
              this->SimCost_JanuaryVal_.set (SimCost_JanuaryVal_traits::create (i, f, this));
              continue;
            }
          }

          // SimCost_FebruaryVal
          //
          if (n.name () == "SimCost_FebruaryVal" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimCost_FebruaryVal_)
            {
              this->SimCost_FebruaryVal_.set (SimCost_FebruaryVal_traits::create (i, f, this));
              continue;
            }
          }

          // SimCost_MarchVal
          //
          if (n.name () == "SimCost_MarchVal" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimCost_MarchVal_)
            {
              this->SimCost_MarchVal_.set (SimCost_MarchVal_traits::create (i, f, this));
              continue;
            }
          }

          // SimCost_AprilVal
          //
          if (n.name () == "SimCost_AprilVal" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimCost_AprilVal_)
            {
              this->SimCost_AprilVal_.set (SimCost_AprilVal_traits::create (i, f, this));
              continue;
            }
          }

          // SimCost_MayVal
          //
          if (n.name () == "SimCost_MayVal" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimCost_MayVal_)
            {
              this->SimCost_MayVal_.set (SimCost_MayVal_traits::create (i, f, this));
              continue;
            }
          }

          // SimCost_JuneVal
          //
          if (n.name () == "SimCost_JuneVal" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimCost_JuneVal_)
            {
              this->SimCost_JuneVal_.set (SimCost_JuneVal_traits::create (i, f, this));
              continue;
            }
          }

          // SimCost_JulyVal
          //
          if (n.name () == "SimCost_JulyVal" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimCost_JulyVal_)
            {
              this->SimCost_JulyVal_.set (SimCost_JulyVal_traits::create (i, f, this));
              continue;
            }
          }

          // SimCost_AugVal
          //
          if (n.name () == "SimCost_AugVal" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimCost_AugVal_)
            {
              this->SimCost_AugVal_.set (SimCost_AugVal_traits::create (i, f, this));
              continue;
            }
          }

          // SimCost_SeptemberVal
          //
          if (n.name () == "SimCost_SeptemberVal" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimCost_SeptemberVal_)
            {
              this->SimCost_SeptemberVal_.set (SimCost_SeptemberVal_traits::create (i, f, this));
              continue;
            }
          }

          // SimCost_OctoberVal
          //
          if (n.name () == "SimCost_OctoberVal" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimCost_OctoberVal_)
            {
              this->SimCost_OctoberVal_.set (SimCost_OctoberVal_traits::create (i, f, this));
              continue;
            }
          }

          // SimCost_NovemberVal
          //
          if (n.name () == "SimCost_NovemberVal" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimCost_NovemberVal_)
            {
              this->SimCost_NovemberVal_.set (SimCost_NovemberVal_traits::create (i, f, this));
              continue;
            }
          }

          // SimCost_DecemberVal
          //
          if (n.name () == "SimCost_DecemberVal" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/ResourcesGeneral")
          {
            if (!this->SimCost_DecemberVal_)
            {
              this->SimCost_DecemberVal_.set (SimCost_DecemberVal_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimCost_UtilityCost_CostVariable* SimCost_UtilityCost_CostVariable::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimCost_UtilityCost_CostVariable (*this, f, c);
      }

      SimCost_UtilityCost_CostVariable& SimCost_UtilityCost_CostVariable::
      operator= (const SimCost_UtilityCost_CostVariable& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::ResourcesGeneral::SimCost_UtilityCost& > (*this) = x;
          this->SimCost_Name_ = x.SimCost_Name_;
          this->SimCost_TariffName_ = x.SimCost_TariffName_;
          this->SimCost_VarType_ = x.SimCost_VarType_;
          this->SimCost_JanuaryVal_ = x.SimCost_JanuaryVal_;
          this->SimCost_FebruaryVal_ = x.SimCost_FebruaryVal_;
          this->SimCost_MarchVal_ = x.SimCost_MarchVal_;
          this->SimCost_AprilVal_ = x.SimCost_AprilVal_;
          this->SimCost_MayVal_ = x.SimCost_MayVal_;
          this->SimCost_JuneVal_ = x.SimCost_JuneVal_;
          this->SimCost_JulyVal_ = x.SimCost_JulyVal_;
          this->SimCost_AugVal_ = x.SimCost_AugVal_;
          this->SimCost_SeptemberVal_ = x.SimCost_SeptemberVal_;
          this->SimCost_OctoberVal_ = x.SimCost_OctoberVal_;
          this->SimCost_NovemberVal_ = x.SimCost_NovemberVal_;
          this->SimCost_DecemberVal_ = x.SimCost_DecemberVal_;
        }

        return *this;
      }

      SimCost_UtilityCost_CostVariable::
      ~SimCost_UtilityCost_CostVariable ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace ResourcesGeneral
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

