// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowPlant_ChillerHeater_PerformanceElectricEIR.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowPlant_ChillerHeater_PerformanceElectricEIR
      // 

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_RefCoolModeEvaporatorCap_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefCoolModeEvaporatorCap () const
      {
        return this->SimFlowPlant_RefCoolModeEvaporatorCap_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_RefCoolModeEvaporatorCap_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefCoolModeEvaporatorCap ()
      {
        return this->SimFlowPlant_RefCoolModeEvaporatorCap_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefCoolModeEvaporatorCap (const SimFlowPlant_RefCoolModeEvaporatorCap_type& x)
      {
        this->SimFlowPlant_RefCoolModeEvaporatorCap_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefCoolModeEvaporatorCap (const SimFlowPlant_RefCoolModeEvaporatorCap_optional& x)
      {
        this->SimFlowPlant_RefCoolModeEvaporatorCap_ = x;
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_RefCoolModeCOP_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefCoolModeCOP () const
      {
        return this->SimFlowPlant_RefCoolModeCOP_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_RefCoolModeCOP_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefCoolModeCOP ()
      {
        return this->SimFlowPlant_RefCoolModeCOP_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefCoolModeCOP (const SimFlowPlant_RefCoolModeCOP_type& x)
      {
        this->SimFlowPlant_RefCoolModeCOP_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefCoolModeCOP (const SimFlowPlant_RefCoolModeCOP_optional& x)
      {
        this->SimFlowPlant_RefCoolModeCOP_ = x;
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_RefCoolModeLeavingChilledWaterTemp_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefCoolModeLeavingChilledWaterTemp () const
      {
        return this->SimFlowPlant_RefCoolModeLeavingChilledWaterTemp_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_RefCoolModeLeavingChilledWaterTemp_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefCoolModeLeavingChilledWaterTemp ()
      {
        return this->SimFlowPlant_RefCoolModeLeavingChilledWaterTemp_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefCoolModeLeavingChilledWaterTemp (const SimFlowPlant_RefCoolModeLeavingChilledWaterTemp_type& x)
      {
        this->SimFlowPlant_RefCoolModeLeavingChilledWaterTemp_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefCoolModeLeavingChilledWaterTemp (const SimFlowPlant_RefCoolModeLeavingChilledWaterTemp_optional& x)
      {
        this->SimFlowPlant_RefCoolModeLeavingChilledWaterTemp_ = x;
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_RefCoolModeEnteringCondFluidTemp_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefCoolModeEnteringCondFluidTemp () const
      {
        return this->SimFlowPlant_RefCoolModeEnteringCondFluidTemp_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_RefCoolModeEnteringCondFluidTemp_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefCoolModeEnteringCondFluidTemp ()
      {
        return this->SimFlowPlant_RefCoolModeEnteringCondFluidTemp_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefCoolModeEnteringCondFluidTemp (const SimFlowPlant_RefCoolModeEnteringCondFluidTemp_type& x)
      {
        this->SimFlowPlant_RefCoolModeEnteringCondFluidTemp_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefCoolModeEnteringCondFluidTemp (const SimFlowPlant_RefCoolModeEnteringCondFluidTemp_optional& x)
      {
        this->SimFlowPlant_RefCoolModeEnteringCondFluidTemp_ = x;
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_RefCoolModeLeavingCondWaterTemp_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefCoolModeLeavingCondWaterTemp () const
      {
        return this->SimFlowPlant_RefCoolModeLeavingCondWaterTemp_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_RefCoolModeLeavingCondWaterTemp_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefCoolModeLeavingCondWaterTemp ()
      {
        return this->SimFlowPlant_RefCoolModeLeavingCondWaterTemp_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefCoolModeLeavingCondWaterTemp (const SimFlowPlant_RefCoolModeLeavingCondWaterTemp_type& x)
      {
        this->SimFlowPlant_RefCoolModeLeavingCondWaterTemp_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefCoolModeLeavingCondWaterTemp (const SimFlowPlant_RefCoolModeLeavingCondWaterTemp_optional& x)
      {
        this->SimFlowPlant_RefCoolModeLeavingCondWaterTemp_ = x;
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_RefHeatModeCoolCapRatio_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefHeatModeCoolCapRatio () const
      {
        return this->SimFlowPlant_RefHeatModeCoolCapRatio_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_RefHeatModeCoolCapRatio_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefHeatModeCoolCapRatio ()
      {
        return this->SimFlowPlant_RefHeatModeCoolCapRatio_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefHeatModeCoolCapRatio (const SimFlowPlant_RefHeatModeCoolCapRatio_type& x)
      {
        this->SimFlowPlant_RefHeatModeCoolCapRatio_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefHeatModeCoolCapRatio (const SimFlowPlant_RefHeatModeCoolCapRatio_optional& x)
      {
        this->SimFlowPlant_RefHeatModeCoolCapRatio_ = x;
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_RefHeatModeCoolPwrInputRatio_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefHeatModeCoolPwrInputRatio () const
      {
        return this->SimFlowPlant_RefHeatModeCoolPwrInputRatio_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_RefHeatModeCoolPwrInputRatio_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefHeatModeCoolPwrInputRatio ()
      {
        return this->SimFlowPlant_RefHeatModeCoolPwrInputRatio_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefHeatModeCoolPwrInputRatio (const SimFlowPlant_RefHeatModeCoolPwrInputRatio_type& x)
      {
        this->SimFlowPlant_RefHeatModeCoolPwrInputRatio_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefHeatModeCoolPwrInputRatio (const SimFlowPlant_RefHeatModeCoolPwrInputRatio_optional& x)
      {
        this->SimFlowPlant_RefHeatModeCoolPwrInputRatio_ = x;
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_RefHeatModeLeavingChilledWaterTemp_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefHeatModeLeavingChilledWaterTemp () const
      {
        return this->SimFlowPlant_RefHeatModeLeavingChilledWaterTemp_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_RefHeatModeLeavingChilledWaterTemp_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefHeatModeLeavingChilledWaterTemp ()
      {
        return this->SimFlowPlant_RefHeatModeLeavingChilledWaterTemp_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefHeatModeLeavingChilledWaterTemp (const SimFlowPlant_RefHeatModeLeavingChilledWaterTemp_type& x)
      {
        this->SimFlowPlant_RefHeatModeLeavingChilledWaterTemp_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefHeatModeLeavingChilledWaterTemp (const SimFlowPlant_RefHeatModeLeavingChilledWaterTemp_optional& x)
      {
        this->SimFlowPlant_RefHeatModeLeavingChilledWaterTemp_ = x;
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_RefHeatModeLeavingCondWaterTemp_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefHeatModeLeavingCondWaterTemp () const
      {
        return this->SimFlowPlant_RefHeatModeLeavingCondWaterTemp_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_RefHeatModeLeavingCondWaterTemp_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefHeatModeLeavingCondWaterTemp ()
      {
        return this->SimFlowPlant_RefHeatModeLeavingCondWaterTemp_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefHeatModeLeavingCondWaterTemp (const SimFlowPlant_RefHeatModeLeavingCondWaterTemp_type& x)
      {
        this->SimFlowPlant_RefHeatModeLeavingCondWaterTemp_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefHeatModeLeavingCondWaterTemp (const SimFlowPlant_RefHeatModeLeavingCondWaterTemp_optional& x)
      {
        this->SimFlowPlant_RefHeatModeLeavingCondWaterTemp_ = x;
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_RefHeatModeEnteringCondFluidTemp_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefHeatModeEnteringCondFluidTemp () const
      {
        return this->SimFlowPlant_RefHeatModeEnteringCondFluidTemp_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_RefHeatModeEnteringCondFluidTemp_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefHeatModeEnteringCondFluidTemp ()
      {
        return this->SimFlowPlant_RefHeatModeEnteringCondFluidTemp_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefHeatModeEnteringCondFluidTemp (const SimFlowPlant_RefHeatModeEnteringCondFluidTemp_type& x)
      {
        this->SimFlowPlant_RefHeatModeEnteringCondFluidTemp_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_RefHeatModeEnteringCondFluidTemp (const SimFlowPlant_RefHeatModeEnteringCondFluidTemp_optional& x)
      {
        this->SimFlowPlant_RefHeatModeEnteringCondFluidTemp_ = x;
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit () const
      {
        return this->SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit ()
      {
        return this->SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit (const SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit_type& x)
      {
        this->SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit (const SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit_optional& x)
      {
        this->SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit_ = x;
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_ChilledWaterFlowModeType_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_ChilledWaterFlowModeType () const
      {
        return this->SimFlowPlant_ChilledWaterFlowModeType_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_ChilledWaterFlowModeType_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_ChilledWaterFlowModeType ()
      {
        return this->SimFlowPlant_ChilledWaterFlowModeType_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_ChilledWaterFlowModeType (const SimFlowPlant_ChilledWaterFlowModeType_type& x)
      {
        this->SimFlowPlant_ChilledWaterFlowModeType_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_ChilledWaterFlowModeType (const SimFlowPlant_ChilledWaterFlowModeType_optional& x)
      {
        this->SimFlowPlant_ChilledWaterFlowModeType_ = x;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_ChilledWaterFlowModeType (::std::auto_ptr< SimFlowPlant_ChilledWaterFlowModeType_type > x)
      {
        this->SimFlowPlant_ChilledWaterFlowModeType_.set (x);
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_CmprssrMotorEffic_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CmprssrMotorEffic () const
      {
        return this->SimFlowPlant_CmprssrMotorEffic_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_CmprssrMotorEffic_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CmprssrMotorEffic ()
      {
        return this->SimFlowPlant_CmprssrMotorEffic_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CmprssrMotorEffic (const SimFlowPlant_CmprssrMotorEffic_type& x)
      {
        this->SimFlowPlant_CmprssrMotorEffic_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CmprssrMotorEffic (const SimFlowPlant_CmprssrMotorEffic_optional& x)
      {
        this->SimFlowPlant_CmprssrMotorEffic_ = x;
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar () const
      {
        return this->SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar ()
      {
        return this->SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar (const SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar_type& x)
      {
        this->SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar (const SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar_optional& x)
      {
        this->SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar_ = x;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar (::std::auto_ptr< SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar_type > x)
      {
        this->SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar_.set (x);
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_CoolModeCoolCapFuncofTempCurveName_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeCoolCapFuncofTempCurveName () const
      {
        return this->SimFlowPlant_CoolModeCoolCapFuncofTempCurveName_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_CoolModeCoolCapFuncofTempCurveName_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeCoolCapFuncofTempCurveName ()
      {
        return this->SimFlowPlant_CoolModeCoolCapFuncofTempCurveName_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeCoolCapFuncofTempCurveName (const SimFlowPlant_CoolModeCoolCapFuncofTempCurveName_type& x)
      {
        this->SimFlowPlant_CoolModeCoolCapFuncofTempCurveName_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeCoolCapFuncofTempCurveName (const SimFlowPlant_CoolModeCoolCapFuncofTempCurveName_optional& x)
      {
        this->SimFlowPlant_CoolModeCoolCapFuncofTempCurveName_ = x;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeCoolCapFuncofTempCurveName (::std::auto_ptr< SimFlowPlant_CoolModeCoolCapFuncofTempCurveName_type > x)
      {
        this->SimFlowPlant_CoolModeCoolCapFuncofTempCurveName_.set (x);
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName () const
      {
        return this->SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName ()
      {
        return this->SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName (const SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName_type& x)
      {
        this->SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName (const SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName_optional& x)
      {
        this->SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName_ = x;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName (::std::auto_ptr< SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName_type > x)
      {
        this->SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName_.set (x);
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName () const
      {
        return this->SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName ()
      {
        return this->SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName (const SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_type& x)
      {
        this->SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName (const SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_optional& x)
      {
        this->SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_ = x;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName (::std::auto_ptr< SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_type > x)
      {
        this->SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_.set (x);
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_CoolModeCoolCapOptPartLoadRatio_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeCoolCapOptPartLoadRatio () const
      {
        return this->SimFlowPlant_CoolModeCoolCapOptPartLoadRatio_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_CoolModeCoolCapOptPartLoadRatio_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeCoolCapOptPartLoadRatio ()
      {
        return this->SimFlowPlant_CoolModeCoolCapOptPartLoadRatio_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeCoolCapOptPartLoadRatio (const SimFlowPlant_CoolModeCoolCapOptPartLoadRatio_type& x)
      {
        this->SimFlowPlant_CoolModeCoolCapOptPartLoadRatio_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_CoolModeCoolCapOptPartLoadRatio (const SimFlowPlant_CoolModeCoolCapOptPartLoadRatio_optional& x)
      {
        this->SimFlowPlant_CoolModeCoolCapOptPartLoadRatio_ = x;
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar () const
      {
        return this->SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar ()
      {
        return this->SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar (const SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar_type& x)
      {
        this->SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar (const SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar_optional& x)
      {
        this->SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar_ = x;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar (::std::auto_ptr< SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar_type > x)
      {
        this->SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar_.set (x);
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_HeatModeCoolCapFuncofTempCurveName_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeCoolCapFuncofTempCurveName () const
      {
        return this->SimFlowPlant_HeatModeCoolCapFuncofTempCurveName_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_HeatModeCoolCapFuncofTempCurveName_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeCoolCapFuncofTempCurveName ()
      {
        return this->SimFlowPlant_HeatModeCoolCapFuncofTempCurveName_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeCoolCapFuncofTempCurveName (const SimFlowPlant_HeatModeCoolCapFuncofTempCurveName_type& x)
      {
        this->SimFlowPlant_HeatModeCoolCapFuncofTempCurveName_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeCoolCapFuncofTempCurveName (const SimFlowPlant_HeatModeCoolCapFuncofTempCurveName_optional& x)
      {
        this->SimFlowPlant_HeatModeCoolCapFuncofTempCurveName_ = x;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeCoolCapFuncofTempCurveName (::std::auto_ptr< SimFlowPlant_HeatModeCoolCapFuncofTempCurveName_type > x)
      {
        this->SimFlowPlant_HeatModeCoolCapFuncofTempCurveName_.set (x);
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName () const
      {
        return this->SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName ()
      {
        return this->SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName (const SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName_type& x)
      {
        this->SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName (const SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName_optional& x)
      {
        this->SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName_ = x;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName (::std::auto_ptr< SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName_type > x)
      {
        this->SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName_.set (x);
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName () const
      {
        return this->SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName ()
      {
        return this->SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName (const SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_type& x)
      {
        this->SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName (const SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_optional& x)
      {
        this->SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_ = x;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName (::std::auto_ptr< SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_type > x)
      {
        this->SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_.set (x);
      }

      const SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_HeatModeCoolCapOptPartLoadRatio_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeCoolCapOptPartLoadRatio () const
      {
        return this->SimFlowPlant_HeatModeCoolCapOptPartLoadRatio_;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::SimFlowPlant_HeatModeCoolCapOptPartLoadRatio_optional& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeCoolCapOptPartLoadRatio ()
      {
        return this->SimFlowPlant_HeatModeCoolCapOptPartLoadRatio_;
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeCoolCapOptPartLoadRatio (const SimFlowPlant_HeatModeCoolCapOptPartLoadRatio_type& x)
      {
        this->SimFlowPlant_HeatModeCoolCapOptPartLoadRatio_.set (x);
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_HeatModeCoolCapOptPartLoadRatio (const SimFlowPlant_HeatModeCoolCapOptPartLoadRatio_optional& x)
      {
        this->SimFlowPlant_HeatModeCoolCapOptPartLoadRatio_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowPlant_ChillerHeater_PerformanceElectricEIR
      //

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_ChillerHeater_PerformanceElectricEIR ()
      : ::schema::simxml::MepModel::SimFlowPlant_ChillerHeater (),
        SimFlowPlant_RefCoolModeEvaporatorCap_ (this),
        SimFlowPlant_RefCoolModeCOP_ (this),
        SimFlowPlant_RefCoolModeLeavingChilledWaterTemp_ (this),
        SimFlowPlant_RefCoolModeEnteringCondFluidTemp_ (this),
        SimFlowPlant_RefCoolModeLeavingCondWaterTemp_ (this),
        SimFlowPlant_RefHeatModeCoolCapRatio_ (this),
        SimFlowPlant_RefHeatModeCoolPwrInputRatio_ (this),
        SimFlowPlant_RefHeatModeLeavingChilledWaterTemp_ (this),
        SimFlowPlant_RefHeatModeLeavingCondWaterTemp_ (this),
        SimFlowPlant_RefHeatModeEnteringCondFluidTemp_ (this),
        SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit_ (this),
        SimFlowPlant_ChilledWaterFlowModeType_ (this),
        SimFlowPlant_CmprssrMotorEffic_ (this),
        SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar_ (this),
        SimFlowPlant_CoolModeCoolCapFuncofTempCurveName_ (this),
        SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName_ (this),
        SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_ (this),
        SimFlowPlant_CoolModeCoolCapOptPartLoadRatio_ (this),
        SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar_ (this),
        SimFlowPlant_HeatModeCoolCapFuncofTempCurveName_ (this),
        SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName_ (this),
        SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_ (this),
        SimFlowPlant_HeatModeCoolCapOptPartLoadRatio_ (this)
      {
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_ChillerHeater_PerformanceElectricEIR (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimFlowPlant_ChillerHeater (RefId),
        SimFlowPlant_RefCoolModeEvaporatorCap_ (this),
        SimFlowPlant_RefCoolModeCOP_ (this),
        SimFlowPlant_RefCoolModeLeavingChilledWaterTemp_ (this),
        SimFlowPlant_RefCoolModeEnteringCondFluidTemp_ (this),
        SimFlowPlant_RefCoolModeLeavingCondWaterTemp_ (this),
        SimFlowPlant_RefHeatModeCoolCapRatio_ (this),
        SimFlowPlant_RefHeatModeCoolPwrInputRatio_ (this),
        SimFlowPlant_RefHeatModeLeavingChilledWaterTemp_ (this),
        SimFlowPlant_RefHeatModeLeavingCondWaterTemp_ (this),
        SimFlowPlant_RefHeatModeEnteringCondFluidTemp_ (this),
        SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit_ (this),
        SimFlowPlant_ChilledWaterFlowModeType_ (this),
        SimFlowPlant_CmprssrMotorEffic_ (this),
        SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar_ (this),
        SimFlowPlant_CoolModeCoolCapFuncofTempCurveName_ (this),
        SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName_ (this),
        SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_ (this),
        SimFlowPlant_CoolModeCoolCapOptPartLoadRatio_ (this),
        SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar_ (this),
        SimFlowPlant_HeatModeCoolCapFuncofTempCurveName_ (this),
        SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName_ (this),
        SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_ (this),
        SimFlowPlant_HeatModeCoolCapOptPartLoadRatio_ (this)
      {
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_ChillerHeater_PerformanceElectricEIR (const SimFlowPlant_ChillerHeater_PerformanceElectricEIR& x,
                                                         ::xml_schema::flags f,
                                                         ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowPlant_ChillerHeater (x, f, c),
        SimFlowPlant_RefCoolModeEvaporatorCap_ (x.SimFlowPlant_RefCoolModeEvaporatorCap_, f, this),
        SimFlowPlant_RefCoolModeCOP_ (x.SimFlowPlant_RefCoolModeCOP_, f, this),
        SimFlowPlant_RefCoolModeLeavingChilledWaterTemp_ (x.SimFlowPlant_RefCoolModeLeavingChilledWaterTemp_, f, this),
        SimFlowPlant_RefCoolModeEnteringCondFluidTemp_ (x.SimFlowPlant_RefCoolModeEnteringCondFluidTemp_, f, this),
        SimFlowPlant_RefCoolModeLeavingCondWaterTemp_ (x.SimFlowPlant_RefCoolModeLeavingCondWaterTemp_, f, this),
        SimFlowPlant_RefHeatModeCoolCapRatio_ (x.SimFlowPlant_RefHeatModeCoolCapRatio_, f, this),
        SimFlowPlant_RefHeatModeCoolPwrInputRatio_ (x.SimFlowPlant_RefHeatModeCoolPwrInputRatio_, f, this),
        SimFlowPlant_RefHeatModeLeavingChilledWaterTemp_ (x.SimFlowPlant_RefHeatModeLeavingChilledWaterTemp_, f, this),
        SimFlowPlant_RefHeatModeLeavingCondWaterTemp_ (x.SimFlowPlant_RefHeatModeLeavingCondWaterTemp_, f, this),
        SimFlowPlant_RefHeatModeEnteringCondFluidTemp_ (x.SimFlowPlant_RefHeatModeEnteringCondFluidTemp_, f, this),
        SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit_ (x.SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit_, f, this),
        SimFlowPlant_ChilledWaterFlowModeType_ (x.SimFlowPlant_ChilledWaterFlowModeType_, f, this),
        SimFlowPlant_CmprssrMotorEffic_ (x.SimFlowPlant_CmprssrMotorEffic_, f, this),
        SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar_ (x.SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar_, f, this),
        SimFlowPlant_CoolModeCoolCapFuncofTempCurveName_ (x.SimFlowPlant_CoolModeCoolCapFuncofTempCurveName_, f, this),
        SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName_ (x.SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName_, f, this),
        SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_ (x.SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_, f, this),
        SimFlowPlant_CoolModeCoolCapOptPartLoadRatio_ (x.SimFlowPlant_CoolModeCoolCapOptPartLoadRatio_, f, this),
        SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar_ (x.SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar_, f, this),
        SimFlowPlant_HeatModeCoolCapFuncofTempCurveName_ (x.SimFlowPlant_HeatModeCoolCapFuncofTempCurveName_, f, this),
        SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName_ (x.SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName_, f, this),
        SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_ (x.SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_, f, this),
        SimFlowPlant_HeatModeCoolCapOptPartLoadRatio_ (x.SimFlowPlant_HeatModeCoolCapOptPartLoadRatio_, f, this)
      {
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      SimFlowPlant_ChillerHeater_PerformanceElectricEIR (const ::xercesc::DOMElement& e,
                                                         ::xml_schema::flags f,
                                                         ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowPlant_ChillerHeater (e, f | ::xml_schema::flags::base, c),
        SimFlowPlant_RefCoolModeEvaporatorCap_ (this),
        SimFlowPlant_RefCoolModeCOP_ (this),
        SimFlowPlant_RefCoolModeLeavingChilledWaterTemp_ (this),
        SimFlowPlant_RefCoolModeEnteringCondFluidTemp_ (this),
        SimFlowPlant_RefCoolModeLeavingCondWaterTemp_ (this),
        SimFlowPlant_RefHeatModeCoolCapRatio_ (this),
        SimFlowPlant_RefHeatModeCoolPwrInputRatio_ (this),
        SimFlowPlant_RefHeatModeLeavingChilledWaterTemp_ (this),
        SimFlowPlant_RefHeatModeLeavingCondWaterTemp_ (this),
        SimFlowPlant_RefHeatModeEnteringCondFluidTemp_ (this),
        SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit_ (this),
        SimFlowPlant_ChilledWaterFlowModeType_ (this),
        SimFlowPlant_CmprssrMotorEffic_ (this),
        SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar_ (this),
        SimFlowPlant_CoolModeCoolCapFuncofTempCurveName_ (this),
        SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName_ (this),
        SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_ (this),
        SimFlowPlant_CoolModeCoolCapOptPartLoadRatio_ (this),
        SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar_ (this),
        SimFlowPlant_HeatModeCoolCapFuncofTempCurveName_ (this),
        SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName_ (this),
        SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_ (this),
        SimFlowPlant_HeatModeCoolCapOptPartLoadRatio_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimFlowPlant_ChillerHeater::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowPlant_RefCoolModeEvaporatorCap
          //
          if (n.name () == "SimFlowPlant_RefCoolModeEvaporatorCap" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_RefCoolModeEvaporatorCap_)
            {
              this->SimFlowPlant_RefCoolModeEvaporatorCap_.set (SimFlowPlant_RefCoolModeEvaporatorCap_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_RefCoolModeCOP
          //
          if (n.name () == "SimFlowPlant_RefCoolModeCOP" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_RefCoolModeCOP_)
            {
              this->SimFlowPlant_RefCoolModeCOP_.set (SimFlowPlant_RefCoolModeCOP_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_RefCoolModeLeavingChilledWaterTemp
          //
          if (n.name () == "SimFlowPlant_RefCoolModeLeavingChilledWaterTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_RefCoolModeLeavingChilledWaterTemp_)
            {
              this->SimFlowPlant_RefCoolModeLeavingChilledWaterTemp_.set (SimFlowPlant_RefCoolModeLeavingChilledWaterTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_RefCoolModeEnteringCondFluidTemp
          //
          if (n.name () == "SimFlowPlant_RefCoolModeEnteringCondFluidTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_RefCoolModeEnteringCondFluidTemp_)
            {
              this->SimFlowPlant_RefCoolModeEnteringCondFluidTemp_.set (SimFlowPlant_RefCoolModeEnteringCondFluidTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_RefCoolModeLeavingCondWaterTemp
          //
          if (n.name () == "SimFlowPlant_RefCoolModeLeavingCondWaterTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_RefCoolModeLeavingCondWaterTemp_)
            {
              this->SimFlowPlant_RefCoolModeLeavingCondWaterTemp_.set (SimFlowPlant_RefCoolModeLeavingCondWaterTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_RefHeatModeCoolCapRatio
          //
          if (n.name () == "SimFlowPlant_RefHeatModeCoolCapRatio" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_RefHeatModeCoolCapRatio_)
            {
              this->SimFlowPlant_RefHeatModeCoolCapRatio_.set (SimFlowPlant_RefHeatModeCoolCapRatio_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_RefHeatModeCoolPwrInputRatio
          //
          if (n.name () == "SimFlowPlant_RefHeatModeCoolPwrInputRatio" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_RefHeatModeCoolPwrInputRatio_)
            {
              this->SimFlowPlant_RefHeatModeCoolPwrInputRatio_.set (SimFlowPlant_RefHeatModeCoolPwrInputRatio_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_RefHeatModeLeavingChilledWaterTemp
          //
          if (n.name () == "SimFlowPlant_RefHeatModeLeavingChilledWaterTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_RefHeatModeLeavingChilledWaterTemp_)
            {
              this->SimFlowPlant_RefHeatModeLeavingChilledWaterTemp_.set (SimFlowPlant_RefHeatModeLeavingChilledWaterTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_RefHeatModeLeavingCondWaterTemp
          //
          if (n.name () == "SimFlowPlant_RefHeatModeLeavingCondWaterTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_RefHeatModeLeavingCondWaterTemp_)
            {
              this->SimFlowPlant_RefHeatModeLeavingCondWaterTemp_.set (SimFlowPlant_RefHeatModeLeavingCondWaterTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_RefHeatModeEnteringCondFluidTemp
          //
          if (n.name () == "SimFlowPlant_RefHeatModeEnteringCondFluidTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_RefHeatModeEnteringCondFluidTemp_)
            {
              this->SimFlowPlant_RefHeatModeEnteringCondFluidTemp_.set (SimFlowPlant_RefHeatModeEnteringCondFluidTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit
          //
          if (n.name () == "SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit_)
            {
              this->SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit_.set (SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_ChilledWaterFlowModeType
          //
          if (n.name () == "SimFlowPlant_ChilledWaterFlowModeType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_ChilledWaterFlowModeType_type > r (
              SimFlowPlant_ChilledWaterFlowModeType_traits::create (i, f, this));

            if (!this->SimFlowPlant_ChilledWaterFlowModeType_)
            {
              this->SimFlowPlant_ChilledWaterFlowModeType_.set (r);
              continue;
            }
          }

          // SimFlowPlant_CmprssrMotorEffic
          //
          if (n.name () == "SimFlowPlant_CmprssrMotorEffic" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_CmprssrMotorEffic_)
            {
              this->SimFlowPlant_CmprssrMotorEffic_.set (SimFlowPlant_CmprssrMotorEffic_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar
          //
          if (n.name () == "SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar_type > r (
              SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar_traits::create (i, f, this));

            if (!this->SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar_)
            {
              this->SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar_.set (r);
              continue;
            }
          }

          // SimFlowPlant_CoolModeCoolCapFuncofTempCurveName
          //
          if (n.name () == "SimFlowPlant_CoolModeCoolCapFuncofTempCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_CoolModeCoolCapFuncofTempCurveName_type > r (
              SimFlowPlant_CoolModeCoolCapFuncofTempCurveName_traits::create (i, f, this));

            if (!this->SimFlowPlant_CoolModeCoolCapFuncofTempCurveName_)
            {
              this->SimFlowPlant_CoolModeCoolCapFuncofTempCurveName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName
          //
          if (n.name () == "SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName_type > r (
              SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName_traits::create (i, f, this));

            if (!this->SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName_)
            {
              this->SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName
          //
          if (n.name () == "SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_type > r (
              SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_traits::create (i, f, this));

            if (!this->SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_)
            {
              this->SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_CoolModeCoolCapOptPartLoadRatio
          //
          if (n.name () == "SimFlowPlant_CoolModeCoolCapOptPartLoadRatio" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_CoolModeCoolCapOptPartLoadRatio_)
            {
              this->SimFlowPlant_CoolModeCoolCapOptPartLoadRatio_.set (SimFlowPlant_CoolModeCoolCapOptPartLoadRatio_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar
          //
          if (n.name () == "SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar_type > r (
              SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar_traits::create (i, f, this));

            if (!this->SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar_)
            {
              this->SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar_.set (r);
              continue;
            }
          }

          // SimFlowPlant_HeatModeCoolCapFuncofTempCurveName
          //
          if (n.name () == "SimFlowPlant_HeatModeCoolCapFuncofTempCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_HeatModeCoolCapFuncofTempCurveName_type > r (
              SimFlowPlant_HeatModeCoolCapFuncofTempCurveName_traits::create (i, f, this));

            if (!this->SimFlowPlant_HeatModeCoolCapFuncofTempCurveName_)
            {
              this->SimFlowPlant_HeatModeCoolCapFuncofTempCurveName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName
          //
          if (n.name () == "SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName_type > r (
              SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName_traits::create (i, f, this));

            if (!this->SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName_)
            {
              this->SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName
          //
          if (n.name () == "SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_type > r (
              SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_traits::create (i, f, this));

            if (!this->SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_)
            {
              this->SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_.set (r);
              continue;
            }
          }

          // SimFlowPlant_HeatModeCoolCapOptPartLoadRatio
          //
          if (n.name () == "SimFlowPlant_HeatModeCoolCapOptPartLoadRatio" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowPlant_HeatModeCoolCapOptPartLoadRatio_)
            {
              this->SimFlowPlant_HeatModeCoolCapOptPartLoadRatio_.set (SimFlowPlant_HeatModeCoolCapOptPartLoadRatio_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR* SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowPlant_ChillerHeater_PerformanceElectricEIR (*this, f, c);
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR& SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      operator= (const SimFlowPlant_ChillerHeater_PerformanceElectricEIR& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimFlowPlant_ChillerHeater& > (*this) = x;
          this->SimFlowPlant_RefCoolModeEvaporatorCap_ = x.SimFlowPlant_RefCoolModeEvaporatorCap_;
          this->SimFlowPlant_RefCoolModeCOP_ = x.SimFlowPlant_RefCoolModeCOP_;
          this->SimFlowPlant_RefCoolModeLeavingChilledWaterTemp_ = x.SimFlowPlant_RefCoolModeLeavingChilledWaterTemp_;
          this->SimFlowPlant_RefCoolModeEnteringCondFluidTemp_ = x.SimFlowPlant_RefCoolModeEnteringCondFluidTemp_;
          this->SimFlowPlant_RefCoolModeLeavingCondWaterTemp_ = x.SimFlowPlant_RefCoolModeLeavingCondWaterTemp_;
          this->SimFlowPlant_RefHeatModeCoolCapRatio_ = x.SimFlowPlant_RefHeatModeCoolCapRatio_;
          this->SimFlowPlant_RefHeatModeCoolPwrInputRatio_ = x.SimFlowPlant_RefHeatModeCoolPwrInputRatio_;
          this->SimFlowPlant_RefHeatModeLeavingChilledWaterTemp_ = x.SimFlowPlant_RefHeatModeLeavingChilledWaterTemp_;
          this->SimFlowPlant_RefHeatModeLeavingCondWaterTemp_ = x.SimFlowPlant_RefHeatModeLeavingCondWaterTemp_;
          this->SimFlowPlant_RefHeatModeEnteringCondFluidTemp_ = x.SimFlowPlant_RefHeatModeEnteringCondFluidTemp_;
          this->SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit_ = x.SimFlowPlant_HeatModeEnteringChilledWaterTempLowLimit_;
          this->SimFlowPlant_ChilledWaterFlowModeType_ = x.SimFlowPlant_ChilledWaterFlowModeType_;
          this->SimFlowPlant_CmprssrMotorEffic_ = x.SimFlowPlant_CmprssrMotorEffic_;
          this->SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar_ = x.SimFlowPlant_CoolModeTempCurveCondWaterIndependentVar_;
          this->SimFlowPlant_CoolModeCoolCapFuncofTempCurveName_ = x.SimFlowPlant_CoolModeCoolCapFuncofTempCurveName_;
          this->SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName_ = x.SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofTempCurveName_;
          this->SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_ = x.SimFlowPlant_CoolModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_;
          this->SimFlowPlant_CoolModeCoolCapOptPartLoadRatio_ = x.SimFlowPlant_CoolModeCoolCapOptPartLoadRatio_;
          this->SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar_ = x.SimFlowPlant_HeatModeTempCurveCondWaterIndependentVar_;
          this->SimFlowPlant_HeatModeCoolCapFuncofTempCurveName_ = x.SimFlowPlant_HeatModeCoolCapFuncofTempCurveName_;
          this->SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName_ = x.SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofTempCurveName_;
          this->SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_ = x.SimFlowPlant_HeatModeElecInputtoCoolOutputRatioFuncofPartLoadRatioCurveName_;
          this->SimFlowPlant_HeatModeCoolCapOptPartLoadRatio_ = x.SimFlowPlant_HeatModeCoolCapOptPartLoadRatio_;
        }

        return *this;
      }

      SimFlowPlant_ChillerHeater_PerformanceElectricEIR::
      ~SimFlowPlant_ChillerHeater_PerformanceElectricEIR ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

