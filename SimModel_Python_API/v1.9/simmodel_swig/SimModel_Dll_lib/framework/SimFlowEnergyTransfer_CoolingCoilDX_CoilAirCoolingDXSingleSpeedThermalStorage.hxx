// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef SIM_FLOW_ENERGY_TRANSFER_COOLING_COIL_DX_COIL_AIR_COOLING_DXSINGLE_SPEED_THERMAL_STORAGE_HXX
#define SIM_FLOW_ENERGY_TRANSFER_COOLING_COIL_DX_COIL_AIR_COOLING_DXSINGLE_SPEED_THERMAL_STORAGE_HXX

#ifndef XSD_USE_CHAR
#define XSD_USE_CHAR
#endif

#ifndef XSD_CXX_TREE_USE_CHAR
#define XSD_CXX_TREE_USE_CHAR
#endif

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/config.hxx>

#if (XSD_INT_VERSION != 4000000L)
#error XSD runtime version mismatch
#endif

#include <xsd/cxx/pre.hxx>

#include <xsd/cxx/xml/char-utf8.hxx>

#include <xsd/cxx/tree/exceptions.hxx>
#include <xsd/cxx/tree/elements.hxx>
#include <xsd/cxx/tree/types.hxx>

#include <xsd/cxx/xml/error-handler.hxx>

#include <xsd/cxx/xml/dom/auto-ptr.hxx>

#include <xsd/cxx/tree/parsing.hxx>
#include <xsd/cxx/tree/parsing/byte.hxx>
#include <xsd/cxx/tree/parsing/unsigned-byte.hxx>
#include <xsd/cxx/tree/parsing/short.hxx>
#include <xsd/cxx/tree/parsing/unsigned-short.hxx>
#include <xsd/cxx/tree/parsing/int.hxx>
#include <xsd/cxx/tree/parsing/unsigned-int.hxx>
#include <xsd/cxx/tree/parsing/long.hxx>
#include <xsd/cxx/tree/parsing/unsigned-long.hxx>
#include <xsd/cxx/tree/parsing/boolean.hxx>
#include <xsd/cxx/tree/parsing/float.hxx>
#include <xsd/cxx/tree/parsing/double.hxx>
#include <xsd/cxx/tree/parsing/decimal.hxx>

namespace xml_schema
{
  // anyType and anySimpleType.
  //
  typedef ::xsd::cxx::tree::type type;
  typedef ::xsd::cxx::tree::simple_type< char, type > simple_type;
  typedef ::xsd::cxx::tree::type container;

  // 8-bit
  //
  typedef signed char byte;
  typedef unsigned char unsigned_byte;

  // 16-bit
  //
  typedef short short_;
  typedef unsigned short unsigned_short;

  // 32-bit
  //
  typedef int int_;
  typedef unsigned int unsigned_int;

  // 64-bit
  //
  typedef long long long_;
  typedef unsigned long long unsigned_long;

  // Supposed to be arbitrary-length integral types.
  //
  typedef long long integer;
  typedef long long non_positive_integer;
  typedef unsigned long long non_negative_integer;
  typedef unsigned long long positive_integer;
  typedef long long negative_integer;

  // Boolean.
  //
  typedef bool boolean;

  // Floating-point types.
  //
  typedef float float_;
  typedef double double_;
  typedef double decimal;

  // String types.
  //
  typedef ::xsd::cxx::tree::string< char, simple_type > string;
  typedef ::xsd::cxx::tree::normalized_string< char, string > normalized_string;
  typedef ::xsd::cxx::tree::token< char, normalized_string > token;
  typedef ::xsd::cxx::tree::name< char, token > name;
  typedef ::xsd::cxx::tree::nmtoken< char, token > nmtoken;
  typedef ::xsd::cxx::tree::nmtokens< char, simple_type, nmtoken > nmtokens;
  typedef ::xsd::cxx::tree::ncname< char, name > ncname;
  typedef ::xsd::cxx::tree::language< char, token > language;

  // ID/IDREF.
  //
  typedef ::xsd::cxx::tree::id< char, ncname > id;
  typedef ::xsd::cxx::tree::idref< char, ncname, type > idref;
  typedef ::xsd::cxx::tree::idrefs< char, simple_type, idref > idrefs;

  // URI.
  //
  typedef ::xsd::cxx::tree::uri< char, simple_type > uri;

  // Qualified name.
  //
  typedef ::xsd::cxx::tree::qname< char, simple_type, uri, ncname > qname;

  // Binary.
  //
  typedef ::xsd::cxx::tree::buffer< char > buffer;
  typedef ::xsd::cxx::tree::base64_binary< char, simple_type > base64_binary;
  typedef ::xsd::cxx::tree::hex_binary< char, simple_type > hex_binary;

  // Date/time.
  //
  typedef ::xsd::cxx::tree::time_zone time_zone;
  typedef ::xsd::cxx::tree::date< char, simple_type > date;
  typedef ::xsd::cxx::tree::date_time< char, simple_type > date_time;
  typedef ::xsd::cxx::tree::duration< char, simple_type > duration;
  typedef ::xsd::cxx::tree::gday< char, simple_type > gday;
  typedef ::xsd::cxx::tree::gmonth< char, simple_type > gmonth;
  typedef ::xsd::cxx::tree::gmonth_day< char, simple_type > gmonth_day;
  typedef ::xsd::cxx::tree::gyear< char, simple_type > gyear;
  typedef ::xsd::cxx::tree::gyear_month< char, simple_type > gyear_month;
  typedef ::xsd::cxx::tree::time< char, simple_type > time;

  // Entity.
  //
  typedef ::xsd::cxx::tree::entity< char, ncname > entity;
  typedef ::xsd::cxx::tree::entities< char, simple_type, entity > entities;

  typedef ::xsd::cxx::tree::content_order content_order;
  // Flags and properties.
  //
  typedef ::xsd::cxx::tree::flags flags;
  typedef ::xsd::cxx::tree::properties< char > properties;

  // Parsing/serialization diagnostics.
  //
  typedef ::xsd::cxx::tree::severity severity;
  typedef ::xsd::cxx::tree::error< char > error;
  typedef ::xsd::cxx::tree::diagnostics< char > diagnostics;

  // Exceptions.
  //
  typedef ::xsd::cxx::tree::exception< char > exception;
  typedef ::xsd::cxx::tree::bounds< char > bounds;
  typedef ::xsd::cxx::tree::duplicate_id< char > duplicate_id;
  typedef ::xsd::cxx::tree::parsing< char > parsing;
  typedef ::xsd::cxx::tree::expected_element< char > expected_element;
  typedef ::xsd::cxx::tree::unexpected_element< char > unexpected_element;
  typedef ::xsd::cxx::tree::expected_attribute< char > expected_attribute;
  typedef ::xsd::cxx::tree::unexpected_enumerator< char > unexpected_enumerator;
  typedef ::xsd::cxx::tree::expected_text_content< char > expected_text_content;
  typedef ::xsd::cxx::tree::no_prefix_mapping< char > no_prefix_mapping;
  typedef ::xsd::cxx::tree::no_type_info< char > no_type_info;
  typedef ::xsd::cxx::tree::not_derived< char > not_derived;

  // Error handler callback interface.
  //
  typedef ::xsd::cxx::xml::error_handler< char > error_handler;

  // DOM interaction.
  //
  namespace dom
  {
    // Automatic pointer for DOMDocument.
    //
    using ::xsd::cxx::xml::dom::auto_ptr;

#ifndef XSD_CXX_TREE_TREE_NODE_KEY__XML_SCHEMA
#define XSD_CXX_TREE_TREE_NODE_KEY__XML_SCHEMA
    // DOM user data key for back pointers to tree nodes.
    //
    const XMLCh* const tree_node_key = ::xsd::cxx::tree::user_data_keys::node;
#endif
  }
}

// Forward declarations.
//
namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeedThermalStorage;
    }
  }
}


#include <memory>    // ::std::auto_ptr
#include <limits>    // std::numeric_limits
#include <algorithm> // std::binary_search

#include <xsd/cxx/xml/char-utf8.hxx>

#include <xsd/cxx/tree/exceptions.hxx>
#include <xsd/cxx/tree/elements.hxx>
#include <xsd/cxx/tree/containers.hxx>
#include <xsd/cxx/tree/list.hxx>

#include <xsd/cxx/xml/dom/parsing-header.hxx>

#include "simflowenergytransfer_coolingcoildx.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      class SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeedThermalStorage: public ::schema::simxml::MepModel::SimFlowEnergyTransfer_CoolingCoilDX
      {
        public:
        // SimFlowEnergyTrans_Name
        //
        typedef ::xml_schema::string SimFlowEnergyTrans_Name_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_Name_type > SimFlowEnergyTrans_Name_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_Name_type, char > SimFlowEnergyTrans_Name_traits;

        const SimFlowEnergyTrans_Name_optional&
        SimFlowEnergyTrans_Name () const;

        SimFlowEnergyTrans_Name_optional&
        SimFlowEnergyTrans_Name ();

        void
        SimFlowEnergyTrans_Name (const SimFlowEnergyTrans_Name_type& x);

        void
        SimFlowEnergyTrans_Name (const SimFlowEnergyTrans_Name_optional& x);

        void
        SimFlowEnergyTrans_Name (::std::auto_ptr< SimFlowEnergyTrans_Name_type > p);

        // SimFlowEnergyTrans_AvailSchedName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_AvailSchedName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_AvailSchedName_type > SimFlowEnergyTrans_AvailSchedName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_AvailSchedName_type, char > SimFlowEnergyTrans_AvailSchedName_traits;

        const SimFlowEnergyTrans_AvailSchedName_optional&
        SimFlowEnergyTrans_AvailSchedName () const;

        SimFlowEnergyTrans_AvailSchedName_optional&
        SimFlowEnergyTrans_AvailSchedName ();

        void
        SimFlowEnergyTrans_AvailSchedName (const SimFlowEnergyTrans_AvailSchedName_type& x);

        void
        SimFlowEnergyTrans_AvailSchedName (const SimFlowEnergyTrans_AvailSchedName_optional& x);

        void
        SimFlowEnergyTrans_AvailSchedName (::std::auto_ptr< SimFlowEnergyTrans_AvailSchedName_type > p);

        // SimFlowEnergyTrans_CondsCollectionWaterStorageTankName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_type > SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_type, char > SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_traits;

        const SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_optional&
        SimFlowEnergyTrans_CondsCollectionWaterStorageTankName () const;

        SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_optional&
        SimFlowEnergyTrans_CondsCollectionWaterStorageTankName ();

        void
        SimFlowEnergyTrans_CondsCollectionWaterStorageTankName (const SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_type& x);

        void
        SimFlowEnergyTrans_CondsCollectionWaterStorageTankName (const SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_optional& x);

        void
        SimFlowEnergyTrans_CondsCollectionWaterStorageTankName (::std::auto_ptr< SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_type > p);

        // SimFlowEnergyTrans_CondAirInletNodeName
        //
        typedef ::xml_schema::string SimFlowEnergyTrans_CondAirInletNodeName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CondAirInletNodeName_type > SimFlowEnergyTrans_CondAirInletNodeName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CondAirInletNodeName_type, char > SimFlowEnergyTrans_CondAirInletNodeName_traits;

        const SimFlowEnergyTrans_CondAirInletNodeName_optional&
        SimFlowEnergyTrans_CondAirInletNodeName () const;

        SimFlowEnergyTrans_CondAirInletNodeName_optional&
        SimFlowEnergyTrans_CondAirInletNodeName ();

        void
        SimFlowEnergyTrans_CondAirInletNodeName (const SimFlowEnergyTrans_CondAirInletNodeName_type& x);

        void
        SimFlowEnergyTrans_CondAirInletNodeName (const SimFlowEnergyTrans_CondAirInletNodeName_optional& x);

        void
        SimFlowEnergyTrans_CondAirInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_CondAirInletNodeName_type > p);

        // SimFlowEnergyTrans_CondType
        //
        typedef ::xml_schema::string SimFlowEnergyTrans_CondType_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CondType_type > SimFlowEnergyTrans_CondType_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CondType_type, char > SimFlowEnergyTrans_CondType_traits;

        const SimFlowEnergyTrans_CondType_optional&
        SimFlowEnergyTrans_CondType () const;

        SimFlowEnergyTrans_CondType_optional&
        SimFlowEnergyTrans_CondType ();

        void
        SimFlowEnergyTrans_CondType (const SimFlowEnergyTrans_CondType_type& x);

        void
        SimFlowEnergyTrans_CondType (const SimFlowEnergyTrans_CondType_optional& x);

        void
        SimFlowEnergyTrans_CondType (::std::auto_ptr< SimFlowEnergyTrans_CondType_type > p);

        // SimFlowEnergyTrans_EvapCondEffect
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_EvapCondEffect_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_EvapCondEffect_type > SimFlowEnergyTrans_EvapCondEffect_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_EvapCondEffect_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_EvapCondEffect_traits;

        const SimFlowEnergyTrans_EvapCondEffect_optional&
        SimFlowEnergyTrans_EvapCondEffect () const;

        SimFlowEnergyTrans_EvapCondEffect_optional&
        SimFlowEnergyTrans_EvapCondEffect ();

        void
        SimFlowEnergyTrans_EvapCondEffect (const SimFlowEnergyTrans_EvapCondEffect_type& x);

        void
        SimFlowEnergyTrans_EvapCondEffect (const SimFlowEnergyTrans_EvapCondEffect_optional& x);

        // SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_type > SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_traits;

        const SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_optional&
        SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump () const;

        SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_optional&
        SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump ();

        void
        SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump (const SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_type& x);

        void
        SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump (const SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_optional& x);

        // SimFlowEnergyTrans_SupWaterStoTankName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_SupWaterStoTankName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_SupWaterStoTankName_type > SimFlowEnergyTrans_SupWaterStoTankName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_SupWaterStoTankName_type, char > SimFlowEnergyTrans_SupWaterStoTankName_traits;

        const SimFlowEnergyTrans_SupWaterStoTankName_optional&
        SimFlowEnergyTrans_SupWaterStoTankName () const;

        SimFlowEnergyTrans_SupWaterStoTankName_optional&
        SimFlowEnergyTrans_SupWaterStoTankName ();

        void
        SimFlowEnergyTrans_SupWaterStoTankName (const SimFlowEnergyTrans_SupWaterStoTankName_type& x);

        void
        SimFlowEnergyTrans_SupWaterStoTankName (const SimFlowEnergyTrans_SupWaterStoTankName_optional& x);

        void
        SimFlowEnergyTrans_SupWaterStoTankName (::std::auto_ptr< SimFlowEnergyTrans_SupWaterStoTankName_type > p);

        // SimFlowEnergyTrans_BasinHeatCap
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_BasinHeatCap_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_BasinHeatCap_type > SimFlowEnergyTrans_BasinHeatCap_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_BasinHeatCap_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_BasinHeatCap_traits;

        const SimFlowEnergyTrans_BasinHeatCap_optional&
        SimFlowEnergyTrans_BasinHeatCap () const;

        SimFlowEnergyTrans_BasinHeatCap_optional&
        SimFlowEnergyTrans_BasinHeatCap ();

        void
        SimFlowEnergyTrans_BasinHeatCap (const SimFlowEnergyTrans_BasinHeatCap_type& x);

        void
        SimFlowEnergyTrans_BasinHeatCap (const SimFlowEnergyTrans_BasinHeatCap_optional& x);

        // SimFlowEnergyTrans_BasinHeatSetpointTemp
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_BasinHeatSetpointTemp_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_BasinHeatSetpointTemp_type > SimFlowEnergyTrans_BasinHeatSetpointTemp_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_BasinHeatSetpointTemp_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_BasinHeatSetpointTemp_traits;

        const SimFlowEnergyTrans_BasinHeatSetpointTemp_optional&
        SimFlowEnergyTrans_BasinHeatSetpointTemp () const;

        SimFlowEnergyTrans_BasinHeatSetpointTemp_optional&
        SimFlowEnergyTrans_BasinHeatSetpointTemp ();

        void
        SimFlowEnergyTrans_BasinHeatSetpointTemp (const SimFlowEnergyTrans_BasinHeatSetpointTemp_type& x);

        void
        SimFlowEnergyTrans_BasinHeatSetpointTemp (const SimFlowEnergyTrans_BasinHeatSetpointTemp_optional& x);

        // SimFlowEnergyTrans_OpsModeCntrlMethod
        //
        typedef ::xml_schema::string SimFlowEnergyTrans_OpsModeCntrlMethod_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_OpsModeCntrlMethod_type > SimFlowEnergyTrans_OpsModeCntrlMethod_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_OpsModeCntrlMethod_type, char > SimFlowEnergyTrans_OpsModeCntrlMethod_traits;

        const SimFlowEnergyTrans_OpsModeCntrlMethod_optional&
        SimFlowEnergyTrans_OpsModeCntrlMethod () const;

        SimFlowEnergyTrans_OpsModeCntrlMethod_optional&
        SimFlowEnergyTrans_OpsModeCntrlMethod ();

        void
        SimFlowEnergyTrans_OpsModeCntrlMethod (const SimFlowEnergyTrans_OpsModeCntrlMethod_type& x);

        void
        SimFlowEnergyTrans_OpsModeCntrlMethod (const SimFlowEnergyTrans_OpsModeCntrlMethod_optional& x);

        void
        SimFlowEnergyTrans_OpsModeCntrlMethod (::std::auto_ptr< SimFlowEnergyTrans_OpsModeCntrlMethod_type > p);

        // SimFlowEnergyTrans_OpsModeCntrlSchedName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_OpsModeCntrlSchedName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_OpsModeCntrlSchedName_type > SimFlowEnergyTrans_OpsModeCntrlSchedName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_OpsModeCntrlSchedName_type, char > SimFlowEnergyTrans_OpsModeCntrlSchedName_traits;

        const SimFlowEnergyTrans_OpsModeCntrlSchedName_optional&
        SimFlowEnergyTrans_OpsModeCntrlSchedName () const;

        SimFlowEnergyTrans_OpsModeCntrlSchedName_optional&
        SimFlowEnergyTrans_OpsModeCntrlSchedName ();

        void
        SimFlowEnergyTrans_OpsModeCntrlSchedName (const SimFlowEnergyTrans_OpsModeCntrlSchedName_type& x);

        void
        SimFlowEnergyTrans_OpsModeCntrlSchedName (const SimFlowEnergyTrans_OpsModeCntrlSchedName_optional& x);

        void
        SimFlowEnergyTrans_OpsModeCntrlSchedName (::std::auto_ptr< SimFlowEnergyTrans_OpsModeCntrlSchedName_type > p);

        // SimFlowEnergyTrans_StoType
        //
        typedef ::xml_schema::string SimFlowEnergyTrans_StoType_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_StoType_type > SimFlowEnergyTrans_StoType_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_StoType_type, char > SimFlowEnergyTrans_StoType_traits;

        const SimFlowEnergyTrans_StoType_optional&
        SimFlowEnergyTrans_StoType () const;

        SimFlowEnergyTrans_StoType_optional&
        SimFlowEnergyTrans_StoType ();

        void
        SimFlowEnergyTrans_StoType (const SimFlowEnergyTrans_StoType_type& x);

        void
        SimFlowEnergyTrans_StoType (const SimFlowEnergyTrans_StoType_optional& x);

        void
        SimFlowEnergyTrans_StoType (::std::auto_ptr< SimFlowEnergyTrans_StoType_type > p);

        // SimFlowEnergyTrans_UserDefFluidType
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_UserDefFluidType_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_UserDefFluidType_type > SimFlowEnergyTrans_UserDefFluidType_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_UserDefFluidType_type, char > SimFlowEnergyTrans_UserDefFluidType_traits;

        const SimFlowEnergyTrans_UserDefFluidType_optional&
        SimFlowEnergyTrans_UserDefFluidType () const;

        SimFlowEnergyTrans_UserDefFluidType_optional&
        SimFlowEnergyTrans_UserDefFluidType ();

        void
        SimFlowEnergyTrans_UserDefFluidType (const SimFlowEnergyTrans_UserDefFluidType_type& x);

        void
        SimFlowEnergyTrans_UserDefFluidType (const SimFlowEnergyTrans_UserDefFluidType_optional& x);

        void
        SimFlowEnergyTrans_UserDefFluidType (::std::auto_ptr< SimFlowEnergyTrans_UserDefFluidType_type > p);

        // SimFlowEnergyTrans_FluidStoVolume
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_FluidStoVolume_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_FluidStoVolume_type > SimFlowEnergyTrans_FluidStoVolume_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_FluidStoVolume_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_FluidStoVolume_traits;

        const SimFlowEnergyTrans_FluidStoVolume_optional&
        SimFlowEnergyTrans_FluidStoVolume () const;

        SimFlowEnergyTrans_FluidStoVolume_optional&
        SimFlowEnergyTrans_FluidStoVolume ();

        void
        SimFlowEnergyTrans_FluidStoVolume (const SimFlowEnergyTrans_FluidStoVolume_type& x);

        void
        SimFlowEnergyTrans_FluidStoVolume (const SimFlowEnergyTrans_FluidStoVolume_optional& x);

        // SimFlowEnergyTrans_IceStoCap
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_IceStoCap_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_IceStoCap_type > SimFlowEnergyTrans_IceStoCap_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_IceStoCap_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_IceStoCap_traits;

        const SimFlowEnergyTrans_IceStoCap_optional&
        SimFlowEnergyTrans_IceStoCap () const;

        SimFlowEnergyTrans_IceStoCap_optional&
        SimFlowEnergyTrans_IceStoCap ();

        void
        SimFlowEnergyTrans_IceStoCap (const SimFlowEnergyTrans_IceStoCap_type& x);

        void
        SimFlowEnergyTrans_IceStoCap (const SimFlowEnergyTrans_IceStoCap_optional& x);

        // SimFlowEnergyTrans_StoCapSizingFactor
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_StoCapSizingFactor_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_StoCapSizingFactor_type > SimFlowEnergyTrans_StoCapSizingFactor_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_StoCapSizingFactor_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_StoCapSizingFactor_traits;

        const SimFlowEnergyTrans_StoCapSizingFactor_optional&
        SimFlowEnergyTrans_StoCapSizingFactor () const;

        SimFlowEnergyTrans_StoCapSizingFactor_optional&
        SimFlowEnergyTrans_StoCapSizingFactor ();

        void
        SimFlowEnergyTrans_StoCapSizingFactor (const SimFlowEnergyTrans_StoCapSizingFactor_type& x);

        void
        SimFlowEnergyTrans_StoCapSizingFactor (const SimFlowEnergyTrans_StoCapSizingFactor_optional& x);

        // SimFlowEnergyTrans_StoTankAmbientTempNodeName
        //
        typedef ::xml_schema::string SimFlowEnergyTrans_StoTankAmbientTempNodeName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_StoTankAmbientTempNodeName_type > SimFlowEnergyTrans_StoTankAmbientTempNodeName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_StoTankAmbientTempNodeName_type, char > SimFlowEnergyTrans_StoTankAmbientTempNodeName_traits;

        const SimFlowEnergyTrans_StoTankAmbientTempNodeName_optional&
        SimFlowEnergyTrans_StoTankAmbientTempNodeName () const;

        SimFlowEnergyTrans_StoTankAmbientTempNodeName_optional&
        SimFlowEnergyTrans_StoTankAmbientTempNodeName ();

        void
        SimFlowEnergyTrans_StoTankAmbientTempNodeName (const SimFlowEnergyTrans_StoTankAmbientTempNodeName_type& x);

        void
        SimFlowEnergyTrans_StoTankAmbientTempNodeName (const SimFlowEnergyTrans_StoTankAmbientTempNodeName_optional& x);

        void
        SimFlowEnergyTrans_StoTankAmbientTempNodeName (::std::auto_ptr< SimFlowEnergyTrans_StoTankAmbientTempNodeName_type > p);

        // SimFlowEnergyTrans_StoTanktoAmbientU_valueTimesAreaHeatTransCoef
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_StoTanktoAmbientU_valueTimesAreaHeatTransCoef_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_StoTanktoAmbientU_valueTimesAreaHeatTransCoef_type > SimFlowEnergyTrans_StoTanktoAmbientU_valueTimesAreaHeatTransCoef_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_StoTanktoAmbientU_valueTimesAreaHeatTransCoef_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_StoTanktoAmbientU_valueTimesAreaHeatTransCoef_traits;

        const SimFlowEnergyTrans_StoTanktoAmbientU_valueTimesAreaHeatTransCoef_optional&
        SimFlowEnergyTrans_StoTanktoAmbientU_valueTimesAreaHeatTransCoef () const;

        SimFlowEnergyTrans_StoTanktoAmbientU_valueTimesAreaHeatTransCoef_optional&
        SimFlowEnergyTrans_StoTanktoAmbientU_valueTimesAreaHeatTransCoef ();

        void
        SimFlowEnergyTrans_StoTanktoAmbientU_valueTimesAreaHeatTransCoef (const SimFlowEnergyTrans_StoTanktoAmbientU_valueTimesAreaHeatTransCoef_type& x);

        void
        SimFlowEnergyTrans_StoTanktoAmbientU_valueTimesAreaHeatTransCoef (const SimFlowEnergyTrans_StoTanktoAmbientU_valueTimesAreaHeatTransCoef_optional& x);

        // SimFlowEnergyTrans_FluidStoTankRatingTemp
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_FluidStoTankRatingTemp_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_FluidStoTankRatingTemp_type > SimFlowEnergyTrans_FluidStoTankRatingTemp_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_FluidStoTankRatingTemp_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_FluidStoTankRatingTemp_traits;

        const SimFlowEnergyTrans_FluidStoTankRatingTemp_optional&
        SimFlowEnergyTrans_FluidStoTankRatingTemp () const;

        SimFlowEnergyTrans_FluidStoTankRatingTemp_optional&
        SimFlowEnergyTrans_FluidStoTankRatingTemp ();

        void
        SimFlowEnergyTrans_FluidStoTankRatingTemp (const SimFlowEnergyTrans_FluidStoTankRatingTemp_type& x);

        void
        SimFlowEnergyTrans_FluidStoTankRatingTemp (const SimFlowEnergyTrans_FluidStoTankRatingTemp_optional& x);

        // SimFlowEnergyTrans_RatedEvapAirFlowRate
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_RatedEvapAirFlowRate_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_RatedEvapAirFlowRate_type > SimFlowEnergyTrans_RatedEvapAirFlowRate_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_RatedEvapAirFlowRate_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_RatedEvapAirFlowRate_traits;

        const SimFlowEnergyTrans_RatedEvapAirFlowRate_optional&
        SimFlowEnergyTrans_RatedEvapAirFlowRate () const;

        SimFlowEnergyTrans_RatedEvapAirFlowRate_optional&
        SimFlowEnergyTrans_RatedEvapAirFlowRate ();

        void
        SimFlowEnergyTrans_RatedEvapAirFlowRate (const SimFlowEnergyTrans_RatedEvapAirFlowRate_type& x);

        void
        SimFlowEnergyTrans_RatedEvapAirFlowRate (const SimFlowEnergyTrans_RatedEvapAirFlowRate_optional& x);

        // SimFlowEnergyTrans_EvapAirInletNodeName
        //
        typedef ::xml_schema::string SimFlowEnergyTrans_EvapAirInletNodeName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_EvapAirInletNodeName_type > SimFlowEnergyTrans_EvapAirInletNodeName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_EvapAirInletNodeName_type, char > SimFlowEnergyTrans_EvapAirInletNodeName_traits;

        const SimFlowEnergyTrans_EvapAirInletNodeName_optional&
        SimFlowEnergyTrans_EvapAirInletNodeName () const;

        SimFlowEnergyTrans_EvapAirInletNodeName_optional&
        SimFlowEnergyTrans_EvapAirInletNodeName ();

        void
        SimFlowEnergyTrans_EvapAirInletNodeName (const SimFlowEnergyTrans_EvapAirInletNodeName_type& x);

        void
        SimFlowEnergyTrans_EvapAirInletNodeName (const SimFlowEnergyTrans_EvapAirInletNodeName_optional& x);

        void
        SimFlowEnergyTrans_EvapAirInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_EvapAirInletNodeName_type > p);

        // SimFlowEnergyTrans_EvapAirOutletNodeName
        //
        typedef ::xml_schema::string SimFlowEnergyTrans_EvapAirOutletNodeName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_EvapAirOutletNodeName_type > SimFlowEnergyTrans_EvapAirOutletNodeName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_EvapAirOutletNodeName_type, char > SimFlowEnergyTrans_EvapAirOutletNodeName_traits;

        const SimFlowEnergyTrans_EvapAirOutletNodeName_optional&
        SimFlowEnergyTrans_EvapAirOutletNodeName () const;

        SimFlowEnergyTrans_EvapAirOutletNodeName_optional&
        SimFlowEnergyTrans_EvapAirOutletNodeName ();

        void
        SimFlowEnergyTrans_EvapAirOutletNodeName (const SimFlowEnergyTrans_EvapAirOutletNodeName_type& x);

        void
        SimFlowEnergyTrans_EvapAirOutletNodeName (const SimFlowEnergyTrans_EvapAirOutletNodeName_optional& x);

        void
        SimFlowEnergyTrans_EvapAirOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_EvapAirOutletNodeName_type > p);

        // SimFlowEnergyTrans_CoolOnlyModeAvail
        //
        typedef ::xml_schema::string SimFlowEnergyTrans_CoolOnlyModeAvail_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolOnlyModeAvail_type > SimFlowEnergyTrans_CoolOnlyModeAvail_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolOnlyModeAvail_type, char > SimFlowEnergyTrans_CoolOnlyModeAvail_traits;

        const SimFlowEnergyTrans_CoolOnlyModeAvail_optional&
        SimFlowEnergyTrans_CoolOnlyModeAvail () const;

        SimFlowEnergyTrans_CoolOnlyModeAvail_optional&
        SimFlowEnergyTrans_CoolOnlyModeAvail ();

        void
        SimFlowEnergyTrans_CoolOnlyModeAvail (const SimFlowEnergyTrans_CoolOnlyModeAvail_type& x);

        void
        SimFlowEnergyTrans_CoolOnlyModeAvail (const SimFlowEnergyTrans_CoolOnlyModeAvail_optional& x);

        void
        SimFlowEnergyTrans_CoolOnlyModeAvail (::std::auto_ptr< SimFlowEnergyTrans_CoolOnlyModeAvail_type > p);

        // SimFlowEnergyTrans_CoolOnlyModeRatedTotalEvapCoolCap
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_CoolOnlyModeRatedTotalEvapCoolCap_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolOnlyModeRatedTotalEvapCoolCap_type > SimFlowEnergyTrans_CoolOnlyModeRatedTotalEvapCoolCap_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolOnlyModeRatedTotalEvapCoolCap_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_CoolOnlyModeRatedTotalEvapCoolCap_traits;

        const SimFlowEnergyTrans_CoolOnlyModeRatedTotalEvapCoolCap_optional&
        SimFlowEnergyTrans_CoolOnlyModeRatedTotalEvapCoolCap () const;

        SimFlowEnergyTrans_CoolOnlyModeRatedTotalEvapCoolCap_optional&
        SimFlowEnergyTrans_CoolOnlyModeRatedTotalEvapCoolCap ();

        void
        SimFlowEnergyTrans_CoolOnlyModeRatedTotalEvapCoolCap (const SimFlowEnergyTrans_CoolOnlyModeRatedTotalEvapCoolCap_type& x);

        void
        SimFlowEnergyTrans_CoolOnlyModeRatedTotalEvapCoolCap (const SimFlowEnergyTrans_CoolOnlyModeRatedTotalEvapCoolCap_optional& x);

        // SimFlowEnergyTrans_CoolOnlyModeRatedSensHeatRatio
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_CoolOnlyModeRatedSensHeatRatio_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolOnlyModeRatedSensHeatRatio_type > SimFlowEnergyTrans_CoolOnlyModeRatedSensHeatRatio_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolOnlyModeRatedSensHeatRatio_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_CoolOnlyModeRatedSensHeatRatio_traits;

        const SimFlowEnergyTrans_CoolOnlyModeRatedSensHeatRatio_optional&
        SimFlowEnergyTrans_CoolOnlyModeRatedSensHeatRatio () const;

        SimFlowEnergyTrans_CoolOnlyModeRatedSensHeatRatio_optional&
        SimFlowEnergyTrans_CoolOnlyModeRatedSensHeatRatio ();

        void
        SimFlowEnergyTrans_CoolOnlyModeRatedSensHeatRatio (const SimFlowEnergyTrans_CoolOnlyModeRatedSensHeatRatio_type& x);

        void
        SimFlowEnergyTrans_CoolOnlyModeRatedSensHeatRatio (const SimFlowEnergyTrans_CoolOnlyModeRatedSensHeatRatio_optional& x);

        // SimFlowEnergyTrans_CoolOnlyModeRatedCOP
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_CoolOnlyModeRatedCOP_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolOnlyModeRatedCOP_type > SimFlowEnergyTrans_CoolOnlyModeRatedCOP_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolOnlyModeRatedCOP_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_CoolOnlyModeRatedCOP_traits;

        const SimFlowEnergyTrans_CoolOnlyModeRatedCOP_optional&
        SimFlowEnergyTrans_CoolOnlyModeRatedCOP () const;

        SimFlowEnergyTrans_CoolOnlyModeRatedCOP_optional&
        SimFlowEnergyTrans_CoolOnlyModeRatedCOP ();

        void
        SimFlowEnergyTrans_CoolOnlyModeRatedCOP (const SimFlowEnergyTrans_CoolOnlyModeRatedCOP_type& x);

        void
        SimFlowEnergyTrans_CoolOnlyModeRatedCOP (const SimFlowEnergyTrans_CoolOnlyModeRatedCOP_optional& x);

        // SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfTempCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfTempCurveName_type > SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfTempCurveName_type, char > SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfTempCurveName_traits;

        const SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfTempCurveName () const;

        SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfTempCurveName ();

        void
        SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfTempCurveName (const SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfTempCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfTempCurveName (const SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfTempCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfTempCurveName_type > p);

        // SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfFlowFracCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfFlowFracCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfFlowFracCurveName_type > SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfFlowFracCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfFlowFracCurveName_type, char > SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfFlowFracCurveName_traits;

        const SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfFlowFracCurveName () const;

        SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfFlowFracCurveName ();

        void
        SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfFlowFracCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfFlowFracCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfFlowFracCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfFlowFracCurveName_type > p);

        // SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfTempCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfTempCurveName_type > SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfTempCurveName_type, char > SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfTempCurveName_traits;

        const SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfTempCurveName () const;

        SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfTempCurveName ();

        void
        SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfTempCurveName (const SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfTempCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfTempCurveName (const SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfTempCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfTempCurveName_type > p);

        // SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfFlowFracCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_type > SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_type, char > SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_traits;

        const SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfFlowFracCurveName () const;

        SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfFlowFracCurveName ();

        void
        SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfFlowFracCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_type > p);

        // SimFlowEnergyTrans_CoolOnlyModePartLoadFracCorrelationCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolOnlyModePartLoadFracCorrelationCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolOnlyModePartLoadFracCorrelationCurveName_type > SimFlowEnergyTrans_CoolOnlyModePartLoadFracCorrelationCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolOnlyModePartLoadFracCorrelationCurveName_type, char > SimFlowEnergyTrans_CoolOnlyModePartLoadFracCorrelationCurveName_traits;

        const SimFlowEnergyTrans_CoolOnlyModePartLoadFracCorrelationCurveName_optional&
        SimFlowEnergyTrans_CoolOnlyModePartLoadFracCorrelationCurveName () const;

        SimFlowEnergyTrans_CoolOnlyModePartLoadFracCorrelationCurveName_optional&
        SimFlowEnergyTrans_CoolOnlyModePartLoadFracCorrelationCurveName ();

        void
        SimFlowEnergyTrans_CoolOnlyModePartLoadFracCorrelationCurveName (const SimFlowEnergyTrans_CoolOnlyModePartLoadFracCorrelationCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolOnlyModePartLoadFracCorrelationCurveName (const SimFlowEnergyTrans_CoolOnlyModePartLoadFracCorrelationCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolOnlyModePartLoadFracCorrelationCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolOnlyModePartLoadFracCorrelationCurveName_type > p);

        // SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfTempCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfTempCurveName_type > SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfTempCurveName_type, char > SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfTempCurveName_traits;

        const SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfTempCurveName () const;

        SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfTempCurveName ();

        void
        SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfTempCurveName (const SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfTempCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfTempCurveName (const SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfTempCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfTempCurveName_type > p);

        // SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfFlowFracCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfFlowFracCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfFlowFracCurveName_type > SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfFlowFracCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfFlowFracCurveName_type, char > SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfFlowFracCurveName_traits;

        const SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfFlowFracCurveName () const;

        SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfFlowFracCurveName ();

        void
        SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfFlowFracCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfFlowFracCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfFlowFracCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfFlowFracCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndChargeModeAvail
        //
        typedef ::xml_schema::string SimFlowEnergyTrans_CoolAndChargeModeAvail_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndChargeModeAvail_type > SimFlowEnergyTrans_CoolAndChargeModeAvail_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndChargeModeAvail_type, char > SimFlowEnergyTrans_CoolAndChargeModeAvail_traits;

        const SimFlowEnergyTrans_CoolAndChargeModeAvail_optional&
        SimFlowEnergyTrans_CoolAndChargeModeAvail () const;

        SimFlowEnergyTrans_CoolAndChargeModeAvail_optional&
        SimFlowEnergyTrans_CoolAndChargeModeAvail ();

        void
        SimFlowEnergyTrans_CoolAndChargeModeAvail (const SimFlowEnergyTrans_CoolAndChargeModeAvail_type& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeAvail (const SimFlowEnergyTrans_CoolAndChargeModeAvail_optional& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeAvail (::std::auto_ptr< SimFlowEnergyTrans_CoolAndChargeModeAvail_type > p);

        // SimFlowEnergyTrans_CoolAndChargeModeRatedTotalEvapCoolCap
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_CoolAndChargeModeRatedTotalEvapCoolCap_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndChargeModeRatedTotalEvapCoolCap_type > SimFlowEnergyTrans_CoolAndChargeModeRatedTotalEvapCoolCap_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndChargeModeRatedTotalEvapCoolCap_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_CoolAndChargeModeRatedTotalEvapCoolCap_traits;

        const SimFlowEnergyTrans_CoolAndChargeModeRatedTotalEvapCoolCap_optional&
        SimFlowEnergyTrans_CoolAndChargeModeRatedTotalEvapCoolCap () const;

        SimFlowEnergyTrans_CoolAndChargeModeRatedTotalEvapCoolCap_optional&
        SimFlowEnergyTrans_CoolAndChargeModeRatedTotalEvapCoolCap ();

        void
        SimFlowEnergyTrans_CoolAndChargeModeRatedTotalEvapCoolCap (const SimFlowEnergyTrans_CoolAndChargeModeRatedTotalEvapCoolCap_type& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeRatedTotalEvapCoolCap (const SimFlowEnergyTrans_CoolAndChargeModeRatedTotalEvapCoolCap_optional& x);

        // SimFlowEnergyTrans_CoolAndChargeModeCapSizingFactor
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_CoolAndChargeModeCapSizingFactor_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndChargeModeCapSizingFactor_type > SimFlowEnergyTrans_CoolAndChargeModeCapSizingFactor_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndChargeModeCapSizingFactor_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_CoolAndChargeModeCapSizingFactor_traits;

        const SimFlowEnergyTrans_CoolAndChargeModeCapSizingFactor_optional&
        SimFlowEnergyTrans_CoolAndChargeModeCapSizingFactor () const;

        SimFlowEnergyTrans_CoolAndChargeModeCapSizingFactor_optional&
        SimFlowEnergyTrans_CoolAndChargeModeCapSizingFactor ();

        void
        SimFlowEnergyTrans_CoolAndChargeModeCapSizingFactor (const SimFlowEnergyTrans_CoolAndChargeModeCapSizingFactor_type& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeCapSizingFactor (const SimFlowEnergyTrans_CoolAndChargeModeCapSizingFactor_optional& x);

        // SimFlowEnergyTrans_CoolAndChargeModeRatedStoChargingCap
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_CoolAndChargeModeRatedStoChargingCap_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndChargeModeRatedStoChargingCap_type > SimFlowEnergyTrans_CoolAndChargeModeRatedStoChargingCap_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndChargeModeRatedStoChargingCap_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_CoolAndChargeModeRatedStoChargingCap_traits;

        const SimFlowEnergyTrans_CoolAndChargeModeRatedStoChargingCap_optional&
        SimFlowEnergyTrans_CoolAndChargeModeRatedStoChargingCap () const;

        SimFlowEnergyTrans_CoolAndChargeModeRatedStoChargingCap_optional&
        SimFlowEnergyTrans_CoolAndChargeModeRatedStoChargingCap ();

        void
        SimFlowEnergyTrans_CoolAndChargeModeRatedStoChargingCap (const SimFlowEnergyTrans_CoolAndChargeModeRatedStoChargingCap_type& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeRatedStoChargingCap (const SimFlowEnergyTrans_CoolAndChargeModeRatedStoChargingCap_optional& x);

        // SimFlowEnergyTrans_CoolAndChargeModeStoCapSizingFactor
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_CoolAndChargeModeStoCapSizingFactor_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndChargeModeStoCapSizingFactor_type > SimFlowEnergyTrans_CoolAndChargeModeStoCapSizingFactor_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndChargeModeStoCapSizingFactor_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_CoolAndChargeModeStoCapSizingFactor_traits;

        const SimFlowEnergyTrans_CoolAndChargeModeStoCapSizingFactor_optional&
        SimFlowEnergyTrans_CoolAndChargeModeStoCapSizingFactor () const;

        SimFlowEnergyTrans_CoolAndChargeModeStoCapSizingFactor_optional&
        SimFlowEnergyTrans_CoolAndChargeModeStoCapSizingFactor ();

        void
        SimFlowEnergyTrans_CoolAndChargeModeStoCapSizingFactor (const SimFlowEnergyTrans_CoolAndChargeModeStoCapSizingFactor_type& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeStoCapSizingFactor (const SimFlowEnergyTrans_CoolAndChargeModeStoCapSizingFactor_optional& x);

        // SimFlowEnergyTrans_CoolAndChargeModeRatedSensHeatRatio
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_CoolAndChargeModeRatedSensHeatRatio_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndChargeModeRatedSensHeatRatio_type > SimFlowEnergyTrans_CoolAndChargeModeRatedSensHeatRatio_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndChargeModeRatedSensHeatRatio_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_CoolAndChargeModeRatedSensHeatRatio_traits;

        const SimFlowEnergyTrans_CoolAndChargeModeRatedSensHeatRatio_optional&
        SimFlowEnergyTrans_CoolAndChargeModeRatedSensHeatRatio () const;

        SimFlowEnergyTrans_CoolAndChargeModeRatedSensHeatRatio_optional&
        SimFlowEnergyTrans_CoolAndChargeModeRatedSensHeatRatio ();

        void
        SimFlowEnergyTrans_CoolAndChargeModeRatedSensHeatRatio (const SimFlowEnergyTrans_CoolAndChargeModeRatedSensHeatRatio_type& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeRatedSensHeatRatio (const SimFlowEnergyTrans_CoolAndChargeModeRatedSensHeatRatio_optional& x);

        // SimFlowEnergyTrans_CoolAndChargeModeCoolRatedCOP
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_CoolAndChargeModeCoolRatedCOP_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndChargeModeCoolRatedCOP_type > SimFlowEnergyTrans_CoolAndChargeModeCoolRatedCOP_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndChargeModeCoolRatedCOP_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_CoolAndChargeModeCoolRatedCOP_traits;

        const SimFlowEnergyTrans_CoolAndChargeModeCoolRatedCOP_optional&
        SimFlowEnergyTrans_CoolAndChargeModeCoolRatedCOP () const;

        SimFlowEnergyTrans_CoolAndChargeModeCoolRatedCOP_optional&
        SimFlowEnergyTrans_CoolAndChargeModeCoolRatedCOP ();

        void
        SimFlowEnergyTrans_CoolAndChargeModeCoolRatedCOP (const SimFlowEnergyTrans_CoolAndChargeModeCoolRatedCOP_type& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeCoolRatedCOP (const SimFlowEnergyTrans_CoolAndChargeModeCoolRatedCOP_optional& x);

        // SimFlowEnergyTrans_CoolAndChargeModeChargingRatedCOP
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_CoolAndChargeModeChargingRatedCOP_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndChargeModeChargingRatedCOP_type > SimFlowEnergyTrans_CoolAndChargeModeChargingRatedCOP_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndChargeModeChargingRatedCOP_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_CoolAndChargeModeChargingRatedCOP_traits;

        const SimFlowEnergyTrans_CoolAndChargeModeChargingRatedCOP_optional&
        SimFlowEnergyTrans_CoolAndChargeModeChargingRatedCOP () const;

        SimFlowEnergyTrans_CoolAndChargeModeChargingRatedCOP_optional&
        SimFlowEnergyTrans_CoolAndChargeModeChargingRatedCOP ();

        void
        SimFlowEnergyTrans_CoolAndChargeModeChargingRatedCOP (const SimFlowEnergyTrans_CoolAndChargeModeChargingRatedCOP_type& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeChargingRatedCOP (const SimFlowEnergyTrans_CoolAndChargeModeChargingRatedCOP_optional& x);

        // SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfTempCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfTempCurveName_type > SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfTempCurveName_type, char > SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfTempCurveName_traits;

        const SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfTempCurveName () const;

        SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfTempCurveName ();

        void
        SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfTempCurveName (const SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfTempCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfTempCurveName (const SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfTempCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfTempCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfFlowFracCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_type > SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_type, char > SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_traits;

        const SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfFlowFracCurveName () const;

        SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfFlowFracCurveName ();

        void
        SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfFlowFracCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfTempCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfTempCurveName_type > SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfTempCurveName_type, char > SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfTempCurveName_traits;

        const SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfTempCurveName () const;

        SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfTempCurveName ();

        void
        SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfTempCurveName (const SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfTempCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfTempCurveName (const SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfTempCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfTempCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_type > SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_type, char > SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_traits;

        const SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName () const;

        SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName ();

        void
        SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndChargeModeEvapPartLoadFracCorrelationCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndChargeModeEvapPartLoadFracCorrelationCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndChargeModeEvapPartLoadFracCorrelationCurveName_type > SimFlowEnergyTrans_CoolAndChargeModeEvapPartLoadFracCorrelationCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndChargeModeEvapPartLoadFracCorrelationCurveName_type, char > SimFlowEnergyTrans_CoolAndChargeModeEvapPartLoadFracCorrelationCurveName_traits;

        const SimFlowEnergyTrans_CoolAndChargeModeEvapPartLoadFracCorrelationCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeEvapPartLoadFracCorrelationCurveName () const;

        SimFlowEnergyTrans_CoolAndChargeModeEvapPartLoadFracCorrelationCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeEvapPartLoadFracCorrelationCurveName ();

        void
        SimFlowEnergyTrans_CoolAndChargeModeEvapPartLoadFracCorrelationCurveName (const SimFlowEnergyTrans_CoolAndChargeModeEvapPartLoadFracCorrelationCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeEvapPartLoadFracCorrelationCurveName (const SimFlowEnergyTrans_CoolAndChargeModeEvapPartLoadFracCorrelationCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeEvapPartLoadFracCorrelationCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndChargeModeEvapPartLoadFracCorrelationCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTempCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTempCurveName_type > SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTempCurveName_type, char > SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTempCurveName_traits;

        const SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTempCurveName () const;

        SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTempCurveName ();

        void
        SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTempCurveName (const SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTempCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTempCurveName (const SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTempCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTempCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTotalEvapPLRCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTotalEvapPLRCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTotalEvapPLRCurveName_type > SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTotalEvapPLRCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTotalEvapPLRCurveName_type, char > SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTotalEvapPLRCurveName_traits;

        const SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTotalEvapPLRCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTotalEvapPLRCurveName () const;

        SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTotalEvapPLRCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTotalEvapPLRCurveName ();

        void
        SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTotalEvapPLRCurveName (const SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTotalEvapPLRCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTotalEvapPLRCurveName (const SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTotalEvapPLRCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTotalEvapPLRCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTotalEvapPLRCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfTempCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfTempCurveName_type > SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfTempCurveName_type, char > SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfTempCurveName_traits;

        const SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfTempCurveName () const;

        SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfTempCurveName ();

        void
        SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfTempCurveName (const SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfTempCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfTempCurveName (const SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfTempCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfTempCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfFlowFracCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_type > SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_type, char > SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_traits;

        const SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfFlowFracCurveName () const;

        SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfFlowFracCurveName ();

        void
        SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfFlowFracCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndChargeModeStoEnergyPartLoadFracCorrelationCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndChargeModeStoEnergyPartLoadFracCorrelationCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndChargeModeStoEnergyPartLoadFracCorrelationCurveName_type > SimFlowEnergyTrans_CoolAndChargeModeStoEnergyPartLoadFracCorrelationCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndChargeModeStoEnergyPartLoadFracCorrelationCurveName_type, char > SimFlowEnergyTrans_CoolAndChargeModeStoEnergyPartLoadFracCorrelationCurveName_traits;

        const SimFlowEnergyTrans_CoolAndChargeModeStoEnergyPartLoadFracCorrelationCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeStoEnergyPartLoadFracCorrelationCurveName () const;

        SimFlowEnergyTrans_CoolAndChargeModeStoEnergyPartLoadFracCorrelationCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeStoEnergyPartLoadFracCorrelationCurveName ();

        void
        SimFlowEnergyTrans_CoolAndChargeModeStoEnergyPartLoadFracCorrelationCurveName (const SimFlowEnergyTrans_CoolAndChargeModeStoEnergyPartLoadFracCorrelationCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeStoEnergyPartLoadFracCorrelationCurveName (const SimFlowEnergyTrans_CoolAndChargeModeStoEnergyPartLoadFracCorrelationCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeStoEnergyPartLoadFracCorrelationCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndChargeModeStoEnergyPartLoadFracCorrelationCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfTempCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfTempCurveName_type > SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfTempCurveName_type, char > SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfTempCurveName_traits;

        const SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfTempCurveName () const;

        SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfTempCurveName ();

        void
        SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfTempCurveName (const SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfTempCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfTempCurveName (const SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfTempCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfTempCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfFlowFracCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfFlowFracCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfFlowFracCurveName_type > SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfFlowFracCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfFlowFracCurveName_type, char > SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfFlowFracCurveName_traits;

        const SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfFlowFracCurveName () const;

        SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfFlowFracCurveName ();

        void
        SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfFlowFracCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfFlowFracCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfFlowFracCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfFlowFracCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndDischargeModeAvail
        //
        typedef ::xml_schema::string SimFlowEnergyTrans_CoolAndDischargeModeAvail_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndDischargeModeAvail_type > SimFlowEnergyTrans_CoolAndDischargeModeAvail_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndDischargeModeAvail_type, char > SimFlowEnergyTrans_CoolAndDischargeModeAvail_traits;

        const SimFlowEnergyTrans_CoolAndDischargeModeAvail_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeAvail () const;

        SimFlowEnergyTrans_CoolAndDischargeModeAvail_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeAvail ();

        void
        SimFlowEnergyTrans_CoolAndDischargeModeAvail (const SimFlowEnergyTrans_CoolAndDischargeModeAvail_type& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeAvail (const SimFlowEnergyTrans_CoolAndDischargeModeAvail_optional& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeAvail (::std::auto_ptr< SimFlowEnergyTrans_CoolAndDischargeModeAvail_type > p);

        // SimFlowEnergyTrans_CoolAndDischargeModeRatedTotalEvapCoolCap
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_CoolAndDischargeModeRatedTotalEvapCoolCap_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndDischargeModeRatedTotalEvapCoolCap_type > SimFlowEnergyTrans_CoolAndDischargeModeRatedTotalEvapCoolCap_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndDischargeModeRatedTotalEvapCoolCap_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_CoolAndDischargeModeRatedTotalEvapCoolCap_traits;

        const SimFlowEnergyTrans_CoolAndDischargeModeRatedTotalEvapCoolCap_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeRatedTotalEvapCoolCap () const;

        SimFlowEnergyTrans_CoolAndDischargeModeRatedTotalEvapCoolCap_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeRatedTotalEvapCoolCap ();

        void
        SimFlowEnergyTrans_CoolAndDischargeModeRatedTotalEvapCoolCap (const SimFlowEnergyTrans_CoolAndDischargeModeRatedTotalEvapCoolCap_type& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeRatedTotalEvapCoolCap (const SimFlowEnergyTrans_CoolAndDischargeModeRatedTotalEvapCoolCap_optional& x);

        // SimFlowEnergyTrans_CoolAndDischargeModeEvapCapSizingFactor
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_CoolAndDischargeModeEvapCapSizingFactor_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndDischargeModeEvapCapSizingFactor_type > SimFlowEnergyTrans_CoolAndDischargeModeEvapCapSizingFactor_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndDischargeModeEvapCapSizingFactor_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_CoolAndDischargeModeEvapCapSizingFactor_traits;

        const SimFlowEnergyTrans_CoolAndDischargeModeEvapCapSizingFactor_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeEvapCapSizingFactor () const;

        SimFlowEnergyTrans_CoolAndDischargeModeEvapCapSizingFactor_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeEvapCapSizingFactor ();

        void
        SimFlowEnergyTrans_CoolAndDischargeModeEvapCapSizingFactor (const SimFlowEnergyTrans_CoolAndDischargeModeEvapCapSizingFactor_type& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeEvapCapSizingFactor (const SimFlowEnergyTrans_CoolAndDischargeModeEvapCapSizingFactor_optional& x);

        // SimFlowEnergyTrans_CoolAndDischargeModeRatedStoDischargingCap
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_CoolAndDischargeModeRatedStoDischargingCap_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndDischargeModeRatedStoDischargingCap_type > SimFlowEnergyTrans_CoolAndDischargeModeRatedStoDischargingCap_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndDischargeModeRatedStoDischargingCap_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_CoolAndDischargeModeRatedStoDischargingCap_traits;

        const SimFlowEnergyTrans_CoolAndDischargeModeRatedStoDischargingCap_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeRatedStoDischargingCap () const;

        SimFlowEnergyTrans_CoolAndDischargeModeRatedStoDischargingCap_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeRatedStoDischargingCap ();

        void
        SimFlowEnergyTrans_CoolAndDischargeModeRatedStoDischargingCap (const SimFlowEnergyTrans_CoolAndDischargeModeRatedStoDischargingCap_type& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeRatedStoDischargingCap (const SimFlowEnergyTrans_CoolAndDischargeModeRatedStoDischargingCap_optional& x);

        // SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapSizingFactor
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapSizingFactor_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapSizingFactor_type > SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapSizingFactor_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapSizingFactor_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapSizingFactor_traits;

        const SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapSizingFactor_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapSizingFactor () const;

        SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapSizingFactor_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapSizingFactor ();

        void
        SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapSizingFactor (const SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapSizingFactor_type& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapSizingFactor (const SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapSizingFactor_optional& x);

        // SimFlowEnergyTrans_CoolAndDischargeModeRatedSensHeatRatio
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_CoolAndDischargeModeRatedSensHeatRatio_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndDischargeModeRatedSensHeatRatio_type > SimFlowEnergyTrans_CoolAndDischargeModeRatedSensHeatRatio_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndDischargeModeRatedSensHeatRatio_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_CoolAndDischargeModeRatedSensHeatRatio_traits;

        const SimFlowEnergyTrans_CoolAndDischargeModeRatedSensHeatRatio_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeRatedSensHeatRatio () const;

        SimFlowEnergyTrans_CoolAndDischargeModeRatedSensHeatRatio_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeRatedSensHeatRatio ();

        void
        SimFlowEnergyTrans_CoolAndDischargeModeRatedSensHeatRatio (const SimFlowEnergyTrans_CoolAndDischargeModeRatedSensHeatRatio_type& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeRatedSensHeatRatio (const SimFlowEnergyTrans_CoolAndDischargeModeRatedSensHeatRatio_optional& x);

        // SimFlowEnergyTrans_CoolAndDischargeModeCoolRatedCOP
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_CoolAndDischargeModeCoolRatedCOP_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndDischargeModeCoolRatedCOP_type > SimFlowEnergyTrans_CoolAndDischargeModeCoolRatedCOP_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndDischargeModeCoolRatedCOP_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_CoolAndDischargeModeCoolRatedCOP_traits;

        const SimFlowEnergyTrans_CoolAndDischargeModeCoolRatedCOP_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeCoolRatedCOP () const;

        SimFlowEnergyTrans_CoolAndDischargeModeCoolRatedCOP_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeCoolRatedCOP ();

        void
        SimFlowEnergyTrans_CoolAndDischargeModeCoolRatedCOP (const SimFlowEnergyTrans_CoolAndDischargeModeCoolRatedCOP_type& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeCoolRatedCOP (const SimFlowEnergyTrans_CoolAndDischargeModeCoolRatedCOP_optional& x);

        // SimFlowEnergyTrans_CoolAndDischargeModeDischargingRatedCOP
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_CoolAndDischargeModeDischargingRatedCOP_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndDischargeModeDischargingRatedCOP_type > SimFlowEnergyTrans_CoolAndDischargeModeDischargingRatedCOP_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndDischargeModeDischargingRatedCOP_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_CoolAndDischargeModeDischargingRatedCOP_traits;

        const SimFlowEnergyTrans_CoolAndDischargeModeDischargingRatedCOP_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeDischargingRatedCOP () const;

        SimFlowEnergyTrans_CoolAndDischargeModeDischargingRatedCOP_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeDischargingRatedCOP ();

        void
        SimFlowEnergyTrans_CoolAndDischargeModeDischargingRatedCOP (const SimFlowEnergyTrans_CoolAndDischargeModeDischargingRatedCOP_type& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeDischargingRatedCOP (const SimFlowEnergyTrans_CoolAndDischargeModeDischargingRatedCOP_optional& x);

        // SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfTempCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfTempCurveName_type > SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfTempCurveName_type, char > SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfTempCurveName_traits;

        const SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfTempCurveName () const;

        SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfTempCurveName ();

        void
        SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfTempCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfTempCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfTempCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfTempCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfTempCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfFlowFracCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_type > SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_type, char > SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_traits;

        const SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfFlowFracCurveName () const;

        SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfFlowFracCurveName ();

        void
        SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfFlowFracCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfTempCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfTempCurveName_type > SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfTempCurveName_type, char > SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfTempCurveName_traits;

        const SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfTempCurveName () const;

        SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfTempCurveName ();

        void
        SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfTempCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfTempCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfTempCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfTempCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfTempCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_type > SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_type, char > SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_traits;

        const SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName () const;

        SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName ();

        void
        SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndDischargeModeEvapPartLoadFracCorrelationCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndDischargeModeEvapPartLoadFracCorrelationCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndDischargeModeEvapPartLoadFracCorrelationCurveName_type > SimFlowEnergyTrans_CoolAndDischargeModeEvapPartLoadFracCorrelationCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndDischargeModeEvapPartLoadFracCorrelationCurveName_type, char > SimFlowEnergyTrans_CoolAndDischargeModeEvapPartLoadFracCorrelationCurveName_traits;

        const SimFlowEnergyTrans_CoolAndDischargeModeEvapPartLoadFracCorrelationCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeEvapPartLoadFracCorrelationCurveName () const;

        SimFlowEnergyTrans_CoolAndDischargeModeEvapPartLoadFracCorrelationCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeEvapPartLoadFracCorrelationCurveName ();

        void
        SimFlowEnergyTrans_CoolAndDischargeModeEvapPartLoadFracCorrelationCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeEvapPartLoadFracCorrelationCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeEvapPartLoadFracCorrelationCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeEvapPartLoadFracCorrelationCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeEvapPartLoadFracCorrelationCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndDischargeModeEvapPartLoadFracCorrelationCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfTempCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfTempCurveName_type > SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfTempCurveName_type, char > SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfTempCurveName_traits;

        const SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfTempCurveName () const;

        SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfTempCurveName ();

        void
        SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfTempCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfTempCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfTempCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfTempCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfTempCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfFlowFracCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfFlowFracCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfFlowFracCurveName_type > SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfFlowFracCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfFlowFracCurveName_type, char > SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfFlowFracCurveName_traits;

        const SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfFlowFracCurveName () const;

        SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfFlowFracCurveName ();

        void
        SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfFlowFracCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfFlowFracCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfFlowFracCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfFlowFracCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapFuncOfTotalEvapPLRCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapFuncOfTotalEvapPLRCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapFuncOfTotalEvapPLRCurveName_type > SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapFuncOfTotalEvapPLRCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapFuncOfTotalEvapPLRCurveName_type, char > SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapFuncOfTotalEvapPLRCurveName_traits;

        const SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapFuncOfTotalEvapPLRCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapFuncOfTotalEvapPLRCurveName () const;

        SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapFuncOfTotalEvapPLRCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapFuncOfTotalEvapPLRCurveName ();

        void
        SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapFuncOfTotalEvapPLRCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapFuncOfTotalEvapPLRCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapFuncOfTotalEvapPLRCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapFuncOfTotalEvapPLRCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapFuncOfTotalEvapPLRCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapFuncOfTotalEvapPLRCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfTempCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfTempCurveName_type > SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfTempCurveName_type, char > SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfTempCurveName_traits;

        const SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfTempCurveName () const;

        SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfTempCurveName ();

        void
        SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfTempCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfTempCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfTempCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfTempCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfTempCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfFlowFracCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_type > SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_type, char > SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_traits;

        const SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfFlowFracCurveName () const;

        SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfFlowFracCurveName ();

        void
        SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfFlowFracCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyPartLoadFracCorrelationCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyPartLoadFracCorrelationCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyPartLoadFracCorrelationCurveName_type > SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyPartLoadFracCorrelationCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyPartLoadFracCorrelationCurveName_type, char > SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyPartLoadFracCorrelationCurveName_traits;

        const SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyPartLoadFracCorrelationCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyPartLoadFracCorrelationCurveName () const;

        SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyPartLoadFracCorrelationCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyPartLoadFracCorrelationCurveName ();

        void
        SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyPartLoadFracCorrelationCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyPartLoadFracCorrelationCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyPartLoadFracCorrelationCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyPartLoadFracCorrelationCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyPartLoadFracCorrelationCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyPartLoadFracCorrelationCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfTempCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfTempCurveName_type > SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfTempCurveName_type, char > SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfTempCurveName_traits;

        const SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfTempCurveName () const;

        SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfTempCurveName ();

        void
        SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfTempCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfTempCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfTempCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfTempCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfTempCurveName_type > p);

        // SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfFlowFracCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfFlowFracCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfFlowFracCurveName_type > SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfFlowFracCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfFlowFracCurveName_type, char > SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfFlowFracCurveName_traits;

        const SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfFlowFracCurveName () const;

        SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfFlowFracCurveName ();

        void
        SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfFlowFracCurveName_type& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfFlowFracCurveName (const SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfFlowFracCurveName_optional& x);

        void
        SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfFlowFracCurveName (::std::auto_ptr< SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfFlowFracCurveName_type > p);

        // SimFlowEnergyTrans_ChargeOnlyModeAvail
        //
        typedef ::xml_schema::string SimFlowEnergyTrans_ChargeOnlyModeAvail_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_ChargeOnlyModeAvail_type > SimFlowEnergyTrans_ChargeOnlyModeAvail_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_ChargeOnlyModeAvail_type, char > SimFlowEnergyTrans_ChargeOnlyModeAvail_traits;

        const SimFlowEnergyTrans_ChargeOnlyModeAvail_optional&
        SimFlowEnergyTrans_ChargeOnlyModeAvail () const;

        SimFlowEnergyTrans_ChargeOnlyModeAvail_optional&
        SimFlowEnergyTrans_ChargeOnlyModeAvail ();

        void
        SimFlowEnergyTrans_ChargeOnlyModeAvail (const SimFlowEnergyTrans_ChargeOnlyModeAvail_type& x);

        void
        SimFlowEnergyTrans_ChargeOnlyModeAvail (const SimFlowEnergyTrans_ChargeOnlyModeAvail_optional& x);

        void
        SimFlowEnergyTrans_ChargeOnlyModeAvail (::std::auto_ptr< SimFlowEnergyTrans_ChargeOnlyModeAvail_type > p);

        // SimFlowEnergyTrans_ChargeOnlyModeRatedStoChargingCap
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_ChargeOnlyModeRatedStoChargingCap_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_ChargeOnlyModeRatedStoChargingCap_type > SimFlowEnergyTrans_ChargeOnlyModeRatedStoChargingCap_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_ChargeOnlyModeRatedStoChargingCap_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_ChargeOnlyModeRatedStoChargingCap_traits;

        const SimFlowEnergyTrans_ChargeOnlyModeRatedStoChargingCap_optional&
        SimFlowEnergyTrans_ChargeOnlyModeRatedStoChargingCap () const;

        SimFlowEnergyTrans_ChargeOnlyModeRatedStoChargingCap_optional&
        SimFlowEnergyTrans_ChargeOnlyModeRatedStoChargingCap ();

        void
        SimFlowEnergyTrans_ChargeOnlyModeRatedStoChargingCap (const SimFlowEnergyTrans_ChargeOnlyModeRatedStoChargingCap_type& x);

        void
        SimFlowEnergyTrans_ChargeOnlyModeRatedStoChargingCap (const SimFlowEnergyTrans_ChargeOnlyModeRatedStoChargingCap_optional& x);

        // SimFlowEnergyTrans_ChargeOnlyModeCapSizingFactor
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_ChargeOnlyModeCapSizingFactor_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_ChargeOnlyModeCapSizingFactor_type > SimFlowEnergyTrans_ChargeOnlyModeCapSizingFactor_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_ChargeOnlyModeCapSizingFactor_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_ChargeOnlyModeCapSizingFactor_traits;

        const SimFlowEnergyTrans_ChargeOnlyModeCapSizingFactor_optional&
        SimFlowEnergyTrans_ChargeOnlyModeCapSizingFactor () const;

        SimFlowEnergyTrans_ChargeOnlyModeCapSizingFactor_optional&
        SimFlowEnergyTrans_ChargeOnlyModeCapSizingFactor ();

        void
        SimFlowEnergyTrans_ChargeOnlyModeCapSizingFactor (const SimFlowEnergyTrans_ChargeOnlyModeCapSizingFactor_type& x);

        void
        SimFlowEnergyTrans_ChargeOnlyModeCapSizingFactor (const SimFlowEnergyTrans_ChargeOnlyModeCapSizingFactor_optional& x);

        // SimFlowEnergyTrans_ChargeOnlyModeChargingRatedCOP
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_ChargeOnlyModeChargingRatedCOP_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_ChargeOnlyModeChargingRatedCOP_type > SimFlowEnergyTrans_ChargeOnlyModeChargingRatedCOP_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_ChargeOnlyModeChargingRatedCOP_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_ChargeOnlyModeChargingRatedCOP_traits;

        const SimFlowEnergyTrans_ChargeOnlyModeChargingRatedCOP_optional&
        SimFlowEnergyTrans_ChargeOnlyModeChargingRatedCOP () const;

        SimFlowEnergyTrans_ChargeOnlyModeChargingRatedCOP_optional&
        SimFlowEnergyTrans_ChargeOnlyModeChargingRatedCOP ();

        void
        SimFlowEnergyTrans_ChargeOnlyModeChargingRatedCOP (const SimFlowEnergyTrans_ChargeOnlyModeChargingRatedCOP_type& x);

        void
        SimFlowEnergyTrans_ChargeOnlyModeChargingRatedCOP (const SimFlowEnergyTrans_ChargeOnlyModeChargingRatedCOP_optional& x);

        // SimFlowEnergyTrans_ChargeOnlyModeStoChargeCapFuncOfTempCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_ChargeOnlyModeStoChargeCapFuncOfTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_ChargeOnlyModeStoChargeCapFuncOfTempCurveName_type > SimFlowEnergyTrans_ChargeOnlyModeStoChargeCapFuncOfTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_ChargeOnlyModeStoChargeCapFuncOfTempCurveName_type, char > SimFlowEnergyTrans_ChargeOnlyModeStoChargeCapFuncOfTempCurveName_traits;

        const SimFlowEnergyTrans_ChargeOnlyModeStoChargeCapFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_ChargeOnlyModeStoChargeCapFuncOfTempCurveName () const;

        SimFlowEnergyTrans_ChargeOnlyModeStoChargeCapFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_ChargeOnlyModeStoChargeCapFuncOfTempCurveName ();

        void
        SimFlowEnergyTrans_ChargeOnlyModeStoChargeCapFuncOfTempCurveName (const SimFlowEnergyTrans_ChargeOnlyModeStoChargeCapFuncOfTempCurveName_type& x);

        void
        SimFlowEnergyTrans_ChargeOnlyModeStoChargeCapFuncOfTempCurveName (const SimFlowEnergyTrans_ChargeOnlyModeStoChargeCapFuncOfTempCurveName_optional& x);

        void
        SimFlowEnergyTrans_ChargeOnlyModeStoChargeCapFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_ChargeOnlyModeStoChargeCapFuncOfTempCurveName_type > p);

        // SimFlowEnergyTrans_ChargeOnlyModeStoEnergyInputRatioFuncOfTempCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_ChargeOnlyModeStoEnergyInputRatioFuncOfTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_ChargeOnlyModeStoEnergyInputRatioFuncOfTempCurveName_type > SimFlowEnergyTrans_ChargeOnlyModeStoEnergyInputRatioFuncOfTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_ChargeOnlyModeStoEnergyInputRatioFuncOfTempCurveName_type, char > SimFlowEnergyTrans_ChargeOnlyModeStoEnergyInputRatioFuncOfTempCurveName_traits;

        const SimFlowEnergyTrans_ChargeOnlyModeStoEnergyInputRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_ChargeOnlyModeStoEnergyInputRatioFuncOfTempCurveName () const;

        SimFlowEnergyTrans_ChargeOnlyModeStoEnergyInputRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_ChargeOnlyModeStoEnergyInputRatioFuncOfTempCurveName ();

        void
        SimFlowEnergyTrans_ChargeOnlyModeStoEnergyInputRatioFuncOfTempCurveName (const SimFlowEnergyTrans_ChargeOnlyModeStoEnergyInputRatioFuncOfTempCurveName_type& x);

        void
        SimFlowEnergyTrans_ChargeOnlyModeStoEnergyInputRatioFuncOfTempCurveName (const SimFlowEnergyTrans_ChargeOnlyModeStoEnergyInputRatioFuncOfTempCurveName_optional& x);

        void
        SimFlowEnergyTrans_ChargeOnlyModeStoEnergyInputRatioFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_ChargeOnlyModeStoEnergyInputRatioFuncOfTempCurveName_type > p);

        // SimFlowEnergyTrans_DischargeOnlyModeAvail
        //
        typedef ::xml_schema::string SimFlowEnergyTrans_DischargeOnlyModeAvail_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_DischargeOnlyModeAvail_type > SimFlowEnergyTrans_DischargeOnlyModeAvail_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_DischargeOnlyModeAvail_type, char > SimFlowEnergyTrans_DischargeOnlyModeAvail_traits;

        const SimFlowEnergyTrans_DischargeOnlyModeAvail_optional&
        SimFlowEnergyTrans_DischargeOnlyModeAvail () const;

        SimFlowEnergyTrans_DischargeOnlyModeAvail_optional&
        SimFlowEnergyTrans_DischargeOnlyModeAvail ();

        void
        SimFlowEnergyTrans_DischargeOnlyModeAvail (const SimFlowEnergyTrans_DischargeOnlyModeAvail_type& x);

        void
        SimFlowEnergyTrans_DischargeOnlyModeAvail (const SimFlowEnergyTrans_DischargeOnlyModeAvail_optional& x);

        void
        SimFlowEnergyTrans_DischargeOnlyModeAvail (::std::auto_ptr< SimFlowEnergyTrans_DischargeOnlyModeAvail_type > p);

        // SimFlowEnergyTrans_DischargeOnlyModeRatedStoDischargingCap
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_DischargeOnlyModeRatedStoDischargingCap_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_DischargeOnlyModeRatedStoDischargingCap_type > SimFlowEnergyTrans_DischargeOnlyModeRatedStoDischargingCap_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_DischargeOnlyModeRatedStoDischargingCap_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_DischargeOnlyModeRatedStoDischargingCap_traits;

        const SimFlowEnergyTrans_DischargeOnlyModeRatedStoDischargingCap_optional&
        SimFlowEnergyTrans_DischargeOnlyModeRatedStoDischargingCap () const;

        SimFlowEnergyTrans_DischargeOnlyModeRatedStoDischargingCap_optional&
        SimFlowEnergyTrans_DischargeOnlyModeRatedStoDischargingCap ();

        void
        SimFlowEnergyTrans_DischargeOnlyModeRatedStoDischargingCap (const SimFlowEnergyTrans_DischargeOnlyModeRatedStoDischargingCap_type& x);

        void
        SimFlowEnergyTrans_DischargeOnlyModeRatedStoDischargingCap (const SimFlowEnergyTrans_DischargeOnlyModeRatedStoDischargingCap_optional& x);

        // SimFlowEnergyTrans_DischargeOnlyModeCapSizingFactor
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_DischargeOnlyModeCapSizingFactor_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_DischargeOnlyModeCapSizingFactor_type > SimFlowEnergyTrans_DischargeOnlyModeCapSizingFactor_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_DischargeOnlyModeCapSizingFactor_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_DischargeOnlyModeCapSizingFactor_traits;

        const SimFlowEnergyTrans_DischargeOnlyModeCapSizingFactor_optional&
        SimFlowEnergyTrans_DischargeOnlyModeCapSizingFactor () const;

        SimFlowEnergyTrans_DischargeOnlyModeCapSizingFactor_optional&
        SimFlowEnergyTrans_DischargeOnlyModeCapSizingFactor ();

        void
        SimFlowEnergyTrans_DischargeOnlyModeCapSizingFactor (const SimFlowEnergyTrans_DischargeOnlyModeCapSizingFactor_type& x);

        void
        SimFlowEnergyTrans_DischargeOnlyModeCapSizingFactor (const SimFlowEnergyTrans_DischargeOnlyModeCapSizingFactor_optional& x);

        // SimFlowEnergyTrans_DischargeOnlyModeRatedSensHeatRatio
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_DischargeOnlyModeRatedSensHeatRatio_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_DischargeOnlyModeRatedSensHeatRatio_type > SimFlowEnergyTrans_DischargeOnlyModeRatedSensHeatRatio_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_DischargeOnlyModeRatedSensHeatRatio_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_DischargeOnlyModeRatedSensHeatRatio_traits;

        const SimFlowEnergyTrans_DischargeOnlyModeRatedSensHeatRatio_optional&
        SimFlowEnergyTrans_DischargeOnlyModeRatedSensHeatRatio () const;

        SimFlowEnergyTrans_DischargeOnlyModeRatedSensHeatRatio_optional&
        SimFlowEnergyTrans_DischargeOnlyModeRatedSensHeatRatio ();

        void
        SimFlowEnergyTrans_DischargeOnlyModeRatedSensHeatRatio (const SimFlowEnergyTrans_DischargeOnlyModeRatedSensHeatRatio_type& x);

        void
        SimFlowEnergyTrans_DischargeOnlyModeRatedSensHeatRatio (const SimFlowEnergyTrans_DischargeOnlyModeRatedSensHeatRatio_optional& x);

        // SimFlowEnergyTrans_DischargeOnlyModeRatedCOP
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_DischargeOnlyModeRatedCOP_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_DischargeOnlyModeRatedCOP_type > SimFlowEnergyTrans_DischargeOnlyModeRatedCOP_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_DischargeOnlyModeRatedCOP_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_DischargeOnlyModeRatedCOP_traits;

        const SimFlowEnergyTrans_DischargeOnlyModeRatedCOP_optional&
        SimFlowEnergyTrans_DischargeOnlyModeRatedCOP () const;

        SimFlowEnergyTrans_DischargeOnlyModeRatedCOP_optional&
        SimFlowEnergyTrans_DischargeOnlyModeRatedCOP ();

        void
        SimFlowEnergyTrans_DischargeOnlyModeRatedCOP (const SimFlowEnergyTrans_DischargeOnlyModeRatedCOP_type& x);

        void
        SimFlowEnergyTrans_DischargeOnlyModeRatedCOP (const SimFlowEnergyTrans_DischargeOnlyModeRatedCOP_optional& x);

        // SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfTempCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfTempCurveName_type > SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfTempCurveName_type, char > SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfTempCurveName_traits;

        const SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfTempCurveName () const;

        SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfTempCurveName ();

        void
        SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfTempCurveName (const SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfTempCurveName_type& x);

        void
        SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfTempCurveName (const SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfTempCurveName_optional& x);

        void
        SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfTempCurveName_type > p);

        // SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfFlowFracCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfFlowFracCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfFlowFracCurveName_type > SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfFlowFracCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfFlowFracCurveName_type, char > SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfFlowFracCurveName_traits;

        const SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfFlowFracCurveName () const;

        SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfFlowFracCurveName ();

        void
        SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfFlowFracCurveName (const SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfFlowFracCurveName_type& x);

        void
        SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfFlowFracCurveName (const SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfFlowFracCurveName_optional& x);

        void
        SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfFlowFracCurveName (::std::auto_ptr< SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfFlowFracCurveName_type > p);

        // SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfTempCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfTempCurveName_type > SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfTempCurveName_type, char > SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfTempCurveName_traits;

        const SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfTempCurveName () const;

        SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfTempCurveName ();

        void
        SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfTempCurveName (const SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfTempCurveName_type& x);

        void
        SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfTempCurveName (const SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfTempCurveName_optional& x);

        void
        SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfTempCurveName_type > p);

        // SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfFlowFracCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_type > SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_type, char > SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_traits;

        const SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfFlowFracCurveName () const;

        SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfFlowFracCurveName ();

        void
        SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfFlowFracCurveName (const SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_type& x);

        void
        SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfFlowFracCurveName (const SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_optional& x);

        void
        SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfFlowFracCurveName (::std::auto_ptr< SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_type > p);

        // SimFlowEnergyTrans_DischargeOnlyModePartLoadFracCorrelationCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_DischargeOnlyModePartLoadFracCorrelationCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_DischargeOnlyModePartLoadFracCorrelationCurveName_type > SimFlowEnergyTrans_DischargeOnlyModePartLoadFracCorrelationCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_DischargeOnlyModePartLoadFracCorrelationCurveName_type, char > SimFlowEnergyTrans_DischargeOnlyModePartLoadFracCorrelationCurveName_traits;

        const SimFlowEnergyTrans_DischargeOnlyModePartLoadFracCorrelationCurveName_optional&
        SimFlowEnergyTrans_DischargeOnlyModePartLoadFracCorrelationCurveName () const;

        SimFlowEnergyTrans_DischargeOnlyModePartLoadFracCorrelationCurveName_optional&
        SimFlowEnergyTrans_DischargeOnlyModePartLoadFracCorrelationCurveName ();

        void
        SimFlowEnergyTrans_DischargeOnlyModePartLoadFracCorrelationCurveName (const SimFlowEnergyTrans_DischargeOnlyModePartLoadFracCorrelationCurveName_type& x);

        void
        SimFlowEnergyTrans_DischargeOnlyModePartLoadFracCorrelationCurveName (const SimFlowEnergyTrans_DischargeOnlyModePartLoadFracCorrelationCurveName_optional& x);

        void
        SimFlowEnergyTrans_DischargeOnlyModePartLoadFracCorrelationCurveName (::std::auto_ptr< SimFlowEnergyTrans_DischargeOnlyModePartLoadFracCorrelationCurveName_type > p);

        // SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfTempCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfTempCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfTempCurveName_type > SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfTempCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfTempCurveName_type, char > SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfTempCurveName_traits;

        const SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfTempCurveName () const;

        SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfTempCurveName_optional&
        SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfTempCurveName ();

        void
        SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfTempCurveName (const SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfTempCurveName_type& x);

        void
        SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfTempCurveName (const SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfTempCurveName_optional& x);

        void
        SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfTempCurveName_type > p);

        // SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfFlowFracCurveName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfFlowFracCurveName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfFlowFracCurveName_type > SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfFlowFracCurveName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfFlowFracCurveName_type, char > SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfFlowFracCurveName_traits;

        const SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfFlowFracCurveName () const;

        SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfFlowFracCurveName_optional&
        SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfFlowFracCurveName ();

        void
        SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfFlowFracCurveName (const SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfFlowFracCurveName_type& x);

        void
        SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfFlowFracCurveName (const SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfFlowFracCurveName_optional& x);

        void
        SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfFlowFracCurveName (::std::auto_ptr< SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfFlowFracCurveName_type > p);

        // SimFlowEnergyTrans_AncillaryElecPower
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_AncillaryElecPower_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_AncillaryElecPower_type > SimFlowEnergyTrans_AncillaryElecPower_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_AncillaryElecPower_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_AncillaryElecPower_traits;

        const SimFlowEnergyTrans_AncillaryElecPower_optional&
        SimFlowEnergyTrans_AncillaryElecPower () const;

        SimFlowEnergyTrans_AncillaryElecPower_optional&
        SimFlowEnergyTrans_AncillaryElecPower ();

        void
        SimFlowEnergyTrans_AncillaryElecPower (const SimFlowEnergyTrans_AncillaryElecPower_type& x);

        void
        SimFlowEnergyTrans_AncillaryElecPower (const SimFlowEnergyTrans_AncillaryElecPower_optional& x);

        // SimFlowEnergyTrans_ColdWeatherOpsMinOutdoorAirTemp
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_ColdWeatherOpsMinOutdoorAirTemp_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_ColdWeatherOpsMinOutdoorAirTemp_type > SimFlowEnergyTrans_ColdWeatherOpsMinOutdoorAirTemp_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_ColdWeatherOpsMinOutdoorAirTemp_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_ColdWeatherOpsMinOutdoorAirTemp_traits;

        const SimFlowEnergyTrans_ColdWeatherOpsMinOutdoorAirTemp_optional&
        SimFlowEnergyTrans_ColdWeatherOpsMinOutdoorAirTemp () const;

        SimFlowEnergyTrans_ColdWeatherOpsMinOutdoorAirTemp_optional&
        SimFlowEnergyTrans_ColdWeatherOpsMinOutdoorAirTemp ();

        void
        SimFlowEnergyTrans_ColdWeatherOpsMinOutdoorAirTemp (const SimFlowEnergyTrans_ColdWeatherOpsMinOutdoorAirTemp_type& x);

        void
        SimFlowEnergyTrans_ColdWeatherOpsMinOutdoorAirTemp (const SimFlowEnergyTrans_ColdWeatherOpsMinOutdoorAirTemp_optional& x);

        // SimFlowEnergyTrans_ColdWeatherOpsAncillaryPower
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_ColdWeatherOpsAncillaryPower_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_ColdWeatherOpsAncillaryPower_type > SimFlowEnergyTrans_ColdWeatherOpsAncillaryPower_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_ColdWeatherOpsAncillaryPower_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_ColdWeatherOpsAncillaryPower_traits;

        const SimFlowEnergyTrans_ColdWeatherOpsAncillaryPower_optional&
        SimFlowEnergyTrans_ColdWeatherOpsAncillaryPower () const;

        SimFlowEnergyTrans_ColdWeatherOpsAncillaryPower_optional&
        SimFlowEnergyTrans_ColdWeatherOpsAncillaryPower ();

        void
        SimFlowEnergyTrans_ColdWeatherOpsAncillaryPower (const SimFlowEnergyTrans_ColdWeatherOpsAncillaryPower_type& x);

        void
        SimFlowEnergyTrans_ColdWeatherOpsAncillaryPower (const SimFlowEnergyTrans_ColdWeatherOpsAncillaryPower_optional& x);

        // SimFlowEnergyTrans_CondensAirOutletNodeName
        //
        typedef ::xml_schema::string SimFlowEnergyTrans_CondensAirOutletNodeName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CondensAirOutletNodeName_type > SimFlowEnergyTrans_CondensAirOutletNodeName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CondensAirOutletNodeName_type, char > SimFlowEnergyTrans_CondensAirOutletNodeName_traits;

        const SimFlowEnergyTrans_CondensAirOutletNodeName_optional&
        SimFlowEnergyTrans_CondensAirOutletNodeName () const;

        SimFlowEnergyTrans_CondensAirOutletNodeName_optional&
        SimFlowEnergyTrans_CondensAirOutletNodeName ();

        void
        SimFlowEnergyTrans_CondensAirOutletNodeName (const SimFlowEnergyTrans_CondensAirOutletNodeName_type& x);

        void
        SimFlowEnergyTrans_CondensAirOutletNodeName (const SimFlowEnergyTrans_CondensAirOutletNodeName_optional& x);

        void
        SimFlowEnergyTrans_CondensAirOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_CondensAirOutletNodeName_type > p);

        // SimFlowEnergyTrans_CondensDesignAirFlowRate
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_CondensDesignAirFlowRate_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CondensDesignAirFlowRate_type > SimFlowEnergyTrans_CondensDesignAirFlowRate_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CondensDesignAirFlowRate_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_CondensDesignAirFlowRate_traits;

        const SimFlowEnergyTrans_CondensDesignAirFlowRate_optional&
        SimFlowEnergyTrans_CondensDesignAirFlowRate () const;

        SimFlowEnergyTrans_CondensDesignAirFlowRate_optional&
        SimFlowEnergyTrans_CondensDesignAirFlowRate ();

        void
        SimFlowEnergyTrans_CondensDesignAirFlowRate (const SimFlowEnergyTrans_CondensDesignAirFlowRate_type& x);

        void
        SimFlowEnergyTrans_CondensDesignAirFlowRate (const SimFlowEnergyTrans_CondensDesignAirFlowRate_optional& x);

        // SimFlowEnergyTrans_CondensAirFlowSizingFactor
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_CondensAirFlowSizingFactor_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_CondensAirFlowSizingFactor_type > SimFlowEnergyTrans_CondensAirFlowSizingFactor_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_CondensAirFlowSizingFactor_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_CondensAirFlowSizingFactor_traits;

        const SimFlowEnergyTrans_CondensAirFlowSizingFactor_optional&
        SimFlowEnergyTrans_CondensAirFlowSizingFactor () const;

        SimFlowEnergyTrans_CondensAirFlowSizingFactor_optional&
        SimFlowEnergyTrans_CondensAirFlowSizingFactor ();

        void
        SimFlowEnergyTrans_CondensAirFlowSizingFactor (const SimFlowEnergyTrans_CondensAirFlowSizingFactor_type& x);

        void
        SimFlowEnergyTrans_CondensAirFlowSizingFactor (const SimFlowEnergyTrans_CondensAirFlowSizingFactor_optional& x);

        // SimFlowEnergyTrans_BasinHeaterAvailSchedName
        //
        typedef ::xml_schema::idref SimFlowEnergyTrans_BasinHeaterAvailSchedName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_BasinHeaterAvailSchedName_type > SimFlowEnergyTrans_BasinHeaterAvailSchedName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_BasinHeaterAvailSchedName_type, char > SimFlowEnergyTrans_BasinHeaterAvailSchedName_traits;

        const SimFlowEnergyTrans_BasinHeaterAvailSchedName_optional&
        SimFlowEnergyTrans_BasinHeaterAvailSchedName () const;

        SimFlowEnergyTrans_BasinHeaterAvailSchedName_optional&
        SimFlowEnergyTrans_BasinHeaterAvailSchedName ();

        void
        SimFlowEnergyTrans_BasinHeaterAvailSchedName (const SimFlowEnergyTrans_BasinHeaterAvailSchedName_type& x);

        void
        SimFlowEnergyTrans_BasinHeaterAvailSchedName (const SimFlowEnergyTrans_BasinHeaterAvailSchedName_optional& x);

        void
        SimFlowEnergyTrans_BasinHeaterAvailSchedName (::std::auto_ptr< SimFlowEnergyTrans_BasinHeaterAvailSchedName_type > p);

        // SimFlowEnergyTrans_StoTankPlantConnInletNodeName
        //
        typedef ::xml_schema::string SimFlowEnergyTrans_StoTankPlantConnInletNodeName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_StoTankPlantConnInletNodeName_type > SimFlowEnergyTrans_StoTankPlantConnInletNodeName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_StoTankPlantConnInletNodeName_type, char > SimFlowEnergyTrans_StoTankPlantConnInletNodeName_traits;

        const SimFlowEnergyTrans_StoTankPlantConnInletNodeName_optional&
        SimFlowEnergyTrans_StoTankPlantConnInletNodeName () const;

        SimFlowEnergyTrans_StoTankPlantConnInletNodeName_optional&
        SimFlowEnergyTrans_StoTankPlantConnInletNodeName ();

        void
        SimFlowEnergyTrans_StoTankPlantConnInletNodeName (const SimFlowEnergyTrans_StoTankPlantConnInletNodeName_type& x);

        void
        SimFlowEnergyTrans_StoTankPlantConnInletNodeName (const SimFlowEnergyTrans_StoTankPlantConnInletNodeName_optional& x);

        void
        SimFlowEnergyTrans_StoTankPlantConnInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_StoTankPlantConnInletNodeName_type > p);

        // SimFlowEnergyTrans_StoTankPlantConnOutletNodeName
        //
        typedef ::xml_schema::string SimFlowEnergyTrans_StoTankPlantConnOutletNodeName_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_StoTankPlantConnOutletNodeName_type > SimFlowEnergyTrans_StoTankPlantConnOutletNodeName_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_StoTankPlantConnOutletNodeName_type, char > SimFlowEnergyTrans_StoTankPlantConnOutletNodeName_traits;

        const SimFlowEnergyTrans_StoTankPlantConnOutletNodeName_optional&
        SimFlowEnergyTrans_StoTankPlantConnOutletNodeName () const;

        SimFlowEnergyTrans_StoTankPlantConnOutletNodeName_optional&
        SimFlowEnergyTrans_StoTankPlantConnOutletNodeName ();

        void
        SimFlowEnergyTrans_StoTankPlantConnOutletNodeName (const SimFlowEnergyTrans_StoTankPlantConnOutletNodeName_type& x);

        void
        SimFlowEnergyTrans_StoTankPlantConnOutletNodeName (const SimFlowEnergyTrans_StoTankPlantConnOutletNodeName_optional& x);

        void
        SimFlowEnergyTrans_StoTankPlantConnOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_StoTankPlantConnOutletNodeName_type > p);

        // SimFlowEnergyTrans_StoTankPlantConnDesignFlowRate
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_StoTankPlantConnDesignFlowRate_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_StoTankPlantConnDesignFlowRate_type > SimFlowEnergyTrans_StoTankPlantConnDesignFlowRate_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_StoTankPlantConnDesignFlowRate_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_StoTankPlantConnDesignFlowRate_traits;

        const SimFlowEnergyTrans_StoTankPlantConnDesignFlowRate_optional&
        SimFlowEnergyTrans_StoTankPlantConnDesignFlowRate () const;

        SimFlowEnergyTrans_StoTankPlantConnDesignFlowRate_optional&
        SimFlowEnergyTrans_StoTankPlantConnDesignFlowRate ();

        void
        SimFlowEnergyTrans_StoTankPlantConnDesignFlowRate (const SimFlowEnergyTrans_StoTankPlantConnDesignFlowRate_type& x);

        void
        SimFlowEnergyTrans_StoTankPlantConnDesignFlowRate (const SimFlowEnergyTrans_StoTankPlantConnDesignFlowRate_optional& x);

        // SimFlowEnergyTrans_StoTankPlantConnHeatTransEffectiveness
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_StoTankPlantConnHeatTransEffectiveness_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_StoTankPlantConnHeatTransEffectiveness_type > SimFlowEnergyTrans_StoTankPlantConnHeatTransEffectiveness_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_StoTankPlantConnHeatTransEffectiveness_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_StoTankPlantConnHeatTransEffectiveness_traits;

        const SimFlowEnergyTrans_StoTankPlantConnHeatTransEffectiveness_optional&
        SimFlowEnergyTrans_StoTankPlantConnHeatTransEffectiveness () const;

        SimFlowEnergyTrans_StoTankPlantConnHeatTransEffectiveness_optional&
        SimFlowEnergyTrans_StoTankPlantConnHeatTransEffectiveness ();

        void
        SimFlowEnergyTrans_StoTankPlantConnHeatTransEffectiveness (const SimFlowEnergyTrans_StoTankPlantConnHeatTransEffectiveness_type& x);

        void
        SimFlowEnergyTrans_StoTankPlantConnHeatTransEffectiveness (const SimFlowEnergyTrans_StoTankPlantConnHeatTransEffectiveness_optional& x);

        // SimFlowEnergyTrans_StoTankMinOpsLimitFluidTemp
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_StoTankMinOpsLimitFluidTemp_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_StoTankMinOpsLimitFluidTemp_type > SimFlowEnergyTrans_StoTankMinOpsLimitFluidTemp_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_StoTankMinOpsLimitFluidTemp_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_StoTankMinOpsLimitFluidTemp_traits;

        const SimFlowEnergyTrans_StoTankMinOpsLimitFluidTemp_optional&
        SimFlowEnergyTrans_StoTankMinOpsLimitFluidTemp () const;

        SimFlowEnergyTrans_StoTankMinOpsLimitFluidTemp_optional&
        SimFlowEnergyTrans_StoTankMinOpsLimitFluidTemp ();

        void
        SimFlowEnergyTrans_StoTankMinOpsLimitFluidTemp (const SimFlowEnergyTrans_StoTankMinOpsLimitFluidTemp_type& x);

        void
        SimFlowEnergyTrans_StoTankMinOpsLimitFluidTemp (const SimFlowEnergyTrans_StoTankMinOpsLimitFluidTemp_optional& x);

        // SimFlowEnergyTrans_StoTankMaxOpsLimitFluidTemp
        //
        typedef ::xml_schema::double_ SimFlowEnergyTrans_StoTankMaxOpsLimitFluidTemp_type;
        typedef ::xsd::cxx::tree::optional< SimFlowEnergyTrans_StoTankMaxOpsLimitFluidTemp_type > SimFlowEnergyTrans_StoTankMaxOpsLimitFluidTemp_optional;
        typedef ::xsd::cxx::tree::traits< SimFlowEnergyTrans_StoTankMaxOpsLimitFluidTemp_type, char, ::xsd::cxx::tree::schema_type::double_ > SimFlowEnergyTrans_StoTankMaxOpsLimitFluidTemp_traits;

        const SimFlowEnergyTrans_StoTankMaxOpsLimitFluidTemp_optional&
        SimFlowEnergyTrans_StoTankMaxOpsLimitFluidTemp () const;

        SimFlowEnergyTrans_StoTankMaxOpsLimitFluidTemp_optional&
        SimFlowEnergyTrans_StoTankMaxOpsLimitFluidTemp ();

        void
        SimFlowEnergyTrans_StoTankMaxOpsLimitFluidTemp (const SimFlowEnergyTrans_StoTankMaxOpsLimitFluidTemp_type& x);

        void
        SimFlowEnergyTrans_StoTankMaxOpsLimitFluidTemp (const SimFlowEnergyTrans_StoTankMaxOpsLimitFluidTemp_optional& x);

        // Constructors.
        //
        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeedThermalStorage ();

        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeedThermalStorage (const RefId_type&);

        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeedThermalStorage (const ::xercesc::DOMElement& e,
                                                                                       ::xml_schema::flags f = 0,
                                                                                       ::xml_schema::container* c = 0);

        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeedThermalStorage (const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeedThermalStorage& x,
                                                                                       ::xml_schema::flags f = 0,
                                                                                       ::xml_schema::container* c = 0);

        virtual SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeedThermalStorage*
        _clone (::xml_schema::flags f = 0,
                ::xml_schema::container* c = 0) const;

        SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeedThermalStorage&
        operator= (const SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeedThermalStorage& x);

        virtual 
        ~SimFlowEnergyTransfer_CoolingCoilDX_CoilAirCoolingDXSingleSpeedThermalStorage ();

        // Implementation.
        //
        protected:
        void
        parse (::xsd::cxx::xml::dom::parser< char >&,
               ::xml_schema::flags);

        protected:
        SimFlowEnergyTrans_Name_optional SimFlowEnergyTrans_Name_;
        SimFlowEnergyTrans_AvailSchedName_optional SimFlowEnergyTrans_AvailSchedName_;
        SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_optional SimFlowEnergyTrans_CondsCollectionWaterStorageTankName_;
        SimFlowEnergyTrans_CondAirInletNodeName_optional SimFlowEnergyTrans_CondAirInletNodeName_;
        SimFlowEnergyTrans_CondType_optional SimFlowEnergyTrans_CondType_;
        SimFlowEnergyTrans_EvapCondEffect_optional SimFlowEnergyTrans_EvapCondEffect_;
        SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_optional SimFlowEnergyTrans_EvapCondPumpRatedPwrConsump_;
        SimFlowEnergyTrans_SupWaterStoTankName_optional SimFlowEnergyTrans_SupWaterStoTankName_;
        SimFlowEnergyTrans_BasinHeatCap_optional SimFlowEnergyTrans_BasinHeatCap_;
        SimFlowEnergyTrans_BasinHeatSetpointTemp_optional SimFlowEnergyTrans_BasinHeatSetpointTemp_;
        SimFlowEnergyTrans_OpsModeCntrlMethod_optional SimFlowEnergyTrans_OpsModeCntrlMethod_;
        SimFlowEnergyTrans_OpsModeCntrlSchedName_optional SimFlowEnergyTrans_OpsModeCntrlSchedName_;
        SimFlowEnergyTrans_StoType_optional SimFlowEnergyTrans_StoType_;
        SimFlowEnergyTrans_UserDefFluidType_optional SimFlowEnergyTrans_UserDefFluidType_;
        SimFlowEnergyTrans_FluidStoVolume_optional SimFlowEnergyTrans_FluidStoVolume_;
        SimFlowEnergyTrans_IceStoCap_optional SimFlowEnergyTrans_IceStoCap_;
        SimFlowEnergyTrans_StoCapSizingFactor_optional SimFlowEnergyTrans_StoCapSizingFactor_;
        SimFlowEnergyTrans_StoTankAmbientTempNodeName_optional SimFlowEnergyTrans_StoTankAmbientTempNodeName_;
        SimFlowEnergyTrans_StoTanktoAmbientU_valueTimesAreaHeatTransCoef_optional SimFlowEnergyTrans_StoTanktoAmbientU_valueTimesAreaHeatTransCoef_;
        SimFlowEnergyTrans_FluidStoTankRatingTemp_optional SimFlowEnergyTrans_FluidStoTankRatingTemp_;
        SimFlowEnergyTrans_RatedEvapAirFlowRate_optional SimFlowEnergyTrans_RatedEvapAirFlowRate_;
        SimFlowEnergyTrans_EvapAirInletNodeName_optional SimFlowEnergyTrans_EvapAirInletNodeName_;
        SimFlowEnergyTrans_EvapAirOutletNodeName_optional SimFlowEnergyTrans_EvapAirOutletNodeName_;
        SimFlowEnergyTrans_CoolOnlyModeAvail_optional SimFlowEnergyTrans_CoolOnlyModeAvail_;
        SimFlowEnergyTrans_CoolOnlyModeRatedTotalEvapCoolCap_optional SimFlowEnergyTrans_CoolOnlyModeRatedTotalEvapCoolCap_;
        SimFlowEnergyTrans_CoolOnlyModeRatedSensHeatRatio_optional SimFlowEnergyTrans_CoolOnlyModeRatedSensHeatRatio_;
        SimFlowEnergyTrans_CoolOnlyModeRatedCOP_optional SimFlowEnergyTrans_CoolOnlyModeRatedCOP_;
        SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfTempCurveName_optional SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfTempCurveName_;
        SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfFlowFracCurveName_optional SimFlowEnergyTrans_CoolOnlyModeTotalEvapCoolCapFuncOfFlowFracCurveName_;
        SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfTempCurveName_optional SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfTempCurveName_;
        SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_optional SimFlowEnergyTrans_CoolOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_;
        SimFlowEnergyTrans_CoolOnlyModePartLoadFracCorrelationCurveName_optional SimFlowEnergyTrans_CoolOnlyModePartLoadFracCorrelationCurveName_;
        SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfTempCurveName_optional SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfTempCurveName_;
        SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfFlowFracCurveName_optional SimFlowEnergyTrans_CoolOnlyModeSensHeatRatioFuncOfFlowFracCurveName_;
        SimFlowEnergyTrans_CoolAndChargeModeAvail_optional SimFlowEnergyTrans_CoolAndChargeModeAvail_;
        SimFlowEnergyTrans_CoolAndChargeModeRatedTotalEvapCoolCap_optional SimFlowEnergyTrans_CoolAndChargeModeRatedTotalEvapCoolCap_;
        SimFlowEnergyTrans_CoolAndChargeModeCapSizingFactor_optional SimFlowEnergyTrans_CoolAndChargeModeCapSizingFactor_;
        SimFlowEnergyTrans_CoolAndChargeModeRatedStoChargingCap_optional SimFlowEnergyTrans_CoolAndChargeModeRatedStoChargingCap_;
        SimFlowEnergyTrans_CoolAndChargeModeStoCapSizingFactor_optional SimFlowEnergyTrans_CoolAndChargeModeStoCapSizingFactor_;
        SimFlowEnergyTrans_CoolAndChargeModeRatedSensHeatRatio_optional SimFlowEnergyTrans_CoolAndChargeModeRatedSensHeatRatio_;
        SimFlowEnergyTrans_CoolAndChargeModeCoolRatedCOP_optional SimFlowEnergyTrans_CoolAndChargeModeCoolRatedCOP_;
        SimFlowEnergyTrans_CoolAndChargeModeChargingRatedCOP_optional SimFlowEnergyTrans_CoolAndChargeModeChargingRatedCOP_;
        SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfTempCurveName_optional SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfTempCurveName_;
        SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_optional SimFlowEnergyTrans_CoolAndChargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_;
        SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfTempCurveName_optional SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfTempCurveName_;
        SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_optional SimFlowEnergyTrans_CoolAndChargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_;
        SimFlowEnergyTrans_CoolAndChargeModeEvapPartLoadFracCorrelationCurveName_optional SimFlowEnergyTrans_CoolAndChargeModeEvapPartLoadFracCorrelationCurveName_;
        SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTempCurveName_optional SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTempCurveName_;
        SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTotalEvapPLRCurveName_optional SimFlowEnergyTrans_CoolAndChargeModeStoChargeCapFuncOfTotalEvapPLRCurveName_;
        SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfTempCurveName_optional SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfTempCurveName_;
        SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_optional SimFlowEnergyTrans_CoolAndChargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_;
        SimFlowEnergyTrans_CoolAndChargeModeStoEnergyPartLoadFracCorrelationCurveName_optional SimFlowEnergyTrans_CoolAndChargeModeStoEnergyPartLoadFracCorrelationCurveName_;
        SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfTempCurveName_optional SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfTempCurveName_;
        SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfFlowFracCurveName_optional SimFlowEnergyTrans_CoolAndChargeModeSensHeatRatioFuncOfFlowFracCurveName_;
        SimFlowEnergyTrans_CoolAndDischargeModeAvail_optional SimFlowEnergyTrans_CoolAndDischargeModeAvail_;
        SimFlowEnergyTrans_CoolAndDischargeModeRatedTotalEvapCoolCap_optional SimFlowEnergyTrans_CoolAndDischargeModeRatedTotalEvapCoolCap_;
        SimFlowEnergyTrans_CoolAndDischargeModeEvapCapSizingFactor_optional SimFlowEnergyTrans_CoolAndDischargeModeEvapCapSizingFactor_;
        SimFlowEnergyTrans_CoolAndDischargeModeRatedStoDischargingCap_optional SimFlowEnergyTrans_CoolAndDischargeModeRatedStoDischargingCap_;
        SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapSizingFactor_optional SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapSizingFactor_;
        SimFlowEnergyTrans_CoolAndDischargeModeRatedSensHeatRatio_optional SimFlowEnergyTrans_CoolAndDischargeModeRatedSensHeatRatio_;
        SimFlowEnergyTrans_CoolAndDischargeModeCoolRatedCOP_optional SimFlowEnergyTrans_CoolAndDischargeModeCoolRatedCOP_;
        SimFlowEnergyTrans_CoolAndDischargeModeDischargingRatedCOP_optional SimFlowEnergyTrans_CoolAndDischargeModeDischargingRatedCOP_;
        SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfTempCurveName_optional SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfTempCurveName_;
        SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_optional SimFlowEnergyTrans_CoolAndDischargeModeTotalEvapCoolCapFuncOfFlowFracCurveName_;
        SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfTempCurveName_optional SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfTempCurveName_;
        SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_optional SimFlowEnergyTrans_CoolAndDischargeModeEvapEnergyInputRatioFuncOfFlowFracCurveName_;
        SimFlowEnergyTrans_CoolAndDischargeModeEvapPartLoadFracCorrelationCurveName_optional SimFlowEnergyTrans_CoolAndDischargeModeEvapPartLoadFracCorrelationCurveName_;
        SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfTempCurveName_optional SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfTempCurveName_;
        SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfFlowFracCurveName_optional SimFlowEnergyTrans_CoolAndDischargeModeStoDishargeCapFuncOfFlowFracCurveName_;
        SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapFuncOfTotalEvapPLRCurveName_optional SimFlowEnergyTrans_CoolAndDischargeModeStoDischargeCapFuncOfTotalEvapPLRCurveName_;
        SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfTempCurveName_optional SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfTempCurveName_;
        SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_optional SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyInputRatioFuncOfFlowFracCurveName_;
        SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyPartLoadFracCorrelationCurveName_optional SimFlowEnergyTrans_CoolAndDischargeModeStoEnergyPartLoadFracCorrelationCurveName_;
        SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfTempCurveName_optional SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfTempCurveName_;
        SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfFlowFracCurveName_optional SimFlowEnergyTrans_CoolAndDischargeModeSensHeatRatioFuncOfFlowFracCurveName_;
        SimFlowEnergyTrans_ChargeOnlyModeAvail_optional SimFlowEnergyTrans_ChargeOnlyModeAvail_;
        SimFlowEnergyTrans_ChargeOnlyModeRatedStoChargingCap_optional SimFlowEnergyTrans_ChargeOnlyModeRatedStoChargingCap_;
        SimFlowEnergyTrans_ChargeOnlyModeCapSizingFactor_optional SimFlowEnergyTrans_ChargeOnlyModeCapSizingFactor_;
        SimFlowEnergyTrans_ChargeOnlyModeChargingRatedCOP_optional SimFlowEnergyTrans_ChargeOnlyModeChargingRatedCOP_;
        SimFlowEnergyTrans_ChargeOnlyModeStoChargeCapFuncOfTempCurveName_optional SimFlowEnergyTrans_ChargeOnlyModeStoChargeCapFuncOfTempCurveName_;
        SimFlowEnergyTrans_ChargeOnlyModeStoEnergyInputRatioFuncOfTempCurveName_optional SimFlowEnergyTrans_ChargeOnlyModeStoEnergyInputRatioFuncOfTempCurveName_;
        SimFlowEnergyTrans_DischargeOnlyModeAvail_optional SimFlowEnergyTrans_DischargeOnlyModeAvail_;
        SimFlowEnergyTrans_DischargeOnlyModeRatedStoDischargingCap_optional SimFlowEnergyTrans_DischargeOnlyModeRatedStoDischargingCap_;
        SimFlowEnergyTrans_DischargeOnlyModeCapSizingFactor_optional SimFlowEnergyTrans_DischargeOnlyModeCapSizingFactor_;
        SimFlowEnergyTrans_DischargeOnlyModeRatedSensHeatRatio_optional SimFlowEnergyTrans_DischargeOnlyModeRatedSensHeatRatio_;
        SimFlowEnergyTrans_DischargeOnlyModeRatedCOP_optional SimFlowEnergyTrans_DischargeOnlyModeRatedCOP_;
        SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfTempCurveName_optional SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfTempCurveName_;
        SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfFlowFracCurveName_optional SimFlowEnergyTrans_DischargeOnlyModeStoDischargeCapFuncOfFlowFracCurveName_;
        SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfTempCurveName_optional SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfTempCurveName_;
        SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_optional SimFlowEnergyTrans_DischargeOnlyModeEnergyInputRatioFuncOfFlowFracCurveName_;
        SimFlowEnergyTrans_DischargeOnlyModePartLoadFracCorrelationCurveName_optional SimFlowEnergyTrans_DischargeOnlyModePartLoadFracCorrelationCurveName_;
        SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfTempCurveName_optional SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfTempCurveName_;
        SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfFlowFracCurveName_optional SimFlowEnergyTrans_DischargeOnlyModeSensHeatRatioFuncOfFlowFracCurveName_;
        SimFlowEnergyTrans_AncillaryElecPower_optional SimFlowEnergyTrans_AncillaryElecPower_;
        SimFlowEnergyTrans_ColdWeatherOpsMinOutdoorAirTemp_optional SimFlowEnergyTrans_ColdWeatherOpsMinOutdoorAirTemp_;
        SimFlowEnergyTrans_ColdWeatherOpsAncillaryPower_optional SimFlowEnergyTrans_ColdWeatherOpsAncillaryPower_;
        SimFlowEnergyTrans_CondensAirOutletNodeName_optional SimFlowEnergyTrans_CondensAirOutletNodeName_;
        SimFlowEnergyTrans_CondensDesignAirFlowRate_optional SimFlowEnergyTrans_CondensDesignAirFlowRate_;
        SimFlowEnergyTrans_CondensAirFlowSizingFactor_optional SimFlowEnergyTrans_CondensAirFlowSizingFactor_;
        SimFlowEnergyTrans_BasinHeaterAvailSchedName_optional SimFlowEnergyTrans_BasinHeaterAvailSchedName_;
        SimFlowEnergyTrans_StoTankPlantConnInletNodeName_optional SimFlowEnergyTrans_StoTankPlantConnInletNodeName_;
        SimFlowEnergyTrans_StoTankPlantConnOutletNodeName_optional SimFlowEnergyTrans_StoTankPlantConnOutletNodeName_;
        SimFlowEnergyTrans_StoTankPlantConnDesignFlowRate_optional SimFlowEnergyTrans_StoTankPlantConnDesignFlowRate_;
        SimFlowEnergyTrans_StoTankPlantConnHeatTransEffectiveness_optional SimFlowEnergyTrans_StoTankPlantConnHeatTransEffectiveness_;
        SimFlowEnergyTrans_StoTankMinOpsLimitFluidTemp_optional SimFlowEnergyTrans_StoTankMinOpsLimitFluidTemp_;
        SimFlowEnergyTrans_StoTankMaxOpsLimitFluidTemp_optional SimFlowEnergyTrans_StoTankMaxOpsLimitFluidTemp_;
      };
    }
  }
}

#include <iosfwd>

#include <xercesc/sax/InputSource.hpp>
#include <xercesc/dom/DOMDocument.hpp>
#include <xercesc/dom/DOMErrorHandler.hpp>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

#endif // SIM_FLOW_ENERGY_TRANSFER_COOLING_COIL_DX_COIL_AIR_COOLING_DXSINGLE_SPEED_THERMAL_STORAGE_HXX
