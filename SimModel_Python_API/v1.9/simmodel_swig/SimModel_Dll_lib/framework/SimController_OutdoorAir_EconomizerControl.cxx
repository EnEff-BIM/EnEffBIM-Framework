// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimController_OutdoorAir_EconomizerControl.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimController_OutdoorAir_EconomizerControl
      // 

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_Name_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_Name () const
      {
        return this->SimCntrl_Name_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_Name_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_Name ()
      {
        return this->SimCntrl_Name_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_Name (const SimCntrl_Name_type& x)
      {
        this->SimCntrl_Name_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_Name (const SimCntrl_Name_optional& x)
      {
        this->SimCntrl_Name_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_Name (::std::auto_ptr< SimCntrl_Name_type > x)
      {
        this->SimCntrl_Name_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_ReliefAirOutletNodeName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_ReliefAirOutletNodeName () const
      {
        return this->SimCntrl_ReliefAirOutletNodeName_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_ReliefAirOutletNodeName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_ReliefAirOutletNodeName ()
      {
        return this->SimCntrl_ReliefAirOutletNodeName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_ReliefAirOutletNodeName (const SimCntrl_ReliefAirOutletNodeName_type& x)
      {
        this->SimCntrl_ReliefAirOutletNodeName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_ReliefAirOutletNodeName (const SimCntrl_ReliefAirOutletNodeName_optional& x)
      {
        this->SimCntrl_ReliefAirOutletNodeName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_ReliefAirOutletNodeName (::std::auto_ptr< SimCntrl_ReliefAirOutletNodeName_type > x)
      {
        this->SimCntrl_ReliefAirOutletNodeName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_RtnAirNodeName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_RtnAirNodeName () const
      {
        return this->SimCntrl_RtnAirNodeName_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_RtnAirNodeName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_RtnAirNodeName ()
      {
        return this->SimCntrl_RtnAirNodeName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_RtnAirNodeName (const SimCntrl_RtnAirNodeName_type& x)
      {
        this->SimCntrl_RtnAirNodeName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_RtnAirNodeName (const SimCntrl_RtnAirNodeName_optional& x)
      {
        this->SimCntrl_RtnAirNodeName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_RtnAirNodeName (::std::auto_ptr< SimCntrl_RtnAirNodeName_type > x)
      {
        this->SimCntrl_RtnAirNodeName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_MixedAirNodeName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MixedAirNodeName () const
      {
        return this->SimCntrl_MixedAirNodeName_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_MixedAirNodeName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MixedAirNodeName ()
      {
        return this->SimCntrl_MixedAirNodeName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MixedAirNodeName (const SimCntrl_MixedAirNodeName_type& x)
      {
        this->SimCntrl_MixedAirNodeName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MixedAirNodeName (const SimCntrl_MixedAirNodeName_optional& x)
      {
        this->SimCntrl_MixedAirNodeName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MixedAirNodeName (::std::auto_ptr< SimCntrl_MixedAirNodeName_type > x)
      {
        this->SimCntrl_MixedAirNodeName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_ActuatorNodeName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_ActuatorNodeName () const
      {
        return this->SimCntrl_ActuatorNodeName_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_ActuatorNodeName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_ActuatorNodeName ()
      {
        return this->SimCntrl_ActuatorNodeName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_ActuatorNodeName (const SimCntrl_ActuatorNodeName_type& x)
      {
        this->SimCntrl_ActuatorNodeName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_ActuatorNodeName (const SimCntrl_ActuatorNodeName_optional& x)
      {
        this->SimCntrl_ActuatorNodeName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_ActuatorNodeName (::std::auto_ptr< SimCntrl_ActuatorNodeName_type > x)
      {
        this->SimCntrl_ActuatorNodeName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_MinOutdrAirFlowRate_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MinOutdrAirFlowRate () const
      {
        return this->SimCntrl_MinOutdrAirFlowRate_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_MinOutdrAirFlowRate_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MinOutdrAirFlowRate ()
      {
        return this->SimCntrl_MinOutdrAirFlowRate_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MinOutdrAirFlowRate (const SimCntrl_MinOutdrAirFlowRate_type& x)
      {
        this->SimCntrl_MinOutdrAirFlowRate_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MinOutdrAirFlowRate (const SimCntrl_MinOutdrAirFlowRate_optional& x)
      {
        this->SimCntrl_MinOutdrAirFlowRate_ = x;
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_MaxOutdrAirFlowRate_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MaxOutdrAirFlowRate () const
      {
        return this->SimCntrl_MaxOutdrAirFlowRate_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_MaxOutdrAirFlowRate_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MaxOutdrAirFlowRate ()
      {
        return this->SimCntrl_MaxOutdrAirFlowRate_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MaxOutdrAirFlowRate (const SimCntrl_MaxOutdrAirFlowRate_type& x)
      {
        this->SimCntrl_MaxOutdrAirFlowRate_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MaxOutdrAirFlowRate (const SimCntrl_MaxOutdrAirFlowRate_optional& x)
      {
        this->SimCntrl_MaxOutdrAirFlowRate_ = x;
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_EconControlType_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconControlType () const
      {
        return this->SimCntrl_EconControlType_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_EconControlType_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconControlType ()
      {
        return this->SimCntrl_EconControlType_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconControlType (const SimCntrl_EconControlType_type& x)
      {
        this->SimCntrl_EconControlType_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconControlType (const SimCntrl_EconControlType_optional& x)
      {
        this->SimCntrl_EconControlType_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconControlType (::std::auto_ptr< SimCntrl_EconControlType_type > x)
      {
        this->SimCntrl_EconControlType_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_EconControlActionType_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconControlActionType () const
      {
        return this->SimCntrl_EconControlActionType_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_EconControlActionType_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconControlActionType ()
      {
        return this->SimCntrl_EconControlActionType_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconControlActionType (const SimCntrl_EconControlActionType_type& x)
      {
        this->SimCntrl_EconControlActionType_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconControlActionType (const SimCntrl_EconControlActionType_optional& x)
      {
        this->SimCntrl_EconControlActionType_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconControlActionType (::std::auto_ptr< SimCntrl_EconControlActionType_type > x)
      {
        this->SimCntrl_EconControlActionType_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_EconMaxLimitDryBulbTemp_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconMaxLimitDryBulbTemp () const
      {
        return this->SimCntrl_EconMaxLimitDryBulbTemp_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_EconMaxLimitDryBulbTemp_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconMaxLimitDryBulbTemp ()
      {
        return this->SimCntrl_EconMaxLimitDryBulbTemp_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconMaxLimitDryBulbTemp (const SimCntrl_EconMaxLimitDryBulbTemp_type& x)
      {
        this->SimCntrl_EconMaxLimitDryBulbTemp_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconMaxLimitDryBulbTemp (const SimCntrl_EconMaxLimitDryBulbTemp_optional& x)
      {
        this->SimCntrl_EconMaxLimitDryBulbTemp_ = x;
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_EconMaxLimitEnthalpy_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconMaxLimitEnthalpy () const
      {
        return this->SimCntrl_EconMaxLimitEnthalpy_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_EconMaxLimitEnthalpy_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconMaxLimitEnthalpy ()
      {
        return this->SimCntrl_EconMaxLimitEnthalpy_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconMaxLimitEnthalpy (const SimCntrl_EconMaxLimitEnthalpy_type& x)
      {
        this->SimCntrl_EconMaxLimitEnthalpy_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconMaxLimitEnthalpy (const SimCntrl_EconMaxLimitEnthalpy_optional& x)
      {
        this->SimCntrl_EconMaxLimitEnthalpy_ = x;
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_EconMaxLimitDewpointTemp_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconMaxLimitDewpointTemp () const
      {
        return this->SimCntrl_EconMaxLimitDewpointTemp_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_EconMaxLimitDewpointTemp_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconMaxLimitDewpointTemp ()
      {
        return this->SimCntrl_EconMaxLimitDewpointTemp_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconMaxLimitDewpointTemp (const SimCntrl_EconMaxLimitDewpointTemp_type& x)
      {
        this->SimCntrl_EconMaxLimitDewpointTemp_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconMaxLimitDewpointTemp (const SimCntrl_EconMaxLimitDewpointTemp_optional& x)
      {
        this->SimCntrl_EconMaxLimitDewpointTemp_ = x;
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_ElecEnthalpyLimitCurveName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_ElecEnthalpyLimitCurveName () const
      {
        return this->SimCntrl_ElecEnthalpyLimitCurveName_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_ElecEnthalpyLimitCurveName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_ElecEnthalpyLimitCurveName ()
      {
        return this->SimCntrl_ElecEnthalpyLimitCurveName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_ElecEnthalpyLimitCurveName (const SimCntrl_ElecEnthalpyLimitCurveName_type& x)
      {
        this->SimCntrl_ElecEnthalpyLimitCurveName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_ElecEnthalpyLimitCurveName (const SimCntrl_ElecEnthalpyLimitCurveName_optional& x)
      {
        this->SimCntrl_ElecEnthalpyLimitCurveName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_ElecEnthalpyLimitCurveName (::std::auto_ptr< SimCntrl_ElecEnthalpyLimitCurveName_type > x)
      {
        this->SimCntrl_ElecEnthalpyLimitCurveName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_EconMinLimitDryBulbTemp_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconMinLimitDryBulbTemp () const
      {
        return this->SimCntrl_EconMinLimitDryBulbTemp_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_EconMinLimitDryBulbTemp_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconMinLimitDryBulbTemp ()
      {
        return this->SimCntrl_EconMinLimitDryBulbTemp_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconMinLimitDryBulbTemp (const SimCntrl_EconMinLimitDryBulbTemp_type& x)
      {
        this->SimCntrl_EconMinLimitDryBulbTemp_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_EconMinLimitDryBulbTemp (const SimCntrl_EconMinLimitDryBulbTemp_optional& x)
      {
        this->SimCntrl_EconMinLimitDryBulbTemp_ = x;
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_LockoutType_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_LockoutType () const
      {
        return this->SimCntrl_LockoutType_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_LockoutType_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_LockoutType ()
      {
        return this->SimCntrl_LockoutType_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_LockoutType (const SimCntrl_LockoutType_type& x)
      {
        this->SimCntrl_LockoutType_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_LockoutType (const SimCntrl_LockoutType_optional& x)
      {
        this->SimCntrl_LockoutType_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_LockoutType (::std::auto_ptr< SimCntrl_LockoutType_type > x)
      {
        this->SimCntrl_LockoutType_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_MinLimitType_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MinLimitType () const
      {
        return this->SimCntrl_MinLimitType_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_MinLimitType_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MinLimitType ()
      {
        return this->SimCntrl_MinLimitType_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MinLimitType (const SimCntrl_MinLimitType_type& x)
      {
        this->SimCntrl_MinLimitType_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MinLimitType (const SimCntrl_MinLimitType_optional& x)
      {
        this->SimCntrl_MinLimitType_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MinLimitType (::std::auto_ptr< SimCntrl_MinLimitType_type > x)
      {
        this->SimCntrl_MinLimitType_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_MinOutdrAirSchedName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MinOutdrAirSchedName () const
      {
        return this->SimCntrl_MinOutdrAirSchedName_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_MinOutdrAirSchedName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MinOutdrAirSchedName ()
      {
        return this->SimCntrl_MinOutdrAirSchedName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MinOutdrAirSchedName (const SimCntrl_MinOutdrAirSchedName_type& x)
      {
        this->SimCntrl_MinOutdrAirSchedName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MinOutdrAirSchedName (const SimCntrl_MinOutdrAirSchedName_optional& x)
      {
        this->SimCntrl_MinOutdrAirSchedName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MinOutdrAirSchedName (::std::auto_ptr< SimCntrl_MinOutdrAirSchedName_type > x)
      {
        this->SimCntrl_MinOutdrAirSchedName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_MinFractionofOutdrAirSchedName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MinFractionofOutdrAirSchedName () const
      {
        return this->SimCntrl_MinFractionofOutdrAirSchedName_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_MinFractionofOutdrAirSchedName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MinFractionofOutdrAirSchedName ()
      {
        return this->SimCntrl_MinFractionofOutdrAirSchedName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MinFractionofOutdrAirSchedName (const SimCntrl_MinFractionofOutdrAirSchedName_type& x)
      {
        this->SimCntrl_MinFractionofOutdrAirSchedName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MinFractionofOutdrAirSchedName (const SimCntrl_MinFractionofOutdrAirSchedName_optional& x)
      {
        this->SimCntrl_MinFractionofOutdrAirSchedName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MinFractionofOutdrAirSchedName (::std::auto_ptr< SimCntrl_MinFractionofOutdrAirSchedName_type > x)
      {
        this->SimCntrl_MinFractionofOutdrAirSchedName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_MaxFractionofOutdrAirSchedName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MaxFractionofOutdrAirSchedName () const
      {
        return this->SimCntrl_MaxFractionofOutdrAirSchedName_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_MaxFractionofOutdrAirSchedName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MaxFractionofOutdrAirSchedName ()
      {
        return this->SimCntrl_MaxFractionofOutdrAirSchedName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MaxFractionofOutdrAirSchedName (const SimCntrl_MaxFractionofOutdrAirSchedName_type& x)
      {
        this->SimCntrl_MaxFractionofOutdrAirSchedName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MaxFractionofOutdrAirSchedName (const SimCntrl_MaxFractionofOutdrAirSchedName_optional& x)
      {
        this->SimCntrl_MaxFractionofOutdrAirSchedName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MaxFractionofOutdrAirSchedName (::std::auto_ptr< SimCntrl_MaxFractionofOutdrAirSchedName_type > x)
      {
        this->SimCntrl_MaxFractionofOutdrAirSchedName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_MechanicalVentControllerName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MechanicalVentControllerName () const
      {
        return this->SimCntrl_MechanicalVentControllerName_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_MechanicalVentControllerName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MechanicalVentControllerName ()
      {
        return this->SimCntrl_MechanicalVentControllerName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MechanicalVentControllerName (const SimCntrl_MechanicalVentControllerName_type& x)
      {
        this->SimCntrl_MechanicalVentControllerName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MechanicalVentControllerName (const SimCntrl_MechanicalVentControllerName_optional& x)
      {
        this->SimCntrl_MechanicalVentControllerName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_MechanicalVentControllerName (::std::auto_ptr< SimCntrl_MechanicalVentControllerName_type > x)
      {
        this->SimCntrl_MechanicalVentControllerName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_TimeofDayEconControlSchedName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_TimeofDayEconControlSchedName () const
      {
        return this->SimCntrl_TimeofDayEconControlSchedName_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_TimeofDayEconControlSchedName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_TimeofDayEconControlSchedName ()
      {
        return this->SimCntrl_TimeofDayEconControlSchedName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_TimeofDayEconControlSchedName (const SimCntrl_TimeofDayEconControlSchedName_type& x)
      {
        this->SimCntrl_TimeofDayEconControlSchedName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_TimeofDayEconControlSchedName (const SimCntrl_TimeofDayEconControlSchedName_optional& x)
      {
        this->SimCntrl_TimeofDayEconControlSchedName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_TimeofDayEconControlSchedName (::std::auto_ptr< SimCntrl_TimeofDayEconControlSchedName_type > x)
      {
        this->SimCntrl_TimeofDayEconControlSchedName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_HighHumidityControl_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_HighHumidityControl () const
      {
        return this->SimCntrl_HighHumidityControl_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_HighHumidityControl_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_HighHumidityControl ()
      {
        return this->SimCntrl_HighHumidityControl_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_HighHumidityControl (const SimCntrl_HighHumidityControl_type& x)
      {
        this->SimCntrl_HighHumidityControl_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_HighHumidityControl (const SimCntrl_HighHumidityControl_optional& x)
      {
        this->SimCntrl_HighHumidityControl_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_HighHumidityControl (::std::auto_ptr< SimCntrl_HighHumidityControl_type > x)
      {
        this->SimCntrl_HighHumidityControl_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_HumidistatCntlZoneName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_HumidistatCntlZoneName () const
      {
        return this->SimCntrl_HumidistatCntlZoneName_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_HumidistatCntlZoneName_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_HumidistatCntlZoneName ()
      {
        return this->SimCntrl_HumidistatCntlZoneName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_HumidistatCntlZoneName (const SimCntrl_HumidistatCntlZoneName_type& x)
      {
        this->SimCntrl_HumidistatCntlZoneName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_HumidistatCntlZoneName (const SimCntrl_HumidistatCntlZoneName_optional& x)
      {
        this->SimCntrl_HumidistatCntlZoneName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_HumidistatCntlZoneName (::std::auto_ptr< SimCntrl_HumidistatCntlZoneName_type > x)
      {
        this->SimCntrl_HumidistatCntlZoneName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_HighHumidOutdrAirFlowRatio_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_HighHumidOutdrAirFlowRatio () const
      {
        return this->SimCntrl_HighHumidOutdrAirFlowRatio_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_HighHumidOutdrAirFlowRatio_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_HighHumidOutdrAirFlowRatio ()
      {
        return this->SimCntrl_HighHumidOutdrAirFlowRatio_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_HighHumidOutdrAirFlowRatio (const SimCntrl_HighHumidOutdrAirFlowRatio_type& x)
      {
        this->SimCntrl_HighHumidOutdrAirFlowRatio_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_HighHumidOutdrAirFlowRatio (const SimCntrl_HighHumidOutdrAirFlowRatio_optional& x)
      {
        this->SimCntrl_HighHumidOutdrAirFlowRatio_ = x;
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio () const
      {
        return this->SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio ()
      {
        return this->SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio (const SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio_type& x)
      {
        this->SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio (const SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio_optional& x)
      {
        this->SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio (::std::auto_ptr< SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio_type > x)
      {
        this->SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::SimCntrl_HeatRecoveryBypassControlType_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_HeatRecoveryBypassControlType () const
      {
        return this->SimCntrl_HeatRecoveryBypassControlType_;
      }

      SimController_OutdoorAir_EconomizerControl::SimCntrl_HeatRecoveryBypassControlType_optional& SimController_OutdoorAir_EconomizerControl::
      SimCntrl_HeatRecoveryBypassControlType ()
      {
        return this->SimCntrl_HeatRecoveryBypassControlType_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_HeatRecoveryBypassControlType (const SimCntrl_HeatRecoveryBypassControlType_type& x)
      {
        this->SimCntrl_HeatRecoveryBypassControlType_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_HeatRecoveryBypassControlType (const SimCntrl_HeatRecoveryBypassControlType_optional& x)
      {
        this->SimCntrl_HeatRecoveryBypassControlType_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      SimCntrl_HeatRecoveryBypassControlType (::std::auto_ptr< SimCntrl_HeatRecoveryBypassControlType_type > x)
      {
        this->SimCntrl_HeatRecoveryBypassControlType_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_OutdoorAir_Name_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_Name () const
      {
        return this->FaultModel_EnthalpySensorOffset_OutdoorAir_Name_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_OutdoorAir_Name_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_Name ()
      {
        return this->FaultModel_EnthalpySensorOffset_OutdoorAir_Name_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_Name (const FaultModel_EnthalpySensorOffset_OutdoorAir_Name_type& x)
      {
        this->FaultModel_EnthalpySensorOffset_OutdoorAir_Name_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_Name (const FaultModel_EnthalpySensorOffset_OutdoorAir_Name_optional& x)
      {
        this->FaultModel_EnthalpySensorOffset_OutdoorAir_Name_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_Name (::std::auto_ptr< FaultModel_EnthalpySensorOffset_OutdoorAir_Name_type > x)
      {
        this->FaultModel_EnthalpySensorOffset_OutdoorAir_Name_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName () const
      {
        return this->FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName ()
      {
        return this->FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName (const FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName_type& x)
      {
        this->FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName (const FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName_optional& x)
      {
        this->FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName (::std::auto_ptr< FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName_type > x)
      {
        this->FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName () const
      {
        return this->FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName ()
      {
        return this->FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName (const FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName_type& x)
      {
        this->FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName (const FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName_optional& x)
      {
        this->FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName (::std::auto_ptr< FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName_type > x)
      {
        this->FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType () const
      {
        return this->FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType ()
      {
        return this->FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType (const FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType_type& x)
      {
        this->FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType (const FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType_optional& x)
      {
        this->FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType (::std::auto_ptr< FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType_type > x)
      {
        this->FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName () const
      {
        return this->FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName ()
      {
        return this->FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName (const FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName_type& x)
      {
        this->FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName (const FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName_optional& x)
      {
        this->FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName (::std::auto_ptr< FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName_type > x)
      {
        this->FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset () const
      {
        return this->FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset ()
      {
        return this->FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset (const FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset_type& x)
      {
        this->FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset (const FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset_optional& x)
      {
        this->FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset_ = x;
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_ReturnAir_Name_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_Name () const
      {
        return this->FaultModel_EnthalpySensorOffset_ReturnAir_Name_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_ReturnAir_Name_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_Name ()
      {
        return this->FaultModel_EnthalpySensorOffset_ReturnAir_Name_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_Name (const FaultModel_EnthalpySensorOffset_ReturnAir_Name_type& x)
      {
        this->FaultModel_EnthalpySensorOffset_ReturnAir_Name_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_Name (const FaultModel_EnthalpySensorOffset_ReturnAir_Name_optional& x)
      {
        this->FaultModel_EnthalpySensorOffset_ReturnAir_Name_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_Name (::std::auto_ptr< FaultModel_EnthalpySensorOffset_ReturnAir_Name_type > x)
      {
        this->FaultModel_EnthalpySensorOffset_ReturnAir_Name_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName () const
      {
        return this->FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName ()
      {
        return this->FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName (const FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName_type& x)
      {
        this->FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName (const FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName_optional& x)
      {
        this->FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName (::std::auto_ptr< FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName_type > x)
      {
        this->FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName () const
      {
        return this->FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName ()
      {
        return this->FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName (const FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName_type& x)
      {
        this->FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName (const FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName_optional& x)
      {
        this->FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName (::std::auto_ptr< FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName_type > x)
      {
        this->FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType () const
      {
        return this->FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType ()
      {
        return this->FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType (const FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType_type& x)
      {
        this->FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType (const FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType_optional& x)
      {
        this->FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType (::std::auto_ptr< FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType_type > x)
      {
        this->FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName () const
      {
        return this->FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName ()
      {
        return this->FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName (const FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName_type& x)
      {
        this->FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName (const FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName_optional& x)
      {
        this->FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName (::std::auto_ptr< FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName_type > x)
      {
        this->FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset () const
      {
        return this->FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset ()
      {
        return this->FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset (const FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset_type& x)
      {
        this->FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset (const FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset_optional& x)
      {
        this->FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset_ = x;
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_HumiditySensorOffset_OutdoorAir_Name_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_Name () const
      {
        return this->FaultModel_HumiditySensorOffset_OutdoorAir_Name_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_HumiditySensorOffset_OutdoorAir_Name_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_Name ()
      {
        return this->FaultModel_HumiditySensorOffset_OutdoorAir_Name_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_Name (const FaultModel_HumiditySensorOffset_OutdoorAir_Name_type& x)
      {
        this->FaultModel_HumiditySensorOffset_OutdoorAir_Name_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_Name (const FaultModel_HumiditySensorOffset_OutdoorAir_Name_optional& x)
      {
        this->FaultModel_HumiditySensorOffset_OutdoorAir_Name_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_Name (::std::auto_ptr< FaultModel_HumiditySensorOffset_OutdoorAir_Name_type > x)
      {
        this->FaultModel_HumiditySensorOffset_OutdoorAir_Name_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName () const
      {
        return this->FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName ()
      {
        return this->FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName (const FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName_type& x)
      {
        this->FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName (const FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName_optional& x)
      {
        this->FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName (::std::auto_ptr< FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName_type > x)
      {
        this->FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName () const
      {
        return this->FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName ()
      {
        return this->FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName (const FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName_type& x)
      {
        this->FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName (const FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName_optional& x)
      {
        this->FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName (::std::auto_ptr< FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName_type > x)
      {
        this->FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType () const
      {
        return this->FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType ()
      {
        return this->FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType (const FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType_type& x)
      {
        this->FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType (const FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType_optional& x)
      {
        this->FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType (::std::auto_ptr< FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType_type > x)
      {
        this->FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName () const
      {
        return this->FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName ()
      {
        return this->FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName (const FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName_type& x)
      {
        this->FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName (const FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName_optional& x)
      {
        this->FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName (::std::auto_ptr< FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName_type > x)
      {
        this->FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset () const
      {
        return this->FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset ()
      {
        return this->FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset (const FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset_type& x)
      {
        this->FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset (const FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset_optional& x)
      {
        this->FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset_ = x;
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_PressureSensorOffset_OutdoorAir_Name_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_Name () const
      {
        return this->FaultModel_PressureSensorOffset_OutdoorAir_Name_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_PressureSensorOffset_OutdoorAir_Name_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_Name ()
      {
        return this->FaultModel_PressureSensorOffset_OutdoorAir_Name_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_Name (const FaultModel_PressureSensorOffset_OutdoorAir_Name_type& x)
      {
        this->FaultModel_PressureSensorOffset_OutdoorAir_Name_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_Name (const FaultModel_PressureSensorOffset_OutdoorAir_Name_optional& x)
      {
        this->FaultModel_PressureSensorOffset_OutdoorAir_Name_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_Name (::std::auto_ptr< FaultModel_PressureSensorOffset_OutdoorAir_Name_type > x)
      {
        this->FaultModel_PressureSensorOffset_OutdoorAir_Name_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName () const
      {
        return this->FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName ()
      {
        return this->FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName (const FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName_type& x)
      {
        this->FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName (const FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName_optional& x)
      {
        this->FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName (::std::auto_ptr< FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName_type > x)
      {
        this->FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName () const
      {
        return this->FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName ()
      {
        return this->FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName (const FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName_type& x)
      {
        this->FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName (const FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName_optional& x)
      {
        this->FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName (::std::auto_ptr< FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName_type > x)
      {
        this->FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType () const
      {
        return this->FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType ()
      {
        return this->FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType (const FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType_type& x)
      {
        this->FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType (const FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType_optional& x)
      {
        this->FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType (::std::auto_ptr< FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType_type > x)
      {
        this->FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName () const
      {
        return this->FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName ()
      {
        return this->FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName (const FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName_type& x)
      {
        this->FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName (const FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName_optional& x)
      {
        this->FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName (::std::auto_ptr< FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName_type > x)
      {
        this->FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset () const
      {
        return this->FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset ()
      {
        return this->FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset (const FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset_type& x)
      {
        this->FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset (const FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset_optional& x)
      {
        this->FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset_ = x;
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_OutdoorAir_Name_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_Name () const
      {
        return this->FaultModel_TemperatureSensorOffset_OutdoorAir_Name_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_OutdoorAir_Name_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_Name ()
      {
        return this->FaultModel_TemperatureSensorOffset_OutdoorAir_Name_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_Name (const FaultModel_TemperatureSensorOffset_OutdoorAir_Name_type& x)
      {
        this->FaultModel_TemperatureSensorOffset_OutdoorAir_Name_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_Name (const FaultModel_TemperatureSensorOffset_OutdoorAir_Name_optional& x)
      {
        this->FaultModel_TemperatureSensorOffset_OutdoorAir_Name_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_Name (::std::auto_ptr< FaultModel_TemperatureSensorOffset_OutdoorAir_Name_type > x)
      {
        this->FaultModel_TemperatureSensorOffset_OutdoorAir_Name_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName () const
      {
        return this->FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName ()
      {
        return this->FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName (const FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName_type& x)
      {
        this->FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName (const FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName_optional& x)
      {
        this->FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName (::std::auto_ptr< FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName_type > x)
      {
        this->FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName () const
      {
        return this->FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName ()
      {
        return this->FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName (const FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName_type& x)
      {
        this->FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName (const FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName_optional& x)
      {
        this->FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName (::std::auto_ptr< FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName_type > x)
      {
        this->FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType () const
      {
        return this->FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType ()
      {
        return this->FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType (const FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType_type& x)
      {
        this->FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType (const FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType_optional& x)
      {
        this->FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType (::std::auto_ptr< FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType_type > x)
      {
        this->FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName () const
      {
        return this->FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName ()
      {
        return this->FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName (const FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName_type& x)
      {
        this->FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName (const FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName_optional& x)
      {
        this->FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName (::std::auto_ptr< FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName_type > x)
      {
        this->FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset () const
      {
        return this->FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset ()
      {
        return this->FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset (const FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset_type& x)
      {
        this->FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset (const FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset_optional& x)
      {
        this->FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset_ = x;
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_ReturnAir_Name_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_Name () const
      {
        return this->FaultModel_TemperatureSensorOffset_ReturnAir_Name_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_ReturnAir_Name_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_Name ()
      {
        return this->FaultModel_TemperatureSensorOffset_ReturnAir_Name_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_Name (const FaultModel_TemperatureSensorOffset_ReturnAir_Name_type& x)
      {
        this->FaultModel_TemperatureSensorOffset_ReturnAir_Name_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_Name (const FaultModel_TemperatureSensorOffset_ReturnAir_Name_optional& x)
      {
        this->FaultModel_TemperatureSensorOffset_ReturnAir_Name_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_Name (::std::auto_ptr< FaultModel_TemperatureSensorOffset_ReturnAir_Name_type > x)
      {
        this->FaultModel_TemperatureSensorOffset_ReturnAir_Name_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName () const
      {
        return this->FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName ()
      {
        return this->FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName (const FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName_type& x)
      {
        this->FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName (const FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName_optional& x)
      {
        this->FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName (::std::auto_ptr< FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName_type > x)
      {
        this->FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName () const
      {
        return this->FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName ()
      {
        return this->FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName (const FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName_type& x)
      {
        this->FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName (const FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName_optional& x)
      {
        this->FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName (::std::auto_ptr< FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName_type > x)
      {
        this->FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType () const
      {
        return this->FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType ()
      {
        return this->FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType (const FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType_type& x)
      {
        this->FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType (const FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType_optional& x)
      {
        this->FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType (::std::auto_ptr< FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType_type > x)
      {
        this->FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName () const
      {
        return this->FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName ()
      {
        return this->FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName (const FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName_type& x)
      {
        this->FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName (const FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName_optional& x)
      {
        this->FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName_ = x;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName (::std::auto_ptr< FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName_type > x)
      {
        this->FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName_.set (x);
      }

      const SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset () const
      {
        return this->FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset_;
      }

      SimController_OutdoorAir_EconomizerControl::FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset_optional& SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset ()
      {
        return this->FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset_;
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset (const FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset_type& x)
      {
        this->FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset_.set (x);
      }

      void SimController_OutdoorAir_EconomizerControl::
      FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset (const FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset_optional& x)
      {
        this->FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset_ = x;
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimController_OutdoorAir_EconomizerControl
      //

      SimController_OutdoorAir_EconomizerControl::
      SimController_OutdoorAir_EconomizerControl ()
      : ::schema::simxml::MepModel::SimController_OutdoorAir (),
        SimCntrl_Name_ (this),
        SimCntrl_ReliefAirOutletNodeName_ (this),
        SimCntrl_RtnAirNodeName_ (this),
        SimCntrl_MixedAirNodeName_ (this),
        SimCntrl_ActuatorNodeName_ (this),
        SimCntrl_MinOutdrAirFlowRate_ (this),
        SimCntrl_MaxOutdrAirFlowRate_ (this),
        SimCntrl_EconControlType_ (this),
        SimCntrl_EconControlActionType_ (this),
        SimCntrl_EconMaxLimitDryBulbTemp_ (this),
        SimCntrl_EconMaxLimitEnthalpy_ (this),
        SimCntrl_EconMaxLimitDewpointTemp_ (this),
        SimCntrl_ElecEnthalpyLimitCurveName_ (this),
        SimCntrl_EconMinLimitDryBulbTemp_ (this),
        SimCntrl_LockoutType_ (this),
        SimCntrl_MinLimitType_ (this),
        SimCntrl_MinOutdrAirSchedName_ (this),
        SimCntrl_MinFractionofOutdrAirSchedName_ (this),
        SimCntrl_MaxFractionofOutdrAirSchedName_ (this),
        SimCntrl_MechanicalVentControllerName_ (this),
        SimCntrl_TimeofDayEconControlSchedName_ (this),
        SimCntrl_HighHumidityControl_ (this),
        SimCntrl_HumidistatCntlZoneName_ (this),
        SimCntrl_HighHumidOutdrAirFlowRatio_ (this),
        SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio_ (this),
        SimCntrl_HeatRecoveryBypassControlType_ (this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_Name_ (this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName_ (this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName_ (this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType_ (this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName_ (this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset_ (this),
        FaultModel_EnthalpySensorOffset_ReturnAir_Name_ (this),
        FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName_ (this),
        FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName_ (this),
        FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType_ (this),
        FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName_ (this),
        FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset_ (this),
        FaultModel_HumiditySensorOffset_OutdoorAir_Name_ (this),
        FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName_ (this),
        FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName_ (this),
        FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType_ (this),
        FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName_ (this),
        FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset_ (this),
        FaultModel_PressureSensorOffset_OutdoorAir_Name_ (this),
        FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName_ (this),
        FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName_ (this),
        FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType_ (this),
        FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName_ (this),
        FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset_ (this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_Name_ (this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName_ (this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName_ (this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType_ (this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName_ (this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset_ (this),
        FaultModel_TemperatureSensorOffset_ReturnAir_Name_ (this),
        FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName_ (this),
        FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName_ (this),
        FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType_ (this),
        FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName_ (this),
        FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset_ (this)
      {
      }

      SimController_OutdoorAir_EconomizerControl::
      SimController_OutdoorAir_EconomizerControl (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimController_OutdoorAir (RefId),
        SimCntrl_Name_ (this),
        SimCntrl_ReliefAirOutletNodeName_ (this),
        SimCntrl_RtnAirNodeName_ (this),
        SimCntrl_MixedAirNodeName_ (this),
        SimCntrl_ActuatorNodeName_ (this),
        SimCntrl_MinOutdrAirFlowRate_ (this),
        SimCntrl_MaxOutdrAirFlowRate_ (this),
        SimCntrl_EconControlType_ (this),
        SimCntrl_EconControlActionType_ (this),
        SimCntrl_EconMaxLimitDryBulbTemp_ (this),
        SimCntrl_EconMaxLimitEnthalpy_ (this),
        SimCntrl_EconMaxLimitDewpointTemp_ (this),
        SimCntrl_ElecEnthalpyLimitCurveName_ (this),
        SimCntrl_EconMinLimitDryBulbTemp_ (this),
        SimCntrl_LockoutType_ (this),
        SimCntrl_MinLimitType_ (this),
        SimCntrl_MinOutdrAirSchedName_ (this),
        SimCntrl_MinFractionofOutdrAirSchedName_ (this),
        SimCntrl_MaxFractionofOutdrAirSchedName_ (this),
        SimCntrl_MechanicalVentControllerName_ (this),
        SimCntrl_TimeofDayEconControlSchedName_ (this),
        SimCntrl_HighHumidityControl_ (this),
        SimCntrl_HumidistatCntlZoneName_ (this),
        SimCntrl_HighHumidOutdrAirFlowRatio_ (this),
        SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio_ (this),
        SimCntrl_HeatRecoveryBypassControlType_ (this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_Name_ (this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName_ (this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName_ (this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType_ (this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName_ (this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset_ (this),
        FaultModel_EnthalpySensorOffset_ReturnAir_Name_ (this),
        FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName_ (this),
        FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName_ (this),
        FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType_ (this),
        FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName_ (this),
        FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset_ (this),
        FaultModel_HumiditySensorOffset_OutdoorAir_Name_ (this),
        FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName_ (this),
        FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName_ (this),
        FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType_ (this),
        FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName_ (this),
        FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset_ (this),
        FaultModel_PressureSensorOffset_OutdoorAir_Name_ (this),
        FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName_ (this),
        FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName_ (this),
        FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType_ (this),
        FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName_ (this),
        FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset_ (this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_Name_ (this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName_ (this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName_ (this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType_ (this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName_ (this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset_ (this),
        FaultModel_TemperatureSensorOffset_ReturnAir_Name_ (this),
        FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName_ (this),
        FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName_ (this),
        FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType_ (this),
        FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName_ (this),
        FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset_ (this)
      {
      }

      SimController_OutdoorAir_EconomizerControl::
      SimController_OutdoorAir_EconomizerControl (const SimController_OutdoorAir_EconomizerControl& x,
                                                  ::xml_schema::flags f,
                                                  ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimController_OutdoorAir (x, f, c),
        SimCntrl_Name_ (x.SimCntrl_Name_, f, this),
        SimCntrl_ReliefAirOutletNodeName_ (x.SimCntrl_ReliefAirOutletNodeName_, f, this),
        SimCntrl_RtnAirNodeName_ (x.SimCntrl_RtnAirNodeName_, f, this),
        SimCntrl_MixedAirNodeName_ (x.SimCntrl_MixedAirNodeName_, f, this),
        SimCntrl_ActuatorNodeName_ (x.SimCntrl_ActuatorNodeName_, f, this),
        SimCntrl_MinOutdrAirFlowRate_ (x.SimCntrl_MinOutdrAirFlowRate_, f, this),
        SimCntrl_MaxOutdrAirFlowRate_ (x.SimCntrl_MaxOutdrAirFlowRate_, f, this),
        SimCntrl_EconControlType_ (x.SimCntrl_EconControlType_, f, this),
        SimCntrl_EconControlActionType_ (x.SimCntrl_EconControlActionType_, f, this),
        SimCntrl_EconMaxLimitDryBulbTemp_ (x.SimCntrl_EconMaxLimitDryBulbTemp_, f, this),
        SimCntrl_EconMaxLimitEnthalpy_ (x.SimCntrl_EconMaxLimitEnthalpy_, f, this),
        SimCntrl_EconMaxLimitDewpointTemp_ (x.SimCntrl_EconMaxLimitDewpointTemp_, f, this),
        SimCntrl_ElecEnthalpyLimitCurveName_ (x.SimCntrl_ElecEnthalpyLimitCurveName_, f, this),
        SimCntrl_EconMinLimitDryBulbTemp_ (x.SimCntrl_EconMinLimitDryBulbTemp_, f, this),
        SimCntrl_LockoutType_ (x.SimCntrl_LockoutType_, f, this),
        SimCntrl_MinLimitType_ (x.SimCntrl_MinLimitType_, f, this),
        SimCntrl_MinOutdrAirSchedName_ (x.SimCntrl_MinOutdrAirSchedName_, f, this),
        SimCntrl_MinFractionofOutdrAirSchedName_ (x.SimCntrl_MinFractionofOutdrAirSchedName_, f, this),
        SimCntrl_MaxFractionofOutdrAirSchedName_ (x.SimCntrl_MaxFractionofOutdrAirSchedName_, f, this),
        SimCntrl_MechanicalVentControllerName_ (x.SimCntrl_MechanicalVentControllerName_, f, this),
        SimCntrl_TimeofDayEconControlSchedName_ (x.SimCntrl_TimeofDayEconControlSchedName_, f, this),
        SimCntrl_HighHumidityControl_ (x.SimCntrl_HighHumidityControl_, f, this),
        SimCntrl_HumidistatCntlZoneName_ (x.SimCntrl_HumidistatCntlZoneName_, f, this),
        SimCntrl_HighHumidOutdrAirFlowRatio_ (x.SimCntrl_HighHumidOutdrAirFlowRatio_, f, this),
        SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio_ (x.SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio_, f, this),
        SimCntrl_HeatRecoveryBypassControlType_ (x.SimCntrl_HeatRecoveryBypassControlType_, f, this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_Name_ (x.FaultModel_EnthalpySensorOffset_OutdoorAir_Name_, f, this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName_ (x.FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName_, f, this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName_ (x.FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName_, f, this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType_ (x.FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType_, f, this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName_ (x.FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName_, f, this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset_ (x.FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset_, f, this),
        FaultModel_EnthalpySensorOffset_ReturnAir_Name_ (x.FaultModel_EnthalpySensorOffset_ReturnAir_Name_, f, this),
        FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName_ (x.FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName_, f, this),
        FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName_ (x.FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName_, f, this),
        FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType_ (x.FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType_, f, this),
        FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName_ (x.FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName_, f, this),
        FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset_ (x.FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset_, f, this),
        FaultModel_HumiditySensorOffset_OutdoorAir_Name_ (x.FaultModel_HumiditySensorOffset_OutdoorAir_Name_, f, this),
        FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName_ (x.FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName_, f, this),
        FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName_ (x.FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName_, f, this),
        FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType_ (x.FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType_, f, this),
        FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName_ (x.FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName_, f, this),
        FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset_ (x.FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset_, f, this),
        FaultModel_PressureSensorOffset_OutdoorAir_Name_ (x.FaultModel_PressureSensorOffset_OutdoorAir_Name_, f, this),
        FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName_ (x.FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName_, f, this),
        FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName_ (x.FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName_, f, this),
        FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType_ (x.FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType_, f, this),
        FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName_ (x.FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName_, f, this),
        FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset_ (x.FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset_, f, this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_Name_ (x.FaultModel_TemperatureSensorOffset_OutdoorAir_Name_, f, this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName_ (x.FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName_, f, this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName_ (x.FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName_, f, this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType_ (x.FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType_, f, this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName_ (x.FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName_, f, this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset_ (x.FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset_, f, this),
        FaultModel_TemperatureSensorOffset_ReturnAir_Name_ (x.FaultModel_TemperatureSensorOffset_ReturnAir_Name_, f, this),
        FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName_ (x.FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName_, f, this),
        FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName_ (x.FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName_, f, this),
        FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType_ (x.FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType_, f, this),
        FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName_ (x.FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName_, f, this),
        FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset_ (x.FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset_, f, this)
      {
      }

      SimController_OutdoorAir_EconomizerControl::
      SimController_OutdoorAir_EconomizerControl (const ::xercesc::DOMElement& e,
                                                  ::xml_schema::flags f,
                                                  ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimController_OutdoorAir (e, f | ::xml_schema::flags::base, c),
        SimCntrl_Name_ (this),
        SimCntrl_ReliefAirOutletNodeName_ (this),
        SimCntrl_RtnAirNodeName_ (this),
        SimCntrl_MixedAirNodeName_ (this),
        SimCntrl_ActuatorNodeName_ (this),
        SimCntrl_MinOutdrAirFlowRate_ (this),
        SimCntrl_MaxOutdrAirFlowRate_ (this),
        SimCntrl_EconControlType_ (this),
        SimCntrl_EconControlActionType_ (this),
        SimCntrl_EconMaxLimitDryBulbTemp_ (this),
        SimCntrl_EconMaxLimitEnthalpy_ (this),
        SimCntrl_EconMaxLimitDewpointTemp_ (this),
        SimCntrl_ElecEnthalpyLimitCurveName_ (this),
        SimCntrl_EconMinLimitDryBulbTemp_ (this),
        SimCntrl_LockoutType_ (this),
        SimCntrl_MinLimitType_ (this),
        SimCntrl_MinOutdrAirSchedName_ (this),
        SimCntrl_MinFractionofOutdrAirSchedName_ (this),
        SimCntrl_MaxFractionofOutdrAirSchedName_ (this),
        SimCntrl_MechanicalVentControllerName_ (this),
        SimCntrl_TimeofDayEconControlSchedName_ (this),
        SimCntrl_HighHumidityControl_ (this),
        SimCntrl_HumidistatCntlZoneName_ (this),
        SimCntrl_HighHumidOutdrAirFlowRatio_ (this),
        SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio_ (this),
        SimCntrl_HeatRecoveryBypassControlType_ (this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_Name_ (this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName_ (this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName_ (this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType_ (this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName_ (this),
        FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset_ (this),
        FaultModel_EnthalpySensorOffset_ReturnAir_Name_ (this),
        FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName_ (this),
        FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName_ (this),
        FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType_ (this),
        FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName_ (this),
        FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset_ (this),
        FaultModel_HumiditySensorOffset_OutdoorAir_Name_ (this),
        FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName_ (this),
        FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName_ (this),
        FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType_ (this),
        FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName_ (this),
        FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset_ (this),
        FaultModel_PressureSensorOffset_OutdoorAir_Name_ (this),
        FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName_ (this),
        FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName_ (this),
        FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType_ (this),
        FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName_ (this),
        FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset_ (this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_Name_ (this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName_ (this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName_ (this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType_ (this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName_ (this),
        FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset_ (this),
        FaultModel_TemperatureSensorOffset_ReturnAir_Name_ (this),
        FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName_ (this),
        FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName_ (this),
        FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType_ (this),
        FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName_ (this),
        FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimController_OutdoorAir_EconomizerControl::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimController_OutdoorAir::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimCntrl_Name
          //
          if (n.name () == "SimCntrl_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimCntrl_Name_type > r (
              SimCntrl_Name_traits::create (i, f, this));

            if (!this->SimCntrl_Name_)
            {
              this->SimCntrl_Name_.set (r);
              continue;
            }
          }

          // SimCntrl_ReliefAirOutletNodeName
          //
          if (n.name () == "SimCntrl_ReliefAirOutletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimCntrl_ReliefAirOutletNodeName_type > r (
              SimCntrl_ReliefAirOutletNodeName_traits::create (i, f, this));

            if (!this->SimCntrl_ReliefAirOutletNodeName_)
            {
              this->SimCntrl_ReliefAirOutletNodeName_.set (r);
              continue;
            }
          }

          // SimCntrl_RtnAirNodeName
          //
          if (n.name () == "SimCntrl_RtnAirNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimCntrl_RtnAirNodeName_type > r (
              SimCntrl_RtnAirNodeName_traits::create (i, f, this));

            if (!this->SimCntrl_RtnAirNodeName_)
            {
              this->SimCntrl_RtnAirNodeName_.set (r);
              continue;
            }
          }

          // SimCntrl_MixedAirNodeName
          //
          if (n.name () == "SimCntrl_MixedAirNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimCntrl_MixedAirNodeName_type > r (
              SimCntrl_MixedAirNodeName_traits::create (i, f, this));

            if (!this->SimCntrl_MixedAirNodeName_)
            {
              this->SimCntrl_MixedAirNodeName_.set (r);
              continue;
            }
          }

          // SimCntrl_ActuatorNodeName
          //
          if (n.name () == "SimCntrl_ActuatorNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimCntrl_ActuatorNodeName_type > r (
              SimCntrl_ActuatorNodeName_traits::create (i, f, this));

            if (!this->SimCntrl_ActuatorNodeName_)
            {
              this->SimCntrl_ActuatorNodeName_.set (r);
              continue;
            }
          }

          // SimCntrl_MinOutdrAirFlowRate
          //
          if (n.name () == "SimCntrl_MinOutdrAirFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimCntrl_MinOutdrAirFlowRate_)
            {
              this->SimCntrl_MinOutdrAirFlowRate_.set (SimCntrl_MinOutdrAirFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimCntrl_MaxOutdrAirFlowRate
          //
          if (n.name () == "SimCntrl_MaxOutdrAirFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimCntrl_MaxOutdrAirFlowRate_)
            {
              this->SimCntrl_MaxOutdrAirFlowRate_.set (SimCntrl_MaxOutdrAirFlowRate_traits::create (i, f, this));
              continue;
            }
          }

          // SimCntrl_EconControlType
          //
          if (n.name () == "SimCntrl_EconControlType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimCntrl_EconControlType_type > r (
              SimCntrl_EconControlType_traits::create (i, f, this));

            if (!this->SimCntrl_EconControlType_)
            {
              this->SimCntrl_EconControlType_.set (r);
              continue;
            }
          }

          // SimCntrl_EconControlActionType
          //
          if (n.name () == "SimCntrl_EconControlActionType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimCntrl_EconControlActionType_type > r (
              SimCntrl_EconControlActionType_traits::create (i, f, this));

            if (!this->SimCntrl_EconControlActionType_)
            {
              this->SimCntrl_EconControlActionType_.set (r);
              continue;
            }
          }

          // SimCntrl_EconMaxLimitDryBulbTemp
          //
          if (n.name () == "SimCntrl_EconMaxLimitDryBulbTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimCntrl_EconMaxLimitDryBulbTemp_)
            {
              this->SimCntrl_EconMaxLimitDryBulbTemp_.set (SimCntrl_EconMaxLimitDryBulbTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimCntrl_EconMaxLimitEnthalpy
          //
          if (n.name () == "SimCntrl_EconMaxLimitEnthalpy" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimCntrl_EconMaxLimitEnthalpy_)
            {
              this->SimCntrl_EconMaxLimitEnthalpy_.set (SimCntrl_EconMaxLimitEnthalpy_traits::create (i, f, this));
              continue;
            }
          }

          // SimCntrl_EconMaxLimitDewpointTemp
          //
          if (n.name () == "SimCntrl_EconMaxLimitDewpointTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimCntrl_EconMaxLimitDewpointTemp_)
            {
              this->SimCntrl_EconMaxLimitDewpointTemp_.set (SimCntrl_EconMaxLimitDewpointTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimCntrl_ElecEnthalpyLimitCurveName
          //
          if (n.name () == "SimCntrl_ElecEnthalpyLimitCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimCntrl_ElecEnthalpyLimitCurveName_type > r (
              SimCntrl_ElecEnthalpyLimitCurveName_traits::create (i, f, this));

            if (!this->SimCntrl_ElecEnthalpyLimitCurveName_)
            {
              this->SimCntrl_ElecEnthalpyLimitCurveName_.set (r);
              continue;
            }
          }

          // SimCntrl_EconMinLimitDryBulbTemp
          //
          if (n.name () == "SimCntrl_EconMinLimitDryBulbTemp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimCntrl_EconMinLimitDryBulbTemp_)
            {
              this->SimCntrl_EconMinLimitDryBulbTemp_.set (SimCntrl_EconMinLimitDryBulbTemp_traits::create (i, f, this));
              continue;
            }
          }

          // SimCntrl_LockoutType
          //
          if (n.name () == "SimCntrl_LockoutType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimCntrl_LockoutType_type > r (
              SimCntrl_LockoutType_traits::create (i, f, this));

            if (!this->SimCntrl_LockoutType_)
            {
              this->SimCntrl_LockoutType_.set (r);
              continue;
            }
          }

          // SimCntrl_MinLimitType
          //
          if (n.name () == "SimCntrl_MinLimitType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimCntrl_MinLimitType_type > r (
              SimCntrl_MinLimitType_traits::create (i, f, this));

            if (!this->SimCntrl_MinLimitType_)
            {
              this->SimCntrl_MinLimitType_.set (r);
              continue;
            }
          }

          // SimCntrl_MinOutdrAirSchedName
          //
          if (n.name () == "SimCntrl_MinOutdrAirSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimCntrl_MinOutdrAirSchedName_type > r (
              SimCntrl_MinOutdrAirSchedName_traits::create (i, f, this));

            if (!this->SimCntrl_MinOutdrAirSchedName_)
            {
              this->SimCntrl_MinOutdrAirSchedName_.set (r);
              continue;
            }
          }

          // SimCntrl_MinFractionofOutdrAirSchedName
          //
          if (n.name () == "SimCntrl_MinFractionofOutdrAirSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimCntrl_MinFractionofOutdrAirSchedName_type > r (
              SimCntrl_MinFractionofOutdrAirSchedName_traits::create (i, f, this));

            if (!this->SimCntrl_MinFractionofOutdrAirSchedName_)
            {
              this->SimCntrl_MinFractionofOutdrAirSchedName_.set (r);
              continue;
            }
          }

          // SimCntrl_MaxFractionofOutdrAirSchedName
          //
          if (n.name () == "SimCntrl_MaxFractionofOutdrAirSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimCntrl_MaxFractionofOutdrAirSchedName_type > r (
              SimCntrl_MaxFractionofOutdrAirSchedName_traits::create (i, f, this));

            if (!this->SimCntrl_MaxFractionofOutdrAirSchedName_)
            {
              this->SimCntrl_MaxFractionofOutdrAirSchedName_.set (r);
              continue;
            }
          }

          // SimCntrl_MechanicalVentControllerName
          //
          if (n.name () == "SimCntrl_MechanicalVentControllerName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimCntrl_MechanicalVentControllerName_type > r (
              SimCntrl_MechanicalVentControllerName_traits::create (i, f, this));

            if (!this->SimCntrl_MechanicalVentControllerName_)
            {
              this->SimCntrl_MechanicalVentControllerName_.set (r);
              continue;
            }
          }

          // SimCntrl_TimeofDayEconControlSchedName
          //
          if (n.name () == "SimCntrl_TimeofDayEconControlSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimCntrl_TimeofDayEconControlSchedName_type > r (
              SimCntrl_TimeofDayEconControlSchedName_traits::create (i, f, this));

            if (!this->SimCntrl_TimeofDayEconControlSchedName_)
            {
              this->SimCntrl_TimeofDayEconControlSchedName_.set (r);
              continue;
            }
          }

          // SimCntrl_HighHumidityControl
          //
          if (n.name () == "SimCntrl_HighHumidityControl" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimCntrl_HighHumidityControl_type > r (
              SimCntrl_HighHumidityControl_traits::create (i, f, this));

            if (!this->SimCntrl_HighHumidityControl_)
            {
              this->SimCntrl_HighHumidityControl_.set (r);
              continue;
            }
          }

          // SimCntrl_HumidistatCntlZoneName
          //
          if (n.name () == "SimCntrl_HumidistatCntlZoneName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimCntrl_HumidistatCntlZoneName_type > r (
              SimCntrl_HumidistatCntlZoneName_traits::create (i, f, this));

            if (!this->SimCntrl_HumidistatCntlZoneName_)
            {
              this->SimCntrl_HumidistatCntlZoneName_.set (r);
              continue;
            }
          }

          // SimCntrl_HighHumidOutdrAirFlowRatio
          //
          if (n.name () == "SimCntrl_HighHumidOutdrAirFlowRatio" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimCntrl_HighHumidOutdrAirFlowRatio_)
            {
              this->SimCntrl_HighHumidOutdrAirFlowRatio_.set (SimCntrl_HighHumidOutdrAirFlowRatio_traits::create (i, f, this));
              continue;
            }
          }

          // SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio
          //
          if (n.name () == "SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio_type > r (
              SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio_traits::create (i, f, this));

            if (!this->SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio_)
            {
              this->SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio_.set (r);
              continue;
            }
          }

          // SimCntrl_HeatRecoveryBypassControlType
          //
          if (n.name () == "SimCntrl_HeatRecoveryBypassControlType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimCntrl_HeatRecoveryBypassControlType_type > r (
              SimCntrl_HeatRecoveryBypassControlType_traits::create (i, f, this));

            if (!this->SimCntrl_HeatRecoveryBypassControlType_)
            {
              this->SimCntrl_HeatRecoveryBypassControlType_.set (r);
              continue;
            }
          }

          // FaultModel_EnthalpySensorOffset_OutdoorAir_Name
          //
          if (n.name () == "FaultModel_EnthalpySensorOffset_OutdoorAir_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_EnthalpySensorOffset_OutdoorAir_Name_type > r (
              FaultModel_EnthalpySensorOffset_OutdoorAir_Name_traits::create (i, f, this));

            if (!this->FaultModel_EnthalpySensorOffset_OutdoorAir_Name_)
            {
              this->FaultModel_EnthalpySensorOffset_OutdoorAir_Name_.set (r);
              continue;
            }
          }

          // FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName
          //
          if (n.name () == "FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName_type > r (
              FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName_traits::create (i, f, this));

            if (!this->FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName_)
            {
              this->FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName_.set (r);
              continue;
            }
          }

          // FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName
          //
          if (n.name () == "FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName_type > r (
              FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName_traits::create (i, f, this));

            if (!this->FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName_)
            {
              this->FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName_.set (r);
              continue;
            }
          }

          // FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType
          //
          if (n.name () == "FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType_type > r (
              FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType_traits::create (i, f, this));

            if (!this->FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType_)
            {
              this->FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType_.set (r);
              continue;
            }
          }

          // FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName
          //
          if (n.name () == "FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName_type > r (
              FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName_traits::create (i, f, this));

            if (!this->FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName_)
            {
              this->FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName_.set (r);
              continue;
            }
          }

          // FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset
          //
          if (n.name () == "FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset_)
            {
              this->FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset_.set (FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset_traits::create (i, f, this));
              continue;
            }
          }

          // FaultModel_EnthalpySensorOffset_ReturnAir_Name
          //
          if (n.name () == "FaultModel_EnthalpySensorOffset_ReturnAir_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_EnthalpySensorOffset_ReturnAir_Name_type > r (
              FaultModel_EnthalpySensorOffset_ReturnAir_Name_traits::create (i, f, this));

            if (!this->FaultModel_EnthalpySensorOffset_ReturnAir_Name_)
            {
              this->FaultModel_EnthalpySensorOffset_ReturnAir_Name_.set (r);
              continue;
            }
          }

          // FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName
          //
          if (n.name () == "FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName_type > r (
              FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName_traits::create (i, f, this));

            if (!this->FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName_)
            {
              this->FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName_.set (r);
              continue;
            }
          }

          // FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName
          //
          if (n.name () == "FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName_type > r (
              FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName_traits::create (i, f, this));

            if (!this->FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName_)
            {
              this->FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName_.set (r);
              continue;
            }
          }

          // FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType
          //
          if (n.name () == "FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType_type > r (
              FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType_traits::create (i, f, this));

            if (!this->FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType_)
            {
              this->FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType_.set (r);
              continue;
            }
          }

          // FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName
          //
          if (n.name () == "FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName_type > r (
              FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName_traits::create (i, f, this));

            if (!this->FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName_)
            {
              this->FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName_.set (r);
              continue;
            }
          }

          // FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset
          //
          if (n.name () == "FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset_)
            {
              this->FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset_.set (FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset_traits::create (i, f, this));
              continue;
            }
          }

          // FaultModel_HumiditySensorOffset_OutdoorAir_Name
          //
          if (n.name () == "FaultModel_HumiditySensorOffset_OutdoorAir_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_HumiditySensorOffset_OutdoorAir_Name_type > r (
              FaultModel_HumiditySensorOffset_OutdoorAir_Name_traits::create (i, f, this));

            if (!this->FaultModel_HumiditySensorOffset_OutdoorAir_Name_)
            {
              this->FaultModel_HumiditySensorOffset_OutdoorAir_Name_.set (r);
              continue;
            }
          }

          // FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName
          //
          if (n.name () == "FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName_type > r (
              FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName_traits::create (i, f, this));

            if (!this->FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName_)
            {
              this->FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName_.set (r);
              continue;
            }
          }

          // FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName
          //
          if (n.name () == "FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName_type > r (
              FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName_traits::create (i, f, this));

            if (!this->FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName_)
            {
              this->FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName_.set (r);
              continue;
            }
          }

          // FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType
          //
          if (n.name () == "FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType_type > r (
              FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType_traits::create (i, f, this));

            if (!this->FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType_)
            {
              this->FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType_.set (r);
              continue;
            }
          }

          // FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName
          //
          if (n.name () == "FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName_type > r (
              FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName_traits::create (i, f, this));

            if (!this->FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName_)
            {
              this->FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName_.set (r);
              continue;
            }
          }

          // FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset
          //
          if (n.name () == "FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset_)
            {
              this->FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset_.set (FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset_traits::create (i, f, this));
              continue;
            }
          }

          // FaultModel_PressureSensorOffset_OutdoorAir_Name
          //
          if (n.name () == "FaultModel_PressureSensorOffset_OutdoorAir_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_PressureSensorOffset_OutdoorAir_Name_type > r (
              FaultModel_PressureSensorOffset_OutdoorAir_Name_traits::create (i, f, this));

            if (!this->FaultModel_PressureSensorOffset_OutdoorAir_Name_)
            {
              this->FaultModel_PressureSensorOffset_OutdoorAir_Name_.set (r);
              continue;
            }
          }

          // FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName
          //
          if (n.name () == "FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName_type > r (
              FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName_traits::create (i, f, this));

            if (!this->FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName_)
            {
              this->FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName_.set (r);
              continue;
            }
          }

          // FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName
          //
          if (n.name () == "FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName_type > r (
              FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName_traits::create (i, f, this));

            if (!this->FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName_)
            {
              this->FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName_.set (r);
              continue;
            }
          }

          // FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType
          //
          if (n.name () == "FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType_type > r (
              FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType_traits::create (i, f, this));

            if (!this->FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType_)
            {
              this->FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType_.set (r);
              continue;
            }
          }

          // FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName
          //
          if (n.name () == "FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName_type > r (
              FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName_traits::create (i, f, this));

            if (!this->FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName_)
            {
              this->FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName_.set (r);
              continue;
            }
          }

          // FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset
          //
          if (n.name () == "FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset_)
            {
              this->FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset_.set (FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset_traits::create (i, f, this));
              continue;
            }
          }

          // FaultModel_TemperatureSensorOffset_OutdoorAir_Name
          //
          if (n.name () == "FaultModel_TemperatureSensorOffset_OutdoorAir_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_TemperatureSensorOffset_OutdoorAir_Name_type > r (
              FaultModel_TemperatureSensorOffset_OutdoorAir_Name_traits::create (i, f, this));

            if (!this->FaultModel_TemperatureSensorOffset_OutdoorAir_Name_)
            {
              this->FaultModel_TemperatureSensorOffset_OutdoorAir_Name_.set (r);
              continue;
            }
          }

          // FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName
          //
          if (n.name () == "FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName_type > r (
              FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName_traits::create (i, f, this));

            if (!this->FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName_)
            {
              this->FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName_.set (r);
              continue;
            }
          }

          // FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName
          //
          if (n.name () == "FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName_type > r (
              FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName_traits::create (i, f, this));

            if (!this->FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName_)
            {
              this->FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName_.set (r);
              continue;
            }
          }

          // FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType
          //
          if (n.name () == "FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType_type > r (
              FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType_traits::create (i, f, this));

            if (!this->FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType_)
            {
              this->FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType_.set (r);
              continue;
            }
          }

          // FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName
          //
          if (n.name () == "FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName_type > r (
              FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName_traits::create (i, f, this));

            if (!this->FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName_)
            {
              this->FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName_.set (r);
              continue;
            }
          }

          // FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset
          //
          if (n.name () == "FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset_)
            {
              this->FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset_.set (FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset_traits::create (i, f, this));
              continue;
            }
          }

          // FaultModel_TemperatureSensorOffset_ReturnAir_Name
          //
          if (n.name () == "FaultModel_TemperatureSensorOffset_ReturnAir_Name" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_TemperatureSensorOffset_ReturnAir_Name_type > r (
              FaultModel_TemperatureSensorOffset_ReturnAir_Name_traits::create (i, f, this));

            if (!this->FaultModel_TemperatureSensorOffset_ReturnAir_Name_)
            {
              this->FaultModel_TemperatureSensorOffset_ReturnAir_Name_.set (r);
              continue;
            }
          }

          // FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName
          //
          if (n.name () == "FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName_type > r (
              FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName_traits::create (i, f, this));

            if (!this->FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName_)
            {
              this->FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName_.set (r);
              continue;
            }
          }

          // FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName
          //
          if (n.name () == "FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName_type > r (
              FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName_traits::create (i, f, this));

            if (!this->FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName_)
            {
              this->FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName_.set (r);
              continue;
            }
          }

          // FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType
          //
          if (n.name () == "FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType_type > r (
              FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType_traits::create (i, f, this));

            if (!this->FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType_)
            {
              this->FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType_.set (r);
              continue;
            }
          }

          // FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName
          //
          if (n.name () == "FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName_type > r (
              FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName_traits::create (i, f, this));

            if (!this->FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName_)
            {
              this->FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName_.set (r);
              continue;
            }
          }

          // FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset
          //
          if (n.name () == "FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset_)
            {
              this->FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset_.set (FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset_traits::create (i, f, this));
              continue;
            }
          }

          break;
        }
      }

      SimController_OutdoorAir_EconomizerControl* SimController_OutdoorAir_EconomizerControl::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimController_OutdoorAir_EconomizerControl (*this, f, c);
      }

      SimController_OutdoorAir_EconomizerControl& SimController_OutdoorAir_EconomizerControl::
      operator= (const SimController_OutdoorAir_EconomizerControl& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimController_OutdoorAir& > (*this) = x;
          this->SimCntrl_Name_ = x.SimCntrl_Name_;
          this->SimCntrl_ReliefAirOutletNodeName_ = x.SimCntrl_ReliefAirOutletNodeName_;
          this->SimCntrl_RtnAirNodeName_ = x.SimCntrl_RtnAirNodeName_;
          this->SimCntrl_MixedAirNodeName_ = x.SimCntrl_MixedAirNodeName_;
          this->SimCntrl_ActuatorNodeName_ = x.SimCntrl_ActuatorNodeName_;
          this->SimCntrl_MinOutdrAirFlowRate_ = x.SimCntrl_MinOutdrAirFlowRate_;
          this->SimCntrl_MaxOutdrAirFlowRate_ = x.SimCntrl_MaxOutdrAirFlowRate_;
          this->SimCntrl_EconControlType_ = x.SimCntrl_EconControlType_;
          this->SimCntrl_EconControlActionType_ = x.SimCntrl_EconControlActionType_;
          this->SimCntrl_EconMaxLimitDryBulbTemp_ = x.SimCntrl_EconMaxLimitDryBulbTemp_;
          this->SimCntrl_EconMaxLimitEnthalpy_ = x.SimCntrl_EconMaxLimitEnthalpy_;
          this->SimCntrl_EconMaxLimitDewpointTemp_ = x.SimCntrl_EconMaxLimitDewpointTemp_;
          this->SimCntrl_ElecEnthalpyLimitCurveName_ = x.SimCntrl_ElecEnthalpyLimitCurveName_;
          this->SimCntrl_EconMinLimitDryBulbTemp_ = x.SimCntrl_EconMinLimitDryBulbTemp_;
          this->SimCntrl_LockoutType_ = x.SimCntrl_LockoutType_;
          this->SimCntrl_MinLimitType_ = x.SimCntrl_MinLimitType_;
          this->SimCntrl_MinOutdrAirSchedName_ = x.SimCntrl_MinOutdrAirSchedName_;
          this->SimCntrl_MinFractionofOutdrAirSchedName_ = x.SimCntrl_MinFractionofOutdrAirSchedName_;
          this->SimCntrl_MaxFractionofOutdrAirSchedName_ = x.SimCntrl_MaxFractionofOutdrAirSchedName_;
          this->SimCntrl_MechanicalVentControllerName_ = x.SimCntrl_MechanicalVentControllerName_;
          this->SimCntrl_TimeofDayEconControlSchedName_ = x.SimCntrl_TimeofDayEconControlSchedName_;
          this->SimCntrl_HighHumidityControl_ = x.SimCntrl_HighHumidityControl_;
          this->SimCntrl_HumidistatCntlZoneName_ = x.SimCntrl_HumidistatCntlZoneName_;
          this->SimCntrl_HighHumidOutdrAirFlowRatio_ = x.SimCntrl_HighHumidOutdrAirFlowRatio_;
          this->SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio_ = x.SimCntrl_CntlHighIndrHumidBasedOnOutdrHumidRatio_;
          this->SimCntrl_HeatRecoveryBypassControlType_ = x.SimCntrl_HeatRecoveryBypassControlType_;
          this->FaultModel_EnthalpySensorOffset_OutdoorAir_Name_ = x.FaultModel_EnthalpySensorOffset_OutdoorAir_Name_;
          this->FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName_ = x.FaultModel_EnthalpySensorOffset_OutdoorAir_AvailSchedName_;
          this->FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName_ = x.FaultModel_EnthalpySensorOffset_OutdoorAir_SeveritySchedName_;
          this->FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType_ = x.FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectType_;
          this->FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName_ = x.FaultModel_EnthalpySensorOffset_OutdoorAir_CntrlObjectName_;
          this->FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset_ = x.FaultModel_EnthalpySensorOffset_OutdoorAir_EnthalpySensOffset_;
          this->FaultModel_EnthalpySensorOffset_ReturnAir_Name_ = x.FaultModel_EnthalpySensorOffset_ReturnAir_Name_;
          this->FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName_ = x.FaultModel_EnthalpySensorOffset_ReturnAir_AvailSchedName_;
          this->FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName_ = x.FaultModel_EnthalpySensorOffset_ReturnAir_SeveritySchedName_;
          this->FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType_ = x.FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectType_;
          this->FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName_ = x.FaultModel_EnthalpySensorOffset_ReturnAir_CntrlObjectName_;
          this->FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset_ = x.FaultModel_EnthalpySensorOffset_ReturnAir_EnthalpySensOffset_;
          this->FaultModel_HumiditySensorOffset_OutdoorAir_Name_ = x.FaultModel_HumiditySensorOffset_OutdoorAir_Name_;
          this->FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName_ = x.FaultModel_HumiditySensorOffset_OutdoorAir_AvailSchedName_;
          this->FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName_ = x.FaultModel_HumiditySensorOffset_OutdoorAir_SeveritySchedName_;
          this->FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType_ = x.FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectType_;
          this->FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName_ = x.FaultModel_HumiditySensorOffset_OutdoorAir_CntrlObjectName_;
          this->FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset_ = x.FaultModel_HumiditySensorOffset_OutdoorAir_HumiditySensOffset_;
          this->FaultModel_PressureSensorOffset_OutdoorAir_Name_ = x.FaultModel_PressureSensorOffset_OutdoorAir_Name_;
          this->FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName_ = x.FaultModel_PressureSensorOffset_OutdoorAir_AvailSchedName_;
          this->FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName_ = x.FaultModel_PressureSensorOffset_OutdoorAir_SeveritySchedName_;
          this->FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType_ = x.FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectType_;
          this->FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName_ = x.FaultModel_PressureSensorOffset_OutdoorAir_CntrlObjectName_;
          this->FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset_ = x.FaultModel_PressureSensorOffset_OutdoorAir_PressureSensOffset_;
          this->FaultModel_TemperatureSensorOffset_OutdoorAir_Name_ = x.FaultModel_TemperatureSensorOffset_OutdoorAir_Name_;
          this->FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName_ = x.FaultModel_TemperatureSensorOffset_OutdoorAir_AvailSchedName_;
          this->FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName_ = x.FaultModel_TemperatureSensorOffset_OutdoorAir_SeveritySchedName_;
          this->FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType_ = x.FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectType_;
          this->FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName_ = x.FaultModel_TemperatureSensorOffset_OutdoorAir_CntrlObjectName_;
          this->FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset_ = x.FaultModel_TemperatureSensorOffset_OutdoorAir_TempSensOffset_;
          this->FaultModel_TemperatureSensorOffset_ReturnAir_Name_ = x.FaultModel_TemperatureSensorOffset_ReturnAir_Name_;
          this->FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName_ = x.FaultModel_TemperatureSensorOffset_ReturnAir_AvailSchedName_;
          this->FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName_ = x.FaultModel_TemperatureSensorOffset_ReturnAir_SeveritySchedName_;
          this->FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType_ = x.FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectType_;
          this->FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName_ = x.FaultModel_TemperatureSensorOffset_ReturnAir_CntrlObjectName_;
          this->FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset_ = x.FaultModel_TemperatureSensorOffset_ReturnAir_TempSensOffset_;
        }

        return *this;
      }

      SimController_OutdoorAir_EconomizerControl::
      ~SimController_OutdoorAir_EconomizerControl ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

