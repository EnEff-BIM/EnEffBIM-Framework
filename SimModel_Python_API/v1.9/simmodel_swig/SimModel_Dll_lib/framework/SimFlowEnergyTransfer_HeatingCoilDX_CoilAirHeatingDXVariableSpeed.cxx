// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed.hxx"

#include "doublelist.hxx"

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed
      // 

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_CrankcaseHeatCap_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_CrankcaseHeatCap () const
      {
        return this->SimFlowEnergyTrans_CrankcaseHeatCap_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_CrankcaseHeatCap_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_CrankcaseHeatCap ()
      {
        return this->SimFlowEnergyTrans_CrankcaseHeatCap_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_CrankcaseHeatCap (const SimFlowEnergyTrans_CrankcaseHeatCap_type& x)
      {
        this->SimFlowEnergyTrans_CrankcaseHeatCap_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_CrankcaseHeatCap (const SimFlowEnergyTrans_CrankcaseHeatCap_optional& x)
      {
        this->SimFlowEnergyTrans_CrankcaseHeatCap_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp () const
      {
        return this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp ()
      {
        return this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp (const SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_type& x)
      {
        this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp (const SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_optional& x)
      {
        this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_NumSpeeds_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_NumSpeeds () const
      {
        return this->SimFlowEnergyTrans_NumSpeeds_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_NumSpeeds_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_NumSpeeds ()
      {
        return this->SimFlowEnergyTrans_NumSpeeds_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_NumSpeeds (const SimFlowEnergyTrans_NumSpeeds_type& x)
      {
        this->SimFlowEnergyTrans_NumSpeeds_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_NumSpeeds (const SimFlowEnergyTrans_NumSpeeds_optional& x)
      {
        this->SimFlowEnergyTrans_NumSpeeds_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_IndoorAirInletNodeName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_IndoorAirInletNodeName () const
      {
        return this->SimFlowEnergyTrans_IndoorAirInletNodeName_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_IndoorAirInletNodeName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_IndoorAirInletNodeName ()
      {
        return this->SimFlowEnergyTrans_IndoorAirInletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_IndoorAirInletNodeName (const SimFlowEnergyTrans_IndoorAirInletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_IndoorAirInletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_IndoorAirInletNodeName (const SimFlowEnergyTrans_IndoorAirInletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_IndoorAirInletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_IndoorAirInletNodeName (::std::auto_ptr< SimFlowEnergyTrans_IndoorAirInletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_IndoorAirInletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_IndoorAirOutletNodeName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_IndoorAirOutletNodeName () const
      {
        return this->SimFlowEnergyTrans_IndoorAirOutletNodeName_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_IndoorAirOutletNodeName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_IndoorAirOutletNodeName ()
      {
        return this->SimFlowEnergyTrans_IndoorAirOutletNodeName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_IndoorAirOutletNodeName (const SimFlowEnergyTrans_IndoorAirOutletNodeName_type& x)
      {
        this->SimFlowEnergyTrans_IndoorAirOutletNodeName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_IndoorAirOutletNodeName (const SimFlowEnergyTrans_IndoorAirOutletNodeName_optional& x)
      {
        this->SimFlowEnergyTrans_IndoorAirOutletNodeName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_IndoorAirOutletNodeName (::std::auto_ptr< SimFlowEnergyTrans_IndoorAirOutletNodeName_type > x)
      {
        this->SimFlowEnergyTrans_IndoorAirOutletNodeName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_NominalSpeedLevel_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_NominalSpeedLevel () const
      {
        return this->SimFlowEnergyTrans_NominalSpeedLevel_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_NominalSpeedLevel_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_NominalSpeedLevel ()
      {
        return this->SimFlowEnergyTrans_NominalSpeedLevel_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_NominalSpeedLevel (const SimFlowEnergyTrans_NominalSpeedLevel_type& x)
      {
        this->SimFlowEnergyTrans_NominalSpeedLevel_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_NominalSpeedLevel (const SimFlowEnergyTrans_NominalSpeedLevel_optional& x)
      {
        this->SimFlowEnergyTrans_NominalSpeedLevel_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel () const
      {
        return this->SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel ()
      {
        return this->SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel (const SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_type& x)
      {
        this->SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel (const SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_optional& x)
      {
        this->SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_EnergyPartLoadFractionCurveName () const
      {
        return this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_EnergyPartLoadFractionCurveName ()
      {
        return this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_EnergyPartLoadFractionCurveName (const SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_type& x)
      {
        this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_EnergyPartLoadFractionCurveName (const SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_EnergyPartLoadFractionCurveName (::std::auto_ptr< SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_type > x)
      {
        this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName () const
      {
        return this->SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName ()
      {
        return this->SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName (const SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_type& x)
      {
        this->SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName (const SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_type > x)
      {
        this->SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp () const
      {
        return this->SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp ()
      {
        return this->SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp (const SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_type& x)
      {
        this->SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp (const SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_optional& x)
      {
        this->SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress () const
      {
        return this->SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress ()
      {
        return this->SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress (const SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress_type& x)
      {
        this->SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress (const SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress_optional& x)
      {
        this->SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp () const
      {
        return this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp ()
      {
        return this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp (const SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_type& x)
      {
        this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp (const SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_optional& x)
      {
        this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_DefrostStrategy_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_DefrostStrategy () const
      {
        return this->SimFlowEnergyTrans_DefrostStrategy_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_DefrostStrategy_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_DefrostStrategy ()
      {
        return this->SimFlowEnergyTrans_DefrostStrategy_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_DefrostStrategy (const SimFlowEnergyTrans_DefrostStrategy_type& x)
      {
        this->SimFlowEnergyTrans_DefrostStrategy_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_DefrostStrategy (const SimFlowEnergyTrans_DefrostStrategy_optional& x)
      {
        this->SimFlowEnergyTrans_DefrostStrategy_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_DefrostStrategy (::std::auto_ptr< SimFlowEnergyTrans_DefrostStrategy_type > x)
      {
        this->SimFlowEnergyTrans_DefrostStrategy_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_DefrostCntl_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_DefrostCntl () const
      {
        return this->SimFlowEnergyTrans_DefrostCntl_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_DefrostCntl_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_DefrostCntl ()
      {
        return this->SimFlowEnergyTrans_DefrostCntl_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_DefrostCntl (const SimFlowEnergyTrans_DefrostCntl_type& x)
      {
        this->SimFlowEnergyTrans_DefrostCntl_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_DefrostCntl (const SimFlowEnergyTrans_DefrostCntl_optional& x)
      {
        this->SimFlowEnergyTrans_DefrostCntl_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_DefrostCntl (::std::auto_ptr< SimFlowEnergyTrans_DefrostCntl_type > x)
      {
        this->SimFlowEnergyTrans_DefrostCntl_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_DefrostTimePeriodFract_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_DefrostTimePeriodFract () const
      {
        return this->SimFlowEnergyTrans_DefrostTimePeriodFract_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_DefrostTimePeriodFract_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_DefrostTimePeriodFract ()
      {
        return this->SimFlowEnergyTrans_DefrostTimePeriodFract_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_DefrostTimePeriodFract (const SimFlowEnergyTrans_DefrostTimePeriodFract_type& x)
      {
        this->SimFlowEnergyTrans_DefrostTimePeriodFract_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_DefrostTimePeriodFract (const SimFlowEnergyTrans_DefrostTimePeriodFract_optional& x)
      {
        this->SimFlowEnergyTrans_DefrostTimePeriodFract_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_ResistDefrostHeatCap_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_ResistDefrostHeatCap () const
      {
        return this->SimFlowEnergyTrans_ResistDefrostHeatCap_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_ResistDefrostHeatCap_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_ResistDefrostHeatCap ()
      {
        return this->SimFlowEnergyTrans_ResistDefrostHeatCap_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_ResistDefrostHeatCap (const SimFlowEnergyTrans_ResistDefrostHeatCap_type& x)
      {
        this->SimFlowEnergyTrans_ResistDefrostHeatCap_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_ResistDefrostHeatCap (const SimFlowEnergyTrans_ResistDefrostHeatCap_optional& x)
      {
        this->SimFlowEnergyTrans_ResistDefrostHeatCap_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel () const
      {
        return this->SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel ()
      {
        return this->SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel (const SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel_type& x)
      {
        this->SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel (const SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel_optional& x)
      {
        this->SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel_ = x;
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap (const SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap (const SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP (const SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP (const SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate (const SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate (const SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName (const SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName (const SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName (const SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName (const SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName (const SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName (const SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_.set (x);
      }

      const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName () const
      {
        return this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_optional& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName ()
      {
        return this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName (const SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_type& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_.set (x);
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName (const SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_optional& x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_ = x;
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName (::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_type > x)
      {
        this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_.set (x);
      }
    }
  }
}

#include <xsd/cxx/xml/dom/parsing-source.hxx>

#include <xsd/cxx/tree/type-factory-map.hxx>

namespace _xsd
{
  static
  const ::xsd::cxx::tree::type_factory_plate< 0, char >
  type_factory_plate_init;
}

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
      // SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed
      //

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed ()
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatingCoilDX (),
        SimFlowEnergyTrans_CrankcaseHeatCap_ (this),
        SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ (this),
        SimFlowEnergyTrans_NumSpeeds_ (this),
        SimFlowEnergyTrans_IndoorAirInletNodeName_ (this),
        SimFlowEnergyTrans_IndoorAirOutletNodeName_ (this),
        SimFlowEnergyTrans_NominalSpeedLevel_ (this),
        SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_ (this),
        SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_ (this),
        SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_ (this),
        SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_ (this),
        SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress_ (this),
        SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_ (this),
        SimFlowEnergyTrans_DefrostStrategy_ (this),
        SimFlowEnergyTrans_DefrostCntl_ (this),
        SimFlowEnergyTrans_DefrostTimePeriodFract_ (this),
        SimFlowEnergyTrans_ResistDefrostHeatCap_ (this),
        SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_ (this),
        SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_ (this)
      {
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed (const RefId_type& RefId)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatingCoilDX (RefId),
        SimFlowEnergyTrans_CrankcaseHeatCap_ (this),
        SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ (this),
        SimFlowEnergyTrans_NumSpeeds_ (this),
        SimFlowEnergyTrans_IndoorAirInletNodeName_ (this),
        SimFlowEnergyTrans_IndoorAirOutletNodeName_ (this),
        SimFlowEnergyTrans_NominalSpeedLevel_ (this),
        SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_ (this),
        SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_ (this),
        SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_ (this),
        SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_ (this),
        SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress_ (this),
        SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_ (this),
        SimFlowEnergyTrans_DefrostStrategy_ (this),
        SimFlowEnergyTrans_DefrostCntl_ (this),
        SimFlowEnergyTrans_DefrostTimePeriodFract_ (this),
        SimFlowEnergyTrans_ResistDefrostHeatCap_ (this),
        SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_ (this),
        SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_ (this)
      {
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed (const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed& x,
                                                                         ::xml_schema::flags f,
                                                                         ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatingCoilDX (x, f, c),
        SimFlowEnergyTrans_CrankcaseHeatCap_ (x.SimFlowEnergyTrans_CrankcaseHeatCap_, f, this),
        SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ (x.SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_, f, this),
        SimFlowEnergyTrans_NumSpeeds_ (x.SimFlowEnergyTrans_NumSpeeds_, f, this),
        SimFlowEnergyTrans_IndoorAirInletNodeName_ (x.SimFlowEnergyTrans_IndoorAirInletNodeName_, f, this),
        SimFlowEnergyTrans_IndoorAirOutletNodeName_ (x.SimFlowEnergyTrans_IndoorAirOutletNodeName_, f, this),
        SimFlowEnergyTrans_NominalSpeedLevel_ (x.SimFlowEnergyTrans_NominalSpeedLevel_, f, this),
        SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_ (x.SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_, f, this),
        SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_ (x.SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_, f, this),
        SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_ (x.SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_, f, this),
        SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_ (x.SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_, f, this),
        SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress_ (x.SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress_, f, this),
        SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_ (x.SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_, f, this),
        SimFlowEnergyTrans_DefrostStrategy_ (x.SimFlowEnergyTrans_DefrostStrategy_, f, this),
        SimFlowEnergyTrans_DefrostCntl_ (x.SimFlowEnergyTrans_DefrostCntl_, f, this),
        SimFlowEnergyTrans_DefrostTimePeriodFract_ (x.SimFlowEnergyTrans_DefrostTimePeriodFract_, f, this),
        SimFlowEnergyTrans_ResistDefrostHeatCap_ (x.SimFlowEnergyTrans_ResistDefrostHeatCap_, f, this),
        SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel_ (x.SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel_, f, this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap_ (x.SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap_, f, this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP_ (x.SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP_, f, this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_ (x.SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_, f, this),
        SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName_ (x.SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName_, f, this),
        SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName_ (x.SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName_, f, this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_ (x.SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_, f, this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_ (x.SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_, f, this)
      {
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed (const ::xercesc::DOMElement& e,
                                                                         ::xml_schema::flags f,
                                                                         ::xml_schema::container* c)
      : ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatingCoilDX (e, f | ::xml_schema::flags::base, c),
        SimFlowEnergyTrans_CrankcaseHeatCap_ (this),
        SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ (this),
        SimFlowEnergyTrans_NumSpeeds_ (this),
        SimFlowEnergyTrans_IndoorAirInletNodeName_ (this),
        SimFlowEnergyTrans_IndoorAirOutletNodeName_ (this),
        SimFlowEnergyTrans_NominalSpeedLevel_ (this),
        SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_ (this),
        SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_ (this),
        SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_ (this),
        SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_ (this),
        SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress_ (this),
        SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_ (this),
        SimFlowEnergyTrans_DefrostStrategy_ (this),
        SimFlowEnergyTrans_DefrostCntl_ (this),
        SimFlowEnergyTrans_DefrostTimePeriodFract_ (this),
        SimFlowEnergyTrans_ResistDefrostHeatCap_ (this),
        SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP_ (this),
        SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_ (this),
        SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_ (this),
        SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_ (this)
      {
        if ((f & ::xml_schema::flags::base) == 0)
        {
          ::xsd::cxx::xml::dom::parser< char > p (e, true, false, true);
          this->parse (p, f);
        }
      }

      void SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      parse (::xsd::cxx::xml::dom::parser< char >& p,
             ::xml_schema::flags f)
      {
        this->::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatingCoilDX::parse (p, f);

        for (; p.more_content (); p.next_content (false))
        {
          const ::xercesc::DOMElement& i (p.cur_element ());
          const ::xsd::cxx::xml::qualified_name< char > n (
            ::xsd::cxx::xml::dom::name< char > (i));

          // SimFlowEnergyTrans_CrankcaseHeatCap
          //
          if (n.name () == "SimFlowEnergyTrans_CrankcaseHeatCap" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_CrankcaseHeatCap_)
            {
              this->SimFlowEnergyTrans_CrankcaseHeatCap_.set (SimFlowEnergyTrans_CrankcaseHeatCap_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp
          //
          if (n.name () == "SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_)
            {
              this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_.set (SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_NumSpeeds
          //
          if (n.name () == "SimFlowEnergyTrans_NumSpeeds" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NumSpeeds_)
            {
              this->SimFlowEnergyTrans_NumSpeeds_.set (SimFlowEnergyTrans_NumSpeeds_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_IndoorAirInletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_IndoorAirInletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_IndoorAirInletNodeName_type > r (
              SimFlowEnergyTrans_IndoorAirInletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_IndoorAirInletNodeName_)
            {
              this->SimFlowEnergyTrans_IndoorAirInletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_IndoorAirOutletNodeName
          //
          if (n.name () == "SimFlowEnergyTrans_IndoorAirOutletNodeName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_IndoorAirOutletNodeName_type > r (
              SimFlowEnergyTrans_IndoorAirOutletNodeName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_IndoorAirOutletNodeName_)
            {
              this->SimFlowEnergyTrans_IndoorAirOutletNodeName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_NominalSpeedLevel
          //
          if (n.name () == "SimFlowEnergyTrans_NominalSpeedLevel" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_NominalSpeedLevel_)
            {
              this->SimFlowEnergyTrans_NominalSpeedLevel_.set (SimFlowEnergyTrans_NominalSpeedLevel_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel
          //
          if (n.name () == "SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_)
            {
              this->SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_.set (SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_EnergyPartLoadFractionCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_EnergyPartLoadFractionCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_type > r (
              SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_)
            {
              this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_type > r (
              SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_)
            {
              this->SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp
          //
          if (n.name () == "SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_)
            {
              this->SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_.set (SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress
          //
          if (n.name () == "SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress_)
            {
              this->SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress_.set (SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp
          //
          if (n.name () == "SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_)
            {
              this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_.set (SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_DefrostStrategy
          //
          if (n.name () == "SimFlowEnergyTrans_DefrostStrategy" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_DefrostStrategy_type > r (
              SimFlowEnergyTrans_DefrostStrategy_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_DefrostStrategy_)
            {
              this->SimFlowEnergyTrans_DefrostStrategy_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_DefrostCntl
          //
          if (n.name () == "SimFlowEnergyTrans_DefrostCntl" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_DefrostCntl_type > r (
              SimFlowEnergyTrans_DefrostCntl_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_DefrostCntl_)
            {
              this->SimFlowEnergyTrans_DefrostCntl_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_DefrostTimePeriodFract
          //
          if (n.name () == "SimFlowEnergyTrans_DefrostTimePeriodFract" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_DefrostTimePeriodFract_)
            {
              this->SimFlowEnergyTrans_DefrostTimePeriodFract_.set (SimFlowEnergyTrans_DefrostTimePeriodFract_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_ResistDefrostHeatCap
          //
          if (n.name () == "SimFlowEnergyTrans_ResistDefrostHeatCap" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_ResistDefrostHeatCap_)
            {
              this->SimFlowEnergyTrans_ResistDefrostHeatCap_.set (SimFlowEnergyTrans_ResistDefrostHeatCap_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel
          //
          if (n.name () == "SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            if (!this->SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel_)
            {
              this->SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel_.set (SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel_traits::create (i, f, this));
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap_type > r (
              SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP_type > r (
              SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_type > r (
              SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName_type > r (
              SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName_type > r (
              SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_type > r (
              SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_.set (r);
              continue;
            }
          }

          // SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName
          //
          if (n.name () == "SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName" && n.namespace_ () == "http://d-alchemy.com/schema/simxml/MepModel")
          {
            ::std::auto_ptr< SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_type > r (
              SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_traits::create (i, f, this));

            if (!this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_)
            {
              this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_.set (r);
              continue;
            }
          }

          break;
        }
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed* SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      _clone (::xml_schema::flags f,
              ::xml_schema::container* c) const
      {
        return new class SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed (*this, f, c);
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed& SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      operator= (const SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed& x)
      {
        if (this != &x)
        {
          static_cast< ::schema::simxml::MepModel::SimFlowEnergyTransfer_HeatingCoilDX& > (*this) = x;
          this->SimFlowEnergyTrans_CrankcaseHeatCap_ = x.SimFlowEnergyTrans_CrankcaseHeatCap_;
          this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_ = x.SimFlowEnergyTrans_MaxOutdrDryBulbTempForCrankcaseHeatOp_;
          this->SimFlowEnergyTrans_NumSpeeds_ = x.SimFlowEnergyTrans_NumSpeeds_;
          this->SimFlowEnergyTrans_IndoorAirInletNodeName_ = x.SimFlowEnergyTrans_IndoorAirInletNodeName_;
          this->SimFlowEnergyTrans_IndoorAirOutletNodeName_ = x.SimFlowEnergyTrans_IndoorAirOutletNodeName_;
          this->SimFlowEnergyTrans_NominalSpeedLevel_ = x.SimFlowEnergyTrans_NominalSpeedLevel_;
          this->SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_ = x.SimFlowEnergyTrans_RatedAirFlowRateAtSelectedNomSpeedLevel_;
          this->SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_ = x.SimFlowEnergyTrans_EnergyPartLoadFractionCurveName_;
          this->SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_ = x.SimFlowEnergyTrans_DefrostEnergyInputRatioFuncTempCurveName_;
          this->SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_ = x.SimFlowEnergyTrans_MinOutdrDryBulbTempForCompOp_;
          this->SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress_ = x.SimFlowEnergyTrans_OutdoorDry_BulbTemptoTurnOnCompress_;
          this->SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_ = x.SimFlowEnergyTrans_MaxOutdrDryBulbTempForDefrostOp_;
          this->SimFlowEnergyTrans_DefrostStrategy_ = x.SimFlowEnergyTrans_DefrostStrategy_;
          this->SimFlowEnergyTrans_DefrostCntl_ = x.SimFlowEnergyTrans_DefrostCntl_;
          this->SimFlowEnergyTrans_DefrostTimePeriodFract_ = x.SimFlowEnergyTrans_DefrostTimePeriodFract_;
          this->SimFlowEnergyTrans_ResistDefrostHeatCap_ = x.SimFlowEnergyTrans_ResistDefrostHeatCap_;
          this->SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel_ = x.SimFlowEnergyTrans_RatedHeatingCapAtSelectedNominalSpeedLevel_;
          this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap_ = x.SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCap_;
          this->SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP_ = x.SimFlowEnergyTrans_Speed_1_10_RefUnitGrossRatedHeatCOP_;
          this->SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_ = x.SimFlowEnergyTrans_Speed_1_10_RefUnitRatedAirFlowRate_;
          this->SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName_ = x.SimFlowEnergyTrans_Speed_1_10_HeatCapFuncOfTempCurveName_;
          this->SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName_ = x.SimFlowEnergyTrans_Speed_1_10_TotHeatingCapFuncofAirFlowFractionCurveName_;
          this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_ = x.SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfTempCurveName_;
          this->SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_ = x.SimFlowEnergyTrans_Speed_1_10_EnergyInputRatioFuncOfAirFlowFractionCurveName_;
        }

        return *this;
      }

      SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed::
      ~SimFlowEnergyTransfer_HeatingCoilDX_CoilAirHeatingDXVariableSpeed ()
      {
      }
    }
  }
}

#include <istream>
#include <xsd/cxx/xml/sax/std-input-source.hxx>
#include <xsd/cxx/tree/error-handler.hxx>

namespace schema
{
  namespace simxml
  {
    namespace MepModel
    {
    }
  }
}

#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

