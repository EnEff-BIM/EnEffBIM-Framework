<%page args="static_data, comp"/>
<% 
 static_data.systems = []
 con = static_data.create_connector(None, "y", "Real")
 sys = static_data.create_system("Modelica.Blocks.Sources.Constant", (comp.mapped_control.control_strategy+"_T_set"), [con])
 for para in comp.mapped_control.parameters:
 	static_data.create_mapped_property(sys, para.name, para.value)
 con.parent = sys

 con_a = static_data.create_connector(None, "T", "Real")
 con_b = static_data.create_connector(None, "port", "Heat")
 sys1 = static_data.create_system("Modelica.Thermal.HeatTransfer.Sensors.TemperatureSensor", (comp.mapped_control.control_strategy+"_sens"), [con])
 con_a.parent = sys1
 con_b.parent = sys1

 con_c = static_data.create_connector(None, "u_s", "Real")
 con_d = static_data.create_connector(None, "u_m", "Real")
 con_e = static_data.create_connector(None, "y", "Real")
 sys2 = static_data.create_system("Modelica.Blocks.Continuous.LimPID", (comp.mapped_control.control_strategy+"_contrl"), [con])
 for para in comp.mapped_control.parameters:
 	static_data.create_mapped_property(sys2, para.name, para.value)
 con_c.parent = sys2
 con_d.parent = sys2
 con_e.parent = sys2
 
 static_data.add_connection(con, con_c)
 static_data.add_connection(con_a, con_d)
 for check in comp.parent.connectors:
 	if check.type == "HeatPort":
 		con_f = check
 static_data.add_connection(con_b, con_f)
 static_data.add_connection(con_e, comp.mapped_control.control_connector)

%>

% for test in static_data.systems:
${test.target_location}(
${test.parameters}
% endfor