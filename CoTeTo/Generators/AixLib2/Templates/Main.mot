<%
 strEmp = str()
 punCom = ','
 punSem = ';'
 punQuo = '"'
 punSpa = ' '
 punLin = '\n'
 parOpe = '('
 parClo = ')'
 braOpe = '['
 braClo = ']'
%>
within ;
model Test "just testing"

// Print hvac_components attribute of MapProject
% for myComp in MapData.hvac_components:
  ${myComp.target_location} ${myComp.target_name}(
  % for param in myComp.parameters:
    ${param.name}=${param.value}${punCom if not loop.last else strEmp}
  % endfor
  %for record in myComp.records:
${record.name}=${record.record_location}(
%for para in record.parameters:
${para.name} = ${para.value}
%endfor
)
%endfor
    ) "${myComp.sim_ref_id}"
    annotation (Placement(transformation(extent={{-10,-10},{10,10}})));${punLin}
% endfor

% for myComp in MapData.mod_components:
  ${myComp.target_location} ${myComp.target_name}(
  % for param in myComp.parameters:
    ${param.name}=${param.value}${punCom if not loop.last else strEmp}
  % endfor
  %for record in myComp.records:
${record.name}=${record.record_location}(
%for para in record.parameters:
${para.name} = ${para.value}
%endfor
)
%endfor
    ) "${myComp.sim_ref_id}"
    annotation (Placement(transformation(extent={{-10,-10},{10,10}})));${punLin}
% endfor


// Print thermal_zones attribute of buildings[0]
% for myZone in MapData.buildings[0].thermal_zones:
  ${myZone.target_location} ${myZone.target_name}(
  % for param in myZone.parameters:
    ${param.name}=${param.value}${punCom if not loop.last else strEmp}
  % endfor
    ) "${myZone.sim_ref_id}"
    annotation (Placement(transformation(extent={{-10,-10},{10,10}})));${punLin}
% endfor

equation
// Found ${sum(1 for _ in MapData.connections)} connect equations
% for conny in MapData.connections:
  % if conny.index_a is not None:
  connect(${conny.connector_a.parent.target_name}.${conny.connector_a.name}[${conny.index_a}], ${conny.connector_b.parent.target_name}.${conny
  .connector_b.name})
    annotation (Line(points={{0,0},{1,1}}));${punLin}
  % elif conny.index_b is not None:
  connect(${conny.connector_a.parent.target_name}.${conny.connector_a
  .name}, ${conny.connector_b.parent.target_name}.${conny
  .connector_b
  .name}[${conny.index_b}])
    annotation (Line(points={{0,0},{1,1}}));${punLin}
  % elif conny.index_b is not None and conny.index_a is not None:
  connect(${conny.connector_a.parent.target_name}.${conny.connector_a
  .name}[${conny.index_b}], ${conny.connector_b.parent.target_name}.${conny
  .connector_b
  .name}[${conny.index_b}])
    annotation (Line(points={{0,0},{1,1}}));${punLin}
   % else:
   connect(${conny.connector_a.parent.target_name}.${conny.connector_a
  .name}, ${conny.connector_b.parent.target_name}.${conny
  .connector_b
  .name})    annotation (Line(points={{0,0},{1,1}}));${punLin}
% endif
% endfor

annotation(
  Documentation(
    info="<html>
        used xml file was ${MapData.simxml_file}
      </html>")
);

end Test;
